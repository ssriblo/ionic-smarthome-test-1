<?xml version="1.0" encoding="utf-8"?>
<Root>
  <Header>
    <Version Value="4.0" />
    <ProjectName Value="Отопленок" />
    <ProjectVersion Value="2.0" />
    <ProjectDescription>Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</ProjectDescription>
  </Header>
  <Project>﻿<?xml version="1.0" encoding="utf-8"?>
<Program xmlns:i="http://www.w3.org/2001/XMLSchema-instance" z:Id="1" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" xmlns="http://Cerebrum.ru/Project">
  <BaseDevise z:Id="2">
    <DevName z:Id="3">YART 1.8</DevName>
    <IODeviceCollection z:Id="4" z:Size="26">
      <IODevice z:Id="5" i:type="AIODevice">
        <Alias z:Id="6">AIN_1_WaterT</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="7">AIN_1</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="8" i:type="AIODevice">
        <Alias z:Id="9">AIN_2_RoomT</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Id="10">AIN_2</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="11" i:type="AIODevice">
        <Alias z:Id="12">AIN_3_FLOOD</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Id="13">AIN_3</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="14" i:type="AIODevice">
        <Alias z:Id="15">AIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="15" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="16" i:type="AIODevice">
        <Alias z:Id="17">AIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Ref="17" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="18" i:type="AIODevice">
        <Alias z:Id="19">AIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Ref="19" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="20" i:type="AIODevice">
        <Alias z:Id="21">AIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="21" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="22" i:type="AIODevice">
        <Alias z:Id="23">AIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="23" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="24" i:type="AIODevice">
        <Alias z:Id="25">AOUT_1</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Ref="25" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="26" i:type="AIODevice">
        <Alias z:Id="27">AOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="27" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="28" i:type="DIODevice">
        <Alias z:Id="29">DIN_1_POWER</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="30">DIN_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="31" i:type="DIODevice">
        <Alias z:Id="32">DIN_2</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Ref="32" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="33" i:type="DIODevice">
        <Alias z:Id="34">DIN_3</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Ref="34" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="35" i:type="DIODevice">
        <Alias z:Id="36">DIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="36" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="37" i:type="DIODevice">
        <Alias z:Id="38">DIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Id="39">DIN_5</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="40" i:type="DIODevice">
        <Alias z:Id="41">DIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Id="42">DIN_6</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="43" i:type="DIODevice">
        <Alias z:Id="44">DIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="44" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="45" i:type="DIODevice">
        <Alias z:Id="46">DIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="46" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="47" i:type="DIODevice">
        <Alias z:Id="48">DOUT_1_WaterPWM</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Id="49">DOUT_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="50" i:type="DIODevice">
        <Alias z:Id="51">DOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="51" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="52" i:type="DIODevice">
        <Alias z:Id="53">DOUT_3</Alias>
        <Direction>Output</Direction>
        <Index>3</Index>
        <Name z:Id="54">DOUT_3</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="55" i:type="DIODevice">
        <Alias z:Id="56">DOUT_4</Alias>
        <Direction>Output</Direction>
        <Index>4</Index>
        <Name z:Ref="56" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="57" i:type="DIODevice">
        <Alias z:Id="58">DOUT_5</Alias>
        <Direction>Output</Direction>
        <Index>5</Index>
        <Name z:Ref="58" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="59" i:type="DIODevice">
        <Alias z:Id="60">DOUT_6</Alias>
        <Direction>Output</Direction>
        <Index>6</Index>
        <Name z:Ref="60" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="61" i:type="DIODevice">
        <Alias z:Id="62">DOUT_7</Alias>
        <Direction>Output</Direction>
        <Index>7</Index>
        <Name z:Ref="62" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="63" i:type="DIODevice">
        <Alias z:Id="64">DOUT_8</Alias>
        <Direction>Output</Direction>
        <Index>8</Index>
        <Name z:Ref="64" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
    </IODeviceCollection>
    <PLCId>52737</PLCId>
  </BaseDevise>
  <Build>0</Build>
  <CustomListsCollection z:Id="65" z:Size="8">
    <CustomList z:Id="66">
      <Comments z:Id="67"></Comments>
      <Description i:nil="true" />
      <Id>99</Id>
      <Name z:Id="68">Otoplenok</Name>
      <ParentID>0</ParentID>
    </CustomList>
    <CustomList z:Id="69">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>684</Id>
      <Name z:Id="70">MODBUS_Read</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="71">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1242</Id>
      <Name z:Id="72">Serial</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="73">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1243</Id>
      <Name z:Id="74">TemperaturesControl</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="75">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1322</Id>
      <Name z:Id="76">Alarms</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="77">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1326</Id>
      <Name z:Id="78">Meters</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="79">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1725</Id>
      <Name z:Id="80">Connection</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="81">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1763</Id>
      <Name z:Id="82">YartLink</Name>
      <ParentID>99</ParentID>
    </CustomList>
  </CustomListsCollection>
  <CustomTagsCollection z:Id="83" z:Size="64">
    <CustomTag z:Id="84">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="85">MERCURY 206</Comments>
      <Id>1970</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="86">ElectroMeterT1</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="87" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="88" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="89">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>135</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="90">Начать чтение</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="91" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="92" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">true</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="93">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>136</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="94">Адрес первого IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="95" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="96" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="97">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>260</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="98">Адрес первого HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="99" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="100" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">65</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="101">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>347</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="102">Адрес первого CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="103" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="104" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="105">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>416</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="106">Адрес первого DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="107" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="108" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="109">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>123</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="110">MB1TD_IR_Temperature_x10</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="111" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="112" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="113">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>261</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="114">Чтение одного HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="115" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="116" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="117">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>348</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="118">Чтение одного CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="119" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="120" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="121">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>417</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="122">Чтение одного DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="123" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="124" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="125">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>124</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="126">Чтение десяти IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="127" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="128" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="129" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="130" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="131" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="132" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="133" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="134" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="135" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="136" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="137" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="138">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>262</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="139">Чтение десяти HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="140" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="141" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="142" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="143" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="144" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="145" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="146" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="147" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="148" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="149" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="150" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="151">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>349</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="152">Чтение десяти CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="153" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="154" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="155" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="156" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="157" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="158" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="159" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="160" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="161" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="162" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="163" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="164">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>418</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="165">Чтение десяти DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="166" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="167" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="168" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="169" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="170" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="171" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="172" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="173" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="174" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="175" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="176" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="177">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1043</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="178">Repeat IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="179" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="180" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="181">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1049</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="182">Timeout IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="183" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="184" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="185">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1053</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="186">RegCnt</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="187" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="188" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="189">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>20</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1095</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="190">Read 20 IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="191" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="20">
        <d4p1:anyType z:Id="192" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="193" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="194" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="195" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="196" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="197" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="198" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="199" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="200" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="201" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="202" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="203" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="204" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="205" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="206" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="207" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="208" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="209" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="210" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="211" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="212">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>767</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="213">Timeout</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="214" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="215" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="216">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>109</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="217">Параметры COM3 485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="218" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="219" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="220">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>134</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="221">Сетевой адрес устройства</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="222" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="223" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="224">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>100</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="225">COM3 порт 485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="226" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="227" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">3</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="228">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>101</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="229">Baudrate</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="230" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="231" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="232">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>768</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="233">Retries</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="234" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="235" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="236">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1216</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="237">RoomT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="238" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="239" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="240">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1244</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="241">WaterT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="242" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="243" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="244">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1271</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="245">TargetT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="246" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="247" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">250</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="248">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1276</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="249">Kp_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="250" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="251" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">10</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="252">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1282</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="253">Ki_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="254" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="255" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.03</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="256">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1283</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="257">Kd_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="258" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="259" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="260">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>17</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1298</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="261">Buffer_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="262" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="17">
        <d4p1:anyType z:Id="263" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="264" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="265" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="266" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="267" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="268" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="269" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="270" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="271" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="272" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="273" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="274" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="275" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="276" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="277" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="278" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="279" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="280">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1302</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="281">TestAuto_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="282" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="283" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="284">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1323</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="285">Alarm1</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="286" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="287" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="288">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1601</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="289">X_PWM_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="290" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="291" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">-100</d4p1:anyType>
        <d4p1:anyType z:Id="292" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="293" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">100</d4p1:anyType>
        <d4p1:anyType z:Id="294" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">200</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="295">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1602</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="296">Y_PWM_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="297" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="298" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="299" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="300" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="301" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="302">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1712</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="303">TargetT_shifted</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="304" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="305" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="306">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1195</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>false</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="307">публикатор_1195</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="308" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="309" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="310">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>14</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="311">193.124.56.188</Comments>
      <Id>1988</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="312">IP GW</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="313" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="14">
        <d4p1:anyType z:Id="314" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="315" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="316" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="317" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="318" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="319" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="320" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="321" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="322" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="323" i:type="z:char">54</d4p1:anyType>
        <d4p1:anyType z:Id="324" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="325" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="326" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="327" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="328">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>9</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1727</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="329">CloudPassword</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="330" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="9">
        <d4p1:anyType z:Id="331" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="332" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="333" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="334" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="335" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="336" i:type="z:char">82</d4p1:anyType>
        <d4p1:anyType z:Id="337" i:type="z:char">83</d4p1:anyType>
        <d4p1:anyType z:Id="338" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="339" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="340">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1747</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="341">Alarm_B</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="342" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="343" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="344">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1764</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="345">IP источника</Name>
      <ParentId>1763</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="346" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="347" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="348">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1765</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="349">Период отправки</Name>
      <ParentId>1763</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="350" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="351" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1000</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="352">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1919</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="353">COM2 port i485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="354" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="355" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="356">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1923</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="357">Параметры COM2 i485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="358" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="359" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="360">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="361">MERCURY 206</Comments>
      <Id>1971</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="362">ElectroMeterT2</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="363" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="364" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="365">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2074</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="366">max_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="367" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="368" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="369">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2075</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="370">min_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="371" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="372" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">-1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="373">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2096</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="374">Pt_K</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="375" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="376" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.0001</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="377">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2126</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="378">AIN_3_FLOOD_U</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="379" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="380" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="381">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>5</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2157</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="382">Protey15_IR_array_1</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="383" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="5">
        <d4p1:anyType z:Id="384" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="385" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="386" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="387" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="388" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="389">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2309</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="390">DiffErrReset</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="391" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="392" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="393">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2325</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="394">PZA_SETUP</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="395" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="396" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">29</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="397">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2554</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="398">Button</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="399" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="400" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="401">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1680</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="402">PWM_value</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="403" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="404" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="405">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2624</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="406">PWM_Val_0_100</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="407" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="408" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="409">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>7</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2643</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="410">X_PZA_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="411" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="7">
        <d4p1:anyType z:Id="412" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">25</d4p1:anyType>
        <d4p1:anyType z:Id="413" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">30</d4p1:anyType>
        <d4p1:anyType z:Id="414" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">35</d4p1:anyType>
        <d4p1:anyType z:Id="415" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">50</d4p1:anyType>
        <d4p1:anyType z:Id="416" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">60</d4p1:anyType>
        <d4p1:anyType z:Id="417" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">70</d4p1:anyType>
        <d4p1:anyType z:Id="418" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="419">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>7</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2644</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="420">Y_PZA_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="421" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="7">
        <d4p1:anyType z:Id="422" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">10</d4p1:anyType>
        <d4p1:anyType z:Id="423" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">15</d4p1:anyType>
        <d4p1:anyType z:Id="424" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">18</d4p1:anyType>
        <d4p1:anyType z:Id="425" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">28</d4p1:anyType>
        <d4p1:anyType z:Id="426" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">35</d4p1:anyType>
        <d4p1:anyType z:Id="427" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">53</d4p1:anyType>
        <d4p1:anyType z:Id="428" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">75</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="429">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="430">градусы Цельсия
</Comments>
      <Id>2817</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="431">MB1TD_Temperature</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="432" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="433" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="434">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="435">PROTEY </Comments>
      <Id>2835</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="436">WaterColdMeter_lit_x1000</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="437" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="438" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="439">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>8</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2942</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="440">Array_F8_2Server</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="441" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="8">
        <d4p1:anyType z:Id="442" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="443" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="444" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="445" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="446" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="447" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="448" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="449" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="450">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>2</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2946</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="451">Array_B2_2Server</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="452" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="2">
        <d4p1:anyType z:Id="453" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="454" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="455">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2956</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="456">WeatherT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="457" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="458" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="459">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="460">Meter (PROTEY) is not installed at the stend</Comments>
      <Id>2960</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="461">WaterHotMeter_lit_x1000</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="462" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="463" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="464">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="465">WarmMeter is not installed yet at the stend</Comments>
      <Id>2967</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="466">WarmMeter</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="467" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="468" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
  </CustomTagsCollection>
  <Description z:Id="469">Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</Description>
  <DeviceSpecificationId>52737</DeviceSpecificationId>
  <Devices xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="470" z:Size="1">
    <d2p1:anyType z:Ref="2" i:nil="true" />
  </Devices>
  <GlobalIdCounter>2970</GlobalIdCounter>
  <Id>f71354af-7d88-42bb-a1ac-f5413ff0a57c</Id>
  <LastBuildTimestamp>2020-12-06T17:57:29.6547351+03:00</LastBuildTimestamp>
  <LocalArchive z:Id="471" z:Size="0" />
  <MemoryInfo z:Id="472">
    <AlgMem z:Id="473">
      <AMX>48980</AMX>
      <CRC>4</CRC>
      <Capacity>655360</Capacity>
      <DefaultValues>268</DefaultValues>
      <ExtModules>8</ExtModules>
      <Header>72</Header>
      <LocalArchive>0</LocalArchive>
      <MapMemory>4140</MapMemory>
      <ProjectDesc>40</ProjectDesc>
      <PublicTags>48</PublicTags>
      <Var>2160</Var>
    </AlgMem>
    <BRam z:Id="474">
      <Capacity>4080</Capacity>
      <Used>0</Used>
    </BRam>
    <BitFRam z:Id="475">
      <Capacity>2048</Capacity>
      <Used>0</Used>
    </BitFRam>
    <BitRam z:Id="476">
      <Capacity>2048</Capacity>
      <Used>74</Used>
    </BitRam>
    <FRam z:Id="477">
      <Capacity>15104</Capacity>
      <Used>56</Used>
    </FRam>
    <Ram z:Id="478">
      <Capacity>32012</Capacity>
      <Used>1608</Used>
    </Ram>
    <Statistics z:Id="479">Статистика программы:
Блоков переменных: 80
Блоков кода: 89
Блоков констант: 11
Общее кол-во блоков: 196

Переменные: 64
Списков публикации: 2
Переменных в списках публикации: 10
Связей блоков: 153
Входы как константа: 57
</Statistics>
  </MemoryInfo>
  <MemoryMapStore z:Id="480">
    <Items xmlns:d3p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="481" z:Size="345">
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1970</d3p1:Key>
        <d3p1:Value z:Id="482">
          <Address z:Id="483">
            <ArrayCount>1</ArrayCount>
            <Location>4776</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="484" z:Size="1">
            <d3p1:anyType z:Ref="88" i:nil="true" />
          </DefaultValues>
          <Id>1970</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>135</d3p1:Key>
        <d3p1:Value z:Id="485">
          <Address z:Id="486">
            <ArrayCount>1</ArrayCount>
            <Location>9</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="487" z:Size="1">
            <d3p1:anyType z:Ref="92" i:nil="true" />
          </DefaultValues>
          <Id>135</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>136</d3p1:Key>
        <d3p1:Value z:Id="488">
          <Address z:Id="489">
            <ArrayCount>1</ArrayCount>
            <Location>4780</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="490" z:Size="1">
            <d3p1:anyType z:Ref="96" i:nil="true" />
          </DefaultValues>
          <Id>136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>260</d3p1:Key>
        <d3p1:Value z:Id="491">
          <Address z:Id="492">
            <ArrayCount>1</ArrayCount>
            <Location>4784</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="493" z:Size="1">
            <d3p1:anyType z:Ref="100" i:nil="true" />
          </DefaultValues>
          <Id>260</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>347</d3p1:Key>
        <d3p1:Value z:Id="494">
          <Address z:Id="495">
            <ArrayCount>1</ArrayCount>
            <Location>4786</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="496" z:Size="1">
            <d3p1:anyType z:Ref="104" i:nil="true" />
          </DefaultValues>
          <Id>347</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>416</d3p1:Key>
        <d3p1:Value z:Id="497">
          <Address z:Id="498">
            <ArrayCount>1</ArrayCount>
            <Location>4788</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="499" z:Size="1">
            <d3p1:anyType z:Ref="108" i:nil="true" />
          </DefaultValues>
          <Id>416</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>123</d3p1:Key>
        <d3p1:Value z:Id="500">
          <Address z:Id="501">
            <ArrayCount>1</ArrayCount>
            <Location>4790</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="502" z:Size="1">
            <d3p1:anyType z:Ref="112" i:nil="true" />
          </DefaultValues>
          <Id>123</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>261</d3p1:Key>
        <d3p1:Value z:Id="503">
          <Address z:Id="504">
            <ArrayCount>1</ArrayCount>
            <Location>4792</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="505" z:Size="1">
            <d3p1:anyType z:Ref="116" i:nil="true" />
          </DefaultValues>
          <Id>261</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>348</d3p1:Key>
        <d3p1:Value z:Id="506">
          <Address z:Id="507">
            <ArrayCount>1</ArrayCount>
            <Location>4794</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="508" z:Size="1">
            <d3p1:anyType z:Ref="120" i:nil="true" />
          </DefaultValues>
          <Id>348</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>417</d3p1:Key>
        <d3p1:Value z:Id="509">
          <Address z:Id="510">
            <ArrayCount>1</ArrayCount>
            <Location>4796</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="511" z:Size="1">
            <d3p1:anyType z:Ref="124" i:nil="true" />
          </DefaultValues>
          <Id>417</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>124</d3p1:Key>
        <d3p1:Value z:Id="512">
          <Address z:Id="513">
            <ArrayCount>10</ArrayCount>
            <Location>4798</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="514" z:Size="10">
            <d3p1:anyType z:Ref="128" i:nil="true" />
            <d3p1:anyType z:Ref="129" i:nil="true" />
            <d3p1:anyType z:Ref="130" i:nil="true" />
            <d3p1:anyType z:Ref="131" i:nil="true" />
            <d3p1:anyType z:Ref="132" i:nil="true" />
            <d3p1:anyType z:Ref="133" i:nil="true" />
            <d3p1:anyType z:Ref="134" i:nil="true" />
            <d3p1:anyType z:Ref="135" i:nil="true" />
            <d3p1:anyType z:Ref="136" i:nil="true" />
            <d3p1:anyType z:Ref="137" i:nil="true" />
          </DefaultValues>
          <Id>124</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>262</d3p1:Key>
        <d3p1:Value z:Id="515">
          <Address z:Id="516">
            <ArrayCount>10</ArrayCount>
            <Location>4818</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="517" z:Size="10">
            <d3p1:anyType z:Ref="141" i:nil="true" />
            <d3p1:anyType z:Ref="142" i:nil="true" />
            <d3p1:anyType z:Ref="143" i:nil="true" />
            <d3p1:anyType z:Ref="144" i:nil="true" />
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
          </DefaultValues>
          <Id>262</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>349</d3p1:Key>
        <d3p1:Value z:Id="518">
          <Address z:Id="519">
            <ArrayCount>10</ArrayCount>
            <Location>4838</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="520" z:Size="10">
            <d3p1:anyType z:Ref="154" i:nil="true" />
            <d3p1:anyType z:Ref="155" i:nil="true" />
            <d3p1:anyType z:Ref="156" i:nil="true" />
            <d3p1:anyType z:Ref="157" i:nil="true" />
            <d3p1:anyType z:Ref="158" i:nil="true" />
            <d3p1:anyType z:Ref="159" i:nil="true" />
            <d3p1:anyType z:Ref="160" i:nil="true" />
            <d3p1:anyType z:Ref="161" i:nil="true" />
            <d3p1:anyType z:Ref="162" i:nil="true" />
            <d3p1:anyType z:Ref="163" i:nil="true" />
          </DefaultValues>
          <Id>349</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>418</d3p1:Key>
        <d3p1:Value z:Id="521">
          <Address z:Id="522">
            <ArrayCount>10</ArrayCount>
            <Location>4858</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="523" z:Size="10">
            <d3p1:anyType z:Ref="167" i:nil="true" />
            <d3p1:anyType z:Ref="168" i:nil="true" />
            <d3p1:anyType z:Ref="169" i:nil="true" />
            <d3p1:anyType z:Ref="170" i:nil="true" />
            <d3p1:anyType z:Ref="171" i:nil="true" />
            <d3p1:anyType z:Ref="172" i:nil="true" />
            <d3p1:anyType z:Ref="173" i:nil="true" />
            <d3p1:anyType z:Ref="174" i:nil="true" />
            <d3p1:anyType z:Ref="175" i:nil="true" />
            <d3p1:anyType z:Ref="176" i:nil="true" />
          </DefaultValues>
          <Id>418</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1043</d3p1:Key>
        <d3p1:Value z:Id="524">
          <Address z:Id="525">
            <ArrayCount>1</ArrayCount>
            <Location>4878</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="526" z:Size="1">
            <d3p1:anyType z:Ref="180" i:nil="true" />
          </DefaultValues>
          <Id>1043</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1049</d3p1:Key>
        <d3p1:Value z:Id="527">
          <Address z:Id="528">
            <ArrayCount>1</ArrayCount>
            <Location>4880</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="529" z:Size="1">
            <d3p1:anyType z:Ref="184" i:nil="true" />
          </DefaultValues>
          <Id>1049</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1053</d3p1:Key>
        <d3p1:Value z:Id="530">
          <Address z:Id="531">
            <ArrayCount>1</ArrayCount>
            <Location>4884</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="532" z:Size="1">
            <d3p1:anyType z:Ref="188" i:nil="true" />
          </DefaultValues>
          <Id>1053</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1095</d3p1:Key>
        <d3p1:Value z:Id="533">
          <Address z:Id="534">
            <ArrayCount>20</ArrayCount>
            <Location>4886</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="535" z:Size="20">
            <d3p1:anyType z:Ref="192" i:nil="true" />
            <d3p1:anyType z:Ref="193" i:nil="true" />
            <d3p1:anyType z:Ref="194" i:nil="true" />
            <d3p1:anyType z:Ref="195" i:nil="true" />
            <d3p1:anyType z:Ref="196" i:nil="true" />
            <d3p1:anyType z:Ref="197" i:nil="true" />
            <d3p1:anyType z:Ref="198" i:nil="true" />
            <d3p1:anyType z:Ref="199" i:nil="true" />
            <d3p1:anyType z:Ref="200" i:nil="true" />
            <d3p1:anyType z:Ref="201" i:nil="true" />
            <d3p1:anyType z:Ref="202" i:nil="true" />
            <d3p1:anyType z:Ref="203" i:nil="true" />
            <d3p1:anyType z:Ref="204" i:nil="true" />
            <d3p1:anyType z:Ref="205" i:nil="true" />
            <d3p1:anyType z:Ref="206" i:nil="true" />
            <d3p1:anyType z:Ref="207" i:nil="true" />
            <d3p1:anyType z:Ref="208" i:nil="true" />
            <d3p1:anyType z:Ref="209" i:nil="true" />
            <d3p1:anyType z:Ref="210" i:nil="true" />
            <d3p1:anyType z:Ref="211" i:nil="true" />
          </DefaultValues>
          <Id>1095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>767</d3p1:Key>
        <d3p1:Value z:Id="536">
          <Address z:Id="537">
            <ArrayCount>1</ArrayCount>
            <Location>4926</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="538" z:Size="1">
            <d3p1:anyType z:Ref="215" i:nil="true" />
          </DefaultValues>
          <Id>767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>109</d3p1:Key>
        <d3p1:Value z:Id="539">
          <Address z:Id="540">
            <ArrayCount>1</ArrayCount>
            <Location>4928</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="541" z:Size="1">
            <d3p1:anyType z:Ref="219" i:nil="true" />
          </DefaultValues>
          <Id>109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>134</d3p1:Key>
        <d3p1:Value z:Id="542">
          <Address z:Id="543">
            <ArrayCount>1</ArrayCount>
            <Location>4930</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="544" z:Size="1">
            <d3p1:anyType z:Ref="223" i:nil="true" />
          </DefaultValues>
          <Id>134</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>100</d3p1:Key>
        <d3p1:Value z:Id="545">
          <Address z:Id="546">
            <ArrayCount>1</ArrayCount>
            <Location>4932</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="547" z:Size="1">
            <d3p1:anyType z:Ref="227" i:nil="true" />
          </DefaultValues>
          <Id>100</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>101</d3p1:Key>
        <d3p1:Value z:Id="548">
          <Address z:Id="549">
            <ArrayCount>1</ArrayCount>
            <Location>4934</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="550" z:Size="1">
            <d3p1:anyType z:Ref="231" i:nil="true" />
          </DefaultValues>
          <Id>101</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>768</d3p1:Key>
        <d3p1:Value z:Id="551">
          <Address z:Id="552">
            <ArrayCount>1</ArrayCount>
            <Location>4936</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="553" z:Size="1">
            <d3p1:anyType z:Ref="235" i:nil="true" />
          </DefaultValues>
          <Id>768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1216</d3p1:Key>
        <d3p1:Value z:Id="554">
          <Address z:Id="555">
            <ArrayCount>1</ArrayCount>
            <Location>4938</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="556" z:Size="1">
            <d3p1:anyType z:Ref="239" i:nil="true" />
          </DefaultValues>
          <Id>1216</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1244</d3p1:Key>
        <d3p1:Value z:Id="557">
          <Address z:Id="558">
            <ArrayCount>1</ArrayCount>
            <Location>4942</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="559" z:Size="1">
            <d3p1:anyType z:Ref="243" i:nil="true" />
          </DefaultValues>
          <Id>1244</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1271</d3p1:Key>
        <d3p1:Value z:Id="560">
          <Address z:Id="561">
            <ArrayCount>1</ArrayCount>
            <Location>45312</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="562" z:Size="1">
            <d3p1:anyType z:Ref="247" i:nil="true" />
          </DefaultValues>
          <Id>1271</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1276</d3p1:Key>
        <d3p1:Value z:Id="563">
          <Address z:Id="564">
            <ArrayCount>1</ArrayCount>
            <Location>45316</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="565" z:Size="1">
            <d3p1:anyType z:Ref="251" i:nil="true" />
          </DefaultValues>
          <Id>1276</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1282</d3p1:Key>
        <d3p1:Value z:Id="566">
          <Address z:Id="567">
            <ArrayCount>1</ArrayCount>
            <Location>45320</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="568" z:Size="1">
            <d3p1:anyType z:Ref="255" i:nil="true" />
          </DefaultValues>
          <Id>1282</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1283</d3p1:Key>
        <d3p1:Value z:Id="569">
          <Address z:Id="570">
            <ArrayCount>1</ArrayCount>
            <Location>45324</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="571" z:Size="1">
            <d3p1:anyType z:Ref="259" i:nil="true" />
          </DefaultValues>
          <Id>1283</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1298</d3p1:Key>
        <d3p1:Value z:Id="572">
          <Address z:Id="573">
            <ArrayCount>17</ArrayCount>
            <Location>4946</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="574" z:Size="17">
            <d3p1:anyType z:Ref="263" i:nil="true" />
            <d3p1:anyType z:Ref="264" i:nil="true" />
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
            <d3p1:anyType z:Ref="271" i:nil="true" />
            <d3p1:anyType z:Ref="272" i:nil="true" />
            <d3p1:anyType z:Ref="273" i:nil="true" />
            <d3p1:anyType z:Ref="274" i:nil="true" />
            <d3p1:anyType z:Ref="275" i:nil="true" />
            <d3p1:anyType z:Ref="276" i:nil="true" />
            <d3p1:anyType z:Ref="277" i:nil="true" />
            <d3p1:anyType z:Ref="278" i:nil="true" />
            <d3p1:anyType z:Ref="279" i:nil="true" />
          </DefaultValues>
          <Id>1298</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1302</d3p1:Key>
        <d3p1:Value z:Id="575">
          <Address z:Id="576">
            <ArrayCount>1</ArrayCount>
            <Location>10</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="577" z:Size="1">
            <d3p1:anyType z:Ref="283" i:nil="true" />
          </DefaultValues>
          <Id>1302</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1323</d3p1:Key>
        <d3p1:Value z:Id="578">
          <Address z:Id="579">
            <ArrayCount>1</ArrayCount>
            <Location>11</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="580" z:Size="1">
            <d3p1:anyType z:Ref="287" i:nil="true" />
          </DefaultValues>
          <Id>1323</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1601</d3p1:Key>
        <d3p1:Value z:Id="581">
          <Address z:Id="582">
            <ArrayCount>4</ArrayCount>
            <Location>5014</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="583" z:Size="4">
            <d3p1:anyType z:Ref="291" i:nil="true" />
            <d3p1:anyType z:Ref="292" i:nil="true" />
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
          </DefaultValues>
          <Id>1601</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1602</d3p1:Key>
        <d3p1:Value z:Id="584">
          <Address z:Id="585">
            <ArrayCount>4</ArrayCount>
            <Location>5030</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="586" z:Size="4">
            <d3p1:anyType z:Ref="298" i:nil="true" />
            <d3p1:anyType z:Ref="299" i:nil="true" />
            <d3p1:anyType z:Ref="300" i:nil="true" />
            <d3p1:anyType z:Ref="301" i:nil="true" />
          </DefaultValues>
          <Id>1602</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1712</d3p1:Key>
        <d3p1:Value z:Id="587">
          <Address z:Id="588">
            <ArrayCount>1</ArrayCount>
            <Location>5046</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="589" z:Size="1">
            <d3p1:anyType z:Ref="305" i:nil="true" />
          </DefaultValues>
          <Id>1712</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1195</d3p1:Key>
        <d3p1:Value z:Id="590">
          <Address z:Id="591">
            <ArrayCount>1</ArrayCount>
            <Location>0</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="592" z:Size="1">
            <d3p1:anyType z:Ref="309" i:nil="true" />
          </DefaultValues>
          <Id>1195</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1988</d3p1:Key>
        <d3p1:Value z:Id="593">
          <Address z:Id="594">
            <ArrayCount>14</ArrayCount>
            <Location>45328</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="595" z:Size="14">
            <d3p1:anyType z:Ref="314" i:nil="true" />
            <d3p1:anyType z:Ref="315" i:nil="true" />
            <d3p1:anyType z:Ref="316" i:nil="true" />
            <d3p1:anyType z:Ref="317" i:nil="true" />
            <d3p1:anyType z:Ref="318" i:nil="true" />
            <d3p1:anyType z:Ref="319" i:nil="true" />
            <d3p1:anyType z:Ref="320" i:nil="true" />
            <d3p1:anyType z:Ref="321" i:nil="true" />
            <d3p1:anyType z:Ref="322" i:nil="true" />
            <d3p1:anyType z:Ref="323" i:nil="true" />
            <d3p1:anyType z:Ref="324" i:nil="true" />
            <d3p1:anyType z:Ref="325" i:nil="true" />
            <d3p1:anyType z:Ref="326" i:nil="true" />
            <d3p1:anyType z:Ref="327" i:nil="true" />
          </DefaultValues>
          <Id>1988</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1727</d3p1:Key>
        <d3p1:Value z:Id="596">
          <Address z:Id="597">
            <ArrayCount>9</ArrayCount>
            <Location>45342</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="598" z:Size="9">
            <d3p1:anyType z:Ref="331" i:nil="true" />
            <d3p1:anyType z:Ref="332" i:nil="true" />
            <d3p1:anyType z:Ref="333" i:nil="true" />
            <d3p1:anyType z:Ref="334" i:nil="true" />
            <d3p1:anyType z:Ref="335" i:nil="true" />
            <d3p1:anyType z:Ref="336" i:nil="true" />
            <d3p1:anyType z:Ref="337" i:nil="true" />
            <d3p1:anyType z:Ref="338" i:nil="true" />
            <d3p1:anyType z:Ref="339" i:nil="true" />
          </DefaultValues>
          <Id>1727</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1747</d3p1:Key>
        <d3p1:Value z:Id="599">
          <Address z:Id="600">
            <ArrayCount>1</ArrayCount>
            <Location>5050</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="601" z:Size="1">
            <d3p1:anyType z:Ref="343" i:nil="true" />
          </DefaultValues>
          <Id>1747</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1764</d3p1:Key>
        <d3p1:Value z:Id="602">
          <Address z:Id="603">
            <ArrayCount>1</ArrayCount>
            <Location>5052</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="604" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>1764</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1765</d3p1:Key>
        <d3p1:Value z:Id="605">
          <Address z:Id="606">
            <ArrayCount>1</ArrayCount>
            <Location>5056</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="607" z:Size="1">
            <d3p1:anyType z:Ref="351" i:nil="true" />
          </DefaultValues>
          <Id>1765</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1919</d3p1:Key>
        <d3p1:Value z:Id="608">
          <Address z:Id="609">
            <ArrayCount>1</ArrayCount>
            <Location>5060</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="610" z:Size="1">
            <d3p1:anyType z:Ref="355" i:nil="true" />
          </DefaultValues>
          <Id>1919</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1923</d3p1:Key>
        <d3p1:Value z:Id="611">
          <Address z:Id="612">
            <ArrayCount>1</ArrayCount>
            <Location>5062</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="613" z:Size="1">
            <d3p1:anyType z:Ref="359" i:nil="true" />
          </DefaultValues>
          <Id>1923</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1971</d3p1:Key>
        <d3p1:Value z:Id="614">
          <Address z:Id="615">
            <ArrayCount>1</ArrayCount>
            <Location>5064</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="616" z:Size="1">
            <d3p1:anyType z:Ref="364" i:nil="true" />
          </DefaultValues>
          <Id>1971</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2074</d3p1:Key>
        <d3p1:Value z:Id="617">
          <Address z:Id="618">
            <ArrayCount>1</ArrayCount>
            <Location>45352</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="619" z:Size="1">
            <d3p1:anyType z:Ref="368" i:nil="true" />
          </DefaultValues>
          <Id>2074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2075</d3p1:Key>
        <d3p1:Value z:Id="620">
          <Address z:Id="621">
            <ArrayCount>1</ArrayCount>
            <Location>45356</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="622" z:Size="1">
            <d3p1:anyType z:Ref="372" i:nil="true" />
          </DefaultValues>
          <Id>2075</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2096</d3p1:Key>
        <d3p1:Value z:Id="623">
          <Address z:Id="624">
            <ArrayCount>1</ArrayCount>
            <Location>45360</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="625" z:Size="1">
            <d3p1:anyType z:Ref="376" i:nil="true" />
          </DefaultValues>
          <Id>2096</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2126</d3p1:Key>
        <d3p1:Value z:Id="626">
          <Address z:Id="627">
            <ArrayCount>1</ArrayCount>
            <Location>5068</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="628" z:Size="1">
            <d3p1:anyType z:Ref="380" i:nil="true" />
          </DefaultValues>
          <Id>2126</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2157</d3p1:Key>
        <d3p1:Value z:Id="629">
          <Address z:Id="630">
            <ArrayCount>5</ArrayCount>
            <Location>5072</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="631" z:Size="5">
            <d3p1:anyType z:Ref="384" i:nil="true" />
            <d3p1:anyType z:Ref="385" i:nil="true" />
            <d3p1:anyType z:Ref="386" i:nil="true" />
            <d3p1:anyType z:Ref="387" i:nil="true" />
            <d3p1:anyType z:Ref="388" i:nil="true" />
          </DefaultValues>
          <Id>2157</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2309</d3p1:Key>
        <d3p1:Value z:Id="632">
          <Address z:Id="633">
            <ArrayCount>1</ArrayCount>
            <Location>12</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="634" z:Size="1">
            <d3p1:anyType z:Ref="392" i:nil="true" />
          </DefaultValues>
          <Id>2309</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2325</d3p1:Key>
        <d3p1:Value z:Id="635">
          <Address z:Id="636">
            <ArrayCount>1</ArrayCount>
            <Location>5082</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="637" z:Size="1">
            <d3p1:anyType z:Ref="396" i:nil="true" />
          </DefaultValues>
          <Id>2325</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2554</d3p1:Key>
        <d3p1:Value z:Id="638">
          <Address z:Id="639">
            <ArrayCount>1</ArrayCount>
            <Location>5086</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="640" z:Size="1">
            <d3p1:anyType z:Ref="400" i:nil="true" />
          </DefaultValues>
          <Id>2554</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1680</d3p1:Key>
        <d3p1:Value z:Id="641">
          <Address z:Id="642">
            <ArrayCount>1</ArrayCount>
            <Location>5088</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="643" z:Size="1">
            <d3p1:anyType z:Ref="404" i:nil="true" />
          </DefaultValues>
          <Id>1680</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2624</d3p1:Key>
        <d3p1:Value z:Id="644">
          <Address z:Id="645">
            <ArrayCount>1</ArrayCount>
            <Location>5092</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="646" z:Size="1">
            <d3p1:anyType z:Ref="408" i:nil="true" />
          </DefaultValues>
          <Id>2624</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2643</d3p1:Key>
        <d3p1:Value z:Id="647">
          <Address z:Id="648">
            <ArrayCount>7</ArrayCount>
            <Location>5096</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="649" z:Size="7">
            <d3p1:anyType z:Ref="412" i:nil="true" />
            <d3p1:anyType z:Ref="413" i:nil="true" />
            <d3p1:anyType z:Ref="414" i:nil="true" />
            <d3p1:anyType z:Ref="415" i:nil="true" />
            <d3p1:anyType z:Ref="416" i:nil="true" />
            <d3p1:anyType z:Ref="417" i:nil="true" />
            <d3p1:anyType z:Ref="418" i:nil="true" />
          </DefaultValues>
          <Id>2643</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2644</d3p1:Key>
        <d3p1:Value z:Id="650">
          <Address z:Id="651">
            <ArrayCount>7</ArrayCount>
            <Location>5124</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="652" z:Size="7">
            <d3p1:anyType z:Ref="422" i:nil="true" />
            <d3p1:anyType z:Ref="423" i:nil="true" />
            <d3p1:anyType z:Ref="424" i:nil="true" />
            <d3p1:anyType z:Ref="425" i:nil="true" />
            <d3p1:anyType z:Ref="426" i:nil="true" />
            <d3p1:anyType z:Ref="427" i:nil="true" />
            <d3p1:anyType z:Ref="428" i:nil="true" />
          </DefaultValues>
          <Id>2644</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2817</d3p1:Key>
        <d3p1:Value z:Id="653">
          <Address z:Id="654">
            <ArrayCount>1</ArrayCount>
            <Location>5152</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="655" z:Size="1">
            <d3p1:anyType z:Ref="433" i:nil="true" />
          </DefaultValues>
          <Id>2817</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2835</d3p1:Key>
        <d3p1:Value z:Id="656">
          <Address z:Id="657">
            <ArrayCount>1</ArrayCount>
            <Location>5156</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="658" z:Size="1">
            <d3p1:anyType z:Ref="438" i:nil="true" />
          </DefaultValues>
          <Id>2835</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2942</d3p1:Key>
        <d3p1:Value z:Id="659">
          <Address z:Id="660">
            <ArrayCount>8</ArrayCount>
            <Location>5160</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="661" z:Size="8">
            <d3p1:anyType z:Ref="442" i:nil="true" />
            <d3p1:anyType z:Ref="443" i:nil="true" />
            <d3p1:anyType z:Ref="444" i:nil="true" />
            <d3p1:anyType z:Ref="445" i:nil="true" />
            <d3p1:anyType z:Ref="446" i:nil="true" />
            <d3p1:anyType z:Ref="447" i:nil="true" />
            <d3p1:anyType z:Ref="448" i:nil="true" />
            <d3p1:anyType z:Ref="449" i:nil="true" />
          </DefaultValues>
          <Id>2942</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2946</d3p1:Key>
        <d3p1:Value z:Id="662">
          <Address z:Id="663">
            <ArrayCount>2</ArrayCount>
            <Location>5192</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="664" z:Size="2">
            <d3p1:anyType z:Ref="453" i:nil="true" />
            <d3p1:anyType z:Ref="454" i:nil="true" />
          </DefaultValues>
          <Id>2946</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2956</d3p1:Key>
        <d3p1:Value z:Id="665">
          <Address z:Id="666">
            <ArrayCount>1</ArrayCount>
            <Location>45364</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="667" z:Size="1">
            <d3p1:anyType z:Ref="458" i:nil="true" />
          </DefaultValues>
          <Id>2956</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2960</d3p1:Key>
        <d3p1:Value z:Id="668">
          <Address z:Id="669">
            <ArrayCount>1</ArrayCount>
            <Location>5194</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="670" z:Size="1">
            <d3p1:anyType z:Ref="463" i:nil="true" />
          </DefaultValues>
          <Id>2960</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2967</d3p1:Key>
        <d3p1:Value z:Id="671">
          <Address z:Id="672">
            <ArrayCount>1</ArrayCount>
            <Location>5198</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="673" z:Size="1">
            <d3p1:anyType z:Ref="468" i:nil="true" />
          </DefaultValues>
          <Id>2967</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>-2</d3p1:Key>
        <d3p1:Value z:Id="674">
          <Address z:Id="675">
            <ArrayCount>512</ArrayCount>
            <Location>5202</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="676" z:Size="512">
            <d3p1:anyType z:Id="677" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Id="678" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
            <d3p1:anyType z:Ref="678" i:nil="true" />
          </DefaultValues>
          <Id>-2</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>118</d3p1:Key>
        <d3p1:Value z:Id="679">
          <Address z:Ref="549" i:nil="true" />
          <DefaultValues z:Id="680" z:Size="1">
            <d3p1:anyType z:Ref="231" i:nil="true" />
          </DefaultValues>
          <Id>118</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>115</d3p1:Key>
        <d3p1:Value z:Id="681">
          <Address z:Ref="546" i:nil="true" />
          <DefaultValues z:Id="682" z:Size="1">
            <d3p1:anyType z:Ref="227" i:nil="true" />
          </DefaultValues>
          <Id>115</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>108</d3p1:Key>
        <d3p1:Value z:Id="683">
          <Address z:Id="684">
            <ArrayCount>1</ArrayCount>
            <Location>5714</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="685" z:Size="1">
            <d3p1:anyType z:Id="686" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>108</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>112</d3p1:Key>
        <d3p1:Value z:Id="687">
          <Address z:Ref="540" i:nil="true" />
          <DefaultValues z:Id="688" z:Size="1">
            <d3p1:anyType z:Ref="219" i:nil="true" />
          </DefaultValues>
          <Id>112</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1922</d3p1:Key>
        <d3p1:Value z:Id="689">
          <Address z:Ref="609" i:nil="true" />
          <DefaultValues z:Id="690" z:Size="1">
            <d3p1:anyType z:Ref="355" i:nil="true" />
          </DefaultValues>
          <Id>1922</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1917</d3p1:Key>
        <d3p1:Value z:Id="691">
          <Address z:Id="692">
            <ArrayCount>1</ArrayCount>
            <Location>5716</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="693" z:Size="1">
            <d3p1:anyType z:Id="694" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1917</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1926</d3p1:Key>
        <d3p1:Value z:Id="695">
          <Address z:Ref="612" i:nil="true" />
          <DefaultValues z:Id="696" z:Size="1">
            <d3p1:anyType z:Ref="359" i:nil="true" />
          </DefaultValues>
          <Id>1926</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1181</d3p1:Key>
        <d3p1:Value z:Id="697">
          <Address z:Id="698">
            <ArrayCount>1</ArrayCount>
            <Location>13</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="699" z:Size="1">
            <d3p1:anyType z:Id="700" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1181</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1182</d3p1:Key>
        <d3p1:Value z:Id="701">
          <Address z:Id="702">
            <ArrayCount>1</ArrayCount>
            <Location>14</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="703" z:Size="1">
            <d3p1:anyType z:Id="704" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1182</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1183</d3p1:Key>
        <d3p1:Value z:Id="705">
          <Address z:Id="706">
            <ArrayCount>1</ArrayCount>
            <Location>15</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="707" z:Size="1">
            <d3p1:anyType z:Id="708" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1183</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1184</d3p1:Key>
        <d3p1:Value z:Id="709">
          <Address z:Id="710">
            <ArrayCount>1</ArrayCount>
            <Location>5718</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="711" z:Size="1">
            <d3p1:anyType z:Id="712" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1184</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1185</d3p1:Key>
        <d3p1:Value z:Id="713">
          <Address z:Id="714">
            <ArrayCount>1</ArrayCount>
            <Location>5720</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="715" z:Size="1">
            <d3p1:anyType z:Id="716" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1185</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1191</d3p1:Key>
        <d3p1:Value z:Id="717">
          <Address z:Id="718">
            <ArrayCount>1</ArrayCount>
            <Location>16</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="719" z:Size="1">
            <d3p1:anyType z:Id="720" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1191</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1192</d3p1:Key>
        <d3p1:Value z:Id="721">
          <Address z:Id="722">
            <ArrayCount>1</ArrayCount>
            <Location>5722</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="723" z:Size="1">
            <d3p1:anyType z:Id="724" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1192</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1193</d3p1:Key>
        <d3p1:Value z:Id="725">
          <Address z:Id="726">
            <ArrayCount>1</ArrayCount>
            <Location>17</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="727" z:Size="1">
            <d3p1:anyType z:Id="728" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1193</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1194</d3p1:Key>
        <d3p1:Value z:Id="729">
          <Address z:Id="730">
            <ArrayCount>1</ArrayCount>
            <Location>5726</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="731" z:Size="1">
            <d3p1:anyType z:Id="732" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1194</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1199</d3p1:Key>
        <d3p1:Value z:Id="733">
          <Address z:Ref="591" i:nil="true" />
          <DefaultValues z:Id="734" z:Size="1">
            <d3p1:anyType z:Ref="309" i:nil="true" />
          </DefaultValues>
          <Id>1199</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1200</d3p1:Key>
        <d3p1:Value z:Id="735">
          <Address z:Id="736">
            <ArrayCount>1</ArrayCount>
            <Location>18</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="737" z:Size="1">
            <d3p1:anyType z:Id="738" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1200</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1730</d3p1:Key>
        <d3p1:Value z:Id="739">
          <Address z:Ref="597" i:nil="true" />
          <DefaultValues z:Id="740" z:Size="9">
            <d3p1:anyType z:Ref="331" i:nil="true" />
            <d3p1:anyType z:Ref="332" i:nil="true" />
            <d3p1:anyType z:Ref="333" i:nil="true" />
            <d3p1:anyType z:Ref="334" i:nil="true" />
            <d3p1:anyType z:Ref="335" i:nil="true" />
            <d3p1:anyType z:Ref="336" i:nil="true" />
            <d3p1:anyType z:Ref="337" i:nil="true" />
            <d3p1:anyType z:Ref="338" i:nil="true" />
            <d3p1:anyType z:Ref="339" i:nil="true" />
          </DefaultValues>
          <Id>1730</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2970</d3p1:Key>
        <d3p1:Value z:Id="741">
          <Address z:Ref="672" i:nil="true" />
          <DefaultValues z:Id="742" z:Size="1">
            <d3p1:anyType z:Ref="468" i:nil="true" />
          </DefaultValues>
          <Id>2970</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2963</d3p1:Key>
        <d3p1:Value z:Id="743">
          <Address z:Ref="669" i:nil="true" />
          <DefaultValues z:Id="744" z:Size="1">
            <d3p1:anyType z:Ref="463" i:nil="true" />
          </DefaultValues>
          <Id>2963</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2966</d3p1:Key>
        <d3p1:Value z:Id="745">
          <Address z:Id="746">
            <ArrayCount>1</ArrayCount>
            <Location>5728</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="747" z:Size="1">
            <d3p1:anyType z:Id="748" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2966</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2922</d3p1:Key>
        <d3p1:Value z:Id="749">
          <Address z:Ref="657" i:nil="true" />
          <DefaultValues z:Id="750" z:Size="1">
            <d3p1:anyType z:Ref="438" i:nil="true" />
          </DefaultValues>
          <Id>2922</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2931</d3p1:Key>
        <d3p1:Value z:Id="751">
          <Address z:Id="752">
            <ArrayCount>1</ArrayCount>
            <Location>5732</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="753" z:Size="1">
            <d3p1:anyType z:Id="754" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2931</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2919</d3p1:Key>
        <d3p1:Value z:Id="755">
          <Address z:Ref="615" i:nil="true" />
          <DefaultValues z:Id="756" z:Size="1">
            <d3p1:anyType z:Ref="364" i:nil="true" />
          </DefaultValues>
          <Id>2919</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2916</d3p1:Key>
        <d3p1:Value z:Id="757">
          <Address z:Ref="483" i:nil="true" />
          <DefaultValues z:Id="758" z:Size="1">
            <d3p1:anyType z:Ref="88" i:nil="true" />
          </DefaultValues>
          <Id>2916</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2907</d3p1:Key>
        <d3p1:Value z:Id="759">
          <Address z:Ref="558" i:nil="true" />
          <DefaultValues z:Id="760" z:Size="1">
            <d3p1:anyType z:Ref="243" i:nil="true" />
          </DefaultValues>
          <Id>2907</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2904</d3p1:Key>
        <d3p1:Value z:Id="761">
          <Address z:Ref="555" i:nil="true" />
          <DefaultValues z:Id="762" z:Size="1">
            <d3p1:anyType z:Ref="239" i:nil="true" />
          </DefaultValues>
          <Id>2904</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2901</d3p1:Key>
        <d3p1:Value z:Id="763">
          <Address z:Ref="654" i:nil="true" />
          <DefaultValues z:Id="764" z:Size="1">
            <d3p1:anyType z:Ref="433" i:nil="true" />
          </DefaultValues>
          <Id>2901</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2928</d3p1:Key>
        <d3p1:Value z:Id="765">
          <Address z:Id="766">
            <ArrayCount>8</ArrayCount>
            <Location>5736</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="767" z:Size="8">
            <d3p1:anyType z:Id="768" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
            <d3p1:anyType z:Ref="768" i:nil="true" />
            <d3p1:anyType z:Ref="768" i:nil="true" />
            <d3p1:anyType z:Ref="768" i:nil="true" />
            <d3p1:anyType z:Ref="768" i:nil="true" />
            <d3p1:anyType z:Ref="768" i:nil="true" />
            <d3p1:anyType z:Ref="768" i:nil="true" />
            <d3p1:anyType z:Ref="768" i:nil="true" />
          </DefaultValues>
          <Id>2928</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2945</d3p1:Key>
        <d3p1:Value z:Id="769">
          <Address z:Ref="660" i:nil="true" />
          <DefaultValues z:Id="770" z:Size="8">
            <d3p1:anyType z:Ref="442" i:nil="true" />
            <d3p1:anyType z:Ref="443" i:nil="true" />
            <d3p1:anyType z:Ref="444" i:nil="true" />
            <d3p1:anyType z:Ref="445" i:nil="true" />
            <d3p1:anyType z:Ref="446" i:nil="true" />
            <d3p1:anyType z:Ref="447" i:nil="true" />
            <d3p1:anyType z:Ref="448" i:nil="true" />
            <d3p1:anyType z:Ref="449" i:nil="true" />
          </DefaultValues>
          <Id>2945</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2913</d3p1:Key>
        <d3p1:Value z:Id="771">
          <Address z:Ref="600" i:nil="true" />
          <DefaultValues z:Id="772" z:Size="1">
            <d3p1:anyType z:Ref="343" i:nil="true" />
          </DefaultValues>
          <Id>2913</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2941</d3p1:Key>
        <d3p1:Value z:Id="773">
          <Address z:Id="774">
            <ArrayCount>2</ArrayCount>
            <Location>5768</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="775" z:Size="2">
            <d3p1:anyType z:Id="776" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="776" i:nil="true" />
          </DefaultValues>
          <Id>2941</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2949</d3p1:Key>
        <d3p1:Value z:Id="777">
          <Address z:Ref="663" i:nil="true" />
          <DefaultValues z:Id="778" z:Size="2">
            <d3p1:anyType z:Ref="453" i:nil="true" />
            <d3p1:anyType z:Ref="454" i:nil="true" />
          </DefaultValues>
          <Id>2949</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2160</d3p1:Key>
        <d3p1:Value z:Id="779">
          <Address z:Ref="630" i:nil="true" />
          <DefaultValues z:Id="780" z:Size="5">
            <d3p1:anyType z:Ref="384" i:nil="true" />
            <d3p1:anyType z:Ref="385" i:nil="true" />
            <d3p1:anyType z:Ref="386" i:nil="true" />
            <d3p1:anyType z:Ref="387" i:nil="true" />
            <d3p1:anyType z:Ref="388" i:nil="true" />
          </DefaultValues>
          <Id>2160</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2148</d3p1:Key>
        <d3p1:Value z:Id="781">
          <Address z:Ref="540" i:nil="true" />
          <DefaultValues z:Id="782" z:Size="1">
            <d3p1:anyType z:Ref="219" i:nil="true" />
          </DefaultValues>
          <Id>2148</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2233</d3p1:Key>
        <d3p1:Value z:Id="783">
          <Address z:Id="784">
            <ArrayCount>1</ArrayCount>
            <Location>5770</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="785" z:Size="1">
            <d3p1:anyType z:Id="786" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2233</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2151</d3p1:Key>
        <d3p1:Value z:Id="787">
          <Address z:Id="788">
            <ArrayCount>1</ArrayCount>
            <Location>19</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="789" z:Size="1">
            <d3p1:anyType z:Id="790" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2151</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2152</d3p1:Key>
        <d3p1:Value z:Id="791">
          <Address z:Id="792">
            <ArrayCount>1</ArrayCount>
            <Location>20</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="793" z:Size="1">
            <d3p1:anyType z:Id="794" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2152</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2153</d3p1:Key>
        <d3p1:Value z:Id="795">
          <Address z:Id="796">
            <ArrayCount>1</ArrayCount>
            <Location>21</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="797" z:Size="1">
            <d3p1:anyType z:Id="798" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2153</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2154</d3p1:Key>
        <d3p1:Value z:Id="799">
          <Address z:Id="800">
            <ArrayCount>1</ArrayCount>
            <Location>22</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="801" z:Size="1">
            <d3p1:anyType z:Id="802" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2154</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2155</d3p1:Key>
        <d3p1:Value z:Id="803">
          <Address z:Id="804">
            <ArrayCount>1</ArrayCount>
            <Location>23</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="805" z:Size="1">
            <d3p1:anyType z:Id="806" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2155</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2156</d3p1:Key>
        <d3p1:Value z:Id="807">
          <Address z:Id="808">
            <ArrayCount>1</ArrayCount>
            <Location>24</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="809" z:Size="1">
            <d3p1:anyType z:Id="810" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2156</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2237</d3p1:Key>
        <d3p1:Value z:Id="811">
          <Address z:Id="812">
            <ArrayCount>5</ArrayCount>
            <Location>5772</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="813" z:Size="5">
            <d3p1:anyType z:Id="814" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="814" i:nil="true" />
            <d3p1:anyType z:Ref="814" i:nil="true" />
            <d3p1:anyType z:Ref="814" i:nil="true" />
            <d3p1:anyType z:Ref="814" i:nil="true" />
          </DefaultValues>
          <Id>2237</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2857</d3p1:Key>
        <d3p1:Value z:Id="815">
          <Address z:Id="816">
            <ArrayCount>2</ArrayCount>
            <Location>5782</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="817" z:Size="2">
            <d3p1:anyType z:Id="818" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="818" i:nil="true" />
          </DefaultValues>
          <Id>2857</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2858</d3p1:Key>
        <d3p1:Value z:Id="819">
          <Address z:Id="820">
            <ArrayCount>1</ArrayCount>
            <Location>25</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="821" z:Size="1">
            <d3p1:anyType z:Id="822" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2858</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2853</d3p1:Key>
        <d3p1:Value z:Id="823">
          <Address z:Id="824">
            <ArrayCount>2</ArrayCount>
            <Location>5784</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="825" z:Size="2">
            <d3p1:anyType z:Id="826" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="826" i:nil="true" />
          </DefaultValues>
          <Id>2853</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2854</d3p1:Key>
        <d3p1:Value z:Id="827">
          <Address z:Id="828">
            <ArrayCount>1</ArrayCount>
            <Location>26</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="829" z:Size="1">
            <d3p1:anyType z:Id="830" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2854</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2845</d3p1:Key>
        <d3p1:Value z:Id="831">
          <Address z:Id="832">
            <ArrayCount>1</ArrayCount>
            <Location>5786</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="833" z:Size="1">
            <d3p1:anyType z:Id="834" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2845</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2846</d3p1:Key>
        <d3p1:Value z:Id="835">
          <Address z:Id="836">
            <ArrayCount>1</ArrayCount>
            <Location>27</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="837" z:Size="1">
            <d3p1:anyType z:Id="838" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2846</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2842</d3p1:Key>
        <d3p1:Value z:Id="839">
          <Address z:Ref="657" i:nil="true" />
          <DefaultValues z:Id="840" z:Size="1">
            <d3p1:anyType z:Ref="438" i:nil="true" />
          </DefaultValues>
          <Id>2842</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1094</d3p1:Key>
        <d3p1:Value z:Id="841">
          <Address z:Ref="501" i:nil="true" />
          <DefaultValues z:Id="842" z:Size="1">
            <d3p1:anyType z:Ref="112" i:nil="true" />
          </DefaultValues>
          <Id>1094</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1080</d3p1:Key>
        <d3p1:Value z:Id="843">
          <Address z:Ref="540" i:nil="true" />
          <DefaultValues z:Id="844" z:Size="1">
            <d3p1:anyType z:Ref="219" i:nil="true" />
          </DefaultValues>
          <Id>1080</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1074</d3p1:Key>
        <d3p1:Value z:Id="845">
          <Address z:Id="846">
            <ArrayCount>1</ArrayCount>
            <Location>5790</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="847" z:Size="1">
            <d3p1:anyType z:Id="848" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1086</d3p1:Key>
        <d3p1:Value z:Id="849">
          <Address z:Id="850">
            <ArrayCount>1</ArrayCount>
            <Location>28</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="851" z:Size="1">
            <d3p1:anyType z:Id="852" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1087</d3p1:Key>
        <d3p1:Value z:Id="853">
          <Address z:Id="854">
            <ArrayCount>1</ArrayCount>
            <Location>29</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="855" z:Size="1">
            <d3p1:anyType z:Id="856" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1087</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1088</d3p1:Key>
        <d3p1:Value z:Id="857">
          <Address z:Id="858">
            <ArrayCount>1</ArrayCount>
            <Location>30</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="859" z:Size="1">
            <d3p1:anyType z:Id="860" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1088</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1089</d3p1:Key>
        <d3p1:Value z:Id="861">
          <Address z:Id="862">
            <ArrayCount>1</ArrayCount>
            <Location>31</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="863" z:Size="1">
            <d3p1:anyType z:Id="864" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1090</d3p1:Key>
        <d3p1:Value z:Id="865">
          <Address z:Id="866">
            <ArrayCount>1</ArrayCount>
            <Location>32</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="867" z:Size="1">
            <d3p1:anyType z:Id="868" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1090</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1091</d3p1:Key>
        <d3p1:Value z:Id="869">
          <Address z:Id="870">
            <ArrayCount>1</ArrayCount>
            <Location>33</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="871" z:Size="1">
            <d3p1:anyType z:Id="872" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1091</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2830</d3p1:Key>
        <d3p1:Value z:Id="873">
          <Address z:Id="874">
            <ArrayCount>1</ArrayCount>
            <Location>5792</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="875" z:Size="1">
            <d3p1:anyType z:Id="876" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2830</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2834</d3p1:Key>
        <d3p1:Value z:Id="877">
          <Address z:Id="878">
            <ArrayCount>1</ArrayCount>
            <Location>5796</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="879" z:Size="1">
            <d3p1:anyType z:Id="880" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2834</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2827</d3p1:Key>
        <d3p1:Value z:Id="881">
          <Address z:Ref="654" i:nil="true" />
          <DefaultValues z:Id="882" z:Size="1">
            <d3p1:anyType z:Ref="433" i:nil="true" />
          </DefaultValues>
          <Id>2827</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1136</d3p1:Key>
        <d3p1:Value z:Id="883">
          <Address z:Ref="516" i:nil="true" />
          <DefaultValues z:Id="884" z:Size="10">
            <d3p1:anyType z:Ref="141" i:nil="true" />
            <d3p1:anyType z:Ref="142" i:nil="true" />
            <d3p1:anyType z:Ref="143" i:nil="true" />
            <d3p1:anyType z:Ref="144" i:nil="true" />
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
          </DefaultValues>
          <Id>1136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1113</d3p1:Key>
        <d3p1:Value z:Id="885">
          <Address z:Ref="492" i:nil="true" />
          <DefaultValues z:Id="886" z:Size="1">
            <d3p1:anyType z:Ref="100" i:nil="true" />
          </DefaultValues>
          <Id>1113</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1110</d3p1:Key>
        <d3p1:Value z:Id="887">
          <Address z:Ref="543" i:nil="true" />
          <DefaultValues z:Id="888" z:Size="1">
            <d3p1:anyType z:Ref="223" i:nil="true" />
          </DefaultValues>
          <Id>1110</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1107</d3p1:Key>
        <d3p1:Value z:Id="889">
          <Address z:Ref="540" i:nil="true" />
          <DefaultValues z:Id="890" z:Size="1">
            <d3p1:anyType z:Ref="219" i:nil="true" />
          </DefaultValues>
          <Id>1107</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1125</d3p1:Key>
        <d3p1:Value z:Id="891">
          <Address z:Id="892">
            <ArrayCount>1</ArrayCount>
            <Location>5800</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="893" z:Size="1">
            <d3p1:anyType z:Id="894" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1128</d3p1:Key>
        <d3p1:Value z:Id="895">
          <Address z:Id="896">
            <ArrayCount>1</ArrayCount>
            <Location>34</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="897" z:Size="1">
            <d3p1:anyType z:Id="898" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1128</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1129</d3p1:Key>
        <d3p1:Value z:Id="899">
          <Address z:Id="900">
            <ArrayCount>1</ArrayCount>
            <Location>35</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="901" z:Size="1">
            <d3p1:anyType z:Id="902" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1130</d3p1:Key>
        <d3p1:Value z:Id="903">
          <Address z:Id="904">
            <ArrayCount>1</ArrayCount>
            <Location>36</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="905" z:Size="1">
            <d3p1:anyType z:Id="906" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1130</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1131</d3p1:Key>
        <d3p1:Value z:Id="907">
          <Address z:Id="908">
            <ArrayCount>1</ArrayCount>
            <Location>37</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="909" z:Size="1">
            <d3p1:anyType z:Id="910" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1131</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1132</d3p1:Key>
        <d3p1:Value z:Id="911">
          <Address z:Id="912">
            <ArrayCount>1</ArrayCount>
            <Location>38</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="913" z:Size="1">
            <d3p1:anyType z:Id="914" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1133</d3p1:Key>
        <d3p1:Value z:Id="915">
          <Address z:Id="916">
            <ArrayCount>1</ArrayCount>
            <Location>39</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="917" z:Size="1">
            <d3p1:anyType z:Id="918" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2659</d3p1:Key>
        <d3p1:Value z:Id="919">
          <Address z:Id="920">
            <ArrayCount>1</ArrayCount>
            <Location>40</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="921" z:Size="1">
            <d3p1:anyType z:Id="922" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2659</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2660</d3p1:Key>
        <d3p1:Value z:Id="923">
          <Address z:Id="924">
            <ArrayCount>1</ArrayCount>
            <Location>41</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="925" z:Size="1">
            <d3p1:anyType z:Id="926" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2660</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2106</d3p1:Key>
        <d3p1:Value z:Id="927">
          <Address z:Ref="624" i:nil="true" />
          <DefaultValues z:Id="928" z:Size="1">
            <d3p1:anyType z:Ref="376" i:nil="true" />
          </DefaultValues>
          <Id>2106</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1423</d3p1:Key>
        <d3p1:Value z:Id="929">
          <Address z:Id="930">
            <ArrayCount>1</ArrayCount>
            <Location>5802</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="931" z:Size="1">
            <d3p1:anyType z:Id="932" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1423</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1224</d3p1:Key>
        <d3p1:Value z:Id="933">
          <Address z:Id="934">
            <ArrayCount>1</ArrayCount>
            <Location>5806</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="935" z:Size="1">
            <d3p1:anyType z:Id="936" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1224</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1225</d3p1:Key>
        <d3p1:Value z:Id="937">
          <Address z:Id="938">
            <ArrayCount>1</ArrayCount>
            <Location>42</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="939" z:Size="1">
            <d3p1:anyType z:Id="940" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1225</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1226</d3p1:Key>
        <d3p1:Value z:Id="941">
          <Address z:Id="942">
            <ArrayCount>1</ArrayCount>
            <Location>43</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="943" z:Size="1">
            <d3p1:anyType z:Id="944" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1226</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1227</d3p1:Key>
        <d3p1:Value z:Id="945">
          <Address z:Id="946">
            <ArrayCount>1</ArrayCount>
            <Location>44</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="947" z:Size="1">
            <d3p1:anyType z:Id="948" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1227</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1228</d3p1:Key>
        <d3p1:Value z:Id="949">
          <Address z:Id="950">
            <ArrayCount>10</ArrayCount>
            <Location>5810</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="951" z:Size="10">
            <d3p1:anyType z:Id="952" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
            <d3p1:anyType z:Ref="952" i:nil="true" />
          </DefaultValues>
          <Id>1228</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1247</d3p1:Key>
        <d3p1:Value z:Id="953">
          <Address z:Ref="558" i:nil="true" />
          <DefaultValues z:Id="954" z:Size="1">
            <d3p1:anyType z:Ref="243" i:nil="true" />
          </DefaultValues>
          <Id>1247</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1700</d3p1:Key>
        <d3p1:Value z:Id="955">
          <Address z:Id="956">
            <ArrayCount>1</ArrayCount>
            <Location>5850</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="957" z:Size="1">
            <d3p1:anyType z:Id="958" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1700</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1710</d3p1:Key>
        <d3p1:Value z:Id="959">
          <Address z:Id="960">
            <ArrayCount>1</ArrayCount>
            <Location>5854</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="961" z:Size="1">
            <d3p1:anyType z:Id="962" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1710</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1703</d3p1:Key>
        <d3p1:Value z:Id="963">
          <Address z:Ref="555" i:nil="true" />
          <DefaultValues z:Id="964" z:Size="1">
            <d3p1:anyType z:Ref="239" i:nil="true" />
          </DefaultValues>
          <Id>1703</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2783</d3p1:Key>
        <d3p1:Value z:Id="965">
          <Address z:Id="966">
            <ArrayCount>1</ArrayCount>
            <Location>45</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="967" z:Size="1">
            <d3p1:anyType z:Id="968" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2783</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2784</d3p1:Key>
        <d3p1:Value z:Id="969">
          <Address z:Id="970">
            <ArrayCount>1</ArrayCount>
            <Location>46</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="971" z:Size="1">
            <d3p1:anyType z:Id="972" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2784</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2785</d3p1:Key>
        <d3p1:Value z:Id="973">
          <Address z:Id="974">
            <ArrayCount>1</ArrayCount>
            <Location>5858</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="975" z:Size="1">
            <d3p1:anyType z:Id="976" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2785</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2776</d3p1:Key>
        <d3p1:Value z:Id="977">
          <Address z:Id="978">
            <ArrayCount>2</ArrayCount>
            <Location>5860</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="979" z:Size="2">
            <d3p1:anyType z:Id="980" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="980" i:nil="true" />
          </DefaultValues>
          <Id>2776</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2777</d3p1:Key>
        <d3p1:Value z:Id="981">
          <Address z:Id="982">
            <ArrayCount>1</ArrayCount>
            <Location>47</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="983" z:Size="1">
            <d3p1:anyType z:Id="984" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2777</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2755</d3p1:Key>
        <d3p1:Value z:Id="985">
          <Address z:Id="986">
            <ArrayCount>1</ArrayCount>
            <Location>5868</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="987" z:Size="1">
            <d3p1:anyType z:Id="988" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>2755</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2756</d3p1:Key>
        <d3p1:Value z:Id="989">
          <Address z:Id="990">
            <ArrayCount>1</ArrayCount>
            <Location>5872</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="991" z:Size="1">
            <d3p1:anyType z:Id="992" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2756</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2757</d3p1:Key>
        <d3p1:Value z:Id="993">
          <Address z:Id="994">
            <ArrayCount>1</ArrayCount>
            <Location>5874</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="995" z:Size="1">
            <d3p1:anyType z:Id="996" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2757</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2758</d3p1:Key>
        <d3p1:Value z:Id="997">
          <Address z:Id="998">
            <ArrayCount>1</ArrayCount>
            <Location>5876</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="999" z:Size="1">
            <d3p1:anyType z:Id="1000" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2758</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2759</d3p1:Key>
        <d3p1:Value z:Id="1001">
          <Address z:Id="1002">
            <ArrayCount>1</ArrayCount>
            <Location>5878</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1003" z:Size="1">
            <d3p1:anyType z:Id="1004" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2759</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2767</d3p1:Key>
        <d3p1:Value z:Id="1005">
          <Address z:Id="1006">
            <ArrayCount>1</ArrayCount>
            <Location>48</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1007" z:Size="1">
            <d3p1:anyType z:Id="1008" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2788</d3p1:Key>
        <d3p1:Value z:Id="1009">
          <Address z:Id="1010">
            <ArrayCount>1</ArrayCount>
            <Location>49</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1011" z:Size="1">
            <d3p1:anyType z:Id="1012" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2788</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2697</d3p1:Key>
        <d3p1:Value z:Id="1013">
          <Address z:Id="1014">
            <ArrayCount>1</ArrayCount>
            <Location>50</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1015" z:Size="1">
            <d3p1:anyType z:Id="1016" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2697</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2698</d3p1:Key>
        <d3p1:Value z:Id="1017">
          <Address z:Id="1018">
            <ArrayCount>1</ArrayCount>
            <Location>5880</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1019" z:Size="1">
            <d3p1:anyType z:Id="1020" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2698</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2693</d3p1:Key>
        <d3p1:Value z:Id="1021">
          <Address z:Id="1022">
            <ArrayCount>1</ArrayCount>
            <Location>51</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1023" z:Size="1">
            <d3p1:anyType z:Id="1024" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2739</d3p1:Key>
        <d3p1:Value z:Id="1025">
          <Address z:Id="1026">
            <ArrayCount>1</ArrayCount>
            <Location>5884</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1027" z:Size="1">
            <d3p1:anyType z:Id="1028" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2739</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2664</d3p1:Key>
        <d3p1:Value z:Id="1029">
          <Address z:Id="1030">
            <ArrayCount>1</ArrayCount>
            <Location>5886</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1031" z:Size="1">
            <d3p1:anyType z:Id="1032" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2664</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2802</d3p1:Key>
        <d3p1:Value z:Id="1033">
          <Address z:Id="1034">
            <ArrayCount>1</ArrayCount>
            <Location>5890</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1035" z:Size="1">
            <d3p1:anyType z:Id="1036" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2802</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2799</d3p1:Key>
        <d3p1:Value z:Id="1037">
          <Address z:Id="1038">
            <ArrayCount>1</ArrayCount>
            <Location>52</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1039" z:Size="1">
            <d3p1:anyType z:Id="1040" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2799</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2813</d3p1:Key>
        <d3p1:Value z:Id="1041">
          <Address z:Id="1042">
            <ArrayCount>1</ArrayCount>
            <Location>5894</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1043" z:Size="1">
            <d3p1:anyType z:Id="1044" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2813</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2814</d3p1:Key>
        <d3p1:Value z:Id="1045">
          <Address z:Id="1046">
            <ArrayCount>1</ArrayCount>
            <Location>53</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1047" z:Size="1">
            <d3p1:anyType z:Id="1048" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2814</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2815</d3p1:Key>
        <d3p1:Value z:Id="1049">
          <Address z:Id="1050">
            <ArrayCount>1</ArrayCount>
            <Location>54</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1051" z:Size="1">
            <d3p1:anyType z:Id="1052" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2815</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2816</d3p1:Key>
        <d3p1:Value z:Id="1053">
          <Address z:Id="1054">
            <ArrayCount>1</ArrayCount>
            <Location>55</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1055" z:Size="1">
            <d3p1:anyType z:Id="1056" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2816</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2809</d3p1:Key>
        <d3p1:Value z:Id="1057">
          <Address z:Id="1058">
            <ArrayCount>10</ArrayCount>
            <Location>5898</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1059" z:Size="10">
            <d3p1:anyType z:Id="1060" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
            <d3p1:anyType z:Ref="1060" i:nil="true" />
          </DefaultValues>
          <Id>2809</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2635</d3p1:Key>
        <d3p1:Value z:Id="1061">
          <Address z:Ref="639" i:nil="true" />
          <DefaultValues z:Id="1062" z:Size="1">
            <d3p1:anyType z:Ref="400" i:nil="true" />
          </DefaultValues>
          <Id>2635</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2650</d3p1:Key>
        <d3p1:Value z:Id="1063">
          <Address z:Ref="651" i:nil="true" />
          <DefaultValues z:Id="1064" z:Size="7">
            <d3p1:anyType z:Ref="422" i:nil="true" />
            <d3p1:anyType z:Ref="423" i:nil="true" />
            <d3p1:anyType z:Ref="424" i:nil="true" />
            <d3p1:anyType z:Ref="425" i:nil="true" />
            <d3p1:anyType z:Ref="426" i:nil="true" />
            <d3p1:anyType z:Ref="427" i:nil="true" />
            <d3p1:anyType z:Ref="428" i:nil="true" />
          </DefaultValues>
          <Id>2650</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2647</d3p1:Key>
        <d3p1:Value z:Id="1065">
          <Address z:Ref="648" i:nil="true" />
          <DefaultValues z:Id="1066" z:Size="7">
            <d3p1:anyType z:Ref="412" i:nil="true" />
            <d3p1:anyType z:Ref="413" i:nil="true" />
            <d3p1:anyType z:Ref="414" i:nil="true" />
            <d3p1:anyType z:Ref="415" i:nil="true" />
            <d3p1:anyType z:Ref="416" i:nil="true" />
            <d3p1:anyType z:Ref="417" i:nil="true" />
            <d3p1:anyType z:Ref="418" i:nil="true" />
          </DefaultValues>
          <Id>2647</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1600</d3p1:Key>
        <d3p1:Value z:Id="1067">
          <Address z:Ref="561" i:nil="true" />
          <DefaultValues z:Id="1068" z:Size="1">
            <d3p1:anyType z:Ref="247" i:nil="true" />
          </DefaultValues>
          <Id>1600</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1719</d3p1:Key>
        <d3p1:Value z:Id="1069">
          <Address z:Id="1070">
            <ArrayCount>1</ArrayCount>
            <Location>5938</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1071" z:Size="1">
            <d3p1:anyType z:Id="1072" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1719</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1693</d3p1:Key>
        <d3p1:Value z:Id="1073">
          <Address z:Id="1074">
            <ArrayCount>1</ArrayCount>
            <Location>5942</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1075" z:Size="1">
            <d3p1:anyType z:Id="1076" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1715</d3p1:Key>
        <d3p1:Value z:Id="1077">
          <Address z:Ref="588" i:nil="true" />
          <DefaultValues z:Id="1078" z:Size="1">
            <d3p1:anyType z:Ref="305" i:nil="true" />
          </DefaultValues>
          <Id>1715</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2642</d3p1:Key>
        <d3p1:Value z:Id="1079">
          <Address z:Id="1080">
            <ArrayCount>1</ArrayCount>
            <Location>5946</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1081" z:Size="1">
            <d3p1:anyType z:Id="1082" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2642</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2478</d3p1:Key>
        <d3p1:Value z:Id="1083">
          <Address z:Ref="636" i:nil="true" />
          <DefaultValues z:Id="1084" z:Size="1">
            <d3p1:anyType z:Ref="396" i:nil="true" />
          </DefaultValues>
          <Id>2478</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2312</d3p1:Key>
        <d3p1:Value z:Id="1085">
          <Address z:Ref="633" i:nil="true" />
          <DefaultValues z:Id="1086" z:Size="1">
            <d3p1:anyType z:Ref="392" i:nil="true" />
          </DefaultValues>
          <Id>2312</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2081</d3p1:Key>
        <d3p1:Value z:Id="1087">
          <Address z:Ref="621" i:nil="true" />
          <DefaultValues z:Id="1088" z:Size="1">
            <d3p1:anyType z:Ref="372" i:nil="true" />
          </DefaultValues>
          <Id>2081</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2078</d3p1:Key>
        <d3p1:Value z:Id="1089">
          <Address z:Ref="618" i:nil="true" />
          <DefaultValues z:Id="1090" z:Size="1">
            <d3p1:anyType z:Ref="368" i:nil="true" />
          </DefaultValues>
          <Id>2078</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1305</d3p1:Key>
        <d3p1:Value z:Id="1091">
          <Address z:Ref="576" i:nil="true" />
          <DefaultValues z:Id="1092" z:Size="1">
            <d3p1:anyType z:Ref="283" i:nil="true" />
          </DefaultValues>
          <Id>1305</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1301</d3p1:Key>
        <d3p1:Value z:Id="1093">
          <Address z:Ref="573" i:nil="true" />
          <DefaultValues z:Id="1094" z:Size="17">
            <d3p1:anyType z:Ref="263" i:nil="true" />
            <d3p1:anyType z:Ref="264" i:nil="true" />
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
            <d3p1:anyType z:Ref="271" i:nil="true" />
            <d3p1:anyType z:Ref="272" i:nil="true" />
            <d3p1:anyType z:Ref="273" i:nil="true" />
            <d3p1:anyType z:Ref="274" i:nil="true" />
            <d3p1:anyType z:Ref="275" i:nil="true" />
            <d3p1:anyType z:Ref="276" i:nil="true" />
            <d3p1:anyType z:Ref="277" i:nil="true" />
            <d3p1:anyType z:Ref="278" i:nil="true" />
            <d3p1:anyType z:Ref="279" i:nil="true" />
          </DefaultValues>
          <Id>1301</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1297</d3p1:Key>
        <d3p1:Value z:Id="1095">
          <Address z:Id="1096">
            <ArrayCount>1</ArrayCount>
            <Location>5950</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1097" z:Size="1">
            <d3p1:anyType z:Id="1098" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1297</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1289</d3p1:Key>
        <d3p1:Value z:Id="1099">
          <Address z:Ref="570" i:nil="true" />
          <DefaultValues z:Id="1100" z:Size="1">
            <d3p1:anyType z:Ref="259" i:nil="true" />
          </DefaultValues>
          <Id>1289</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1286</d3p1:Key>
        <d3p1:Value z:Id="1101">
          <Address z:Ref="567" i:nil="true" />
          <DefaultValues z:Id="1102" z:Size="1">
            <d3p1:anyType z:Ref="255" i:nil="true" />
          </DefaultValues>
          <Id>1286</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1279</d3p1:Key>
        <d3p1:Value z:Id="1103">
          <Address z:Ref="564" i:nil="true" />
          <DefaultValues z:Id="1104" z:Size="1">
            <d3p1:anyType z:Ref="251" i:nil="true" />
          </DefaultValues>
          <Id>1279</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1264</d3p1:Key>
        <d3p1:Value z:Id="1105">
          <Address z:Id="1106">
            <ArrayCount>1</ArrayCount>
            <Location>5952</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1107" z:Size="1">
            <d3p1:anyType z:Id="1108" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1264</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1265</d3p1:Key>
        <d3p1:Value z:Id="1109">
          <Address z:Id="1110">
            <ArrayCount>1</ArrayCount>
            <Location>5956</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1111" z:Size="1">
            <d3p1:anyType z:Id="1112" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1265</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1266</d3p1:Key>
        <d3p1:Value z:Id="1113">
          <Address z:Id="1114">
            <ArrayCount>1</ArrayCount>
            <Location>5960</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1115" z:Size="1">
            <d3p1:anyType z:Id="1116" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1266</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1267</d3p1:Key>
        <d3p1:Value z:Id="1117">
          <Address z:Id="1118">
            <ArrayCount>1</ArrayCount>
            <Location>5962</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1119" z:Size="1">
            <d3p1:anyType z:Id="1120" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1267</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1268</d3p1:Key>
        <d3p1:Value z:Id="1121">
          <Address z:Id="1122">
            <ArrayCount>1</ArrayCount>
            <Location>5966</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1123" z:Size="1">
            <d3p1:anyType z:Id="1124" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1268</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1269</d3p1:Key>
        <d3p1:Value z:Id="1125">
          <Address z:Id="1126">
            <ArrayCount>1</ArrayCount>
            <Location>56</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1127" z:Size="1">
            <d3p1:anyType z:Id="1128" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1269</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1270</d3p1:Key>
        <d3p1:Value z:Id="1129">
          <Address z:Id="1130">
            <ArrayCount>4</ArrayCount>
            <Location>5970</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1131" z:Size="4">
            <d3p1:anyType z:Id="1132" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1132" i:nil="true" />
            <d3p1:anyType z:Ref="1132" i:nil="true" />
            <d3p1:anyType z:Ref="1132" i:nil="true" />
          </DefaultValues>
          <Id>1270</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2623</d3p1:Key>
        <d3p1:Value z:Id="1133">
          <Address z:Id="1134">
            <ArrayCount>1</ArrayCount>
            <Location>5986</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1135" z:Size="1">
            <d3p1:anyType z:Id="1136" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2623</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2620</d3p1:Key>
        <d3p1:Value z:Id="1137">
          <Address z:Ref="585" i:nil="true" />
          <DefaultValues z:Id="1138" z:Size="4">
            <d3p1:anyType z:Ref="298" i:nil="true" />
            <d3p1:anyType z:Ref="299" i:nil="true" />
            <d3p1:anyType z:Ref="300" i:nil="true" />
            <d3p1:anyType z:Ref="301" i:nil="true" />
          </DefaultValues>
          <Id>2620</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2617</d3p1:Key>
        <d3p1:Value z:Id="1139">
          <Address z:Ref="582" i:nil="true" />
          <DefaultValues z:Id="1140" z:Size="4">
            <d3p1:anyType z:Ref="291" i:nil="true" />
            <d3p1:anyType z:Ref="292" i:nil="true" />
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
          </DefaultValues>
          <Id>2617</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2605</d3p1:Key>
        <d3p1:Value z:Id="1141">
          <Address z:Id="1142">
            <ArrayCount>1</ArrayCount>
            <Location>5990</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1143" z:Size="1">
            <d3p1:anyType z:Id="1144" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2605</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2627</d3p1:Key>
        <d3p1:Value z:Id="1145">
          <Address z:Ref="645" i:nil="true" />
          <DefaultValues z:Id="1146" z:Size="1">
            <d3p1:anyType z:Ref="408" i:nil="true" />
          </DefaultValues>
          <Id>2627</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2632</d3p1:Key>
        <d3p1:Value z:Id="1147">
          <Address z:Id="1148">
            <ArrayCount>1</ArrayCount>
            <Location>5994</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1149" z:Size="1">
            <d3p1:anyType z:Id="1150" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2632</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1533</d3p1:Key>
        <d3p1:Value z:Id="1151">
          <Address z:Id="1152">
            <ArrayCount>1</ArrayCount>
            <Location>5998</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1153" z:Size="1">
            <d3p1:anyType z:Id="1154" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1533</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1530</d3p1:Key>
        <d3p1:Value z:Id="1155">
          <Address z:Id="1156">
            <ArrayCount>1</ArrayCount>
            <Location>6002</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1157" z:Size="1">
            <d3p1:anyType z:Id="1158" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1530</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1488</d3p1:Key>
        <d3p1:Value z:Id="1159">
          <Address z:Id="1160">
            <ArrayCount>2</ArrayCount>
            <Location>6006</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1161" z:Size="2">
            <d3p1:anyType z:Id="1162" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1162" i:nil="true" />
          </DefaultValues>
          <Id>1488</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1539</d3p1:Key>
        <d3p1:Value z:Id="1163">
          <Address z:Id="1164">
            <ArrayCount>1</ArrayCount>
            <Location>6014</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1165" z:Size="1">
            <d3p1:anyType z:Id="1166" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1539</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1543</d3p1:Key>
        <d3p1:Value z:Id="1167">
          <Address z:Id="1168">
            <ArrayCount>1</ArrayCount>
            <Location>6018</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1169" z:Size="1">
            <d3p1:anyType z:Id="1170" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1543</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1434</d3p1:Key>
        <d3p1:Value z:Id="1171">
          <Address z:Id="1172">
            <ArrayCount>2</ArrayCount>
            <Location>6022</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1173" z:Size="2">
            <d3p1:anyType z:Id="1174" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1174" i:nil="true" />
          </DefaultValues>
          <Id>1434</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1686</d3p1:Key>
        <d3p1:Value z:Id="1175">
          <Address z:Ref="642" i:nil="true" />
          <DefaultValues z:Id="1176" z:Size="1">
            <d3p1:anyType z:Ref="404" i:nil="true" />
          </DefaultValues>
          <Id>1686</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1908</d3p1:Key>
        <d3p1:Value z:Id="1177">
          <Address z:Id="1178">
            <ArrayCount>2</ArrayCount>
            <Location>6030</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1179" z:Size="2">
            <d3p1:anyType z:Id="1180" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1180" i:nil="true" />
          </DefaultValues>
          <Id>1908</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2109</d3p1:Key>
        <d3p1:Value z:Id="1181">
          <Address z:Ref="624" i:nil="true" />
          <DefaultValues z:Id="1182" z:Size="1">
            <d3p1:anyType z:Ref="376" i:nil="true" />
          </DefaultValues>
          <Id>2109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1425</d3p1:Key>
        <d3p1:Value z:Id="1183">
          <Address z:Id="1184">
            <ArrayCount>1</ArrayCount>
            <Location>6038</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1185" z:Size="1">
            <d3p1:anyType z:Id="1186" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1425</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1209</d3p1:Key>
        <d3p1:Value z:Id="1187">
          <Address z:Id="1188">
            <ArrayCount>1</ArrayCount>
            <Location>6042</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1189" z:Size="1">
            <d3p1:anyType z:Id="1190" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1209</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1210</d3p1:Key>
        <d3p1:Value z:Id="1191">
          <Address z:Id="1192">
            <ArrayCount>1</ArrayCount>
            <Location>57</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1193" z:Size="1">
            <d3p1:anyType z:Id="1194" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1210</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1211</d3p1:Key>
        <d3p1:Value z:Id="1195">
          <Address z:Id="1196">
            <ArrayCount>1</ArrayCount>
            <Location>58</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1197" z:Size="1">
            <d3p1:anyType z:Id="1198" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1211</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1212</d3p1:Key>
        <d3p1:Value z:Id="1199">
          <Address z:Id="1200">
            <ArrayCount>1</ArrayCount>
            <Location>59</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1201" z:Size="1">
            <d3p1:anyType z:Id="1202" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1212</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1213</d3p1:Key>
        <d3p1:Value z:Id="1203">
          <Address z:Id="1204">
            <ArrayCount>10</ArrayCount>
            <Location>6046</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1205" z:Size="10">
            <d3p1:anyType z:Id="1206" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
            <d3p1:anyType z:Ref="1206" i:nil="true" />
          </DefaultValues>
          <Id>1213</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2248</d3p1:Key>
        <d3p1:Value z:Id="1207">
          <Address z:Id="1208">
            <ArrayCount>1</ArrayCount>
            <Location>6086</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1209" z:Size="1">
            <d3p1:anyType z:Id="1210" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2248</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2318</d3p1:Key>
        <d3p1:Value z:Id="1211">
          <Address z:Id="1212">
            <ArrayCount>1</ArrayCount>
            <Location>6090</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1213" z:Size="1">
            <d3p1:anyType z:Id="1214" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2318</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2319</d3p1:Key>
        <d3p1:Value z:Id="1215">
          <Address z:Id="1216">
            <ArrayCount>1</ArrayCount>
            <Location>60</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1217" z:Size="1">
            <d3p1:anyType z:Id="1218" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2319</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2320</d3p1:Key>
        <d3p1:Value z:Id="1219">
          <Address z:Id="1220">
            <ArrayCount>1</ArrayCount>
            <Location>61</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1221" z:Size="1">
            <d3p1:anyType z:Id="1222" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2320</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2321</d3p1:Key>
        <d3p1:Value z:Id="1223">
          <Address z:Id="1224">
            <ArrayCount>1</ArrayCount>
            <Location>62</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1225" z:Size="1">
            <d3p1:anyType z:Id="1226" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2321</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2314</d3p1:Key>
        <d3p1:Value z:Id="1227">
          <Address z:Id="1228">
            <ArrayCount>10</ArrayCount>
            <Location>6094</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1229" z:Size="10">
            <d3p1:anyType z:Id="1230" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
            <d3p1:anyType z:Ref="1230" i:nil="true" />
          </DefaultValues>
          <Id>2314</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1980</d3p1:Key>
        <d3p1:Value z:Id="1231">
          <Address z:Ref="612" i:nil="true" />
          <DefaultValues z:Id="1232" z:Size="1">
            <d3p1:anyType z:Ref="359" i:nil="true" />
          </DefaultValues>
          <Id>1980</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1954</d3p1:Key>
        <d3p1:Value z:Id="1233">
          <Address z:Id="1234">
            <ArrayCount>1</ArrayCount>
            <Location>63</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1235" z:Size="1">
            <d3p1:anyType z:Id="1236" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1954</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1955</d3p1:Key>
        <d3p1:Value z:Id="1237">
          <Address z:Id="1238">
            <ArrayCount>1</ArrayCount>
            <Location>64</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1239" z:Size="1">
            <d3p1:anyType z:Id="1240" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1955</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1956</d3p1:Key>
        <d3p1:Value z:Id="1241">
          <Address z:Id="1242">
            <ArrayCount>1</ArrayCount>
            <Location>65</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1243" z:Size="1">
            <d3p1:anyType z:Id="1244" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1956</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1957</d3p1:Key>
        <d3p1:Value z:Id="1245">
          <Address z:Id="1246">
            <ArrayCount>1</ArrayCount>
            <Location>6134</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1247" z:Size="1">
            <d3p1:anyType z:Id="1248" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1957</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1958</d3p1:Key>
        <d3p1:Value z:Id="1249">
          <Address z:Id="1250">
            <ArrayCount>1</ArrayCount>
            <Location>6138</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1251" z:Size="1">
            <d3p1:anyType z:Id="1252" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1958</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1959</d3p1:Key>
        <d3p1:Value z:Id="1253">
          <Address z:Id="1254">
            <ArrayCount>1</ArrayCount>
            <Location>6142</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1255" z:Size="1">
            <d3p1:anyType z:Id="1256" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1959</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1960</d3p1:Key>
        <d3p1:Value z:Id="1257">
          <Address z:Id="1258">
            <ArrayCount>1</ArrayCount>
            <Location>6146</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1259" z:Size="1">
            <d3p1:anyType z:Id="1260" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1960</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1961</d3p1:Key>
        <d3p1:Value z:Id="1261">
          <Address z:Id="1262">
            <ArrayCount>1</ArrayCount>
            <Location>6150</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1263" z:Size="1">
            <d3p1:anyType z:Id="1264" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1961</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1962</d3p1:Key>
        <d3p1:Value z:Id="1265">
          <Address z:Id="1266">
            <ArrayCount>1</ArrayCount>
            <Location>6154</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1267" z:Size="1">
            <d3p1:anyType z:Id="1268" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1962</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1963</d3p1:Key>
        <d3p1:Value z:Id="1269">
          <Address z:Id="1270">
            <ArrayCount>1</ArrayCount>
            <Location>6158</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1271" z:Size="1">
            <d3p1:anyType z:Id="1272" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1963</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1964</d3p1:Key>
        <d3p1:Value z:Id="1273">
          <Address z:Id="1274">
            <ArrayCount>1</ArrayCount>
            <Location>6162</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1275" z:Size="1">
            <d3p1:anyType z:Id="1276" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1964</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1965</d3p1:Key>
        <d3p1:Value z:Id="1277">
          <Address z:Id="1278">
            <ArrayCount>1</ArrayCount>
            <Location>6166</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1279" z:Size="1">
            <d3p1:anyType z:Id="1280" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1965</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1928</d3p1:Key>
        <d3p1:Value z:Id="1281">
          <Address z:Id="1282">
            <ArrayCount>1</ArrayCount>
            <Location>66</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1283" z:Size="1">
            <d3p1:anyType z:Id="1284" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1928</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1929</d3p1:Key>
        <d3p1:Value z:Id="1285">
          <Address z:Id="1286">
            <ArrayCount>1</ArrayCount>
            <Location>6170</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1287" z:Size="1">
            <d3p1:anyType z:Id="1288" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1929</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1930</d3p1:Key>
        <d3p1:Value z:Id="1289">
          <Address z:Id="1290">
            <ArrayCount>1</ArrayCount>
            <Location>6172</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1291" z:Size="1">
            <d3p1:anyType z:Id="1292" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1930</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1931</d3p1:Key>
        <d3p1:Value z:Id="1293">
          <Address z:Id="1294">
            <ArrayCount>1</ArrayCount>
            <Location>6174</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1295" z:Size="1">
            <d3p1:anyType z:Id="1296" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1931</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1932</d3p1:Key>
        <d3p1:Value z:Id="1297">
          <Address z:Id="1298">
            <ArrayCount>1</ArrayCount>
            <Location>6178</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1299" z:Size="1">
            <d3p1:anyType z:Id="1300" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1932</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1933</d3p1:Key>
        <d3p1:Value z:Id="1301">
          <Address z:Id="1302">
            <ArrayCount>1</ArrayCount>
            <Location>67</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1303" z:Size="1">
            <d3p1:anyType z:Id="1304" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1933</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1934</d3p1:Key>
        <d3p1:Value z:Id="1305">
          <Address z:Id="1306">
            <ArrayCount>1</ArrayCount>
            <Location>68</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1307" z:Size="1">
            <d3p1:anyType z:Id="1308" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1934</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1935</d3p1:Key>
        <d3p1:Value z:Id="1309">
          <Address z:Id="1310">
            <ArrayCount>1</ArrayCount>
            <Location>6182</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1311" z:Size="1">
            <d3p1:anyType z:Id="1312" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1935</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1936</d3p1:Key>
        <d3p1:Value z:Id="1313">
          <Address z:Id="1314">
            <ArrayCount>1</ArrayCount>
            <Location>6184</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1315" z:Size="1">
            <d3p1:anyType z:Id="1316" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1936</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1937</d3p1:Key>
        <d3p1:Value z:Id="1317">
          <Address z:Id="1318">
            <ArrayCount>1</ArrayCount>
            <Location>6186</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1319" z:Size="1">
            <d3p1:anyType z:Id="1320" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1937</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1938</d3p1:Key>
        <d3p1:Value z:Id="1321">
          <Address z:Id="1322">
            <ArrayCount>1</ArrayCount>
            <Location>69</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1323" z:Size="1">
            <d3p1:anyType z:Id="1324" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1938</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1939</d3p1:Key>
        <d3p1:Value z:Id="1325">
          <Address z:Id="1326">
            <ArrayCount>1</ArrayCount>
            <Location>6188</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1327" z:Size="1">
            <d3p1:anyType z:Id="1328" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1939</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1940</d3p1:Key>
        <d3p1:Value z:Id="1329">
          <Address z:Id="1330">
            <ArrayCount>1</ArrayCount>
            <Location>6192</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1331" z:Size="1">
            <d3p1:anyType z:Id="1332" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1940</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1941</d3p1:Key>
        <d3p1:Value z:Id="1333">
          <Address z:Id="1334">
            <ArrayCount>1</ArrayCount>
            <Location>6194</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1335" z:Size="1">
            <d3p1:anyType z:Id="1336" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1941</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1942</d3p1:Key>
        <d3p1:Value z:Id="1337">
          <Address z:Id="1338">
            <ArrayCount>1</ArrayCount>
            <Location>6198</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1339" z:Size="1">
            <d3p1:anyType z:Id="1340" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1942</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1943</d3p1:Key>
        <d3p1:Value z:Id="1341">
          <Address z:Id="1342">
            <ArrayCount>1</ArrayCount>
            <Location>6202</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1343" z:Size="1">
            <d3p1:anyType z:Id="1344" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1943</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1944</d3p1:Key>
        <d3p1:Value z:Id="1345">
          <Address z:Id="1346">
            <ArrayCount>1</ArrayCount>
            <Location>6206</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1347" z:Size="1">
            <d3p1:anyType z:Id="1348" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1944</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1945</d3p1:Key>
        <d3p1:Value z:Id="1349">
          <Address z:Id="1350">
            <ArrayCount>1</ArrayCount>
            <Location>6210</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1351" z:Size="1">
            <d3p1:anyType z:Id="1352" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1945</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1946</d3p1:Key>
        <d3p1:Value z:Id="1353">
          <Address z:Id="1354">
            <ArrayCount>1</ArrayCount>
            <Location>6214</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1355" z:Size="1">
            <d3p1:anyType z:Id="1356" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1946</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1947</d3p1:Key>
        <d3p1:Value z:Id="1357">
          <Address z:Id="1358">
            <ArrayCount>1</ArrayCount>
            <Location>6218</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1359" z:Size="1">
            <d3p1:anyType z:Id="1360" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1947</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1948</d3p1:Key>
        <d3p1:Value z:Id="1361">
          <Address z:Id="1362">
            <ArrayCount>1</ArrayCount>
            <Location>6222</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1363" z:Size="1">
            <d3p1:anyType z:Id="1364" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1948</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1949</d3p1:Key>
        <d3p1:Value z:Id="1365">
          <Address z:Id="1366">
            <ArrayCount>1</ArrayCount>
            <Location>6226</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1367" z:Size="1">
            <d3p1:anyType z:Id="1368" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1949</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1974</d3p1:Key>
        <d3p1:Value z:Id="1369">
          <Address z:Ref="483" i:nil="true" />
          <DefaultValues z:Id="1370" z:Size="1">
            <d3p1:anyType z:Ref="88" i:nil="true" />
          </DefaultValues>
          <Id>1974</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1977</d3p1:Key>
        <d3p1:Value z:Id="1371">
          <Address z:Ref="615" i:nil="true" />
          <DefaultValues z:Id="1372" z:Size="1">
            <d3p1:anyType z:Ref="364" i:nil="true" />
          </DefaultValues>
          <Id>1977</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2014</d3p1:Key>
        <d3p1:Value z:Id="1373">
          <Address z:Id="1374">
            <ArrayCount>1</ArrayCount>
            <Location>70</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1375" z:Size="1">
            <d3p1:anyType z:Id="1376" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2014</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2022</d3p1:Key>
        <d3p1:Value z:Id="1377">
          <Address z:Id="1378">
            <ArrayCount>1</ArrayCount>
            <Location>71</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1379" z:Size="1">
            <d3p1:anyType z:Id="1380" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2022</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2023</d3p1:Key>
        <d3p1:Value z:Id="1381">
          <Address z:Id="1382">
            <ArrayCount>1</ArrayCount>
            <Location>6230</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1383" z:Size="1">
            <d3p1:anyType z:Id="1384" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2023</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2024</d3p1:Key>
        <d3p1:Value z:Id="1385">
          <Address z:Id="1386">
            <ArrayCount>2</ArrayCount>
            <Location>6234</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1387" z:Size="2">
            <d3p1:anyType z:Id="1388" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1388" i:nil="true" />
          </DefaultValues>
          <Id>2024</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2018</d3p1:Key>
        <d3p1:Value z:Id="1389">
          <Address z:Id="1390">
            <ArrayCount>1</ArrayCount>
            <Location>72</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1391" z:Size="1">
            <d3p1:anyType z:Id="1392" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2018</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2016</d3p1:Key>
        <d3p1:Value z:Id="1393">
          <Address z:Id="1394">
            <ArrayCount>1</ArrayCount>
            <Location>73</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1395" z:Size="1">
            <d3p1:anyType z:Id="1396" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2016</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2008</d3p1:Key>
        <d3p1:Value z:Id="1397">
          <Address z:Id="1398">
            <ArrayCount>1</ArrayCount>
            <Location>74</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1399" z:Size="1">
            <d3p1:anyType z:Id="1400" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2008</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1746</d3p1:Key>
        <d3p1:Value z:Id="1401">
          <Address z:Id="1402">
            <ArrayCount>1</ArrayCount>
            <Location>75</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1403" z:Size="1">
            <d3p1:anyType z:Id="1404" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1746</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2004</d3p1:Key>
        <d3p1:Value z:Id="1405">
          <Address z:Id="1406">
            <ArrayCount>1</ArrayCount>
            <Location>76</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1407" z:Size="1">
            <d3p1:anyType z:Id="1408" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2004</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2005</d3p1:Key>
        <d3p1:Value z:Id="1409">
          <Address z:Id="1410">
            <ArrayCount>1</ArrayCount>
            <Location>6242</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1411" z:Size="1">
            <d3p1:anyType z:Id="1412" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2005</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2006</d3p1:Key>
        <d3p1:Value z:Id="1413">
          <Address z:Id="1414">
            <ArrayCount>2</ArrayCount>
            <Location>6246</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1415" z:Size="2">
            <d3p1:anyType z:Id="1416" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1416" i:nil="true" />
          </DefaultValues>
          <Id>2006</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1744</d3p1:Key>
        <d3p1:Value z:Id="1417">
          <Address z:Id="1418">
            <ArrayCount>1</ArrayCount>
            <Location>77</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1419" z:Size="1">
            <d3p1:anyType z:Id="1420" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1744</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1998</d3p1:Key>
        <d3p1:Value z:Id="1421">
          <Address z:Id="1422">
            <ArrayCount>1</ArrayCount>
            <Location>78</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1423" z:Size="1">
            <d3p1:anyType z:Id="1424" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1998</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1999</d3p1:Key>
        <d3p1:Value z:Id="1425">
          <Address z:Id="1426">
            <ArrayCount>1</ArrayCount>
            <Location>6254</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1427" z:Size="1">
            <d3p1:anyType z:Id="1428" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1999</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2000</d3p1:Key>
        <d3p1:Value z:Id="1429">
          <Address z:Id="1430">
            <ArrayCount>2</ArrayCount>
            <Location>6258</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1431" z:Size="2">
            <d3p1:anyType z:Id="1432" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1432" i:nil="true" />
          </DefaultValues>
          <Id>2000</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1742</d3p1:Key>
        <d3p1:Value z:Id="1433">
          <Address z:Id="1434">
            <ArrayCount>1</ArrayCount>
            <Location>79</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1435" z:Size="1">
            <d3p1:anyType z:Id="1436" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1742</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1992</d3p1:Key>
        <d3p1:Value z:Id="1437">
          <Address z:Id="1438">
            <ArrayCount>1</ArrayCount>
            <Location>80</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1439" z:Size="1">
            <d3p1:anyType z:Id="1440" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1992</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1993</d3p1:Key>
        <d3p1:Value z:Id="1441">
          <Address z:Id="1442">
            <ArrayCount>1</ArrayCount>
            <Location>6266</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1443" z:Size="1">
            <d3p1:anyType z:Id="1444" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1993</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1994</d3p1:Key>
        <d3p1:Value z:Id="1445">
          <Address z:Id="1446">
            <ArrayCount>2</ArrayCount>
            <Location>6270</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1447" z:Size="2">
            <d3p1:anyType z:Id="1448" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1448" i:nil="true" />
          </DefaultValues>
          <Id>1994</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1738</d3p1:Key>
        <d3p1:Value z:Id="1449">
          <Address z:Id="1450">
            <ArrayCount>1</ArrayCount>
            <Location>6278</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1451" z:Size="1">
            <d3p1:anyType z:Id="1452" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1738</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1750</d3p1:Key>
        <d3p1:Value z:Id="1453">
          <Address z:Ref="600" i:nil="true" />
          <DefaultValues z:Id="1454" z:Size="1">
            <d3p1:anyType z:Ref="343" i:nil="true" />
          </DefaultValues>
          <Id>1750</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2125</d3p1:Key>
        <d3p1:Value z:Id="1455">
          <Address z:Id="1456">
            <ArrayCount>1</ArrayCount>
            <Location>6280</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1457" z:Size="1">
            <d3p1:anyType z:Id="1458" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2129</d3p1:Key>
        <d3p1:Value z:Id="1459">
          <Address z:Ref="627" i:nil="true" />
          <DefaultValues z:Id="1460" z:Size="1">
            <d3p1:anyType z:Ref="380" i:nil="true" />
          </DefaultValues>
          <Id>2129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1762</d3p1:Key>
        <d3p1:Value z:Id="1461">
          <Address z:Id="1462">
            <ArrayCount>1</ArrayCount>
            <Location>6284</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1463" z:Size="1">
            <d3p1:anyType z:Id="1464" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1762</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1768</d3p1:Key>
        <d3p1:Value z:Id="1465">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1466" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>1768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1776</d3p1:Key>
        <d3p1:Value z:Id="1467">
          <Address z:Ref="606" i:nil="true" />
          <DefaultValues z:Id="1468" z:Size="1">
            <d3p1:anyType z:Ref="351" i:nil="true" />
          </DefaultValues>
          <Id>1776</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1771</d3p1:Key>
        <d3p1:Value z:Id="1469">
          <Address z:Id="1470">
            <ArrayCount>1</ArrayCount>
            <Location>81</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1471" z:Size="1">
            <d3p1:anyType z:Id="1472" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1771</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1772</d3p1:Key>
        <d3p1:Value z:Id="1473">
          <Address z:Id="1474">
            <ArrayCount>1</ArrayCount>
            <Location>6288</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1475" z:Size="1">
            <d3p1:anyType z:Id="1476" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1772</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1773</d3p1:Key>
        <d3p1:Value z:Id="1477">
          <Address z:Id="1478">
            <ArrayCount>1</ArrayCount>
            <Location>6292</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1479" z:Size="1">
            <d3p1:anyType z:Id="1480" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1773</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1851</d3p1:Key>
        <d3p1:Value z:Id="1481">
          <Address z:Ref="555" i:nil="true" />
          <DefaultValues z:Id="1482" z:Size="1">
            <d3p1:anyType z:Ref="239" i:nil="true" />
          </DefaultValues>
          <Id>1851</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1872</d3p1:Key>
        <d3p1:Value z:Id="1483">
          <Address z:Id="1484">
            <ArrayCount>1</ArrayCount>
            <Location>6294</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1485" z:Size="1">
            <d3p1:anyType z:Id="1486" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1872</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1873</d3p1:Key>
        <d3p1:Value z:Id="1487">
          <Address z:Id="1488">
            <ArrayCount>1</ArrayCount>
            <Location>6298</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1489" z:Size="1">
            <d3p1:anyType z:Id="1490" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1873</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2092</d3p1:Key>
        <d3p1:Value z:Id="1491">
          <Address z:Ref="618" i:nil="true" />
          <DefaultValues z:Id="1492" z:Size="1">
            <d3p1:anyType z:Ref="368" i:nil="true" />
          </DefaultValues>
          <Id>2092</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2070</d3p1:Key>
        <d3p1:Value z:Id="1493">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1494" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>2070</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2067</d3p1:Key>
        <d3p1:Value z:Id="1495">
          <Address z:Id="1496">
            <ArrayCount>1</ArrayCount>
            <Location>6300</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1497" z:Size="1">
            <d3p1:anyType z:Id="1498" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2067</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2048</d3p1:Key>
        <d3p1:Value z:Id="1499">
          <Address z:Ref="564" i:nil="true" />
          <DefaultValues z:Id="1500" z:Size="1">
            <d3p1:anyType z:Ref="251" i:nil="true" />
          </DefaultValues>
          <Id>2048</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2045</d3p1:Key>
        <d3p1:Value z:Id="1501">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1502" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>2045</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2042</d3p1:Key>
        <d3p1:Value z:Id="1503">
          <Address z:Id="1504">
            <ArrayCount>1</ArrayCount>
            <Location>6304</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1505" z:Size="1">
            <d3p1:anyType z:Id="1506" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2042</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1854</d3p1:Key>
        <d3p1:Value z:Id="1507">
          <Address z:Ref="558" i:nil="true" />
          <DefaultValues z:Id="1508" z:Size="1">
            <d3p1:anyType z:Ref="243" i:nil="true" />
          </DefaultValues>
          <Id>1854</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1876</d3p1:Key>
        <d3p1:Value z:Id="1509">
          <Address z:Id="1510">
            <ArrayCount>1</ArrayCount>
            <Location>6308</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1511" z:Size="1">
            <d3p1:anyType z:Id="1512" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1876</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1877</d3p1:Key>
        <d3p1:Value z:Id="1513">
          <Address z:Id="1514">
            <ArrayCount>1</ArrayCount>
            <Location>6312</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1515" z:Size="1">
            <d3p1:anyType z:Id="1516" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1877</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2095</d3p1:Key>
        <d3p1:Value z:Id="1517">
          <Address z:Ref="621" i:nil="true" />
          <DefaultValues z:Id="1518" z:Size="1">
            <d3p1:anyType z:Ref="372" i:nil="true" />
          </DefaultValues>
          <Id>2095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2089</d3p1:Key>
        <d3p1:Value z:Id="1519">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1520" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>2089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2086</d3p1:Key>
        <d3p1:Value z:Id="1521">
          <Address z:Id="1522">
            <ArrayCount>1</ArrayCount>
            <Location>6314</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1523" z:Size="1">
            <d3p1:anyType z:Id="1524" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1857</d3p1:Key>
        <d3p1:Value z:Id="1525">
          <Address z:Ref="561" i:nil="true" />
          <DefaultValues z:Id="1526" z:Size="1">
            <d3p1:anyType z:Ref="247" i:nil="true" />
          </DefaultValues>
          <Id>1857</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1883</d3p1:Key>
        <d3p1:Value z:Id="1527">
          <Address z:Id="1528">
            <ArrayCount>1</ArrayCount>
            <Location>6318</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1529" z:Size="1">
            <d3p1:anyType z:Id="1530" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1883</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1884</d3p1:Key>
        <d3p1:Value z:Id="1531">
          <Address z:Id="1532">
            <ArrayCount>1</ArrayCount>
            <Location>6322</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1533" z:Size="1">
            <d3p1:anyType z:Id="1534" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1884</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2051</d3p1:Key>
        <d3p1:Value z:Id="1535">
          <Address z:Ref="567" i:nil="true" />
          <DefaultValues z:Id="1536" z:Size="1">
            <d3p1:anyType z:Ref="255" i:nil="true" />
          </DefaultValues>
          <Id>2051</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2033</d3p1:Key>
        <d3p1:Value z:Id="1537">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1538" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>2033</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2030</d3p1:Key>
        <d3p1:Value z:Id="1539">
          <Address z:Id="1540">
            <ArrayCount>1</ArrayCount>
            <Location>6324</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1541" z:Size="1">
            <d3p1:anyType z:Id="1542" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2030</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1860</d3p1:Key>
        <d3p1:Value z:Id="1543">
          <Address z:Ref="642" i:nil="true" />
          <DefaultValues z:Id="1544" z:Size="1">
            <d3p1:anyType z:Ref="404" i:nil="true" />
          </DefaultValues>
          <Id>1860</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1887</d3p1:Key>
        <d3p1:Value z:Id="1545">
          <Address z:Id="1546">
            <ArrayCount>1</ArrayCount>
            <Location>6328</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1547" z:Size="1">
            <d3p1:anyType z:Id="1548" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1887</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1888</d3p1:Key>
        <d3p1:Value z:Id="1549">
          <Address z:Id="1550">
            <ArrayCount>1</ArrayCount>
            <Location>6332</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1551" z:Size="1">
            <d3p1:anyType z:Id="1552" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1888</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2062</d3p1:Key>
        <d3p1:Value z:Id="1553">
          <Address z:Ref="570" i:nil="true" />
          <DefaultValues z:Id="1554" z:Size="1">
            <d3p1:anyType z:Ref="259" i:nil="true" />
          </DefaultValues>
          <Id>2062</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2059</d3p1:Key>
        <d3p1:Value z:Id="1555">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1556" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>2059</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2056</d3p1:Key>
        <d3p1:Value z:Id="1557">
          <Address z:Id="1558">
            <ArrayCount>1</ArrayCount>
            <Location>6334</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1559" z:Size="1">
            <d3p1:anyType z:Id="1560" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2056</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1863</d3p1:Key>
        <d3p1:Value z:Id="1561">
          <Address z:Ref="600" i:nil="true" />
          <DefaultValues z:Id="1562" z:Size="1">
            <d3p1:anyType z:Ref="343" i:nil="true" />
          </DefaultValues>
          <Id>1863</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1903</d3p1:Key>
        <d3p1:Value z:Id="1563">
          <Address z:Id="1564">
            <ArrayCount>1</ArrayCount>
            <Location>6338</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1565" z:Size="1">
            <d3p1:anyType z:Id="1566" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1903</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1904</d3p1:Key>
        <d3p1:Value z:Id="1567">
          <Address z:Id="1568">
            <ArrayCount>1</ArrayCount>
            <Location>6342</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1569" z:Size="1">
            <d3p1:anyType z:Id="1570" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1904</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2120</d3p1:Key>
        <d3p1:Value z:Id="1571">
          <Address z:Ref="624" i:nil="true" />
          <DefaultValues z:Id="1572" z:Size="1">
            <d3p1:anyType z:Ref="376" i:nil="true" />
          </DefaultValues>
          <Id>2120</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2117</d3p1:Key>
        <d3p1:Value z:Id="1573">
          <Address z:Ref="603" i:nil="true" />
          <DefaultValues z:Id="1574" z:Size="1">
            <d3p1:anyType z:Ref="347" i:nil="true" />
          </DefaultValues>
          <Id>2117</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2114</d3p1:Key>
        <d3p1:Value z:Id="1575">
          <Address z:Id="1576">
            <ArrayCount>1</ArrayCount>
            <Location>6344</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1577" z:Size="1">
            <d3p1:anyType z:Id="1578" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2114</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2136</d3p1:Key>
        <d3p1:Value z:Id="1579">
          <Address z:Ref="627" i:nil="true" />
          <DefaultValues z:Id="1580" z:Size="1">
            <d3p1:anyType z:Ref="380" i:nil="true" />
          </DefaultValues>
          <Id>2136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2132</d3p1:Key>
        <d3p1:Value z:Id="1581">
          <Address z:Id="1582">
            <ArrayCount>1</ArrayCount>
            <Location>6348</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1583" z:Size="1">
            <d3p1:anyType z:Id="1584" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2133</d3p1:Key>
        <d3p1:Value z:Id="1585">
          <Address z:Id="1586">
            <ArrayCount>1</ArrayCount>
            <Location>6352</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1587" z:Size="1">
            <d3p1:anyType z:Id="1588" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1987</d3p1:Key>
        <d3p1:Value z:Id="1589">
          <Address z:Ref="483" i:nil="true" />
          <DefaultValues z:Id="1590" z:Size="1">
            <d3p1:anyType z:Ref="88" i:nil="true" />
          </DefaultValues>
          <Id>1987</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1983</d3p1:Key>
        <d3p1:Value z:Id="1591">
          <Address z:Id="1592">
            <ArrayCount>1</ArrayCount>
            <Location>6354</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1593" z:Size="1">
            <d3p1:anyType z:Id="1594" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1983</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1984</d3p1:Key>
        <d3p1:Value z:Id="1595">
          <Address z:Id="1596">
            <ArrayCount>1</ArrayCount>
            <Location>6358</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1597" z:Size="1">
            <d3p1:anyType z:Id="1598" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1984</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2873</d3p1:Key>
        <d3p1:Value z:Id="1599">
          <Address z:Ref="615" i:nil="true" />
          <DefaultValues z:Id="1600" z:Size="1">
            <d3p1:anyType z:Ref="364" i:nil="true" />
          </DefaultValues>
          <Id>2873</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2876</d3p1:Key>
        <d3p1:Value z:Id="1601">
          <Address z:Id="1602">
            <ArrayCount>1</ArrayCount>
            <Location>6360</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1603" z:Size="1">
            <d3p1:anyType z:Id="1604" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2876</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2877</d3p1:Key>
        <d3p1:Value z:Id="1605">
          <Address z:Id="1606">
            <ArrayCount>1</ArrayCount>
            <Location>6364</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1607" z:Size="1">
            <d3p1:anyType z:Id="1608" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2877</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2884</d3p1:Key>
        <d3p1:Value z:Id="1609">
          <Address z:Ref="657" i:nil="true" />
          <DefaultValues z:Id="1610" z:Size="1">
            <d3p1:anyType z:Ref="438" i:nil="true" />
          </DefaultValues>
          <Id>2884</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2880</d3p1:Key>
        <d3p1:Value z:Id="1611">
          <Address z:Id="1612">
            <ArrayCount>1</ArrayCount>
            <Location>6366</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1613" z:Size="1">
            <d3p1:anyType z:Id="1614" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2880</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2881</d3p1:Key>
        <d3p1:Value z:Id="1615">
          <Address z:Id="1616">
            <ArrayCount>1</ArrayCount>
            <Location>6370</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1617" z:Size="1">
            <d3p1:anyType z:Id="1618" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2881</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2895</d3p1:Key>
        <d3p1:Value z:Id="1619">
          <Address z:Ref="642" i:nil="true" />
          <DefaultValues z:Id="1620" z:Size="1">
            <d3p1:anyType z:Ref="404" i:nil="true" />
          </DefaultValues>
          <Id>2895</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2887</d3p1:Key>
        <d3p1:Value z:Id="1621">
          <Address z:Id="1622">
            <ArrayCount>1</ArrayCount>
            <Location>6372</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1623" z:Size="1">
            <d3p1:anyType z:Id="1624" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2887</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2888</d3p1:Key>
        <d3p1:Value z:Id="1625">
          <Address z:Id="1626">
            <ArrayCount>1</ArrayCount>
            <Location>6376</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1627" z:Size="1">
            <d3p1:anyType z:Id="1628" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2888</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2898</d3p1:Key>
        <d3p1:Value z:Id="1629">
          <Address z:Ref="645" i:nil="true" />
          <DefaultValues z:Id="1630" z:Size="1">
            <d3p1:anyType z:Ref="408" i:nil="true" />
          </DefaultValues>
          <Id>2898</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2891</d3p1:Key>
        <d3p1:Value z:Id="1631">
          <Address z:Id="1632">
            <ArrayCount>1</ArrayCount>
            <Location>6378</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1633" z:Size="1">
            <d3p1:anyType z:Id="1634" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2891</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2892</d3p1:Key>
        <d3p1:Value z:Id="1635">
          <Address z:Id="1636">
            <ArrayCount>1</ArrayCount>
            <Location>6382</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1637" z:Size="1">
            <d3p1:anyType z:Id="1638" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2892</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
    </Items>
  </MemoryMapStore>
  <MinimalIdeVersionForSharedLibrary xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="1639">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>0</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </MinimalIdeVersionForSharedLibrary>
  <Name z:Id="1640">Отопленок</Name>
  <PawnConfig z:Id="1641">
    <CompilerVersion>Version2</CompilerVersion>
    <MaxExecTime>500</MaxExecTime>
    <Mode>FreeRun</Mode>
    <Periodic>300</Periodic>
    <StackSize>1024</StackSize>
  </PawnConfig>
  <ProgramPartsCollection xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="1642" z:Size="7">
    <d2p1:anyType z:Id="1643" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="1644" z:Size="3">
        <d2p1:anyType z:Id="1645" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="1646" z:Size="6">
            <FBDConnector z:Id="1647">
              <EndFBDPort z:Id="1648" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1649" z:Size="1">
                  <FBDPortExtSettings z:Id="1650">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1651" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1652">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1653" i:type="OutputFBDPort">
                <Alias z:Id="1654">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>108</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1655" z:Size="1">
                  <FBDPortExtSettings z:Id="1656">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1651" i:nil="true" />
                <VariableName z:Id="1657">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1658">
              <EndFBDPort z:Id="1659" i:type="InputFBDPort">
                <Alias z:Id="1660">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>103</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1661" z:Size="1">
                  <FBDPortExtSettings z:Id="1662">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="1663" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1664">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1665" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>115</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1666" z:Size="1">
                  <FBDPortExtSettings z:Id="1667">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="1663" i:nil="true" />
                <VariableName z:Id="1668">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1669">
              <EndFBDPort z:Id="1670" i:type="InputFBDPort">
                <Alias z:Id="1671">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1672" z:Size="1">
                  <FBDPortExtSettings z:Id="1673">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="1674" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1675">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1676" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>118</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1677" z:Size="1">
                  <FBDPortExtSettings z:Id="1678">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="1674" i:nil="true" />
                <VariableName z:Ref="1668" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1679">
              <EndFBDPort z:Id="1680" i:type="InputFBDPort">
                <Alias z:Id="1681">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1916</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1682" z:Size="1">
                  <FBDPortExtSettings z:Id="1683">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="1674" i:nil="true" />
                <VariableName z:Id="1684">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="1676" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="1685">
              <EndFBDPort z:Id="1686" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1925</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1687" z:Size="1">
                  <FBDPortExtSettings z:Id="1688">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1689" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1690">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1691" i:type="OutputFBDPort">
                <Alias z:Id="1692">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1917</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1693" z:Size="1">
                  <FBDPortExtSettings z:Id="1694">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1689" i:nil="true" />
                <VariableName z:Id="1695">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1696">
              <EndFBDPort z:Id="1697" i:type="InputFBDPort">
                <Alias z:Id="1698">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1912</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1699" z:Size="1">
                  <FBDPortExtSettings z:Id="1700">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="1701" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1702">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1703" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1922</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1704" z:Size="1">
                  <FBDPortExtSettings z:Id="1705">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="1701" i:nil="true" />
                <VariableName z:Id="1706">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="1707" z:Size="9">
            <FBDItem z:Id="1708" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>116</Id>
              <InputPortsCollection z:Id="1709" z:Size="1">
                <FBDPort z:Id="1710" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>117</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1711" z:Size="1">
                    <FBDPortExtSettings z:Id="1712">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1652" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1713" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="1714">Tag</Name>
              <OutputPortsCollection z:Id="1715" z:Size="1">
                <FBDPort z:Ref="1676" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1716">_</Prefix>
              <SecondName z:Ref="1714" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="228" i:nil="true" />
              <InputFBDPort z:Ref="1710" i:nil="true" />
              <OutputFBDPort z:Ref="1676" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1717" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>113</Id>
              <InputPortsCollection z:Id="1718" z:Size="1">
                <FBDPort z:Id="1719" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1720" z:Size="1">
                    <FBDPortExtSettings z:Id="1721">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1652" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1722" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="1714" i:nil="true" />
              <OutputPortsCollection z:Id="1723" z:Size="1">
                <FBDPort z:Ref="1665" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1716" i:nil="true" />
              <SecondName z:Ref="1714" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="224" i:nil="true" />
              <InputFBDPort z:Ref="1719" i:nil="true" />
              <OutputFBDPort z:Ref="1665" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1724" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="1725">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>102</Id>
              <InputPortsCollection z:Id="1726" z:Size="5">
                <FBDPort z:Ref="1659" i:nil="true" />
                <FBDPort z:Id="1727" i:type="InputFBDPort">
                  <Alias z:Id="1728">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>104</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1729" z:Size="1">
                    <FBDPortExtSettings z:Id="1730">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1731">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="1732" i:type="InputFBDPort">
                  <Alias z:Id="1733">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1734" z:Size="1">
                    <FBDPortExtSettings z:Id="1735">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1736">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="1737" i:type="InputFBDPort">
                  <Alias z:Id="1738">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1739" z:Size="1">
                    <FBDPortExtSettings z:Id="1740">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1741" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1742" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1743">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1670" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1744" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3690</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Id="1745">SerialPortParam</Name>
              <OutputPortsCollection z:Id="1746" z:Size="1">
                <FBDPort z:Ref="1653" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1747">YART</Prefix>
              <SecondName z:Ref="1745" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Id="1748">// Ограничение на входящие значение с применением значения по умолчанию, если это необходимо


if(Port &lt; 1 || Port &gt; 3) Port = 2;					// значение по умолчанию: 2


//if(DataBits &lt; 0 || DataBits &gt; 3) DataBits = 0;	// параметр временно не используется; значение по умолчанию: 0 


DataBits = 0;										// принудительная установка в 0


if(Parity &lt; 0 || Parity &gt; 2) Parity = 0;			// значение по умолчанию: 0


if(StopBits &lt; 0 || StopBits &gt; 2) StopBits = 0;		// значение по умолчанию: 0


if(Baudrate &lt; 1) Baudrate = 4;


if(Baudrate &gt; 8) Baudrate = 8;						// принудительная установка при превышении допустимой скорости





// Допустимые значения DataBits:


// 0 = 8


// 1 = 7


// 2 = 6


// 3 = 5





// Допустимые значения Parity:


// 0 = N


// 1 = O


// 2 = E


// 3 = M


// 4 = S





// Допустимые значения StopBits:


// 0 = 1


// 1 = 2


// 2 = 1.5





// Допустимые значения Baudrate:


// 1 =   1200


// 2 =   2400


// 3 =   4800


// 4 =   9600


// 5 =  19200


// 6 =  38400


// 7 =  57600


// 8 = 115200





// Формирование результата


PortPar = (Baudrate &lt;&lt; 12) | (StopBits &lt;&lt; 10) | (Parity &lt;&lt; 7) | (DataBits &lt;&lt; 4) | Port;</Code>
            </FBDItem>
            <FBDItem z:Id="1749" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>110</Id>
              <InputPortsCollection z:Id="1750" z:Size="1">
                <FBDPort z:Ref="1648" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1751" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3850</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="1714" i:nil="true" />
              <OutputPortsCollection z:Id="1752" z:Size="1">
                <FBDPort z:Id="1753" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1754" z:Size="1">
                    <FBDPortExtSettings z:Id="1755">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1756" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="1668" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1716" i:nil="true" />
              <SecondName z:Ref="1714" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="216" i:nil="true" />
              <InputFBDPort z:Ref="1648" i:nil="true" />
              <OutputFBDPort z:Ref="1753" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1757" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1920</Id>
              <InputPortsCollection z:Id="1758" z:Size="1">
                <FBDPort z:Id="1759" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1921</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1760" z:Size="1">
                    <FBDPortExtSettings z:Id="1761">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1690" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1762" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Id="1763">Tag</Name>
              <OutputPortsCollection z:Id="1764" z:Size="1">
                <FBDPort z:Ref="1703" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1765">_</Prefix>
              <SecondName z:Ref="1763" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="352" i:nil="true" />
              <InputFBDPort z:Ref="1759" i:nil="true" />
              <OutputFBDPort z:Ref="1703" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1766" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="1767">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>1911</Id>
              <InputPortsCollection z:Id="1768" z:Size="5">
                <FBDPort z:Ref="1697" i:nil="true" />
                <FBDPort z:Id="1769" i:type="InputFBDPort">
                  <Alias z:Id="1770">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1913</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1771" z:Size="1">
                    <FBDPortExtSettings z:Id="1772">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1773">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="1774" i:type="InputFBDPort">
                  <Alias z:Id="1775">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1914</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1776" z:Size="1">
                    <FBDPortExtSettings z:Id="1777">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1778">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="1779" i:type="InputFBDPort">
                  <Alias z:Id="1780">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1915</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1781" z:Size="1">
                    <FBDPortExtSettings z:Id="1782">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1783">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1680" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1784" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3720</d8p1:_x>
                <d8p1:_y>3950</d8p1:_y>
              </Location>
              <Name z:Id="1785">SerialPortParam</Name>
              <OutputPortsCollection z:Id="1786" z:Size="1">
                <FBDPort z:Ref="1691" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1787">YART</Prefix>
              <SecondName z:Ref="1785" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Ref="1748" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1788" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1924</Id>
              <InputPortsCollection z:Id="1789" z:Size="1">
                <FBDPort z:Ref="1686" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1790" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Ref="1763" i:nil="true" />
              <OutputPortsCollection z:Id="1791" z:Size="1">
                <FBDPort z:Id="1792" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1926</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1793" z:Size="1">
                    <FBDPortExtSettings z:Id="1794">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1795" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="1706" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1765" i:nil="true" />
              <SecondName z:Ref="1763" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="356" i:nil="true" />
              <InputFBDPort z:Ref="1686" i:nil="true" />
              <OutputFBDPort z:Ref="1792" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1796" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>119</Id>
              <InputPortsCollection z:Id="1797" z:Size="0" />
              <InternalPortsCollection z:Id="1798" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="1799">comment</Name>
              <OutputPortsCollection z:Id="1800" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="1716" i:nil="true" />
              <SecondName z:Id="1801">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="1802">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</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
            <FBDItem z:Id="1803" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1918</Id>
              <InputPortsCollection z:Id="1804" z:Size="0" />
              <InternalPortsCollection z:Id="1805" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Id="1806">comment</Name>
              <OutputPortsCollection z:Id="1807" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="1808">_</Prefix>
              <SecondName z:Id="1809">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="1810">UEsDBBQAAgAIAKFdfVE5YylrMQEAAP4BAAARAAAAZG9jUHJvcHMvY29yZS54bWxtkd9KwzAUxl+l5L5N0oGboesuFK8UBAeKdyE924rLH5JsnXfiK+ijKExUfIXsSXwF286VDXaXL9/vO/Cd8/v5k41Wch4twbpSqyGiCUERKKGLUk2HaOEn8QCN8kwYJrSFa6sNWF+Ci+qYcqwQQzTz3jCMzcLOE22nuBAY5iBBeYdpQjHqWA9WuqOB1tkjZekfDRxFd2ZHr1zZgVVVJVWvRVNCKL67urwRM5A8LpXzXAnYpYTpQq4lXFJ3U7U50VZy79ohhosHPoVm2AmW4HnBPcfNKmLT7QLlWSGYsMC9tnl4DV9hvXnePIV1+IjCS/14D2+1+M7wHpf972P7AUVU92Db1jvntnd2Pr5AeUpoPyaDOD0dU8pIykj/vpl1kG+PZGFZNpfMaYb3ZasOL5j/AVBLAwQUAAIACAChXX1Reg7MU30CAAB5DwAAEQAAAHdvcmQvZG9jdW1lbnQueG1s7VfdbpswGH0V5HsCidIsQ4FqbaVpF9WiRX0ABwxYwz+yDTS76nq7Z9g7ZHfrJrWvQJ5krzCTBGjXqsvyK1XjIvZnPp/vHHMM8a+fd4PjS5IYGRISM+qCdssGBqI+CzCNXJCq0OyDY2+QOwHzU4KoMnQ+lU7uglgp7liW9GNEoGwxjqi+FzJBoNKhiKyciYAL5iMpNRxJrI5t9ywCMQUVDJePgAj2BZMsVC2fEYuFIfbRHEpPb9t/gI5iyFGFRvxVWBEoPqbc1OAcKjzGCVaTObOaVNvW0gV1liBmzaic5CwYOSWPakb2XH5GkkZuu7uZ3jMBc900gNFmeG8FS3mD9ngB/wntFNIMSmAQ33kXUSbgOEEuKFWD0kNjFkzKls9/hqJsxKJJII2M3Mlg4gKRmh8ugI7GOMD3QgSleiMxrIcsb2AtEawGcIuouTP3uyM59LUQLpBEIkPAK74W09nn2fXsqrgtboofxXdDd6fFt+JWD34xSgS1wHmOE6LmxajhVIcNp+XQQ07e6ftzc8USa8r2ijst5Wp2XUx3q+Xp9TVwt3/0oLBV2WZ33lmxxDpC/27PrS7fkAlluKu6cKs7o7Nr7zuHULVrUevafRMvvhy7n0EFT7CSO7e8Z+/7Ie3rhQGF/hdklNdhXhu2rnyQD42+HMPo0/YLfbIjxfhB90aZtuzvRfAJTAMBFTqQkbv/v39riHrds5+2j0S+WiZNOKrKUHSphjBCYGmuaPRJ39Jn0n6vc1TWi13Q6XbnXX2W1VLsOvUcCj2aoFDp465dZggcxXWgt0vVHTOlGKmiGMEACRe8svtlGDKm7oVRquahXUmriFvVscdqztDeb1BLAwQUAAIACAChXX1RVsu7UN8CAACXCgAADwAAAHdvcmQvc3R5bGVzLnhtbN1WwW7cIBD9FYt7Y+8qqqJVnCjZKkqlNF01Ue7YYJsuBgQ4TvprPfST+gsdMGx27W1SqdtLffHwgDfDvGHsn99/nJ4/tTx5pNowKXI0O8pQQkUpCRN1jjpbvTtB52en/cLYZ05NAquFWfQ5aqxVizQ1ZUNbbI6kogLmKqlbbGGo67SXmigtS2oMkLU8nWfZ+7TFTCBHSGT5gVa449a4oV7pMAwj/7qSwpqkX2BTMpajJeas0AwB0lwIs42kbn0BE4+Y5ygLABsDJVZmjBmr2ZqOUSFXWspqDD9iwUwzoZVc6gjizspI/S2C83mAuogIKWhc1pCIlpxi7Q7oKSNZv6gY36UGzewFZ7WIOwtsKGcbTo5F7aw0ZDMd51iNR+61plTd0ic7PqDDb4B8kjyFa3qpKV5fUhB/ksWeEdkvQUUteZybxVN3SmmoDsd727UFFOFEmj2JmWQi8lwAdP2sGiqmPAqXUIQAuwx96Th9yaxDQJ/jzA0Kfwq/EaquslQHe5hwLgLX9poxPNSeID5abeyNd+HXc1rZYGpWN3a7hoSFzHeY322i3TlEwciknr+WEXHEKAiuguDbEqeTK+evNGy3zwqiU1jjWmPVuND81EeSo5WPlAy7nHT+auB2I/Stu/E8FsNKD4YejDQwTb2VDbgrIXU73pZveQvhJ6sYbOI6RBSZtuyaEULF3wUxdev0S4YSjVrAZSOfN3dvmR04hvkkBqhsqqFW12jDPOk8GTxXV+NG49ovp2jUDH4Tj8WFW7sVy/2flUByP+z0vm3Bh/DAWFLOP+FhJBVs6kP9Dw7JE44dCyp4mJ5lJ/sWFNJa2b7C4G/UKxTpbkDpdqA61q4t39JsT46mWfHpSO5Yq+A1218299mefF3CdxNa4Uu+dkR035QcHXsD2kRsK6bB0GjDoNIQR7DDZyTzz26iD8670efgzFHYgxMz+Isg9PrfUT8cnjqdlMn/cMmiZc5+AVBLAwQUAAIACAChXX1RCATmC3MAAAB/AAAAEgAAAHdvcmQvbnVtYmVyaW5nLnhtbA2LQQ7CIBAAv0K4W9CDMaS0b0G6bUm6u4Sl4t88+CS/IMeZyfw+33F+46FeUCQxeX0drFZAkZdEm9dnXS8PPU9jc3TiE0q3qg8krnm915qdMRJ3wCADZ6DeVi4YaseymcZlyYUjiPQTD3Oz9m4wJNLKTH9QSwMEFAACAAgAoV19Ubx+5jZVAQAAlAIAABEAAAB3b3JkL3NldHRpbmdzLnhtbGWSTW6DMBCFrxJ53xDITysUErWrbKIu6AUGewArxrZsE8rZuuiReoUaiEWb7Ga+92bGM/LP1/f++NmIxRWN5UpmJF6uyAIlVYzLKiOtK59eyPGw71KLznlmF94vbdplpHZOp1FkaY0N2KXSKL1WKtOA86mpok4Zpo2iaK0vbUSUrFa7qAEuydCScasF9G9AL5VRrWR5DRoXXXoFkRH/kGh0YQmtcB9Q5E7poD4nQYfWqVOva5Tg/A735XhF+SrZO2MnBOb3vDdQ1Whwc5RPi3qbhAYzMlFecMFdf1YMiZdawx8O0HBqlFWlW/qSSJUlpziegISRcTLOjP4NFSYfGuAZtJ7mFlWcEcGr2sVDqfMZA3MZk6JKbloyasmkjQlQinJw34KZJYH98a0DW89sE9hmZtvAtjPbBbYbWN1rNILLiz9JCAdeKiFUh+w06w8oHCR8r8MvUEsDBBQAAgAIAKFdfVFtUt6/nwUAAP0bAAAVAAAAd29yZC90aGVtZS90aGVtZTEueG1s7VlPb9s2FP8qhO6tLFtynaBuETt2uzVpg8Tr0CMt0xJrShRIOqlvQ3scMGBYN+wyYLcdhm0BWmCHZdiHydZh64B8hVG0LFE21SRNVmxYfLBF6vfe7/3heyLlk59+uXn7SUTAPmIc07htOddrFkCxT0c4DtrWVIyvtazbt27CdRGiCAEJjvk6bFuhEMm6bXNfTkN+nSYolvfGlEVQyCEL7BGDB1JJROx6rda0I4hjC8QwQm3rwXiMfQQGqUorV94j8isWPJ3wCdvzFaMuobCjiZP+8BnvEgb2IWlbkmdEDwboibAAgVzIG22rpj4WsG/dtHMpIiqENcG++iwEM4nRpK4EWTDMJZ2+u3Zjs2CozxlWgb1er9tzCo0KAX1feuusgN1+y+nkWjXU/HJVe7fm1dwlAY2hsSKw1ul0vLWyQKMQcFcEWrWmu1EvC7iFgLfqQ2ej222WBbxCoLki0L+x1nSXBBQqJDierMDTzBYpyjFjSu4a8S2Jb+VroYDZ2kqbK4hF1bqL4GPK+hKgsgwFjoGYJWgMfYnrwmjIMFQMcB1B7VY25/PVuZQOcJ/hRLSt9xMoC6TAnBx9d3L0ApwcHR4/fXn89MfjZ8+On/5gkrwL40CXfP3Np3999RH488XXr59/XiHAdYHfvv/4158/q0AKHfnqi8PfXx6++vKTP759bsJvMDjU8QMcIQ7uowOwS6PUPwMFGrJzigxCiEsiMJRQE7InwhLy/gwSI7CDyjF8yGRbMCLvTB+X7N0L2VRgE/JeGJWQ25SSDmVmn+4pOs2naRxU8LOpDtyFcN9I313Kcm+ayJWNjUq7ISqZukNk4mGAYiRAeo9OEDLJPcK4FN9t7DPK6ViARxh0IDYHZoCHwix1F0cyQTOjjTLrpQhtPwQdSowEm2i/DJUVAolRKSKlaN6BUwEjs9UwIjp0C4rQaOjejPmlwHMhkx4gQkFvhDg3Cj1gs5LJ96BsUeYVsE1mURnKBJ4YoVuQUh26SSfdEEaJ2W4chzr4PT6RKxaCHSrMdtByzaRjmRAYV2f+IUbinMX+AQ5C82JJ70yZsUYQLdfojIwhihcPgFIrj3D8pr5OsGzsV319qa9vyIedsZ6Wu3kl8D/awzfhNN5BaZ1ctfCrFn7Vwt9Q4f9E4y56ta3v1pWeqHLrPsaE7IkZQVtcdXkuXRz15aQaKKH8qJCE8nLBVwIGDKprwKj4EItwL4SJ5HEURcAz3QEHCeXyiGJVKlcnXiy9VnNefkyVcCi26Wg+3yidX3NFahRwnaqRqjgrXePGRemcOfKMfI5Xwee9mc/WYirLCMD0fYTTrGdmch8SNEqjP1ctMEG7yBeZvkWuLj1vPIQjlCXOMXvmNM4aydbpgdT41hoX5TtL5nRCt4rQu4zU1U5Lnb1auSQuj8CBNNOrexbwo0Tq5Gk7gySI25YvModOLfZltytWrFOrdrtEkjAuNiEP52LqVv7uJy7srntuqu4Chpu61BnJGy3n3ZPbywlE47FMfMVMMczu0alAbC8cHYAhmbJdKC1350tqhLl8eNQXAyaL081WW7nos8W//C4pKwpIkhBm7aml53qOV9e5EWqk2WdXGP+WvjQu0Rfv/+xLunzlJrgxUqc1uTVgEKTrtG1RJkIq200SYr/P5GZCkUnDgDwGqv5E0nfiqbFof9Gv7IWSeXcLQrGLA8CwbHEiZAjtiMzTU7Q5i3aYlUemKestucE8mf8O0T4ig7Rym2kILBDmDSSLhQIuJ8421dgw6P+bN0Ru1YbolB1DQeWeZ4Pi6u1eewqsXdSKcz5t6xVu172zP20TeZ4B6Zds5Jj5pNj+Dqh6xBb7Tbkkr7WyUswnh9Lqlu5fqutdbq+KtLSqVsGl7lO1+Deq4n8K4dvH3zOE3ztX9O3VYra1k5AaLf23tpi59TdQSwMEFAACAAgAoV19UUM1JiTXAAAAvgEAAAsAAABfcmVscy8ucmVsc52RTU4DMQxGrxJ53/HQQQWhphWCDTtUcQEr8cxEbX6UuC2crQuOxBUICKEWFQmxtP35+UV5O7zOl89+o3aci4tBw0XTguJgonVh0LCVfnINy8V8xRuSmiijS0XVlVA0jCLpBrGYkT2VJiYOddLH7ElqmQdMZNY0ME7bdob5mAGnTPVgNay66d1Vd3nbgXp6SfyXA7HvneH7aLaeg5y58yNRyZQHFg24j9mi/eo3lQsKz0iZmPkfYr+/HD0LWRLCD/Qk5bqdxXE5cqtaj7VfPiPfbnjyC4t3UEsDBBQAAgAIAKFdfVFNu4E6MgEAABMEAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbLWTTU7DMBCFr2J5WyVuWSCEmnYBbKELLmCcSWsR/8gzKe3ZWHAkrsAkabNApS2ibCI58977ni378/1jOt+4WqwhoQ2+kJN8LAV4E0rrl4VsqMpu5Hw2fd5GQMFSj4VcEcVbpdCswGnMQwTPkyokp4mXaamiNq96CepqPL5WJngCTxm1GXI2vYdKNzWJhw3/7rEJapTirhe2rELqGGtrNPFcrX35jZLtCDk7Ow2ubMQRC6RQBxHd6EfC3vjEJ5FsCWKhEz1qxzL1FlKpymAax9b8eM6BpqGqrIHB36bFFAwg8hG7Oh8mTls/OlnEN+4FElsv32SIPt0CaVsDXr5Cn3sGH4jY8R8NdslHO7B9kUJEvtsJft9hf3lbd8b0CInsOdsmfnHQfyd/3noXMzBV98RnX1BLAwQUAAIACAChXX1RzO5/zOIAAACxAgAAHAAAAHdvcmQvX3JlbHMvZG9jdW1lbnQueG1sLnJlbHOtkktuAjEMhq8Sed/JTBdVVRHYsOmmi8IF0uB5qJOHYk9VzsaCI3EFTEE8JIS6mKX/OJ8/OdlttpPZr+/VD2bqYjBQFSUoDC6uutAYGLh+eoXZdPKJvWXpoLZLpORKIAMtc3rTmlyL3lIREwY5qWP2lqXMjU7WfdsG9XNZvuh8zYBbpnpfGZBgweseK1DLdcL/DIh13TmcRzd4DHxnjqYDkYRoc4Ns4FgXwgGl70t8DH5UhTD4L8yy0IvFOXooskBm6aFxF3KCXq3klDx0WcrIcV+GD8SLxV95DKuzib75eNM9UEsBAhQAFAACAAgAoV19UTljKWsxAQAA/gEAABEAAAAAAAAAAAAAAAAAAAAAAGRvY1Byb3BzL2NvcmUueG1sUEsBAhQAFAACAAgAoV19UXoOzFN9AgAAeQ8AABEAAAAAAAAAAAAAAAAAYAEAAHdvcmQvZG9jdW1lbnQueG1sUEsBAhQAFAACAAgAoV19UVbLu1DfAgAAlwoAAA8AAAAAAAAAAAAAAAAADAQAAHdvcmQvc3R5bGVzLnhtbFBLAQIUABQAAgAIAKFdfVEIBOYLcwAAAH8AAAASAAAAAAAAAAAAAAAAABgHAAB3b3JkL251bWJlcmluZy54bWxQSwECFAAUAAIACAChXX1RvH7mNlUBAACUAgAAEQAAAAAAAAAAAAAAAAC7BwAAd29yZC9zZXR0aW5ncy54bWxQSwECFAAUAAIACAChXX1RbVLev58FAAD9GwAAFQAAAAAAAAAAAAAAAAA/CQAAd29yZC90aGVtZS90aGVtZTEueG1sUEsBAhQAFAACAAgAoV19UUM1JiTXAAAAvgEAAAsAAAAAAAAAAAAAAAAAEQ8AAF9yZWxzLy5yZWxzUEsBAhQAFAACAAgAoV19UU27gToyAQAAEwQAABMAAAAAAAAAAAAAAAAAERAAAFtDb250ZW50X1R5cGVzXS54bWxQSwECFAAUAAIACAChXX1RzO5/zOIAAACxAgAAHAAAAAAAAAAAAAAAAAB0EQAAd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsc1BLBQYAAAAACQAJAEECAACQEgAAAAA=</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="1811">RS485_Setup</Name>
          <Parent z:Ref="1643" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>1</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="1812" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="1813" z:Size="4">
            <FBDConnector z:Id="1814">
              <EndFBDPort z:Id="1815" i:type="InputFBDPort">
                <Alias z:Id="1816">Write</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1198</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1817" z:Size="1">
                  <FBDPortExtSettings z:Id="1818">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="1819" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="1820" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="1821">write</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1822" i:type="OutputFBDPort">
                <Alias z:Id="1823">Выход 5254</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1191</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1824" z:Size="1">
                  <FBDPortExtSettings z:Id="1825">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="1819" i:nil="true" />
                <VariableName z:Id="1826">PULSE</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1827">
              <EndFBDPort z:Id="1828" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1197</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1829" z:Size="1">
                  <FBDPortExtSettings z:Id="1830">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value i:nil="true" />
                <VariableName z:Id="1831">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1832" i:type="OutputFBDPort">
                <Alias z:Id="1833"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1202</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1834" z:Size="1">
                  <FBDPortExtSettings z:Id="1835">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="1836" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="1837" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="1838">out_180</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1839">
              <EndFBDPort z:Id="1840" i:type="InputFBDPort">
                <Alias z:Id="1841">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1189</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1842" z:Size="1">
                  <FBDPortExtSettings z:Id="1843">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="1844">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1845" i:type="OutputFBDPort">
                <Alias z:Id="1846"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1187</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1847" z:Size="1">
                  <FBDPortExtSettings z:Id="1848">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="1849" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="1850" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1000</d2p1:anyType>
                </Value>
                <VariableName z:Id="1851">out_161</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1852">
              <EndFBDPort z:Id="1853" i:type="InputFBDPort">
                <Alias z:Id="1854">Вход 5252</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1190</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1855" z:Size="1">
                  <FBDPortExtSettings z:Id="1856">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="1857" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="1858" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="1859">EN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1860" i:type="OutputFBDPort">
                <Alias z:Id="1861">Выход 117</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1182</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1862" z:Size="1">
                  <FBDPortExtSettings z:Id="1863">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="1857" i:nil="true" />
                <VariableName z:Id="1864">Ok</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="1865" z:Size="6">
            <FBDItem z:Id="1866" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1201</Id>
              <InputPortsCollection z:Id="1867" z:Size="0" />
              <InternalPortsCollection z:Id="1868" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3820</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="1869" z:Size="1">
                <FBDPort z:Ref="1832" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1870">_</Prefix>
              <SecondName z:Id="1871">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="1836" i:nil="true" />
              <OutputFBDPort z:Ref="1832" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1872" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1186</Id>
              <InputPortsCollection z:Id="1873" z:Size="0" />
              <InternalPortsCollection z:Id="1874" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="1875" z:Size="1">
                <FBDPort z:Ref="1845" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1876">_</Prefix>
              <SecondName z:Id="1877">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="1849" i:nil="true" />
              <OutputFBDPort z:Ref="1845" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1878" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="1879">Статус подключения к серверу телеметрии</Description>
              <HelpID>714</HelpID>
              <Id>1180</Id>
              <InputPortsCollection z:Id="1880" z:Size="0" />
              <InternalPortsCollection z:Id="1881" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="1882">Telemetry State</Name>
              <OutputPortsCollection z:Id="1883" z:Size="5">
                <FBDPort z:Id="1884" i:type="OutputFBDPort">
                  <Alias z:Id="1885">Выход 112</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1181</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1886" z:Size="1">
                    <FBDPortExtSettings z:Id="1887">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1888" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1889" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1890">Init</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1860" i:nil="true" />
                <FBDPort z:Id="1891" i:type="OutputFBDPort">
                  <Alias z:Id="1892">Выход 113</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1183</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1893" z:Size="1">
                    <FBDPortExtSettings z:Id="1894">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1895" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1896" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1897">Error</VariableName>
                </FBDPort>
                <FBDPort z:Id="1898" i:type="OutputFBDPort">
                  <Alias z:Id="1899">Выход 15051</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1184</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1900" z:Size="1">
                    <FBDPortExtSettings z:Id="1901">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1902" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1903" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">4</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1904">LastErr</VariableName>
                </FBDPort>
                <FBDPort z:Id="1905" i:type="OutputFBDPort">
                  <Alias z:Id="1906">Выход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1185</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1907" z:Size="1">
                    <FBDPortExtSettings z:Id="1908">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1909" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1910" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">6</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1911">State</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1912">YART</Prefix>
              <SecondName z:Id="1913">TeleState</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ad2295d-eb4d-4b18-9a03-4145c7b12a45</SpecificationId>
              <Code z:Id="1914">new state_tmp = get_short(MQTT_STATE);


State = state_tmp;


Init = state_tmp == 0;


Error= state_tmp != 0 &amp;&amp; state_tmp!=6;


Ok = state_tmp == 6;





/*


Last state (addr 366)


enum {


  MQTT_LST_INIT=0,


  MQTT_LST_WRONG_MODE_PTR,


  MQTT_LST_WRONG_MODE_CONTENTS,


  MQTT_LST_INCORRECT_MODE,


  MQTT_LST_CANT_CONNECT_IP,


  MQTT_LST_CANT_AUTHORIZE,


  MQTT_LST_CANT_SUBSCRIBE,


  MQTT_LST_DESCRIPTION_ERROR,


  MQTT_LST_RUN_TIME_ERROR,


  MQTT_LST_USER_RESET,


  MQTT_LST_PUBLISH_ERROR


};


*/





LastErr = get_short(MQTT_LAST_ERR);</Code>
            </FBDItem>
            <FBDItem z:Id="1915" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="1916">Генерация импульсов с заданной периодичностью</Description>
              <HelpID>16</HelpID>
              <Id>1188</Id>
              <InputPortsCollection z:Id="1917" z:Size="2">
                <FBDPort z:Ref="1840" i:nil="true" />
                <FBDPort z:Ref="1853" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1918" z:Size="1">
                <FBDPort z:Id="1919" i:type="InternalFBDPort">
                  <Alias z:Id="1920">Внутренняя 5256</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1194</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1921" z:Size="1">
                    <FBDPortExtSettings z:Id="1922">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1923">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="1924">PULSE GENERATOR</Name>
              <OutputPortsCollection z:Id="1925" z:Size="3">
                <FBDPort z:Ref="1822" i:nil="true" />
                <FBDPort z:Id="1926" i:type="OutputFBDPort">
                  <Alias z:Id="1927">ELAPSED</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1192</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1928" z:Size="1">
                    <FBDPortExtSettings z:Id="1929">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="1930" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1931" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">425</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1932">COUNTER</VariableName>
                </FBDPort>
                <FBDPort z:Id="1933" i:type="OutputFBDPort">
                  <Alias z:Id="1934">Выход 5255</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1193</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1935" z:Size="1">
                    <FBDPortExtSettings z:Id="1936">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1937" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1938" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1939">ENO</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1940">YART</Prefix>
              <SecondName z:Id="1941">PULSEGENERATOR</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3c324fa4-d4d4-48e7-95af-5ff85ab56d15</SpecificationId>
              <Code z:Id="1942">//#PULSE GENERATOR (Генератор импульсов)


if(!EN){


	COUNTER = 0; 


	tf = 0;


}else{


	if(COUNTER &gt;= PERIOD){


		PULSE = true;


		COUNTER -= PERIOD;


	}else{


		PULSE = false;


	}


	YARTAddScanTask(COUNTER, tf);


}


ENO = EN;</Code>
            </FBDItem>
            <FBDItem z:Id="1943" i:type="SetpointFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1196</Id>
              <InputPortsCollection z:Id="1944" z:Size="2">
                <FBDPort z:Ref="1828" i:nil="true" />
                <FBDPort z:Ref="1815" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1945" z:Size="1">
                <FBDPort z:Id="1946" i:type="InternalFBDPort">
                  <Alias z:Id="1947">writeStatus</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1200</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1948" z:Size="1">
                    <FBDPortExtSettings z:Id="1949">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1947" i:nil="true" />
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="1950">Tag</Name>
              <OutputPortsCollection z:Id="1951" z:Size="1">
                <FBDPort z:Id="1952" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1199</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1953" z:Size="1">
                    <FBDPortExtSettings z:Id="1954">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1955" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1956" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1957">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1958">_</Prefix>
              <SecondName z:Id="1959">__00__WriteSetpoint</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>59d31f4d-66d3-4778-a3c2-9315c0b02c9b</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="306" i:nil="true" />
              <InputFBDPort z:Ref="1828" i:nil="true" />
              <OutputFBDPort z:Ref="1952" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
              <InputWriteFBDPort z:Ref="1815" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1960" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1728</Id>
              <InputPortsCollection z:Id="1961" z:Size="1">
                <FBDPort z:Id="1962" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1729</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1963" z:Size="9">
                    <FBDPortExtSettings z:Id="1964">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1965">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1966">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1967">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1968">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1969">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1970">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1971">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1972">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1973">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1974" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name z:Id="1975">Tag</Name>
              <OutputPortsCollection z:Id="1976" z:Size="1">
                <FBDPort z:Id="1977" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1730</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1978" z:Size="9">
                    <FBDPortExtSettings z:Id="1979">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1980">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1981">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1982">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1983">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1984">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1985">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1986">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1987">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value z:Id="1988" i:type="d2p1:ArrayOfanyType" z:Size="9">
                    <d2p1:anyType z:Id="1989" i:type="z:char">56</d2p1:anyType>
                    <d2p1:anyType z:Id="1990" i:type="z:char">50</d2p1:anyType>
                    <d2p1:anyType z:Id="1991" i:type="z:char">52</d2p1:anyType>
                    <d2p1:anyType z:Id="1992" i:type="z:char">51</d2p1:anyType>
                    <d2p1:anyType z:Id="1993" i:type="z:char">53</d2p1:anyType>
                    <d2p1:anyType z:Id="1994" i:type="z:char">82</d2p1:anyType>
                    <d2p1:anyType z:Id="1995" i:type="z:char">83</d2p1:anyType>
                    <d2p1:anyType z:Id="1996" i:type="z:char">57</d2p1:anyType>
                    <d2p1:anyType z:Id="1997" i:type="z:char">56</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1998">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1999">_</Prefix>
              <SecondName z:Ref="1975" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="328" i:nil="true" />
              <InputFBDPort z:Ref="1962" i:nil="true" />
              <OutputFBDPort z:Ref="1977" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="2000">Publicator</Name>
          <Parent z:Ref="1643" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>5</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="2001" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2002" z:Size="14">
            <FBDConnector z:Id="2003">
              <EndFBDPort z:Id="2004" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2927</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2005" z:Size="8">
                  <FBDPortExtSettings z:Id="2006">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2007">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2008">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2009">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2010">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2011">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2012">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2013">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2014" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2015" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">19.1</d2p1:anyType>
                </Value>
                <VariableName z:Id="2016">FloatIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2017" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2901</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2018" z:Size="1">
                  <FBDPortExtSettings z:Id="2019">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2014" i:nil="true" />
                <VariableName z:Id="2020">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2021">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2022" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2904</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2023" z:Size="1">
                  <FBDPortExtSettings z:Id="2024">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2025" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2026" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">5</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2020" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2027">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2028" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2907</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2029" z:Size="1">
                  <FBDPortExtSettings z:Id="2030">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2031" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2032" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">21.0665</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2020" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2033">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2034" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2916</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2035" z:Size="1">
                  <FBDPortExtSettings z:Id="2036">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2037" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2038" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.54</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2020" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2039">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2040" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2919</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2041" z:Size="1">
                  <FBDPortExtSettings z:Id="2042">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2043" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2044" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2020" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2045">
              <EndFBDPort z:Id="2046" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2930</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2047" z:Size="1">
                  <FBDPortExtSettings z:Id="2048">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2049" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2050" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">3930</d2p1:anyType>
                </Value>
                <VariableName z:Id="2051">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2052" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2922</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2053" z:Size="1">
                  <FBDPortExtSettings z:Id="2054">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2049" i:nil="true" />
                <VariableName z:Ref="2020" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2055">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2056" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2931</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2057" z:Size="1">
                  <FBDPortExtSettings z:Id="2058">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2059" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2060" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">3930</d2p1:anyType>
                </Value>
                <VariableName z:Id="2061">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2062">
              <EndFBDPort z:Id="2063" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2940</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2064" z:Size="2">
                  <FBDPortExtSettings z:Id="2065">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2066">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2067" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2068" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="2069">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2070" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2913</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2071" z:Size="1">
                  <FBDPortExtSettings z:Id="2072">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2067" i:nil="true" />
                <VariableName z:Ref="2020" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2073">
              <EndFBDPort z:Ref="2063" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2070" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2074">
              <EndFBDPort z:Id="2075" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2944</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2076" z:Size="8">
                  <FBDPortExtSettings z:Id="2077">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2078">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2079">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2080">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2081">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2082">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2083">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2084">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2085" i:type="d2p1:ArrayOfanyType" z:Size="8">
                  <d2p1:anyType z:Id="2086" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">19.1</d2p1:anyType>
                  <d2p1:anyType z:Id="2087" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">5</d2p1:anyType>
                  <d2p1:anyType z:Id="2088" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">21.0682487</d2p1:anyType>
                  <d2p1:anyType z:Id="2089" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">250</d2p1:anyType>
                  <d2p1:anyType z:Id="2090" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.54</d2p1:anyType>
                  <d2p1:anyType z:Id="2091" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2092" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">3930</d2p1:anyType>
                  <d2p1:anyType z:Id="2093" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="2094">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2095" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2928</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2096" z:Size="8">
                  <FBDPortExtSettings z:Id="2097">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2098">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2099">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2100">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2101">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2102">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2103">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2104">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2085" i:nil="true" />
                <VariableName z:Id="2105">FloatOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2106">
              <EndFBDPort z:Id="2107" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2948</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2108" z:Size="2">
                  <FBDPortExtSettings z:Id="2109">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2110">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2111" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="2112" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2113" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2094" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2114" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2941</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2115" z:Size="2">
                  <FBDPortExtSettings z:Id="2116">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2117">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2111" i:nil="true" />
                <VariableName z:Id="2118">ByteOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2119">
              <EndFBDPort z:Id="2120" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2965</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2121" z:Size="1">
                  <FBDPortExtSettings z:Id="2122">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2123" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2124" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">3930</d2p1:anyType>
                </Value>
                <VariableName z:Id="2125">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2126" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2963</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2127" z:Size="1">
                  <FBDPortExtSettings z:Id="2128">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2129">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2130">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2131" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2966</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2132" z:Size="1">
                  <FBDPortExtSettings z:Id="2133">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2134" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2135" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">3930</d2p1:anyType>
                </Value>
                <VariableName z:Id="2136">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2137">
              <EndFBDPort z:Ref="2004" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2138" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2970</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2139" z:Size="1">
                  <FBDPortExtSettings z:Id="2140">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Ref="2129" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2141" z:Size="15">
            <FBDItem z:Id="2142" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2968</Id>
              <InputPortsCollection z:Id="2143" z:Size="1">
                <FBDPort z:Id="2144" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2969</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2145" z:Size="1">
                    <FBDPortExtSettings z:Id="2146">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2147">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2148" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3500</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="2149">Tag</Name>
              <OutputPortsCollection z:Id="2150" z:Size="1">
                <FBDPort z:Ref="2138" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2151">_</Prefix>
              <SecondName z:Ref="2149" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="464" i:nil="true" />
              <InputFBDPort z:Ref="2144" i:nil="true" />
              <OutputFBDPort z:Ref="2138" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2152" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2961</Id>
              <InputPortsCollection z:Id="2153" z:Size="1">
                <FBDPort z:Id="2154" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2962</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2155" z:Size="1">
                    <FBDPortExtSettings z:Id="2156">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2147" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2157" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3420</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Ref="2149" i:nil="true" />
              <OutputPortsCollection z:Id="2158" z:Size="1">
                <FBDPort z:Ref="2126" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2151" i:nil="true" />
              <SecondName z:Ref="2149" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="459" i:nil="true" />
              <InputFBDPort z:Ref="2154" i:nil="true" />
              <OutputFBDPort z:Ref="2126" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2159" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2160">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>2964</Id>
              <InputPortsCollection z:Id="2161" z:Size="1">
                <FBDPort z:Ref="2120" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2162" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Id="2163">I&gt;F</Name>
              <OutputPortsCollection z:Id="2164" z:Size="1">
                <FBDPort z:Ref="2131" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2165">YART</Prefix>
              <SecondName z:Id="2166">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Id="2167">//#I  &gt; F (Int в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="2168" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2920</Id>
              <InputPortsCollection z:Id="2169" z:Size="1">
                <FBDPort z:Id="2170" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2921</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2171" z:Size="1">
                    <FBDPortExtSettings z:Id="2172">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2173" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Id="2174">Tag</Name>
              <OutputPortsCollection z:Id="2175" z:Size="1">
                <FBDPort z:Ref="2052" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2176">_</Prefix>
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="434" i:nil="true" />
              <InputFBDPort z:Ref="2170" i:nil="true" />
              <OutputFBDPort z:Ref="2052" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2177" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2178">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>2929</Id>
              <InputPortsCollection z:Id="2179" z:Size="1">
                <FBDPort z:Ref="2046" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2180" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3650</d8p1:_x>
                <d8p1:_y>3850</d8p1:_y>
              </Location>
              <Name z:Id="2181">I&gt;F</Name>
              <OutputPortsCollection z:Id="2182" z:Size="1">
                <FBDPort z:Ref="2056" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2183">YART</Prefix>
              <SecondName z:Id="2184">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2167" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2185" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2917</Id>
              <InputPortsCollection z:Id="2186" z:Size="1">
                <FBDPort z:Id="2187" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2918</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2188" z:Size="1">
                    <FBDPortExtSettings z:Id="2189">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2190" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2191" z:Size="1">
                <FBDPort z:Ref="2040" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="360" i:nil="true" />
              <InputFBDPort z:Ref="2187" i:nil="true" />
              <OutputFBDPort z:Ref="2040" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2192" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2914</Id>
              <InputPortsCollection z:Id="2193" z:Size="1">
                <FBDPort z:Id="2194" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2915</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2195" z:Size="1">
                    <FBDPortExtSettings z:Id="2196">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2197" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2198" z:Size="1">
                <FBDPort z:Ref="2034" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="84" i:nil="true" />
              <InputFBDPort z:Ref="2194" i:nil="true" />
              <OutputFBDPort z:Ref="2034" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2199" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2905</Id>
              <InputPortsCollection z:Id="2200" z:Size="1">
                <FBDPort z:Id="2201" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2906</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2202" z:Size="1">
                    <FBDPortExtSettings z:Id="2203">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2204" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2205" z:Size="1">
                <FBDPort z:Ref="2028" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="240" i:nil="true" />
              <InputFBDPort z:Ref="2201" i:nil="true" />
              <OutputFBDPort z:Ref="2028" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2206" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2902</Id>
              <InputPortsCollection z:Id="2207" z:Size="1">
                <FBDPort z:Id="2208" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2903</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2209" z:Size="1">
                    <FBDPortExtSettings z:Id="2210">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2211" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2212" z:Size="1">
                <FBDPort z:Ref="2022" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="236" i:nil="true" />
              <InputFBDPort z:Ref="2208" i:nil="true" />
              <OutputFBDPort z:Ref="2022" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2213" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2899</Id>
              <InputPortsCollection z:Id="2214" z:Size="1">
                <FBDPort z:Id="2215" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2900</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2216" z:Size="1">
                    <FBDPortExtSettings z:Id="2217">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2218" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2219" z:Size="1">
                <FBDPort z:Ref="2017" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="429" i:nil="true" />
              <InputFBDPort z:Ref="2215" i:nil="true" />
              <OutputFBDPort z:Ref="2017" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2220" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2221">Упаковка/Распаковка массива</Description>
              <HelpID>95</HelpID>
              <Id>2926</Id>
              <InputPortsCollection z:Id="2222" z:Size="1">
                <FBDPort z:Ref="2004" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2223" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3770</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="2224">ARRAY</Name>
              <OutputPortsCollection z:Id="2225" z:Size="1">
                <FBDPort z:Ref="2095" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2183" i:nil="true" />
              <SecondName z:Id="2226">FloatMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7d6e82cd-5de6-4502-94a0-4c47d2596119</SpecificationId>
              <Code z:Id="2227">//#FLOATARR (Свертка / Развертка Bit массивов)


for(new i = 0; i&lt;sizeof_FloatIn; i++)


{


	if(i&gt;=sizeof_FloatOut) return;


	FloatOut[i] = FloatIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2228" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2943</Id>
              <InputPortsCollection z:Id="2229" z:Size="1">
                <FBDPort z:Ref="2075" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2230" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2231" z:Size="1">
                <FBDPort z:Id="2232" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>8</ArrayItemsCount>
                  <Id>2945</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2233" z:Size="8">
                    <FBDPortExtSettings z:Id="2234">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2235">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2236">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2237">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2238">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2239">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2240">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2241">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2242" i:type="d2p1:ArrayOfanyType" z:Size="8">
                    <d2p1:anyType z:Id="2243" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">19.1</d2p1:anyType>
                    <d2p1:anyType z:Id="2244" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">5</d2p1:anyType>
                    <d2p1:anyType z:Id="2245" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">21.0644112</d2p1:anyType>
                    <d2p1:anyType z:Id="2246" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">250</d2p1:anyType>
                    <d2p1:anyType z:Id="2247" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0.54</d2p1:anyType>
                    <d2p1:anyType z:Id="2248" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0</d2p1:anyType>
                    <d2p1:anyType z:Id="2249" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">3930</d2p1:anyType>
                    <d2p1:anyType z:Id="2250" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="2020" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="439" i:nil="true" />
              <InputFBDPort z:Ref="2075" i:nil="true" />
              <OutputFBDPort z:Ref="2232" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2251" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2911</Id>
              <InputPortsCollection z:Id="2252" z:Size="1">
                <FBDPort z:Id="2253" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2912</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2254" z:Size="1">
                    <FBDPortExtSettings z:Id="2255">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2094" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2256" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2257" z:Size="1">
                <FBDPort z:Ref="2070" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="340" i:nil="true" />
              <InputFBDPort z:Ref="2253" i:nil="true" />
              <OutputFBDPort z:Ref="2070" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2258" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2259">Упаковка/Распаковка массива</Description>
              <HelpID>92</HelpID>
              <Id>2939</Id>
              <InputPortsCollection z:Id="2260" z:Size="1">
                <FBDPort z:Ref="2063" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2261" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3750</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Id="2262">ARRAY</Name>
              <OutputPortsCollection z:Id="2263" z:Size="1">
                <FBDPort z:Ref="2114" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2183" i:nil="true" />
              <SecondName z:Id="2264">ByteMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>487e1ff3-87f3-4b13-b3dd-4a1be44bd7b7</SpecificationId>
              <Code z:Id="2265">//#BYTEARR (Свертка / Развертка Bit массивов )  


for(new i = 0; i&lt;sizeof_ByteIn; i++)


{


	if(i&gt;=sizeof_ByteOut) return;


	ByteOut[i] = ByteIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2266" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2947</Id>
              <InputPortsCollection z:Id="2267" z:Size="1">
                <FBDPort z:Ref="2107" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2268" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3900</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2174" i:nil="true" />
              <OutputPortsCollection z:Id="2269" z:Size="1">
                <FBDPort z:Id="2270" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2949</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2271" z:Size="2">
                    <FBDPortExtSettings z:Id="2272">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2273">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2274" i:type="d2p1:ArrayOfanyType" z:Size="2">
                    <d2p1:anyType z:Id="2275" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                    <d2p1:anyType z:Id="2276" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="2020" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2176" i:nil="true" />
              <SecondName z:Ref="2174" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="450" i:nil="true" />
              <InputFBDPort z:Ref="2107" i:nil="true" />
              <OutputFBDPort z:Ref="2270" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="2277">ToArray</Name>
          <Parent z:Ref="1643" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>9</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="2278">Connection</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="2279" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2280" z:Size="1">
        <d2p1:anyType z:Id="2281" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2282" z:Size="22">
            <FBDConnector z:Id="2283">
              <EndFBDPort z:Id="2284" i:type="InputFBDPort">
                <Alias z:Id="2285">Вход 279</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1068</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2286" z:Size="1">
                  <FBDPortExtSettings z:Id="2287">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2288" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2289">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2290" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1080</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2291" z:Size="1">
                  <FBDPortExtSettings z:Id="2292">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2288" i:nil="true" />
                <VariableName z:Id="2293">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2294">
              <EndFBDPort z:Id="2295" i:type="InputFBDPort">
                <Alias z:Id="2296">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1085</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2297" z:Size="1">
                  <FBDPortExtSettings z:Id="2298">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2299" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2300">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2301" i:type="OutputFBDPort">
                <Alias z:Id="2302">Выход 315</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1074</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2303" z:Size="1">
                  <FBDPortExtSettings z:Id="2304">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2299" i:nil="true" />
                <VariableName z:Id="2305">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2306">
              <EndFBDPort z:Id="2307" i:type="InputFBDPort">
                <Alias z:Id="2308">Вход 282</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1071</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2309" z:Size="1">
                  <FBDPortExtSettings z:Id="2310">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2311" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2312">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2313" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1094</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2314" z:Size="1">
                  <FBDPortExtSettings z:Id="2315">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2311" i:nil="true" />
                <VariableName z:Id="2316">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2317">
              <EndFBDPort z:Id="2318" i:type="InputFBDPort">
                <Alias z:Id="2319">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1127</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2320" z:Size="1">
                  <FBDPortExtSettings z:Id="2321">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2322" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2323">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2324" i:type="OutputFBDPort">
                <Alias z:Id="2325">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2326" z:Size="1">
                  <FBDPortExtSettings z:Id="2327">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2322" i:nil="true" />
                <VariableName z:Id="2328">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2329">
              <EndFBDPort z:Id="2330" i:type="InputFBDPort">
                <Alias z:Id="2331">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1119</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2332" z:Size="1">
                  <FBDPortExtSettings z:Id="2333">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2334" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2335">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2336" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2337" z:Size="1">
                  <FBDPortExtSettings z:Id="2338">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2334" i:nil="true" />
                <VariableName z:Id="2339">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2340">
              <EndFBDPort z:Id="2341" i:type="InputFBDPort">
                <Alias z:Id="2342">Вход 124</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2343" z:Size="1">
                  <FBDPortExtSettings z:Id="2344">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2345" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2346">NodeId</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2347" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1110</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2348" z:Size="1">
                  <FBDPortExtSettings z:Id="2349">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2345" i:nil="true" />
                <VariableName z:Ref="2339" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2350">
              <EndFBDPort z:Id="2351" i:type="InputFBDPort">
                <Alias z:Id="2352">Вход 127</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1121</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2353" z:Size="1">
                  <FBDPortExtSettings z:Id="2354">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2355" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2356">NodeAddress</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2357" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1113</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2358" z:Size="1">
                  <FBDPortExtSettings z:Id="2359">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2355" i:nil="true" />
                <VariableName z:Ref="2339" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2360">
              <EndFBDPort z:Id="2361" i:type="InputFBDPort">
                <Alias z:Id="2362">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1122</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2363" z:Size="1">
                  <FBDPortExtSettings z:Id="2364">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2365" i:type="d2p1:ArrayOfanyType" z:Size="10">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2366">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2367" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>10</ArrayItemsCount>
                <Id>1136</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2368" z:Size="10">
                  <FBDPortExtSettings z:Id="2369">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2370">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2371">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2372">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2373">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2374">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2375">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2376">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2377">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2378">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2365" i:nil="true" />
                <VariableName z:Ref="2339" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2379">
              <EndFBDPort z:Id="2380" i:type="InputFBDPort">
                <Alias z:Id="2381">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2227</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2382" z:Size="1">
                  <FBDPortExtSettings z:Id="2383">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2384" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2385">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2386" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2148</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2387" z:Size="1">
                  <FBDPortExtSettings z:Id="2388">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2384" i:nil="true" />
                <VariableName z:Id="2389">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2390">
              <EndFBDPort z:Id="2391" i:type="InputFBDPort">
                <Alias z:Id="2392">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2150</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2393" z:Size="1">
                  <FBDPortExtSettings z:Id="2394">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2395" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2396">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2397" i:type="OutputFBDPort">
                <Alias z:Id="2398">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2233</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2399" z:Size="1">
                  <FBDPortExtSettings z:Id="2400">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2395" i:nil="true" />
                <VariableName z:Id="2401">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2402">
              <EndFBDPort z:Id="2403" i:type="InputFBDPort">
                <Alias z:Id="2404">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2230</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2405" z:Size="1">
                  <FBDPortExtSettings z:Id="2406">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2407" i:type="d2p1:ArrayOfanyType" z:Size="5">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2408">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2409" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2160</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2410" z:Size="5">
                  <FBDPortExtSettings z:Id="2411">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2412">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2413">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2414">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2415">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2407" i:nil="true" />
                <VariableName z:Id="2416">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2417">
              <EndFBDPort z:Id="2418" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2236</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2419" z:Size="5">
                  <FBDPortExtSettings z:Id="2420">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2421">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2422">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2423">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2424">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2407" i:nil="true" />
                <VariableName z:Id="2425">ShortIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2409" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2426">
              <EndFBDPort z:Id="2427" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2829</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2428" z:Size="1">
                  <FBDPortExtSettings z:Id="2429">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2311" i:nil="true" />
                <VariableName z:Id="2430">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2313" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2431">
              <EndFBDPort z:Id="2432" i:type="InputFBDPort">
                <Alias z:Id="2433">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2832</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2434" z:Size="1">
                  <FBDPortExtSettings z:Id="2435">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2436" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2437">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2438" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2830</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2439" z:Size="1">
                  <FBDPortExtSettings z:Id="2440">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2436" i:nil="true" />
                <VariableName z:Id="2441">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2442">
              <EndFBDPort z:Id="2443" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2826</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2444" z:Size="1">
                  <FBDPortExtSettings z:Id="2445">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2446" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2447">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2448" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2834</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2449" z:Size="1">
                  <FBDPortExtSettings z:Id="2450">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2446" i:nil="true" />
                <VariableName z:Id="2451">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2452">
              <EndFBDPort z:Id="2453" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2852</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2454" z:Size="1">
                  <FBDPortExtSettings z:Id="2455">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2456" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2457">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Id="2458" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2237</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2459" z:Size="5">
                  <FBDPortExtSettings z:Id="2460">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2461">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2462">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2463">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2464">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2465" i:type="d2p1:ArrayOfanyType" z:Size="5">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2466">ShortOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2467">
              <EndFBDPort z:Id="2468" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2856</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2469" z:Size="1">
                  <FBDPortExtSettings z:Id="2470">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2471" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2472">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="2458" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2473">
              <EndFBDPort z:Id="2474" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2844</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2475" z:Size="4">
                  <FBDPortExtSettings z:Id="2476">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2477">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2478">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2479">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2480" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2481">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2482" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2853</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2483" z:Size="2">
                  <FBDPortExtSettings z:Id="2484">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2485">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2486" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2487">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2488">
              <EndFBDPort z:Ref="2474" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="2482" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2489">
              <EndFBDPort z:Ref="2474" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2490" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2857</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2491" z:Size="2">
                  <FBDPortExtSettings z:Id="2492">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2493">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2494" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2495">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2496">
              <EndFBDPort z:Ref="2474" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="2490" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2497">
              <EndFBDPort z:Id="2498" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2841</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2499" z:Size="1">
                  <FBDPortExtSettings z:Id="2500">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2501" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2447" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2502" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2845</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2503" z:Size="1">
                  <FBDPortExtSettings z:Id="2504">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2501" i:nil="true" />
                <VariableName z:Id="2505">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2506" z:Size="26">
            <FBDItem z:Id="2507" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2158</Id>
              <InputPortsCollection z:Id="2508" z:Size="1">
                <FBDPort z:Id="2509" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>5</ArrayItemsCount>
                  <Id>2159</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2510" z:Size="5">
                    <FBDPortExtSettings z:Id="2511">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2512">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2513">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2514">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2515">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2516">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2517" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4180</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="2518">Tag</Name>
              <OutputPortsCollection z:Id="2519" z:Size="1">
                <FBDPort z:Ref="2409" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2520">_</Prefix>
              <SecondName z:Ref="2518" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="381" i:nil="true" />
              <InputFBDPort z:Ref="2509" i:nil="true" />
              <OutputFBDPort z:Ref="2409" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2521" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2146</Id>
              <InputPortsCollection z:Id="2522" z:Size="1">
                <FBDPort z:Id="2523" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2147</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2524" z:Size="1">
                    <FBDPortExtSettings z:Id="2525">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2526">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2527" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4170</d8p1:_x>
                <d8p1:_y>4080</d8p1:_y>
              </Location>
              <Name z:Id="2528">Tag</Name>
              <OutputPortsCollection z:Id="2529" z:Size="1">
                <FBDPort z:Ref="2386" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2530">_</Prefix>
              <SecondName z:Ref="2528" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="216" i:nil="true" />
              <InputFBDPort z:Ref="2523" i:nil="true" />
              <OutputFBDPort z:Ref="2386" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2531" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2532">Read holding registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>272</HelpID>
              <Id>2225</Id>
              <InputPortsCollection z:Id="2533" z:Size="7">
                <FBDPort z:Id="2534" i:type="InputFBDPort">
                  <Alias z:Id="2535">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2536" z:Size="1">
                    <FBDPortExtSettings z:Id="2537">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2538" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2539" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2540">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2380" i:nil="true" />
                <FBDPort z:Id="2541" i:type="InputFBDPort">
                  <Alias z:Id="2542">Вход 124</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2228</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2543" z:Size="1">
                    <FBDPortExtSettings z:Id="2544">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2545" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2546" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2547">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="2548" i:type="InputFBDPort">
                  <Alias z:Id="2549">Вход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2229</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2550" z:Size="1">
                    <FBDPortExtSettings z:Id="2551">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2552" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2553" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">4096</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2554">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2403" i:nil="true" />
                <FBDPort z:Id="2555" i:type="InputFBDPort">
                  <Alias z:Id="2556">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2231</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2557" z:Size="1">
                    <FBDPortExtSettings z:Id="2558">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2559" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2560" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2561">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="2562" i:type="InputFBDPort">
                  <Alias z:Id="2563">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2232</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2564" z:Size="1">
                    <FBDPortExtSettings z:Id="2565">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2566" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2567" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2568">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2569" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4400</d8p1:_x>
                <d8p1:_y>4050</d8p1:_y>
              </Location>
              <Name z:Id="2570">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="2571" z:Size="1">
                <FBDPort z:Ref="2397" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2572">YART</Prefix>
              <SecondName z:Ref="2570" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Id="2573">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 3 &lt;&lt; 24; //функция MODBUS (read holding registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="2574" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2575">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>2149</Id>
              <InputPortsCollection z:Id="2576" z:Size="1">
                <FBDPort z:Ref="2391" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2577" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>4060</d8p1:_y>
              </Location>
              <Name z:Id="2578">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="2579" z:Size="6">
                <FBDPort z:Id="2580" i:type="OutputFBDPort">
                  <Alias z:Id="2581">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2151</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2582" z:Size="1">
                    <FBDPortExtSettings z:Id="2583">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2584" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2585">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="2586" i:type="OutputFBDPort">
                  <Alias z:Id="2587">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2152</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2588" z:Size="1">
                    <FBDPortExtSettings z:Id="2589">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2590" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2591">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="2592" i:type="OutputFBDPort">
                  <Alias z:Id="2593">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2153</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2594" z:Size="1">
                    <FBDPortExtSettings z:Id="2595">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2596" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2597">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="2598" i:type="OutputFBDPort">
                  <Alias z:Id="2599">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2154</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2600" z:Size="1">
                    <FBDPortExtSettings z:Id="2601">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2602" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2603">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="2604" i:type="OutputFBDPort">
                  <Alias z:Id="2605">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2155</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2606" z:Size="1">
                    <FBDPortExtSettings z:Id="2607">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2608" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2609">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="2610" i:type="OutputFBDPort">
                  <Alias z:Id="2611">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2156</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2612" z:Size="1">
                    <FBDPortExtSettings z:Id="2613">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2614" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2615">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2616">YART</Prefix>
              <SecondName z:Ref="2578" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Id="2617">if (Status == -1)


{


	Failed = 1;


	return;


}


Connected = Status &amp; 0x0080 != 0;


Free = Status &amp; 0x007f == 0;


Sending = Status &amp; 0x007f == 1;


WaitRespond = Status &amp; 0x007f == 2;


Failed = Status &amp; 0x007f == 3;


Disconnected = Status &amp; 0x007f == 4;</Code>
            </FBDItem>
            <FBDItem z:Id="2618" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2619">Упаковка/Распаковка массива</Description>
              <HelpID>93</HelpID>
              <Id>2235</Id>
              <InputPortsCollection z:Id="2620" z:Size="1">
                <FBDPort z:Ref="2418" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2621" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4370</d8p1:_x>
                <d8p1:_y>4220</d8p1:_y>
              </Location>
              <Name z:Id="2622">ARRAY</Name>
              <OutputPortsCollection z:Id="2623" z:Size="1">
                <FBDPort z:Ref="2458" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2572" i:nil="true" />
              <SecondName z:Id="2624">ShortMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>450cea9c-3952-4754-8583-dd32c04d9ec8</SpecificationId>
              <Code z:Id="2625">//#INTARR (Свертка / Развертка Bit массивов)SH


for(new i = 0; i&lt;sizeof_ShortIn; i++)


{


	if(i&gt;=sizeof_ShortOut) return;


	ShortOut[i] = ShortIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2626" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2627">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>2855</Id>
              <InputPortsCollection z:Id="2628" z:Size="1">
                <FBDPort z:Ref="2468" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2629" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4540</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="2630">SPLIT LE</Name>
              <OutputPortsCollection z:Id="2631" z:Size="2">
                <FBDPort z:Ref="2490" i:nil="true" />
                <FBDPort z:Id="2632" i:type="OutputFBDPort">
                  <Alias z:Id="2633">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2858</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2634" z:Size="1">
                    <FBDPortExtSettings z:Id="2635">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2636" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2637">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2638">YART</Prefix>
              <SecondName z:Id="2639">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Id="2640">const S = 2;





if(sizeof_y == S) for(new i = 0; i &lt; S; i++) y[i] = (x &gt;&gt; (8 * i)) &amp; 0xFF;


else e = true;</Code>
            </FBDItem>
            <FBDItem z:Id="2641" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2642">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>2851</Id>
              <InputPortsCollection z:Id="2643" z:Size="1">
                <FBDPort z:Ref="2453" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2644" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4540</d8p1:_x>
                <d8p1:_y>4230</d8p1:_y>
              </Location>
              <Name z:Id="2645">SPLIT LE</Name>
              <OutputPortsCollection z:Id="2646" z:Size="2">
                <FBDPort z:Ref="2482" i:nil="true" />
                <FBDPort z:Id="2647" i:type="OutputFBDPort">
                  <Alias z:Id="2648">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2854</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2649" z:Size="1">
                    <FBDPortExtSettings z:Id="2650">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2651" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2652">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2653">YART</Prefix>
              <SecondName z:Id="2654">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Ref="2640" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2655" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2656">Сборка массива байт (little-endian) в значение</Description>
              <HelpID>884</HelpID>
              <Id>2843</Id>
              <InputPortsCollection z:Id="2657" z:Size="1">
                <FBDPort z:Ref="2474" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2658" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="2659">JOIN LE</Name>
              <OutputPortsCollection z:Id="2660" z:Size="2">
                <FBDPort z:Ref="2502" i:nil="true" />
                <FBDPort z:Id="2661" i:type="OutputFBDPort">
                  <Alias z:Id="2662">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2846</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2663" z:Size="1">
                    <FBDPortExtSettings z:Id="2664">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2665" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2666">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2653" i:nil="true" />
              <SecondName z:Id="2667">join_i_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>98ef9844-4840-4068-892c-b0954294f66b</SpecificationId>
              <Code z:Id="2668">const S = 4;





if(sizeof_x == S) for(new i = 0; i &lt; S; i++) y |= (x[i] &amp; 0xFF) &lt;&lt; (8 * i);


else e = true;</Code>
            </FBDItem>
            <FBDItem z:Id="2669" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2840</Id>
              <InputPortsCollection z:Id="2670" z:Size="1">
                <FBDPort z:Ref="2498" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2671" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="2672">Tag</Name>
              <OutputPortsCollection z:Id="2673" z:Size="1">
                <FBDPort z:Id="2674" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2842</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2675" z:Size="1">
                    <FBDPortExtSettings z:Id="2676">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="2677" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2678">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2679">_</Prefix>
              <SecondName z:Ref="2672" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="434" i:nil="true" />
              <InputFBDPort z:Ref="2498" i:nil="true" />
              <OutputFBDPort z:Ref="2674" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2680" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1092</Id>
              <InputPortsCollection z:Id="2681" z:Size="1">
                <FBDPort z:Id="2682" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1093</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2683" z:Size="1">
                    <FBDPortExtSettings z:Id="2684">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2685">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2686" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3510</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="2687">Tag</Name>
              <OutputPortsCollection z:Id="2688" z:Size="1">
                <FBDPort z:Ref="2313" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2689">_</Prefix>
              <SecondName z:Ref="2687" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="109" i:nil="true" />
              <InputFBDPort z:Ref="2682" i:nil="true" />
              <OutputFBDPort z:Ref="2313" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2690" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1078</Id>
              <InputPortsCollection z:Id="2691" z:Size="1">
                <FBDPort z:Id="2692" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1079</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2693" z:Size="1">
                    <FBDPortExtSettings z:Id="2694">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2695">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2696" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="2697">Tag</Name>
              <OutputPortsCollection z:Id="2698" z:Size="1">
                <FBDPort z:Ref="2290" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2699">_</Prefix>
              <SecondName z:Ref="2697" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="216" i:nil="true" />
              <InputFBDPort z:Ref="2692" i:nil="true" />
              <OutputFBDPort z:Ref="2290" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2700" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2701">Read input registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>271</HelpID>
              <Id>1066</Id>
              <InputPortsCollection z:Id="2702" z:Size="7">
                <FBDPort z:Id="2703" i:type="InputFBDPort">
                  <Alias z:Id="2704">Вход 278</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2705" z:Size="1">
                    <FBDPortExtSettings z:Id="2706">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2707" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2708" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2709">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2284" i:nil="true" />
                <FBDPort z:Id="2710" i:type="InputFBDPort">
                  <Alias z:Id="2711">Вход 280</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2712" z:Size="1">
                    <FBDPortExtSettings z:Id="2713">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2714" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2715" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2716">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="2717" i:type="InputFBDPort">
                  <Alias z:Id="2718">Вход 281</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1070</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2719" z:Size="1">
                    <FBDPortExtSettings z:Id="2720">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2721" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2722" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2723">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2307" i:nil="true" />
                <FBDPort z:Id="2724" i:type="InputFBDPort">
                  <Alias z:Id="2725">Вход 283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1072</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2726" z:Size="1">
                    <FBDPortExtSettings z:Id="2727">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2728" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2729" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2730">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="2731" i:type="InputFBDPort">
                  <Alias z:Id="2732">Вход 284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1073</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2733" z:Size="1">
                    <FBDPortExtSettings z:Id="2734">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2735" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2736" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2737">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2738" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3740</d8p1:_x>
                <d8p1:_y>4110</d8p1:_y>
              </Location>
              <Name z:Id="2739">MBRTUMIRRead</Name>
              <OutputPortsCollection z:Id="2740" z:Size="1">
                <FBDPort z:Ref="2301" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2741">YART</Prefix>
              <SecondName z:Ref="2739" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>19be49cb-7d11-4952-942b-1f42f10cdde5</SpecificationId>
              <Code z:Id="2742">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 4 &lt;&lt; 24; //функция MODBUS (read input registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="2743" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2744">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1084</Id>
              <InputPortsCollection z:Id="2745" z:Size="1">
                <FBDPort z:Ref="2295" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2746" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3920</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="2747">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="2748" z:Size="6">
                <FBDPort z:Id="2749" i:type="OutputFBDPort">
                  <Alias z:Id="2750">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2751" z:Size="1">
                    <FBDPortExtSettings z:Id="2752">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2753" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2754">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="2755" i:type="OutputFBDPort">
                  <Alias z:Id="2756">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1087</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2757" z:Size="1">
                    <FBDPortExtSettings z:Id="2758">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2759" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2760">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="2761" i:type="OutputFBDPort">
                  <Alias z:Id="2762">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2763" z:Size="1">
                    <FBDPortExtSettings z:Id="2764">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2765" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2766">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="2767" i:type="OutputFBDPort">
                  <Alias z:Id="2768">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1089</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2769" z:Size="1">
                    <FBDPortExtSettings z:Id="2770">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2771" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2772">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="2773" i:type="OutputFBDPort">
                  <Alias z:Id="2774">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1090</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2775" z:Size="1">
                    <FBDPortExtSettings z:Id="2776">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2777" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2778">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="2779" i:type="OutputFBDPort">
                  <Alias z:Id="2780">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2781" z:Size="1">
                    <FBDPortExtSettings z:Id="2782">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2783" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2784">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2741" i:nil="true" />
              <SecondName z:Ref="2747" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="2617" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2785" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2786">Преобразование Short в Float</Description>
              <HelpID>106</HelpID>
              <Id>2828</Id>
              <InputPortsCollection z:Id="2787" z:Size="1">
                <FBDPort z:Ref="2427" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2788" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3479.0489745693226</d8p1:_x>
                <d8p1:_y>4223.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="2789">S&gt;F</Name>
              <OutputPortsCollection z:Id="2790" z:Size="1">
                <FBDPort z:Ref="2438" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2653" i:nil="true" />
              <SecondName z:Id="2791">ShortFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>06e48c4e-f372-4aee-84a8-6b45e846a795</SpecificationId>
              <Code z:Id="2792">//#S &gt; F (Short в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="2793" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2794">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>2831</Id>
              <InputPortsCollection z:Id="2795" z:Size="2">
                <FBDPort z:Ref="2432" i:nil="true" />
                <FBDPort z:Id="2796" i:type="InputFBDPort">
                  <Alias z:Id="2797">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2833</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2798" z:Size="1">
                    <FBDPortExtSettings z:Id="2799">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2800" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2801" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2802">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2803" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3598.0489745693226</d8p1:_x>
                <d8p1:_y>4241.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="2804">DIV</Name>
              <OutputPortsCollection z:Id="2805" z:Size="1">
                <FBDPort z:Ref="2448" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2653" i:nil="true" />
              <SecondName z:Ref="2804" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Id="2806">if(b != 0.0){


	y = a / b;


} else __eno = false;</Code>
            </FBDItem>
            <FBDItem z:Id="2807" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2825</Id>
              <InputPortsCollection z:Id="2808" z:Size="1">
                <FBDPort z:Ref="2443" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2809" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>4250</d8p1:_y>
              </Location>
              <Name z:Ref="2672" i:nil="true" />
              <OutputPortsCollection z:Id="2810" z:Size="1">
                <FBDPort z:Id="2811" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2827</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2812" z:Size="1">
                    <FBDPortExtSettings z:Id="2813">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2814" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2678" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2679" i:nil="true" />
              <SecondName z:Ref="2672" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="429" i:nil="true" />
              <InputFBDPort z:Ref="2443" i:nil="true" />
              <OutputFBDPort z:Ref="2811" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2815" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1134</Id>
              <InputPortsCollection z:Id="2816" z:Size="1">
                <FBDPort z:Id="2817" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1135</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2818" z:Size="10">
                    <FBDPortExtSettings z:Id="2819">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2820">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2821">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2822">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2823">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2824">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2825">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2826">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2827">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2828">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2829">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2830" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4610</d8p1:_y>
              </Location>
              <Name z:Id="2831">Tag</Name>
              <OutputPortsCollection z:Id="2832" z:Size="1">
                <FBDPort z:Ref="2367" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2833">_</Prefix>
              <SecondName z:Ref="2831" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="138" i:nil="true" />
              <InputFBDPort z:Ref="2817" i:nil="true" />
              <OutputFBDPort z:Ref="2367" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2834" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1111</Id>
              <InputPortsCollection z:Id="2835" z:Size="1">
                <FBDPort z:Id="2836" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2837" z:Size="1">
                    <FBDPortExtSettings z:Id="2838">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2829" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2839" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4570</d8p1:_y>
              </Location>
              <Name z:Ref="2831" i:nil="true" />
              <OutputPortsCollection z:Id="2840" z:Size="1">
                <FBDPort z:Ref="2357" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2833" i:nil="true" />
              <SecondName z:Ref="2831" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="97" i:nil="true" />
              <InputFBDPort z:Ref="2836" i:nil="true" />
              <OutputFBDPort z:Ref="2357" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2841" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1108</Id>
              <InputPortsCollection z:Id="2842" z:Size="1">
                <FBDPort z:Id="2843" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1109</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2844" z:Size="1">
                    <FBDPortExtSettings z:Id="2845">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2829" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2846" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Ref="2831" i:nil="true" />
              <OutputPortsCollection z:Id="2847" z:Size="1">
                <FBDPort z:Ref="2347" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2833" i:nil="true" />
              <SecondName z:Ref="2831" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="220" i:nil="true" />
              <InputFBDPort z:Ref="2843" i:nil="true" />
              <OutputFBDPort z:Ref="2347" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2848" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1105</Id>
              <InputPortsCollection z:Id="2849" z:Size="1">
                <FBDPort z:Id="2850" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2851" z:Size="1">
                    <FBDPortExtSettings z:Id="2852">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2829" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2853" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4480</d8p1:_y>
              </Location>
              <Name z:Ref="2831" i:nil="true" />
              <OutputPortsCollection z:Id="2854" z:Size="1">
                <FBDPort z:Ref="2336" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2833" i:nil="true" />
              <SecondName z:Ref="2831" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="216" i:nil="true" />
              <InputFBDPort z:Ref="2850" i:nil="true" />
              <OutputFBDPort z:Ref="2336" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2855" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2856">Read holding registers

Внимание: Нельзя использовать более 20 блоков MODBUS RTU MASTER</Description>
              <HelpID>272</HelpID>
              <Id>1117</Id>
              <InputPortsCollection z:Id="2857" z:Size="7">
                <FBDPort z:Id="2858" i:type="InputFBDPort">
                  <Alias z:Id="2859">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1118</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2860" z:Size="1">
                    <FBDPortExtSettings z:Id="2861">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2862" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2863" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2864">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2330" i:nil="true" />
                <FBDPort z:Ref="2341" i:nil="true" />
                <FBDPort z:Ref="2351" i:nil="true" />
                <FBDPort z:Ref="2361" i:nil="true" />
                <FBDPort z:Id="2865" i:type="InputFBDPort">
                  <Alias z:Id="2866">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1123</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2867" z:Size="1">
                    <FBDPortExtSettings z:Id="2868">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2869" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2870" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1300</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2871">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="2872" i:type="InputFBDPort">
                  <Alias z:Id="2873">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1124</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2874" z:Size="1">
                    <FBDPortExtSettings z:Id="2875">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2876" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2877" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2878">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2879" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3800</d8p1:_x>
                <d8p1:_y>4480</d8p1:_y>
              </Location>
              <Name z:Id="2880">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="2881" z:Size="1">
                <FBDPort z:Ref="2324" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2882">YART</Prefix>
              <SecondName z:Ref="2880" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Ref="2573" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2883" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2884">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1126</Id>
              <InputPortsCollection z:Id="2885" z:Size="1">
                <FBDPort z:Ref="2318" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2886" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="2887">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="2888" z:Size="6">
                <FBDPort z:Id="2889" i:type="OutputFBDPort">
                  <Alias z:Id="2890">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1128</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2891" z:Size="1">
                    <FBDPortExtSettings z:Id="2892">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2893" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2894">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="2895" i:type="OutputFBDPort">
                  <Alias z:Id="2896">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2897" z:Size="1">
                    <FBDPortExtSettings z:Id="2898">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2899" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2900">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="2901" i:type="OutputFBDPort">
                  <Alias z:Id="2902">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1130</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2903" z:Size="1">
                    <FBDPortExtSettings z:Id="2904">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2905" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2906">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="2907" i:type="OutputFBDPort">
                  <Alias z:Id="2908">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1131</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2909" z:Size="1">
                    <FBDPortExtSettings z:Id="2910">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2911" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2912">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="2913" i:type="OutputFBDPort">
                  <Alias z:Id="2914">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2915" z:Size="1">
                    <FBDPortExtSettings z:Id="2916">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2917" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2918">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="2919" i:type="OutputFBDPort">
                  <Alias z:Id="2920">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2921" z:Size="1">
                    <FBDPortExtSettings z:Id="2922">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2923" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2924">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2925">YART</Prefix>
              <SecondName z:Ref="2887" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="2617" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2926" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1137</Id>
              <InputPortsCollection z:Id="2927" z:Size="0" />
              <InternalPortsCollection z:Id="2928" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3500</d8p1:_x>
                <d8p1:_y>4420</d8p1:_y>
              </Location>
              <Name z:Id="2929">comment</Name>
              <OutputPortsCollection z:Id="2930" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2931">_</Prefix>
              <SecondName z:Id="2932">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2933">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</Comment>
              <Height>256.99871895158185</Height>
              <Width>652.8334433743903</Width>
            </FBDItem>
            <FBDItem z:Id="2934" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1140</Id>
              <InputPortsCollection z:Id="2935" z:Size="0" />
              <InternalPortsCollection z:Id="2936" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3420</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Id="2937">comment</Name>
              <OutputPortsCollection z:Id="2938" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2939">_</Prefix>
              <SecondName z:Id="2940">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2941">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</Comment>
              <Height>384.23943374694227</Height>
              <Width>677.28701152943631</Width>
            </FBDItem>
            <FBDItem z:Id="2942" i:type="DisplayVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1177</Id>
              <InputPortsCollection z:Id="2943" z:Size="0" />
              <InternalPortsCollection z:Id="2944" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2945" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2689" i:nil="true" />
              <SecondName z:Id="2946">newfun_266497545</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>17fe287e-341c-4631-bf6b-2c3c220f2e46</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="2947">
                <ArrayIndex>0</ArrayIndex>
                <TagId>2817</TagId>
              </Tag>
              <FontSize>14</FontSize>
              <Format z:Id="2948">0.#</Format>
            </FBDItem>
            <FBDItem z:Id="2949" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2234</Id>
              <InputPortsCollection z:Id="2950" z:Size="0" />
              <InternalPortsCollection z:Id="2951" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4155.5348040758736</d8p1:_x>
                <d8p1:_y>3993.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="2952">comment</Name>
              <OutputPortsCollection z:Id="2953" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2520" i:nil="true" />
              <SecondName z:Id="2954">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2955">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</Comment>
              <Height>368.73961250369985</Height>
              <Width>829.82943214598617</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="2956">Read IR HR</Name>
          <Parent z:Ref="2279" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>2</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="2957">Read_MODBUS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="2958" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2959" z:Size="1">
        <d2p1:anyType z:Id="2960" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2961" z:Size="63">
            <FBDConnector z:Id="2962">
              <EndFBDPort z:Id="2963" i:type="InputFBDPort">
                <Alias z:Id="2964">DO.02: DOUT_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1447</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2965" z:Size="2">
                  <FBDPortExtSettings z:Id="2966">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2967">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2968" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="51" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2969" i:type="OutputFBDPort">
                <Alias z:Id="2970">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1434</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2971" z:Size="2">
                  <FBDPortExtSettings z:Id="2972">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2973">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2968" i:nil="true" />
                <VariableName z:Id="2974">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2975">
              <EndFBDPort z:Id="2976" i:type="InputFBDPort">
                <Alias z:Id="2977">X[t)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1250</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2978" z:Size="1">
                  <FBDPortExtSettings z:Id="2979">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2980" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2981">Feedback</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2982" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1247</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2983" z:Size="1">
                  <FBDPortExtSettings z:Id="2984">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2980" i:nil="true" />
                <VariableName z:Id="2985">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2986">
              <EndFBDPort z:Id="2987" i:type="InputFBDPort">
                <Alias z:Id="2988">Вход 1619</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1251</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2989" z:Size="1">
                  <FBDPortExtSettings z:Id="2990">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2991" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2992">KP</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2993" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1279</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2994" z:Size="1">
                  <FBDPortExtSettings z:Id="2995">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2991" i:nil="true" />
                <VariableName z:Id="2996">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2997">
              <EndFBDPort z:Id="2998" i:type="InputFBDPort">
                <Alias z:Id="2999">Вход 1623</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1253</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3000" z:Size="1">
                  <FBDPortExtSettings z:Id="3001">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3002" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3003">KD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3004" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1289</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3005" z:Size="1">
                  <FBDPortExtSettings z:Id="3006">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3002" i:nil="true" />
                <VariableName z:Id="3007">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3008">
              <EndFBDPort z:Id="3009" i:type="InputFBDPort">
                <Alias z:Id="3010">Вход 1621</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1252</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3011" z:Size="1">
                  <FBDPortExtSettings z:Id="3012">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3013" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3014">KI</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3015" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1286</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3016" z:Size="1">
                  <FBDPortExtSettings z:Id="3017">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3013" i:nil="true" />
                <VariableName z:Ref="3007" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3018">
              <EndFBDPort z:Id="3019" i:type="InputFBDPort">
                <Alias z:Id="3020">Вход 1629</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1262</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3021" z:Size="1">
                  <FBDPortExtSettings z:Id="3022">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3023" i:type="d2p1:ArrayOfanyType" z:Size="17">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3024">BUFFER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3025" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>17</ArrayItemsCount>
                <Id>1301</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3026" z:Size="17">
                  <FBDPortExtSettings z:Id="3027">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3028">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3029">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3030">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3031">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3032">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3033">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3034">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3035">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3036">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3037">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3038">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3039">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3040">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3041">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3042">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3043">
                    <Index>16</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3023" i:nil="true" />
                <VariableName z:Id="3044">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3045">
              <EndFBDPort z:Id="3046" i:type="InputFBDPort">
                <Alias z:Id="3047">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1261</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3048" z:Size="1">
                  <FBDPortExtSettings z:Id="3049">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3050" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3051">TestCMD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3052" i:type="OutputFBDPort">
                <Alias z:Id="3053">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1297</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3054" z:Size="1">
                  <FBDPortExtSettings z:Id="3055">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3050" i:nil="true" />
                <VariableName z:Id="3056">Testconfig</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3057">
              <EndFBDPort z:Id="3058" i:type="InputFBDPort">
                <Alias z:Id="3059">Test RUN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1259</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3060" z:Size="1">
                  <FBDPortExtSettings z:Id="3061">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3062" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3063">Test</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3064" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1305</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3065" z:Size="1">
                  <FBDPortExtSettings z:Id="3066">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3062" i:nil="true" />
                <VariableName z:Id="3067">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3068">
              <EndFBDPort z:Id="3069" i:type="InputFBDPort">
                <Alias z:Id="3070">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1484</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3071" z:Size="1">
                  <FBDPortExtSettings z:Id="3072">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3073" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3074" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3075">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3076" i:type="OutputFBDPort">
                <Alias z:Id="3077"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1522</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3078" z:Size="1">
                  <FBDPortExtSettings z:Id="3079">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3080" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3081" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3082">out_1522</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3083">
              <EndFBDPort z:Id="3084" i:type="InputFBDPort">
                <Alias z:Id="3085">K IN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1485</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3086" z:Size="1">
                  <FBDPortExtSettings z:Id="3087">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3088" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3089">KIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3090" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1530</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3091" z:Size="1">
                  <FBDPortExtSettings z:Id="3092">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3088" i:nil="true" />
                <VariableName z:Id="3093">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3094">
              <EndFBDPort z:Id="3095" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1532</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3096" z:Size="1">
                  <FBDPortExtSettings z:Id="3097">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3098">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3076" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3099">
              <EndFBDPort z:Id="3100" i:type="InputFBDPort">
                <Alias z:Id="3101">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1528</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3102" z:Size="1">
                  <FBDPortExtSettings z:Id="3103">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3104" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3105">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3106" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1533</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3107" z:Size="1">
                  <FBDPortExtSettings z:Id="3108">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3104" i:nil="true" />
                <VariableName z:Id="3109">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3110">
              <EndFBDPort z:Id="3111" i:type="InputFBDPort">
                <Alias z:Id="3112">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1430</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3113" z:Size="1">
                  <FBDPortExtSettings z:Id="3114">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3115" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3116" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3117">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3076" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3118">
              <EndFBDPort z:Id="3119" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1538</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3120" z:Size="1">
                  <FBDPortExtSettings z:Id="3121">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3122">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3076" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3123">
              <EndFBDPort z:Id="3124" i:type="InputFBDPort">
                <Alias z:Id="3125">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1541</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3126" z:Size="1">
                  <FBDPortExtSettings z:Id="3127">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3128" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3129">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3130" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1539</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3131" z:Size="1">
                  <FBDPortExtSettings z:Id="3132">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3128" i:nil="true" />
                <VariableName z:Id="3133">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3134">
              <EndFBDPort z:Id="3135" i:type="InputFBDPort">
                <Alias z:Id="3136">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1429</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3137" z:Size="1">
                  <FBDPortExtSettings z:Id="3138">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3139" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3140">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3141" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1543</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3142" z:Size="1">
                  <FBDPortExtSettings z:Id="3143">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3139" i:nil="true" />
                <VariableName z:Id="3144">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3145">
              <EndFBDPort z:Id="3146" i:type="InputFBDPort">
                <Alias z:Id="3147">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1221</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3148" z:Size="1">
                  <FBDPortExtSettings z:Id="3149">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3150" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3151">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3152" i:type="OutputFBDPort">
                <Alias z:Id="3153">AI.01: AIN_1_WaterT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1423</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3154" z:Size="1">
                  <FBDPortExtSettings z:Id="3155">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3150" i:nil="true" />
                <VariableName z:Ref="7" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3156">
              <EndFBDPort z:Id="3157" i:type="InputFBDPort">
                <Alias z:Id="3158">DO.01: DOUT_1_WaterPWM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1453</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3159" z:Size="2">
                  <FBDPortExtSettings z:Id="3160">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3161">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3162" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="49" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3163" i:type="OutputFBDPort">
                <Alias z:Id="3164">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1488</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3165" z:Size="2">
                  <FBDPortExtSettings z:Id="3166">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3167">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3162" i:nil="true" />
                <VariableName z:Id="3168">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3169">
              <EndFBDPort z:Id="3170" i:type="InputFBDPort">
                <Alias z:Id="3171">SP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1249</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3172" z:Size="1">
                  <FBDPortExtSettings z:Id="3173">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3174" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3175">Reference</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3176" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1693</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3177" z:Size="1">
                  <FBDPortExtSettings z:Id="3178">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3174" i:nil="true" />
                <VariableName z:Id="3179">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3180">
              <EndFBDPort z:Id="3181" i:type="InputFBDPort">
                <Alias z:Id="3182">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1692</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3183" z:Size="2">
                  <FBDPortExtSettings z:Id="3184">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3185">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3186" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3187">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3188" i:type="OutputFBDPort">
                <Alias z:Id="3189"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1695</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3190" z:Size="1">
                  <FBDPortExtSettings z:Id="3191">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3192" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3193" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">25</d2p1:anyType>
                </Value>
                <VariableName z:Id="3194">out_1695</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3195">
              <EndFBDPort z:Id="3196" i:type="InputFBDPort">
                <Alias z:Id="3197">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1699</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3198" z:Size="1">
                  <FBDPortExtSettings z:Id="3199">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3200">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3188" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3201">
              <EndFBDPort z:Id="3202" i:type="InputFBDPort">
                <Alias z:Id="3203">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1705</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3204" z:Size="1">
                  <FBDPortExtSettings z:Id="3205">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3206" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3207">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3208" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1700</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3209" z:Size="1">
                  <FBDPortExtSettings z:Id="3210">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3206" i:nil="true" />
                <VariableName z:Id="3211">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3212">
              <EndFBDPort z:Id="3213" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1702</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3214" z:Size="1">
                  <FBDPortExtSettings z:Id="3215">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3216" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3217">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3218" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1710</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3219" z:Size="1">
                  <FBDPortExtSettings z:Id="3220">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3216" i:nil="true" />
                <VariableName z:Id="3221">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3222">
              <EndFBDPort z:Id="3223" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1714</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3224" z:Size="1">
                  <FBDPortExtSettings z:Id="3225">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3174" i:nil="true" />
                <VariableName z:Id="3226">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3176" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3227">
              <EndFBDPort z:Id="3228" i:type="InputFBDPort">
                <Alias z:Id="3229">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1717</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3230" z:Size="1">
                  <FBDPortExtSettings z:Id="3231">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3232" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3233">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3234" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1600</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3235" z:Size="1">
                  <FBDPortExtSettings z:Id="3236">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3232" i:nil="true" />
                <VariableName z:Id="3237">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3238">
              <EndFBDPort z:Ref="3181" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3239" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1719</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3240" z:Size="1">
                  <FBDPortExtSettings z:Id="3241">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3186" i:nil="true" />
                <VariableName z:Id="3242">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3243">
              <EndFBDPort z:Id="3244" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1685</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3245" z:Size="1">
                  <FBDPortExtSettings z:Id="3246">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3247" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="3217" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3248" i:type="OutputFBDPort">
                <Alias z:Id="3249">Выход 1257</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1268</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3250" z:Size="1">
                  <FBDPortExtSettings z:Id="3251">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3247" i:nil="true" />
                <VariableName z:Id="3252">Y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3253">
              <EndFBDPort z:Id="3254" i:type="InputFBDPort">
                <Alias z:Id="3255">DO.03: DOUT_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1910</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3256" z:Size="2">
                  <FBDPortExtSettings z:Id="3257">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3258">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3259" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="54" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3260" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1908</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3261" z:Size="2">
                  <FBDPortExtSettings z:Id="3262">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3263">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3259" i:nil="true" />
                <VariableName z:Id="3264">mass</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3265">
              <EndFBDPort z:Id="3266" i:type="InputFBDPort">
                <Alias z:Id="3267">MIN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1255</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3268" z:Size="1">
                  <FBDPortExtSettings z:Id="3269">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3270" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3271">PID_Min</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3272" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2081</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3273" z:Size="1">
                  <FBDPortExtSettings z:Id="3274">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3270" i:nil="true" />
                <VariableName z:Id="3275">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3276">
              <EndFBDPort z:Id="3277" i:type="InputFBDPort">
                <Alias z:Id="3278">MAX</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1254</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3279" z:Size="1">
                  <FBDPortExtSettings z:Id="3280">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3281" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3282">PID_Max</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3283" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2078</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3284" z:Size="1">
                  <FBDPortExtSettings z:Id="3285">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3281" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3286">
              <EndFBDPort z:Id="3287" i:type="InputFBDPort">
                <Alias z:Id="3288">K filter</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1222</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3289" z:Size="1">
                  <FBDPortExtSettings z:Id="3290">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3291" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3292">k</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3293" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2106</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3294" z:Size="1">
                  <FBDPortExtSettings z:Id="3295">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3291" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3296">
              <EndFBDPort z:Id="3297" i:type="InputFBDPort">
                <Alias z:Id="3298">DifErrReset</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1263</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3299" z:Size="1">
                  <FBDPortExtSettings z:Id="3300">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3301" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3302">DER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3303" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2312</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3304" z:Size="1">
                  <FBDPortExtSettings z:Id="3305">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3301" i:nil="true" />
                <VariableName z:Id="3306">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3307">
              <EndFBDPort z:Id="3308" i:type="InputFBDPort">
                <Alias z:Id="3309">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3310" z:Size="1">
                  <FBDPortExtSettings z:Id="3311">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2980" i:nil="true" />
                <VariableName z:Id="3312">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2982" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3313">
              <EndFBDPort z:Id="3314" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1246</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3315" z:Size="1">
                  <FBDPortExtSettings z:Id="3316">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3317" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3318">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3319" i:type="OutputFBDPort">
                <Alias z:Id="3320">T (°C)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1224</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3321" z:Size="1">
                  <FBDPortExtSettings z:Id="3322">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3317" i:nil="true" />
                <VariableName z:Id="3323">t</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3324">
              <EndFBDPort z:Id="3325" i:type="InputFBDPort">
                <Alias z:Id="3326">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2604</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3327" z:Size="4">
                  <FBDPortExtSettings z:Id="3328">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3329">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3330">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3331">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3332" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3333">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3334" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2620</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3335" z:Size="4">
                  <FBDPortExtSettings z:Id="3336">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3337">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3338">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3339">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3332" i:nil="true" />
                <VariableName z:Id="3340">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3341">
              <EndFBDPort z:Id="3342" i:type="InputFBDPort">
                <Alias z:Id="3343">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2603</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3344" z:Size="4">
                  <FBDPortExtSettings z:Id="3345">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3346">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3347">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3348">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3349" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3350">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3351" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2617</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3352" z:Size="4">
                  <FBDPortExtSettings z:Id="3353">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3354">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3355">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3356">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3349" i:nil="true" />
                <VariableName z:Ref="3340" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3357">
              <EndFBDPort z:Id="3358" i:type="InputFBDPort">
                <Alias z:Id="3359">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2622</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3360" z:Size="2">
                  <FBDPortExtSettings z:Id="3361">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3362">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3247" i:nil="true" />
                <VariableName z:Id="3363">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3248" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3364">
              <EndFBDPort z:Ref="3358" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3365" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2478</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3366" z:Size="1">
                  <FBDPortExtSettings z:Id="3367">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3368" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3369">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3370">
              <EndFBDPort z:Id="3371" i:type="InputFBDPort">
                <Alias z:Id="3372">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2602</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3373" z:Size="1">
                  <FBDPortExtSettings z:Id="3374">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3375" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3376">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3377" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2623</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3378" z:Size="1">
                  <FBDPortExtSettings z:Id="3379">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3375" i:nil="true" />
                <VariableName z:Id="3380">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3381">
              <EndFBDPort z:Id="3382" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2626</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3383" z:Size="1">
                  <FBDPortExtSettings z:Id="3384">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3385" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3386">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3387" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2605</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3388" z:Size="1">
                  <FBDPortExtSettings z:Id="3389">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3385" i:nil="true" />
                <VariableName z:Id="3390">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3391">
              <EndFBDPort z:Id="3392" i:type="InputFBDPort">
                <Alias z:Id="3393">Вход 2817</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2631</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3394" z:Size="1">
                  <FBDPortExtSettings z:Id="3395">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3396" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3397">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3398" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2635</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3399" z:Size="1">
                  <FBDPortExtSettings z:Id="3400">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3396" i:nil="true" />
                <VariableName z:Ref="3340" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3401">
              <EndFBDPort z:Id="3402" i:type="InputFBDPort">
                <Alias z:Id="3403">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2630</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3404" z:Size="2">
                  <FBDPortExtSettings z:Id="3405">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3406">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3407" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3408">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3409" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2627</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3410" z:Size="1">
                  <FBDPortExtSettings z:Id="3411">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3407" i:nil="true" />
                <VariableName z:Ref="3340" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3412">
              <EndFBDPort z:Ref="3402" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3413" i:type="OutputFBDPort">
                <Alias z:Id="3414"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2637</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3415" z:Size="1">
                  <FBDPortExtSettings z:Id="3416">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3417" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3418" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="3419">out_2637</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3420">
              <EndFBDPort z:Id="3421" i:type="InputFBDPort">
                <Alias z:Id="3422">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1483</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3423" z:Size="1">
                  <FBDPortExtSettings z:Id="3424">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3425" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3426">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3427" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2632</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3428" z:Size="1">
                  <FBDPortExtSettings z:Id="3429">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3425" i:nil="true" />
                <VariableName z:Id="3430">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3431">
              <EndFBDPort z:Id="3432" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2477</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3433" z:Size="1">
                  <FBDPortExtSettings z:Id="3434">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3435" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3436">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3437" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2642</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3438" z:Size="1">
                  <FBDPortExtSettings z:Id="3439">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3435" i:nil="true" />
                <VariableName z:Id="3440">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3441">
              <EndFBDPort z:Id="3442" i:type="InputFBDPort">
                <Alias z:Id="3443">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2639</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3444" z:Size="1">
                  <FBDPortExtSettings z:Id="3445">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3446" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3447">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3448" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1715</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3449" z:Size="1">
                  <FBDPortExtSettings z:Id="3450">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3446" i:nil="true" />
                <VariableName z:Id="3451">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3452">
              <EndFBDPort z:Id="3453" i:type="InputFBDPort">
                <Alias z:Id="3454">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2662</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3455" z:Size="5">
                  <FBDPortExtSettings z:Id="3456">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3457">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3458">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3459">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3460">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3461" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3462" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">13.2167578</d2p1:anyType>
                </Value>
                <VariableName z:Id="3463">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3464" i:type="OutputFBDPort">
                <Alias z:Ref="3414" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2666</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3465" z:Size="1">
                  <FBDPortExtSettings z:Id="3466">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3467" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3468" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">450</d2p1:anyType>
                </Value>
                <VariableName z:Id="3469">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3470">
              <EndFBDPort z:Ref="3453" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3471" i:type="OutputFBDPort">
                <Alias z:Id="3472"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2668</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3473" z:Size="1">
                  <FBDPortExtSettings z:Id="3474">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3475" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3476" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">350</d2p1:anyType>
                </Value>
                <VariableName z:Id="3477">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3478">
              <EndFBDPort z:Ref="3453" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3479" i:type="OutputFBDPort">
                <Alias z:Id="3480"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2674</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3481" z:Size="1">
                  <FBDPortExtSettings z:Id="3482">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3483" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3484" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="3485">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3486">
              <EndFBDPort z:Ref="3453" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3487" i:type="OutputFBDPort">
                <Alias z:Id="3488"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2676</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3489" z:Size="1">
                  <FBDPortExtSettings z:Id="3490">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3491" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3492" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="3493">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3494">
              <EndFBDPort z:Ref="3453" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3495" i:type="OutputFBDPort">
                <Alias z:Id="3496"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2678</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3497" z:Size="1">
                  <FBDPortExtSettings z:Id="3498">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3499" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3500" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="3501">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3502">
              <EndFBDPort z:Id="3503" i:type="InputFBDPort">
                <Alias z:Id="3504">Вход 2817</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2663</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3505" z:Size="1">
                  <FBDPortExtSettings z:Id="3506">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3507" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3508">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3509" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2739</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3510" z:Size="1">
                  <FBDPortExtSettings z:Id="3511">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3507" i:nil="true" />
                <VariableName z:Id="3512">yByte</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3513">
              <EndFBDPort z:Id="3514" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3515" z:Size="1">
                  <FBDPortExtSettings z:Id="3516">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3517" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3518">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3519" i:type="OutputFBDPort">
                <Alias z:Id="3520">CV</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3521" z:Size="1">
                  <FBDPortExtSettings z:Id="3522">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3517" i:nil="true" />
                <VariableName z:Id="3523">CV</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3524">
              <EndFBDPort z:Id="3525" i:type="InputFBDPort">
                <Alias z:Id="3526">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2787</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3527" z:Size="2">
                  <FBDPortExtSettings z:Id="3528">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3529">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3530" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3531">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3532" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2767</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3533" z:Size="1">
                  <FBDPortExtSettings z:Id="3534">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3530" i:nil="true" />
                <VariableName z:Id="3535">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3536">
              <EndFBDPort z:Id="3537" i:type="InputFBDPort">
                <Alias z:Id="3538">CU</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2694</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3539" z:Size="1">
                  <FBDPortExtSettings z:Id="3540">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3541" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3542">CU</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3543" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2788</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3544" z:Size="1">
                  <FBDPortExtSettings z:Id="3545">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3541" i:nil="true" />
                <VariableName z:Id="3546">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3547">
              <EndFBDPort z:Id="3548" i:type="InputFBDPort">
                <Alias z:Id="3549">RESET</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2696</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3550" z:Size="1">
                  <FBDPortExtSettings z:Id="3551">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3552" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3553">Reset</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3554" i:type="OutputFBDPort">
                <Alias z:Id="3555">Выход 1571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2697</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3556" z:Size="1">
                  <FBDPortExtSettings z:Id="3557">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3552" i:nil="true" />
                <VariableName z:Id="3558">Q</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3559">
              <EndFBDPort z:Id="3560" i:type="InputFBDPort">
                <Alias z:Id="3561">Reset</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2782</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3562" z:Size="1">
                  <FBDPortExtSettings z:Id="3563">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3564" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3565">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3566" i:type="OutputFBDPort">
                <Alias z:Id="3567">Done</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2784</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3568" z:Size="1">
                  <FBDPortExtSettings z:Id="3569">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3564" i:nil="true" />
                <VariableName z:Id="3570">_d</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3571">
              <EndFBDPort z:Id="3572" i:type="InputFBDPort">
                <Alias z:Id="3573">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2765</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3574" z:Size="1">
                  <FBDPortExtSettings z:Id="3575">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3576" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3577">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3578" i:type="OutputFBDPort">
                <Alias z:Id="3579">MM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2758</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3580" z:Size="1">
                  <FBDPortExtSettings z:Id="3581">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3576" i:nil="true" />
                <VariableName z:Id="3582">mins</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3583">
              <EndFBDPort z:Ref="3525" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3584" i:type="OutputFBDPort">
                <Alias z:Ref="3414" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2790</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3585" z:Size="1">
                  <FBDPortExtSettings z:Id="3586">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3587" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3588" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3589">out_2790</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3590">
              <EndFBDPort z:Id="3591" i:type="InputFBDPort">
                <Alias z:Id="3592">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2640</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3593" z:Size="7">
                  <FBDPortExtSettings z:Id="3594">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3595">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3596">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3597">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3598">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3599">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3600">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3601" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3602">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3603" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2647</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3604" z:Size="7">
                  <FBDPortExtSettings z:Id="3605">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3606">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3607">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3608">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3609">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3610">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3611">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3601" i:nil="true" />
                <VariableName z:Ref="3340" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3612">
              <EndFBDPort z:Id="3613" i:type="InputFBDPort">
                <Alias z:Id="3614">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2641</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3615" z:Size="7">
                  <FBDPortExtSettings z:Id="3616">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3617">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3618">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3619">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3620">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3621">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3622">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3623" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3624">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3625" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2650</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3626" z:Size="7">
                  <FBDPortExtSettings z:Id="3627">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3628">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3629">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3630">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3631">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3632">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3633">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3623" i:nil="true" />
                <VariableName z:Ref="3340" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3634">
              <EndFBDPort z:Id="3635" i:type="InputFBDPort">
                <Alias z:Id="3636">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2800</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3637" z:Size="1">
                  <FBDPortExtSettings z:Id="3638">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3150" i:nil="true" />
                <VariableName z:Id="3639">valueIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3152" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3640">
              <EndFBDPort z:Id="3641" i:type="InputFBDPort">
                <Alias z:Id="3642">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2810</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3643" z:Size="1">
                  <FBDPortExtSettings z:Id="3644">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3150" i:nil="true" />
                <VariableName z:Id="3645">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3152" i:nil="true" />
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="3646" z:Size="68">
            <FBDItem z:Id="3647" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3648">Планировщик базовый</Description>
              <HelpID>380</HelpID>
              <Id>2651</Id>
              <InputPortsCollection z:Id="3649" z:Size="7">
                <FBDPort z:Id="3650" i:type="InputFBDPort">
                  <Alias z:Id="3651">Вход 7275</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2652</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3652" z:Size="1">
                    <FBDPortExtSettings z:Id="3653">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3654">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Id="3655" i:type="InputFBDPort">
                  <Alias z:Id="3656">DD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2653</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3657" z:Size="1">
                    <FBDPortExtSettings z:Id="3658">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3659">DD</VariableName>
                </FBDPort>
                <FBDPort z:Id="3660" i:type="InputFBDPort">
                  <Alias z:Id="3661">MM</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2654</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3662" z:Size="1">
                    <FBDPortExtSettings z:Id="3663">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3664">MM</VariableName>
                </FBDPort>
                <FBDPort z:Id="3665" i:type="InputFBDPort">
                  <Alias z:Id="3666">DW</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2655</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3667" z:Size="1">
                    <FBDPortExtSettings z:Id="3668">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3669">WD</VariableName>
                </FBDPort>
                <FBDPort z:Id="3670" i:type="InputFBDPort">
                  <Alias z:Id="3671">hh</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2656</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3672" z:Size="1">
                    <FBDPortExtSettings z:Id="3673">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3674">H</VariableName>
                </FBDPort>
                <FBDPort z:Id="3675" i:type="InputFBDPort">
                  <Alias z:Id="3676">mm</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2657</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3677" z:Size="1">
                    <FBDPortExtSettings z:Id="3678">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3679">M</VariableName>
                </FBDPort>
                <FBDPort z:Id="3680" i:type="InputFBDPort">
                  <Alias z:Id="3681">ss</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2658</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3682" z:Size="1">
                    <FBDPortExtSettings z:Id="3683">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3684">S</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3685" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5444.8514415094469</d8p1:_x>
                <d8p1:_y>3514.1621018807978</d8p1:_y>
              </Location>
              <Name z:Id="3686">SCHEDULER</Name>
              <OutputPortsCollection z:Id="3687" z:Size="2">
                <FBDPort z:Id="3688" i:type="OutputFBDPort">
                  <Alias z:Id="3689">Выход 7283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2659</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3690" z:Size="1">
                    <FBDPortExtSettings z:Id="3691">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3692" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3693">Status</VariableName>
                </FBDPort>
                <FBDPort z:Id="3694" i:type="OutputFBDPort">
                  <Alias z:Id="3695">Выход 7284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2660</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3696" z:Size="1">
                    <FBDPortExtSettings z:Id="3697">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3698" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3699">Error</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3700">YART</Prefix>
              <SecondName z:Ref="3686" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>b2e3dc54-ccde-4742-842d-2ef2db49f5ac</SpecificationId>
              <Code z:Id="3701">Status = false;


if(DD &lt; 1 || (DD &gt; 31 &amp;&amp; DD != 255) || MM &lt; 1 || (MM &gt; 12 &amp;&amp; MM != 255) || WD &lt; 1 || (WD &gt; 7 &amp;&amp; WD !=255) || H &lt; 0 || (H &gt; 23 &amp;&amp; H != 255) || M &lt; 0 || (M &gt; 59 &amp;&amp; M != 255) || S &lt; 0 || (S &gt; 59 &amp;&amp; S != 255)){


	Error = true;


}else{


	Error = false;


	if(Enable){


		Status = true;


		new yMM = YARTMerc230ShortRToInt(88);


		new yDD = YARTMerc230ShortLToInt(88);


		new yWD = YARTMerc230ShortRToInt(90);


		new yH  = YARTMerc230ShortLToInt(86);


		new yM  = YARTMerc230ShortRToInt(86);


		new yS  = YARTMerc230ShortLToInt(84);


		if((MM != 255 &amp;&amp; MM != yMM) || (DD != 255 &amp;&amp; DD != yDD) || (WD != 255 &amp;&amp; WD != yWD) || 


			(H != 255 &amp;&amp; H != yH) || (M != 255 &amp;&amp; M != yM) || (S != 255 &amp;&amp; S != yS)) Status = false;


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="3702" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1694</Id>
              <InputPortsCollection z:Id="3703" z:Size="0" />
              <InternalPortsCollection z:Id="3704" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3950</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3705" z:Size="1">
                <FBDPort z:Ref="3188" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3706">_</Prefix>
              <SecondName z:Id="3707">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3192" i:nil="true" />
              <OutputFBDPort z:Ref="3188" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3708" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2104</Id>
              <InputPortsCollection z:Id="3709" z:Size="1">
                <FBDPort z:Id="3710" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3711" z:Size="1">
                    <FBDPortExtSettings z:Id="3712">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3713">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3714" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3590</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="3715">Tag</Name>
              <OutputPortsCollection z:Id="3716" z:Size="1">
                <FBDPort z:Ref="3293" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3717">_</Prefix>
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="373" i:nil="true" />
              <InputFBDPort z:Ref="3710" i:nil="true" />
              <OutputFBDPort z:Ref="3293" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3718" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1422</Id>
              <InputPortsCollection z:Id="3719" z:Size="0" />
              <InternalPortsCollection z:Id="3720" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3550</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Id="3721">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="3722" z:Size="1">
                <FBDPort z:Ref="3152" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3723">_</Prefix>
              <SecondName z:Id="3724">_00_A1_AI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3725">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3726" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3727">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1220</Id>
              <InputPortsCollection z:Id="3728" z:Size="3">
                <FBDPort z:Ref="3146" i:nil="true" />
                <FBDPort z:Ref="3287" i:nil="true" />
                <FBDPort z:Id="3729" i:type="InputFBDPort">
                  <Alias z:Id="3730">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1223</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3731" z:Size="1">
                    <FBDPortExtSettings z:Id="3732">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3733">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3734" z:Size="1">
                <FBDPort z:Id="3735" i:type="InternalFBDPort">
                  <Alias z:Id="3736">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1228</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3737" z:Size="10">
                    <FBDPortExtSettings z:Id="3738">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3739">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3740">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3741">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3742">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3743">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3744">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3745">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3746">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3747">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3748">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="3749">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="3750" z:Size="4">
                <FBDPort z:Ref="3319" i:nil="true" />
                <FBDPort z:Id="3751" i:type="OutputFBDPort">
                  <Alias z:Id="3752">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1225</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3753" z:Size="1">
                    <FBDPortExtSettings z:Id="3754">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3755" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3756">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="3757" i:type="OutputFBDPort">
                  <Alias z:Id="3758">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3759" z:Size="1">
                    <FBDPortExtSettings z:Id="3760">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3761" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3762">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="3763" i:type="OutputFBDPort">
                  <Alias z:Id="3764">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1227</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3765" z:Size="1">
                    <FBDPortExtSettings z:Id="3766">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3767" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3768">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3769">YART</Prefix>
              <SecondName z:Id="3770">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Id="3771">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 0;





YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="3772" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1245</Id>
              <InputPortsCollection z:Id="3773" z:Size="1">
                <FBDPort z:Ref="3314" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3774" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="3775">Tag</Name>
              <OutputPortsCollection z:Id="3776" z:Size="1">
                <FBDPort z:Ref="2982" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3777">_</Prefix>
              <SecondName z:Ref="3775" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="240" i:nil="true" />
              <InputFBDPort z:Ref="3314" i:nil="true" />
              <OutputFBDPort z:Ref="2982" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3778" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3779">Разность A и B</Description>
              <HelpID>44</HelpID>
              <Id>1697</Id>
              <InputPortsCollection z:Id="3780" z:Size="2">
                <FBDPort z:Ref="3308" i:nil="true" />
                <FBDPort z:Ref="3196" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3781" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>3500</d8p1:_y>
              </Location>
              <Name z:Id="3782">SUB</Name>
              <OutputPortsCollection z:Id="3783" z:Size="1">
                <FBDPort z:Ref="3208" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3784">YART</Prefix>
              <SecondName z:Ref="3782" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>68db83f5-d55f-435e-9a28-1607ee207726</SpecificationId>
              <Code z:Id="3785">//#SUB (разность Float)


#inline y = a - b;</Code>
            </FBDItem>
            <FBDItem z:Id="3786" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3787">Поиск значения по линейной функции с ограничением минимального и максимального значений</Description>
              <HelpID>114</HelpID>
              <Id>1704</Id>
              <InputPortsCollection z:Id="3788" z:Size="5">
                <FBDPort z:Ref="3202" i:nil="true" />
                <FBDPort z:Id="3789" i:type="InputFBDPort">
                  <Alias z:Id="3790">Xmin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1706</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3791" z:Size="1">
                    <FBDPortExtSettings z:Id="3792">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3793" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3794" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3795">Xmin</VariableName>
                </FBDPort>
                <FBDPort z:Id="3796" i:type="InputFBDPort">
                  <Alias z:Id="3797">Ymin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1707</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3798" z:Size="1">
                    <FBDPortExtSettings z:Id="3799">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3800" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3801" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3802">Ymin</VariableName>
                </FBDPort>
                <FBDPort z:Id="3803" i:type="InputFBDPort">
                  <Alias z:Id="3804">Xmax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1708</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3805" z:Size="1">
                    <FBDPortExtSettings z:Id="3806">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3807" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3808" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3809">Xmax</VariableName>
                </FBDPort>
                <FBDPort z:Id="3810" i:type="InputFBDPort">
                  <Alias z:Id="3811">Ymax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1709</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3812" z:Size="1">
                    <FBDPortExtSettings z:Id="3813">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3814" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3815" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3816">Ymax</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3817" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>3460</d8p1:_y>
              </Location>
              <Name z:Id="3818">PHIS.LIM</Name>
              <OutputPortsCollection z:Id="3819" z:Size="1">
                <FBDPort z:Ref="3218" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3784" i:nil="true" />
              <SecondName z:Id="3820">myFizValiml</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>fe2f4ea4-aeb0-4475-979d-b0c351f312ba</SpecificationId>
              <Code z:Id="3821">//#PHIS . LIM (Преобразование в физическую величину с ограничением выхода)


//Преобразование физ. величины с ограничением


if(x &gt; Xmin &amp;&amp; x &lt; Xmax) y = Ymin + (x - Xmin)*((Ymax - Ymin)/(Xmax - Xmin));


else if(x &lt;= Xmin) y = Ymin;


else if(x &gt;= Xmax) y = Ymax;</Code>
            </FBDItem>
            <FBDItem z:Id="3822" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1701</Id>
              <InputPortsCollection z:Id="3823" z:Size="1">
                <FBDPort z:Ref="3213" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3824" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4400</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name z:Id="3825">Tag</Name>
              <OutputPortsCollection z:Id="3826" z:Size="1">
                <FBDPort z:Id="3827" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1703</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3828" z:Size="1">
                    <FBDPortExtSettings z:Id="3829">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3830" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="3237" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3706" i:nil="true" />
              <SecondName z:Ref="3825" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="236" i:nil="true" />
              <InputFBDPort z:Ref="3213" i:nil="true" />
              <OutputFBDPort z:Ref="3827" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3831" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3832">Автоматическое изменение значения по периоду и шагу</Description>
              <HelpID>450</HelpID>
              <Id>2775</Id>
              <InputPortsCollection z:Id="3833" z:Size="5">
                <FBDPort z:Id="3834" i:type="InputFBDPort">
                  <Alias z:Id="3835">First</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2778</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3836" z:Size="1">
                    <FBDPortExtSettings z:Id="3837">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3838" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3839" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3840">f</VariableName>
                </FBDPort>
                <FBDPort z:Id="3841" i:type="InputFBDPort">
                  <Alias z:Id="3842">Last</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2779</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3843" z:Size="1">
                    <FBDPortExtSettings z:Id="3844">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3845" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3846" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">50</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3847">l</VariableName>
                </FBDPort>
                <FBDPort z:Id="3848" i:type="InputFBDPort">
                  <Alias z:Id="3849">Step</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2780</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3850" z:Size="1">
                    <FBDPortExtSettings z:Id="3851">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3852" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3853" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3854">s</VariableName>
                </FBDPort>
                <FBDPort z:Id="3855" i:type="InputFBDPort">
                  <Alias z:Id="3856">Period (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2781</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3857" z:Size="1">
                    <FBDPortExtSettings z:Id="3858">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3859" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3860" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">10000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3861">p</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3560" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3862" z:Size="2">
                <FBDPort z:Id="3863" i:type="InternalFBDPort">
                  <Alias z:Id="3864">Внутренняя 45979</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2776</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3865" z:Size="2">
                    <FBDPortExtSettings z:Id="3866">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3867">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3868">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="3869" i:type="InternalFBDPort">
                  <Alias z:Id="3870">Внутренняя 46348</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2777</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3871" z:Size="1">
                    <FBDPortExtSettings z:Id="3872">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3873">init</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3010</d8p1:_x>
                <d8p1:_y>3540</d8p1:_y>
              </Location>
              <Name z:Id="3874">COUNTER B</Name>
              <OutputPortsCollection z:Id="3875" z:Size="3">
                <FBDPort z:Id="3876" i:type="OutputFBDPort">
                  <Alias z:Id="3877">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2783</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3878" z:Size="1">
                    <FBDPortExtSettings z:Id="3879">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3880" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3881">_e</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3566" i:nil="true" />
                <FBDPort z:Id="3882" i:type="OutputFBDPort">
                  <Alias z:Id="3883">Current</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2785</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3884" z:Size="1">
                    <FBDPortExtSettings z:Id="3885">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3886" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3887">_c</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="3888">counterExt_B</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>aa09f2f2-514a-44c3-856d-aa26d8d6c439</SpecificationId>
              <Code z:Id="3889">if(!init){


	r = true;


	init = true;


}





if((f &gt; l &amp;&amp; s &gt; 0) || (f &lt; l &amp;&amp; s &lt; 0)) s = -s;





if(s == 0 || p == 0){


	_e = true;


	r = true;


}





if(r){


	t[0] = 0;


	t[1] = 0;


	_c = f;


	_d = false;


}





if(!_e &amp;&amp; !_d){


	YARTAddScanTask(t[0], t[1]);


	if(t[0] &gt;= p){


		new k = t[0] / p;


		t[0] -= p * k;


		_c += s * k;


	}


	if((l &gt;= f &amp;&amp; _c &gt;= l) || (l &lt; f &amp;&amp; _c &lt;= l)){


		_c = l;


		_d = true;


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="3890" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2789</Id>
              <InputPortsCollection z:Id="3891" z:Size="0" />
              <InternalPortsCollection z:Id="3892" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3270</d8p1:_x>
                <d8p1:_y>3550</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3893" z:Size="1">
                <FBDPort z:Ref="3584" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3894">_</Prefix>
              <SecondName z:Id="3895">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3587" i:nil="true" />
              <OutputFBDPort z:Ref="3584" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3896" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3897">Считывание системного времени</Description>
              <HelpID>122</HelpID>
              <Id>2754</Id>
              <InputPortsCollection z:Id="3898" z:Size="0" />
              <InternalPortsCollection z:Id="3899" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3140</d8p1:_x>
                <d8p1:_y>3380</d8p1:_y>
              </Location>
              <Name z:Id="3900">GET TIME</Name>
              <OutputPortsCollection z:Id="3901" z:Size="5">
                <FBDPort z:Id="3902" i:type="OutputFBDPort">
                  <Alias z:Id="3903">TIME</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2755</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3904" z:Size="1">
                    <FBDPortExtSettings z:Id="3905">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="3906" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3907">time</VariableName>
                </FBDPort>
                <FBDPort z:Id="3908" i:type="OutputFBDPort">
                  <Alias z:Id="3909">SFRACT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2756</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3910" z:Size="1">
                    <FBDPortExtSettings z:Id="3911">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3912" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3913">sfract</VariableName>
                </FBDPort>
                <FBDPort z:Id="3914" i:type="OutputFBDPort">
                  <Alias z:Id="3915">SS</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2757</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3916" z:Size="1">
                    <FBDPortExtSettings z:Id="3917">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3918" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3919">sec</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3578" i:nil="true" />
                <FBDPort z:Id="3920" i:type="OutputFBDPort">
                  <Alias z:Id="3921">HH</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2759</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3922" z:Size="1">
                    <FBDPortExtSettings z:Id="3923">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3924" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3925">hrs</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="3926">myGetTime</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>91dda9a2-5588-4f94-a53e-c414a211e208</SpecificationId>
              <Code z:Id="3927">//#GET TIME (Читать время)


new ltime = GetTime(SYSTEM_TIME);


sfract = (10 * (FSeconds(ltime) &gt;&gt; 4)) + (FSeconds(ltime) &amp; 0x0f);


sec = 	(10 * (Seconds(ltime) &gt;&gt; 4)) + (Seconds(ltime) &amp; 0x0f);


mins =	(10 * (Minutes(ltime) &gt;&gt; 4)) + (Minutes(ltime) &amp; 0x0f);


hrs = 	(10 * (Hours(ltime) &gt;&gt; 4)) + (Hours(ltime) &amp; 0x0f);





time = ltime;</Code>
            </FBDItem>
            <FBDItem z:Id="3928" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3929">Сравнение двух значений</Description>
              <HelpID>297</HelpID>
              <Id>2764</Id>
              <InputPortsCollection z:Id="3930" z:Size="2">
                <FBDPort z:Ref="3572" i:nil="true" />
                <FBDPort z:Id="3931" i:type="InputFBDPort">
                  <Alias z:Id="3932">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2766</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3933" z:Size="1">
                    <FBDPortExtSettings z:Id="3934">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3935" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3936" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3937">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3938" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3280</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name z:Id="3939">A = B</Name>
              <OutputPortsCollection z:Id="3940" z:Size="1">
                <FBDPort z:Ref="3532" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="3941">aRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>54c7975f-0f11-42b6-beac-8b54f2c6b9a1</SpecificationId>
              <Code z:Id="3942">//#A = B (Равно byte)


#inline y = (a == b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="3943" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3944">Вычисление логического ИЛИ</Description>
              <HelpID>5</HelpID>
              <Id>2786</Id>
              <InputPortsCollection z:Id="3945" z:Size="1">
                <FBDPort z:Ref="3525" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3946" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3412.8726189002145</d8p1:_x>
                <d8p1:_y>3476.0841341658038</d8p1:_y>
              </Location>
              <Name z:Id="3947">OR</Name>
              <OutputPortsCollection z:Id="3948" z:Size="1">
                <FBDPort z:Ref="3543" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="3949">or</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>847d4d91-e424-48a2-a070-61748e5d053a</SpecificationId>
              <Code z:Id="3950">//#OR ( или )


for(new i = 0; i&lt;sizeof_x; i++) 	y = y|x[i];</Code>
            </FBDItem>
            <FBDItem z:Id="3951" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3952">Подсчет количества переходов CU из false в true. При достижении значения PV выход Q устанавливается в true. При включении Reset счетчик CV обнуляется</Description>
              <HelpID>15</HelpID>
              <Id>2692</Id>
              <InputPortsCollection z:Id="3953" z:Size="3">
                <FBDPort z:Ref="3537" i:nil="true" />
                <FBDPort z:Id="3954" i:type="InputFBDPort">
                  <Alias z:Id="3955">Вход 1570</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2695</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3956" z:Size="1">
                    <FBDPortExtSettings z:Id="3957">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3958" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3959" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3960">PV</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3548" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3961" z:Size="1">
                <FBDPort z:Id="3962" i:type="InternalFBDPort">
                  <Alias z:Id="3963">Отладка 2689</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2693</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3964" z:Size="1">
                    <FBDPortExtSettings z:Id="3965">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3966">lastIn</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name z:Id="3967">CTU</Name>
              <OutputPortsCollection z:Id="3968" z:Size="2">
                <FBDPort z:Ref="3554" i:nil="true" />
                <FBDPort z:Ref="3519" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="3969">CTU</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>56d44bca-6ca4-425b-bab2-36a857a3f483</SpecificationId>
              <Code z:Id="3970">//CTU  (Счетчик импульсов по переднему фронту)


if(CU &amp;&amp; !lastIn) CV++;


if(Reset) CV = 0;


if(CV &gt;= PV) Q = true;


lastIn = CU;</Code>
            </FBDItem>
            <FBDItem z:Id="3971" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3972">Преобразование Int в Byte</Description>
              <HelpID>107</HelpID>
              <Id>2737</Id>
              <InputPortsCollection z:Id="3973" z:Size="1">
                <FBDPort z:Ref="3514" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3974" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3631.8209332614306</d8p1:_x>
                <d8p1:_y>3550.5092528814744</d8p1:_y>
              </Location>
              <Name z:Id="3975">I&gt;B</Name>
              <OutputPortsCollection z:Id="3976" z:Size="1">
                <FBDPort z:Ref="3509" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="3977">IntByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e04c2635-a2c6-4e4a-bf64-ef55567929f6</SpecificationId>
              <Code z:Id="3978">//#I &gt; B (Int в Byte)


yByte = a;


if( a &gt; 255 )yByte = 255;


if( a &lt; 0 ) yByte = 0;</Code>
            </FBDItem>
            <FBDItem z:Id="3979" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2677</Id>
              <InputPortsCollection z:Id="3980" z:Size="0" />
              <InternalPortsCollection z:Id="3981" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3500</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3982" z:Size="1">
                <FBDPort z:Ref="3495" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3983">_</Prefix>
              <SecondName z:Id="3984">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3499" i:nil="true" />
              <OutputFBDPort z:Ref="3495" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3985" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2675</Id>
              <InputPortsCollection z:Id="3986" z:Size="0" />
              <InternalPortsCollection z:Id="3987" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3988" z:Size="1">
                <FBDPort z:Ref="3487" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3989">_</Prefix>
              <SecondName z:Id="3990">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3491" i:nil="true" />
              <OutputFBDPort z:Ref="3487" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3991" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2673</Id>
              <InputPortsCollection z:Id="3992" z:Size="0" />
              <InternalPortsCollection z:Id="3993" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3460</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3994" z:Size="1">
                <FBDPort z:Ref="3479" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3995">_</Prefix>
              <SecondName z:Id="3996">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3483" i:nil="true" />
              <OutputFBDPort z:Ref="3479" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3997" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2667</Id>
              <InputPortsCollection z:Id="3998" z:Size="0" />
              <InternalPortsCollection z:Id="3999" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3440</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4000" z:Size="1">
                <FBDPort z:Ref="3471" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4001">_</Prefix>
              <SecondName z:Id="4002">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3475" i:nil="true" />
              <OutputFBDPort z:Ref="3471" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4003" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2665</Id>
              <InputPortsCollection z:Id="4004" z:Size="0" />
              <InternalPortsCollection z:Id="4005" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4006" z:Size="1">
                <FBDPort z:Ref="3464" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Id="4007">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3467" i:nil="true" />
              <OutputFBDPort z:Ref="3464" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4008" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4009">Чтение значения элемента массива</Description>
              <HelpID>148</HelpID>
              <Id>2661</Id>
              <InputPortsCollection z:Id="4010" z:Size="2">
                <FBDPort z:Ref="3453" i:nil="true" />
                <FBDPort z:Ref="3503" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4011" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3400</d8p1:_y>
              </Location>
              <Name z:Id="4012">SWITCH FLOAT</Name>
              <OutputPortsCollection z:Id="4013" z:Size="1">
                <FBDPort z:Id="4014" i:type="OutputFBDPort">
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2664</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4015" z:Size="1">
                    <FBDPortExtSettings z:Id="4016">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4017" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4018">OUTSW</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4019">YART</Prefix>
              <SecondName z:Id="4020">SWITCHFLOAT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6ac531a6-d4cf-42c0-b2fb-54b61314db2b</SpecificationId>
              <Code z:Id="4021">//#SWITCH FLOAT (Переключатель Float   величин)


//Переключатель Float


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="4022" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4023">Экспоненциальное сглаживание</Description>
              <HelpID>118</HelpID>
              <Id>2798</Id>
              <InputPortsCollection z:Id="4024" z:Size="2">
                <FBDPort z:Ref="3635" i:nil="true" />
                <FBDPort z:Id="4025" i:type="InputFBDPort">
                  <Alias z:Id="4026">K</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2801</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4027" z:Size="1">
                    <FBDPortExtSettings z:Id="4028">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4029" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4030" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4031">inGain</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4032" z:Size="1">
                <FBDPort z:Id="4033" i:type="InternalFBDPort">
                  <Alias z:Id="4034">Внутренняя 33031</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2799</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4035" z:Size="1">
                    <FBDPortExtSettings z:Id="4036">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4037">init</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3780</d8p1:_y>
              </Location>
              <Name z:Id="4038">EXP FILTER</Name>
              <OutputPortsCollection z:Id="4039" z:Size="1">
                <FBDPort z:Id="4040" i:type="OutputFBDPort">
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2802</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4041" z:Size="1">
                    <FBDPortExtSettings z:Id="4042">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4043" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4044">y</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4045">YART</Prefix>
              <SecondName z:Id="4046">expFilter</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>c0f209cb-bc81-4bd5-9567-53461322338d</SpecificationId>
              <Code z:Id="4047">//fix string - don`t remove this string!!!!!!!!!!


//YARTF_ExpFilter(valueIN, inGain, y, init, Last);


//#EXP FILTER (Экспоненциальное сглаживание)





if(init){


	y = inGain * (valueIN - y) + y;


}else{


	y = valueIN;


	init = true;


}</Code>
            </FBDItem>
            <FBDItem z:Id="4048" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4049">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>862</HelpID>
              <Id>2808</Id>
              <InputPortsCollection z:Id="4050" z:Size="3">
                <FBDPort z:Ref="3641" i:nil="true" />
                <FBDPort z:Id="4051" i:type="InputFBDPort">
                  <Alias z:Id="4052">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2811</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4053" z:Size="1">
                    <FBDPortExtSettings z:Id="4054">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4055" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4056" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4057">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="4058" i:type="InputFBDPort">
                  <Alias z:Id="4059">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2812</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4060" z:Size="1">
                    <FBDPortExtSettings z:Id="4061">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4062">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4063" z:Size="1">
                <FBDPort z:Id="4064" i:type="InternalFBDPort">
                  <Alias z:Id="4065">Внутренняя 54731</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>2809</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4066" z:Size="10">
                    <FBDPortExtSettings z:Id="4067">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4068">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4069">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4070">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4071">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4072">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4073">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4074">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4075">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4076">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4077">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="4078">PT 1000 (385)</Name>
              <OutputPortsCollection z:Id="4079" z:Size="4">
                <FBDPort z:Id="4080" i:type="OutputFBDPort">
                  <Alias z:Id="4081">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2813</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4082" z:Size="1">
                    <FBDPortExtSettings z:Id="4083">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4084" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4085">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="4086" i:type="OutputFBDPort">
                  <Alias z:Id="4087">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2814</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4088" z:Size="1">
                    <FBDPortExtSettings z:Id="4089">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4090" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4091">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="4092" i:type="OutputFBDPort">
                  <Alias z:Id="4093">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2815</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4094" z:Size="1">
                    <FBDPortExtSettings z:Id="4095">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4096" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4097">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4098" i:type="OutputFBDPort">
                  <Alias z:Id="4099">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2816</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4100" z:Size="1">
                    <FBDPortExtSettings z:Id="4101">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4102" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4103">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4045" i:nil="true" />
              <SecondName z:Id="4104">PT1000_385</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>287faa38-da5e-478a-9de8-0469f4d3ce63</SpecificationId>
              <Code z:Id="4105">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 1;








YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="4106" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2636</Id>
              <InputPortsCollection z:Id="4107" z:Size="0" />
              <InternalPortsCollection z:Id="4108" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4901.442295468305</d8p1:_x>
                <d8p1:_y>3700.9068481285485</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4109" z:Size="1">
                <FBDPort z:Ref="3413" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Id="4110">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3417" i:nil="true" />
              <OutputFBDPort z:Ref="3413" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4111" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2633</Id>
              <InputPortsCollection z:Id="4112" z:Size="1">
                <FBDPort z:Id="4113" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2634</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4114" z:Size="1">
                    <FBDPortExtSettings z:Id="4115">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3386" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4116" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4830</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Id="4117">Tag</Name>
              <OutputPortsCollection z:Id="4118" z:Size="1">
                <FBDPort z:Ref="3398" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Ref="4117" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="397" i:nil="true" />
              <InputFBDPort z:Ref="4113" i:nil="true" />
              <OutputFBDPort z:Ref="3398" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4119" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2648</Id>
              <InputPortsCollection z:Id="4120" z:Size="1">
                <FBDPort z:Id="4121" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>7</ArrayItemsCount>
                  <Id>2649</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4122" z:Size="7">
                    <FBDPortExtSettings z:Id="4123">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4124">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4125">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4126">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4127">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4128">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4129">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3386" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4130" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="4117" i:nil="true" />
              <OutputPortsCollection z:Id="4131" z:Size="1">
                <FBDPort z:Ref="3625" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Ref="4117" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="419" i:nil="true" />
              <InputFBDPort z:Ref="4121" i:nil="true" />
              <OutputFBDPort z:Ref="3625" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4132" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2645</Id>
              <InputPortsCollection z:Id="4133" z:Size="1">
                <FBDPort z:Id="4134" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>7</ArrayItemsCount>
                  <Id>2646</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4135" z:Size="7">
                    <FBDPortExtSettings z:Id="4136">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4137">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4138">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4139">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4140">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4141">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4142">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3386" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4143" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>3600</d8p1:_y>
              </Location>
              <Name z:Ref="4117" i:nil="true" />
              <OutputPortsCollection z:Id="4144" z:Size="1">
                <FBDPort z:Ref="3603" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Ref="4117" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="409" i:nil="true" />
              <InputFBDPort z:Ref="4134" i:nil="true" />
              <OutputFBDPort z:Ref="3603" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4145" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1598</Id>
              <InputPortsCollection z:Id="4146" z:Size="1">
                <FBDPort z:Id="4147" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1599</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4148" z:Size="1">
                    <FBDPortExtSettings z:Id="4149">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4150" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4151" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">250</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="3217" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4152" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Ref="3825" i:nil="true" />
              <OutputPortsCollection z:Id="4153" z:Size="1">
                <FBDPort z:Ref="3234" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3706" i:nil="true" />
              <SecondName z:Ref="3825" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="244" i:nil="true" />
              <InputFBDPort z:Ref="4147" i:nil="true" />
              <OutputFBDPort z:Ref="3234" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4154" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4155">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1716</Id>
              <InputPortsCollection z:Id="4156" z:Size="2">
                <FBDPort z:Ref="3228" i:nil="true" />
                <FBDPort z:Id="4157" i:type="InputFBDPort">
                  <Alias z:Id="4158">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1718</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4159" z:Size="1">
                    <FBDPortExtSettings z:Id="4160">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4161" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4162" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4163">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4164" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4020</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4165">DIV</Name>
              <OutputPortsCollection z:Id="4166" z:Size="1">
                <FBDPort z:Ref="3239" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4167">YART</Prefix>
              <SecondName z:Ref="4165" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="2806" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4168" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4169">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>1691</Id>
              <InputPortsCollection z:Id="4170" z:Size="1">
                <FBDPort z:Ref="3181" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4171" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4150</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4172">ADD</Name>
              <OutputPortsCollection z:Id="4173" z:Size="1">
                <FBDPort z:Ref="3176" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3784" i:nil="true" />
              <SecondName z:Ref="4172" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Id="4174">//# ADD (сумма Float)  


for(new i = 0; i&lt;sizeof_x; i++)


{


		y = y + x[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="4175" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1713</Id>
              <InputPortsCollection z:Id="4176" z:Size="1">
                <FBDPort z:Ref="3223" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4177" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4390</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4178">Tag</Name>
              <OutputPortsCollection z:Id="4179" z:Size="1">
                <FBDPort z:Ref="3448" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4180">_</Prefix>
              <SecondName z:Ref="4178" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="302" i:nil="true" />
              <InputFBDPort z:Ref="3223" i:nil="true" />
              <OutputFBDPort z:Ref="3448" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4181" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4182">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>2638</Id>
              <InputPortsCollection z:Id="4183" z:Size="3">
                <FBDPort z:Ref="3442" i:nil="true" />
                <FBDPort z:Ref="3591" i:nil="true" />
                <FBDPort z:Ref="3613" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4184" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4370</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Id="4185">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="4186" z:Size="1">
                <FBDPort z:Ref="3437" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4187">YART</Prefix>
              <SecondName z:Id="4188">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Id="4189">//#PIECEWISE LINEAR (Кусочно-линейное преобразование Float)


if(sizeof_X != sizeof_Y) return;


for(new i = 0; i &lt; sizeof_X - 1; i++){


	if(X[i] &lt;= INX &amp;&amp; INX &lt;= X[i+1]){


		OUTY = Y[i] + (INX - X[i])*((Y[i+1] - Y[i])/(X[i+1] - X[i]));


		return; 	


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="4190" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2476</Id>
              <InputPortsCollection z:Id="4191" z:Size="1">
                <FBDPort z:Ref="3432" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4192" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4450</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name z:Id="4193">Tag</Name>
              <OutputPortsCollection z:Id="4194" z:Size="1">
                <FBDPort z:Ref="3365" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4195">_</Prefix>
              <SecondName z:Ref="4193" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="393" i:nil="true" />
              <InputFBDPort z:Ref="3432" i:nil="true" />
              <OutputFBDPort z:Ref="3365" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4196" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2310</Id>
              <InputPortsCollection z:Id="4197" z:Size="1">
                <FBDPort z:Id="4198" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2311</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4199" z:Size="1">
                    <FBDPortExtSettings z:Id="4200">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4201">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4202" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4050</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Id="4203">Tag</Name>
              <OutputPortsCollection z:Id="4204" z:Size="1">
                <FBDPort z:Ref="3303" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4205">_</Prefix>
              <SecondName z:Ref="4203" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="389" i:nil="true" />
              <InputFBDPort z:Ref="4198" i:nil="true" />
              <OutputFBDPort z:Ref="3303" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4206" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2079</Id>
              <InputPortsCollection z:Id="4207" z:Size="1">
                <FBDPort z:Id="4208" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2080</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4209" z:Size="1">
                    <FBDPortExtSettings z:Id="4210">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4211" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4212" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4213" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="4214" z:Size="1">
                <FBDPort z:Ref="3272" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="369" i:nil="true" />
              <InputFBDPort z:Ref="4208" i:nil="true" />
              <OutputFBDPort z:Ref="3272" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4215" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2076</Id>
              <InputPortsCollection z:Id="4216" z:Size="1">
                <FBDPort z:Id="4217" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2077</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4218" z:Size="1">
                    <FBDPortExtSettings z:Id="4219">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4220" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4221" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4222" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="4223" z:Size="1">
                <FBDPort z:Ref="3283" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="365" i:nil="true" />
              <InputFBDPort z:Ref="4217" i:nil="true" />
              <OutputFBDPort z:Ref="3283" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4224" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1303</Id>
              <InputPortsCollection z:Id="4225" z:Size="1">
                <FBDPort z:Id="4226" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1304</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4227" z:Size="1">
                    <FBDPortExtSettings z:Id="4228">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4229">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4230" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3990</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Id="4231">Tag</Name>
              <OutputPortsCollection z:Id="4232" z:Size="1">
                <FBDPort z:Ref="3064" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4233">_</Prefix>
              <SecondName z:Ref="4231" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="280" i:nil="true" />
              <InputFBDPort z:Ref="4226" i:nil="true" />
              <OutputFBDPort z:Ref="3064" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4234" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1299</Id>
              <InputPortsCollection z:Id="4235" z:Size="1">
                <FBDPort z:Id="4236" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>17</ArrayItemsCount>
                  <Id>1300</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4237" z:Size="17">
                    <FBDPortExtSettings z:Id="4238">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4239">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4240">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4241">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4242">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4243">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4244">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4245">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4246">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4247">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4248">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4249">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4250">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4251">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4252">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4253">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4254">
                      <Index>16</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4255">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4256" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Id="4257">Tag</Name>
              <OutputPortsCollection z:Id="4258" z:Size="1">
                <FBDPort z:Ref="3025" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4259">_</Prefix>
              <SecondName z:Ref="4257" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="260" i:nil="true" />
              <InputFBDPort z:Ref="4236" i:nil="true" />
              <OutputFBDPort z:Ref="3025" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4260" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>877</HelpID>
              <Id>1294</Id>
              <InputPortsCollection z:Id="4261" z:Size="2">
                <FBDPort z:Id="4262" i:type="InputFBDPort">
                  <Alias z:Id="4263">Hysteresis</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1295</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4264" z:Size="1">
                    <FBDPortExtSettings z:Id="4265">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4266" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4267" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4268">Hysteresis</VariableName>
                </FBDPort>
                <FBDPort z:Id="4269" i:type="InputFBDPort">
                  <Alias z:Id="4270">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1296</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4271" z:Size="1">
                    <FBDPortExtSettings z:Id="4272">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4273" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4274" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4275">Error</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4276" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="4277">Test config</Name>
              <OutputPortsCollection z:Id="4278" z:Size="1">
                <FBDPort z:Ref="3052" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4279">YART</Prefix>
              <SecondName z:Id="4280">Test_config</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>2bebd07f-c4fe-4658-8c7d-514556245970</SpecificationId>
              <Code z:Id="4281">//Задание конфигурации автонастройки


Testconfig = Hysteresis + Error * 4;</Code>
            </FBDItem>
            <FBDItem z:Id="4282" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1287</Id>
              <InputPortsCollection z:Id="4283" z:Size="1">
                <FBDPort z:Id="4284" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1288</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4285" z:Size="1">
                    <FBDPortExtSettings z:Id="4286">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4287">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4288" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="4289">Tag</Name>
              <OutputPortsCollection z:Id="4290" z:Size="1">
                <FBDPort z:Ref="3004" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4291">_</Prefix>
              <SecondName z:Ref="4289" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="256" i:nil="true" />
              <InputFBDPort z:Ref="4284" i:nil="true" />
              <OutputFBDPort z:Ref="3004" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4292" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1284</Id>
              <InputPortsCollection z:Id="4293" z:Size="1">
                <FBDPort z:Id="4294" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1285</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4295" z:Size="1">
                    <FBDPortExtSettings z:Id="4296">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4287" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4297" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Ref="4289" i:nil="true" />
              <OutputPortsCollection z:Id="4298" z:Size="1">
                <FBDPort z:Ref="3015" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4291" i:nil="true" />
              <SecondName z:Ref="4289" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="252" i:nil="true" />
              <InputFBDPort z:Ref="4294" i:nil="true" />
              <OutputFBDPort z:Ref="3015" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4299" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1277</Id>
              <InputPortsCollection z:Id="4300" z:Size="1">
                <FBDPort z:Id="4301" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1278</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4302" z:Size="1">
                    <FBDPortExtSettings z:Id="4303">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4304">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4305" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="4306">Tag</Name>
              <OutputPortsCollection z:Id="4307" z:Size="1">
                <FBDPort z:Ref="2993" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4308">_</Prefix>
              <SecondName z:Ref="4306" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="248" i:nil="true" />
              <InputFBDPort z:Ref="4301" i:nil="true" />
              <OutputFBDPort z:Ref="2993" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4309" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4310">Встроенный ПИД регулятор с возможностью автоматической настройки</Description>
              <HelpID>782</HelpID>
              <Id>1248</Id>
              <InputPortsCollection z:Id="4311" z:Size="15">
                <FBDPort z:Ref="3170" i:nil="true" />
                <FBDPort z:Ref="2976" i:nil="true" />
                <FBDPort z:Ref="2987" i:nil="true" />
                <FBDPort z:Ref="3009" i:nil="true" />
                <FBDPort z:Ref="2998" i:nil="true" />
                <FBDPort z:Ref="3277" i:nil="true" />
                <FBDPort z:Ref="3266" i:nil="true" />
                <FBDPort z:Id="4312" i:type="InputFBDPort">
                  <Alias z:Id="4313">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1256</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4314" z:Size="1">
                    <FBDPortExtSettings z:Id="4315">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4316" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4317" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.01</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4318">Kinput</VariableName>
                </FBDPort>
                <FBDPort z:Id="4319" i:type="InputFBDPort">
                  <Alias z:Id="4320">K OUT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1257</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4321" z:Size="1">
                    <FBDPortExtSettings z:Id="4322">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4323" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4324" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">20</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4325">Koutput</VariableName>
                </FBDPort>
                <FBDPort z:Id="4326" i:type="InputFBDPort">
                  <Alias z:Id="4327">PERIOD(s)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1258</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4328" z:Size="1">
                    <FBDPortExtSettings z:Id="4329">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4330" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4331" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4332">T</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3058" i:nil="true" />
                <FBDPort z:Id="4333" i:type="InputFBDPort">
                  <Alias z:Id="4334">n Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1260</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4335" z:Size="1">
                    <FBDPortExtSettings z:Id="4336">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4337" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4338" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4339">NP_Test</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3046" i:nil="true" />
                <FBDPort z:Ref="3019" i:nil="true" />
                <FBDPort z:Ref="3297" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4340" z:Size="1">
                <FBDPort z:Id="4341" i:type="InternalFBDPort">
                  <Alias z:Id="4342">Внутренняя 56499</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>1270</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4343" z:Size="4">
                    <FBDPortExtSettings z:Id="4344">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4345">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4346">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4347">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4348">a</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4250</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="4349">AUTO PID</Name>
              <OutputPortsCollection z:Id="4350" z:Size="6">
                <FBDPort z:Id="4351" i:type="OutputFBDPort">
                  <Alias z:Id="4352">K IN * SP</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1264</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4353" z:Size="1">
                    <FBDPortExtSettings z:Id="4354">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4355" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4356">refPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="4357" i:type="OutputFBDPort">
                  <Alias z:Id="4358">K OUT * X</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1265</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4359" z:Size="1">
                    <FBDPortExtSettings z:Id="4360">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4361" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4362">fbPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="4363" i:type="OutputFBDPort">
                  <Alias z:Id="4364">Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1266</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4365" z:Size="1">
                    <FBDPortExtSettings z:Id="4366">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4367" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4368">n_Test</VariableName>
                </FBDPort>
                <FBDPort z:Id="4369" i:type="OutputFBDPort">
                  <Alias z:Id="4370">Y1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1267</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4371" z:Size="1">
                    <FBDPortExtSettings z:Id="4372">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4373" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4374">outPID</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3248" i:nil="true" />
                <FBDPort z:Id="4375" i:type="OutputFBDPort">
                  <Alias z:Id="4376">Выход 35511</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1269</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4377" z:Size="1">
                    <FBDPortExtSettings z:Id="4378">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4379" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4380">BUFF_ERR</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4381">YART</Prefix>
              <SecondName z:Id="4382">sPID_en_eno_new</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>0167f5df-d619-42ef-b191-4e954aaaff22</SpecificationId>
              <Code z:Id="4383">/*


*	a[0] - counrer


*	a[1] - ti


*	a[2] - tf


*	a[3] - init


*/





if (!a[3]){


	a[0] = NP_Test;


	a[3] = true;


}





if(DER){


	set_float(BUFFER[0] + 40, 0.0);


	return;


}





if(BUFFER[1] &lt; 17 || BUFFER[0] &lt; 1024 || BUFFER[0] &gt; 33791) {


	__eno = false;


	BUFF_ERR = true;


	return;


}





new Float:t;


new ready;


new cmd = get_coil(Test[0]);


new mode = get_coil(Test[0]);


//Переносим коэффициенты из FRAM в буфер  


if (!mode){


	new Float:valF = get_float(KP[0]);


	set_float(BUFFER[0] + 20, valF);





	valF = get_float(KI[0]);


	set_float(BUFFER[0] + 24, valF);





	valF = get_float(KD[0]);


	set_float(BUFFER[0] + 28, valF);


} else n_Test = NP_Test - a[0] + 1;





if (T != 0.0) {


	// Adjust Reference


	t = Reference * Kinput;


	set_float(BUFFER[0], t);


	refPID = t;





	// Adjust Feedback


	t = Feedback * Kinput;


	set_float(BUFFER[0] + 4, t);


	fbPID = t;





	if (a[1] &gt;= floatround(T * 1000, floatround_round))//Был if clock


	{


		a[1] = 0;


		a[2] = 0;


		// Max, Min, T	


		set_float(BUFFER[0] + 8,  PID_Max);


		set_float(BUFFER[0] + 12, PID_Min);


		set_float(BUFFER[0] + 16, T);





		cmd &amp;= 0x01;


		cmd |= (TestCMD &lt;&lt; 1);


		ready = smart_pid(BUFFER[0], cmd, BUFFER[0]+20);





		if (!mode) a[0] = NP_Test;


			else {


				if (a[0] != 0) {


					if (ready) a[0]--;


					if (a[0] == 0){//если тест закончился копируем из  буфера в FRAM


						    set_coil(Test[0], 0);


						


							new Float:valF = get_float(BUFFER[0]+20);


							set_float(KP[0],valF);





							valF = get_float(BUFFER[0]+24);


							set_float(KI[0],valF);





							valF = get_float(BUFFER[0]+28);


							set_float(KD[0],valF);		


									}


								}	 





				}


		}





outPID = get_float(BUFFER[0]+20+3*4);


Y = outPID * Koutput;


YARTAddScanTask(a[1], a[2]);


}</Code>
            </FBDItem>
            <FBDItem z:Id="4384" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4385">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>2621</Id>
              <InputPortsCollection z:Id="4386" z:Size="1">
                <FBDPort z:Ref="3358" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4387" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4501</d8p1:_x>
                <d8p1:_y>3687</d8p1:_y>
              </Location>
              <Name z:Id="4388">ADD</Name>
              <OutputPortsCollection z:Id="4389" z:Size="1">
                <FBDPort z:Ref="3377" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Ref="4388" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Ref="4174" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4390" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2618</Id>
              <InputPortsCollection z:Id="4391" z:Size="1">
                <FBDPort z:Id="4392" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>2619</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4393" z:Size="4">
                    <FBDPortExtSettings z:Id="4394">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4395">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4396">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4397">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3386" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4398" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="4117" i:nil="true" />
              <OutputPortsCollection z:Id="4399" z:Size="1">
                <FBDPort z:Ref="3334" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Ref="4117" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="295" i:nil="true" />
              <InputFBDPort z:Ref="4392" i:nil="true" />
              <OutputFBDPort z:Ref="3334" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4400" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2615</Id>
              <InputPortsCollection z:Id="4401" z:Size="1">
                <FBDPort z:Id="4402" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>2616</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4403" z:Size="4">
                    <FBDPortExtSettings z:Id="4404">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4405">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4406">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4407">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3386" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4408" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>3610</d8p1:_y>
              </Location>
              <Name z:Ref="4117" i:nil="true" />
              <OutputPortsCollection z:Id="4409" z:Size="1">
                <FBDPort z:Ref="3351" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Ref="4117" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="288" i:nil="true" />
              <InputFBDPort z:Ref="4402" i:nil="true" />
              <OutputFBDPort z:Ref="3351" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4410" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4411">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>2601</Id>
              <InputPortsCollection z:Id="4412" z:Size="3">
                <FBDPort z:Ref="3371" i:nil="true" />
                <FBDPort z:Ref="3342" i:nil="true" />
                <FBDPort z:Ref="3325" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4413" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4780</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Id="4414">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="4415" z:Size="1">
                <FBDPort z:Ref="3387" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="4416">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Ref="4189" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4417" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2625</Id>
              <InputPortsCollection z:Id="4418" z:Size="1">
                <FBDPort z:Ref="3382" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4419" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4930</d8p1:_x>
                <d8p1:_y>3590</d8p1:_y>
              </Location>
              <Name z:Ref="4117" i:nil="true" />
              <OutputPortsCollection z:Id="4420" z:Size="1">
                <FBDPort z:Ref="3409" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Ref="4117" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="405" i:nil="true" />
              <InputFBDPort z:Ref="3382" i:nil="true" />
              <OutputFBDPort z:Ref="3409" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4421" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4422">Чтение значения элемента массива</Description>
              <HelpID>148</HelpID>
              <Id>2629</Id>
              <InputPortsCollection z:Id="4423" z:Size="2">
                <FBDPort z:Ref="3402" i:nil="true" />
                <FBDPort z:Ref="3392" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4424" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5040</d8p1:_x>
                <d8p1:_y>3660</d8p1:_y>
              </Location>
              <Name z:Id="4425">SWITCH FLOAT</Name>
              <OutputPortsCollection z:Id="4426" z:Size="1">
                <FBDPort z:Ref="3427" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3700" i:nil="true" />
              <SecondName z:Id="4427">SWITCHFLOAT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6ac531a6-d4cf-42c0-b2fb-54b61314db2b</SpecificationId>
              <Code z:Ref="4021" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4428" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1521</Id>
              <InputPortsCollection z:Id="4429" z:Size="0" />
              <InternalPortsCollection z:Id="4430" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4420</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4431" z:Size="1">
                <FBDPort z:Ref="3076" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4432">_</Prefix>
              <SecondName z:Id="4433">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3080" i:nil="true" />
              <OutputFBDPort z:Ref="3076" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4434" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4435">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1531</Id>
              <InputPortsCollection z:Id="4436" z:Size="1">
                <FBDPort z:Ref="3095" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4437" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4570</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="4438">I&gt;F</Name>
              <OutputPortsCollection z:Id="4439" z:Size="1">
                <FBDPort z:Ref="3106" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4440">YART</Prefix>
              <SecondName z:Id="4441">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2167" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4442" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4443">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1527</Id>
              <InputPortsCollection z:Id="4444" z:Size="2">
                <FBDPort z:Ref="3100" i:nil="true" />
                <FBDPort z:Id="4445" i:type="InputFBDPort">
                  <Alias z:Id="4446">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1529</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4447" z:Size="1">
                    <FBDPortExtSettings z:Id="4448">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4449" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4450" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4451">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4452" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4700</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="4453">DIV</Name>
              <OutputPortsCollection z:Id="4454" z:Size="1">
                <FBDPort z:Ref="3090" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4440" i:nil="true" />
              <SecondName z:Ref="4453" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="2806" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4455" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4456">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1482</Id>
              <InputPortsCollection z:Id="4457" z:Size="5">
                <FBDPort z:Ref="3421" i:nil="true" />
                <FBDPort z:Ref="3069" i:nil="true" />
                <FBDPort z:Ref="3084" i:nil="true" />
                <FBDPort z:Id="4458" i:type="InputFBDPort">
                  <Alias z:Id="4459">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1486</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4460" z:Size="1">
                    <FBDPortExtSettings z:Id="4461">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4462" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4463" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4464">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="4465" i:type="InputFBDPort">
                  <Alias z:Id="4466">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1487</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4467" z:Size="1">
                    <FBDPortExtSettings z:Id="4468">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4469" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4470" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4471">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4472" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4880</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="4473">2 PWM</Name>
              <OutputPortsCollection z:Id="4474" z:Size="1">
                <FBDPort z:Ref="3163" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4440" i:nil="true" />
              <SecondName z:Id="4475">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Id="4476">//2 PWM


PWM[0] = PERIOD;





if(STOP) return; 


if(ONCOM){


		PWM[1] = PERIOD;


		return;


		}





if(DUTY &gt;=0) PWM[1] =  floatround((DUTY*KIN), floatround_round);</Code>
            </FBDItem>
            <FBDItem z:Id="4477" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1452</Id>
              <InputPortsCollection z:Id="4478" z:Size="1">
                <FBDPort z:Ref="3157" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4479" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="4480">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="4481" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4432" i:nil="true" />
              <SecondName z:Id="4482">_00_A1_DO_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4483">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4484" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4485">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1537</Id>
              <InputPortsCollection z:Id="4486" z:Size="1">
                <FBDPort z:Ref="3119" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4487" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4580</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="4488">I&gt;F</Name>
              <OutputPortsCollection z:Id="4489" z:Size="1">
                <FBDPort z:Ref="3130" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4490">YART</Prefix>
              <SecondName z:Id="4491">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2167" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4492" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4493">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1540</Id>
              <InputPortsCollection z:Id="4494" z:Size="2">
                <FBDPort z:Ref="3124" i:nil="true" />
                <FBDPort z:Id="4495" i:type="InputFBDPort">
                  <Alias z:Id="4496">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1542</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4497" z:Size="1">
                    <FBDPortExtSettings z:Id="4498">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4499" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4500" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4501">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4502" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Id="4503">DIV</Name>
              <OutputPortsCollection z:Id="4504" z:Size="1">
                <FBDPort z:Ref="3141" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4505">YART</Prefix>
              <SecondName z:Ref="4503" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="2806" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4506" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4507">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1428</Id>
              <InputPortsCollection z:Id="4508" z:Size="5">
                <FBDPort z:Ref="3135" i:nil="true" />
                <FBDPort z:Ref="3111" i:nil="true" />
                <FBDPort z:Id="4509" i:type="InputFBDPort">
                  <Alias z:Id="4510">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1431</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4511" z:Size="1">
                    <FBDPortExtSettings z:Id="4512">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4513" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4514" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4515">KIN</VariableName>
                </FBDPort>
                <FBDPort z:Id="4516" i:type="InputFBDPort">
                  <Alias z:Id="4517">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1432</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4518" z:Size="1">
                    <FBDPortExtSettings z:Id="4519">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4520">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="4521" i:type="InputFBDPort">
                  <Alias z:Id="4522">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1433</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4523" z:Size="1">
                    <FBDPortExtSettings z:Id="4524">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4525">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4526" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4710</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="4527">2 PWM</Name>
              <OutputPortsCollection z:Id="4528" z:Size="1">
                <FBDPort z:Ref="2969" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4529">YART</Prefix>
              <SecondName z:Id="4530">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Ref="4476" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4531" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1446</Id>
              <InputPortsCollection z:Id="4532" z:Size="1">
                <FBDPort z:Ref="2963" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4533" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Ref="4480" i:nil="true" />
              <OutputPortsCollection z:Id="4534" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4432" i:nil="true" />
              <SecondName z:Id="4535">_00_A1_DO_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4536">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4537" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1684</Id>
              <InputPortsCollection z:Id="4538" z:Size="1">
                <FBDPort z:Ref="3244" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4539" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="3825" i:nil="true" />
              <OutputPortsCollection z:Id="4540" z:Size="1">
                <FBDPort z:Id="4541" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1686</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4542" z:Size="1">
                    <FBDPortExtSettings z:Id="4543">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4544" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="3237" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3706" i:nil="true" />
              <SecondName z:Ref="3825" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="401" i:nil="true" />
              <InputFBDPort z:Ref="3244" i:nil="true" />
              <OutputFBDPort z:Ref="4541" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4545" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4546">Упаковка значения периода и скважности в массив совместимый с дискретным выходом который сконфигурирован как аппаратный ШИМ</Description>
              <HelpID>100</HelpID>
              <Id>1905</Id>
              <InputPortsCollection z:Id="4547" z:Size="2">
                <FBDPort z:Id="4548" i:type="InputFBDPort">
                  <Alias z:Id="4549">PERIOD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1906</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4550" z:Size="1">
                    <FBDPortExtSettings z:Id="4551">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4552" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4553" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">50</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4554">period</VariableName>
                </FBDPort>
                <FBDPort z:Id="4555" i:type="InputFBDPort">
                  <Alias z:Id="4556">DUTY</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1907</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4557" z:Size="1">
                    <FBDPortExtSettings z:Id="4558">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4559" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4560" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">25</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4561">duty</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4562" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="4563">PWM</Name>
              <OutputPortsCollection z:Id="4564" z:Size="1">
                <FBDPort z:Ref="3260" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4565">YART</Prefix>
              <SecondName z:Id="4566">PWM2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>8e60f8dc-c7f7-47af-a5f1-f4dbc3563a8f</SpecificationId>
              <Code z:Id="4567">//#2 PWM (Двухпозиционный ШИМ)  


//Упаковка шим в массив для выхода YART 


mass[0] = period;


mass[1] = duty;</Code>
            </FBDItem>
            <FBDItem z:Id="4568" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1909</Id>
              <InputPortsCollection z:Id="4569" z:Size="1">
                <FBDPort z:Ref="3254" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4570" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4960</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="4571">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="4572" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="4573">_</Prefix>
              <SecondName z:Id="4574">_00_A1_DO_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4575">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4576" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1497</Id>
              <InputPortsCollection z:Id="4577" z:Size="0" />
              <InternalPortsCollection z:Id="4578" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3253.7555666924063</d8p1:_x>
                <d8p1:_y>4020</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4579" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4432" i:nil="true" />
              <SecondName z:Id="4580">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT5S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName z:Id="4581">Otoplenok_test_PID_Feed_Forward_17.11.2020_ChartData.xlsx</FileName>
              <Height>552.59740003179741</Height>
              <Series z:Id="4582" z:Size="4">
                <TagChartSeriesVisualItem z:Id="4583">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="4584">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="4585">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1244</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="4586">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="4587">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>139</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="4588">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1680</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="4589">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="4590">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>128</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="4591">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1712</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="4592">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="4593">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>255</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="4594">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>2624</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-11-29T18:21:11.353347+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-11-29T18:11:11.353347+03:00</VisualXRangeMin>
              <Width>1281.7019934575014</Width>
            </FBDItem>
            <FBDItem z:Id="4595" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1696</Id>
              <InputPortsCollection z:Id="4596" z:Size="0" />
              <InternalPortsCollection z:Id="4597" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3847</d8p1:_x>
                <d8p1:_y>3390</d8p1:_y>
              </Location>
              <Name z:Id="4598">comment</Name>
              <OutputPortsCollection z:Id="4599" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3706" i:nil="true" />
              <SecondName z:Id="4600">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="4601">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</Comment>
              <Height>288.82794090937523</Height>
              <Width>739.55937564483975</Width>
            </FBDItem>
            <FBDItem z:Id="4602" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1711</Id>
              <InputPortsCollection z:Id="4603" z:Size="0" />
              <InternalPortsCollection z:Id="4604" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4550</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Ref="4598" i:nil="true" />
              <OutputPortsCollection z:Id="4605" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3706" i:nil="true" />
              <SecondName z:Id="4606">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="4607">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</Comment>
              <Height>323.20423176420718</Height>
              <Width>616.24959060752462</Width>
            </FBDItem>
            <FBDItem z:Id="4608" i:type="SpinEditVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2558</Id>
              <InputPortsCollection z:Id="4609" z:Size="0" />
              <InternalPortsCollection z:Id="4610" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4611" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4195" i:nil="true" />
              <SecondName z:Id="4612">newfun_2779205890</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>c9cd1998-9f6a-4831-b031-f3754cb1f6ab</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="4613">
                <ArrayIndex>0</ArrayIndex>
                <TagId>1244</TagId>
              </Tag>
              <Format z:Id="4614">0.##</Format>
            </FBDItem>
            <FBDItem z:Id="4615" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2628</Id>
              <InputPortsCollection z:Id="4616" z:Size="0" />
              <InternalPortsCollection z:Id="4617" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3320</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Id="4618">comment</Name>
              <OutputPortsCollection z:Id="4619" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Id="4620">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="4621">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</Comment>
              <Height>288.72573402440639</Height>
              <Width>223.24848872253051</Width>
            </FBDItem>
            <FBDItem z:Id="4622" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2791</Id>
              <InputPortsCollection z:Id="4623" z:Size="0" />
              <InternalPortsCollection z:Id="4624" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>2947.1831809657679</d8p1:_x>
                <d8p1:_y>3343.8353557969358</d8p1:_y>
              </Location>
              <Name z:Ref="4618" i:nil="true" />
              <OutputPortsCollection z:Id="4625" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3894" i:nil="true" />
              <SecondName z:Id="4626">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="4627">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</Comment>
              <Height>312.04824842255675</Height>
              <Width>827.67395391243235</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="4628">PID_control</Name>
          <Parent z:Ref="2958" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>3</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="4629">PID</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="4630" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="4631" z:Size="1">
        <d2p1:anyType z:Id="4632" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="4633" z:Size="3">
            <FBDConnector z:Id="4634">
              <EndFBDPort z:Id="4635" i:type="InputFBDPort">
                <Alias z:Id="4636">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1206</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4637" z:Size="1">
                  <FBDPortExtSettings z:Id="4638">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4639" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="4640">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4641" i:type="OutputFBDPort">
                <Alias z:Id="4642">AI.02: AIN_2_RoomT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1425</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4643" z:Size="1">
                  <FBDPortExtSettings z:Id="4644">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4639" i:nil="true" />
                <VariableName z:Ref="10" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4645">
              <EndFBDPort z:Id="4646" i:type="InputFBDPort">
                <Alias z:Id="4647">K filter</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1207</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4648" z:Size="1">
                  <FBDPortExtSettings z:Id="4649">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4650" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="4651">k</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4652" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2109</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4653" z:Size="1">
                  <FBDPortExtSettings z:Id="4654">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4650" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4655">
              <EndFBDPort z:Id="4656" i:type="InputFBDPort">
                <Alias z:Id="4657">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2315</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4658" z:Size="1">
                  <FBDPortExtSettings z:Id="4659">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4660" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="4661">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4662" i:type="OutputFBDPort">
                <Alias z:Id="4663">AI.03: AIN_3_FLOOD</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2248</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4664" z:Size="1">
                  <FBDPortExtSettings z:Id="4665">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4660" i:nil="true" />
                <VariableName z:Ref="13" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="4666" z:Size="7">
            <FBDItem z:Id="4667" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2107</Id>
              <InputPortsCollection z:Id="4668" z:Size="1">
                <FBDPort z:Id="4669" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2108</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4670" z:Size="1">
                    <FBDPortExtSettings z:Id="4671">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4672" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3560</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="4673" z:Size="1">
                <FBDPort z:Ref="4652" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="373" i:nil="true" />
              <InputFBDPort z:Ref="4669" i:nil="true" />
              <OutputFBDPort z:Ref="4652" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4674" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1424</Id>
              <InputPortsCollection z:Id="4675" z:Size="0" />
              <InternalPortsCollection z:Id="4676" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="3721" i:nil="true" />
              <OutputPortsCollection z:Id="4677" z:Size="1">
                <FBDPort z:Ref="4641" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3723" i:nil="true" />
              <SecondName z:Id="4678">_00_A1_AI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4679">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4680" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4681">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1205</Id>
              <InputPortsCollection z:Id="4682" z:Size="3">
                <FBDPort z:Ref="4635" i:nil="true" />
                <FBDPort z:Ref="4646" i:nil="true" />
                <FBDPort z:Id="4683" i:type="InputFBDPort">
                  <Alias z:Id="4684">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1208</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4685" z:Size="1">
                    <FBDPortExtSettings z:Id="4686">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4687">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4688" z:Size="1">
                <FBDPort z:Id="4689" i:type="InternalFBDPort">
                  <Alias z:Id="4690">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1213</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4691" z:Size="10">
                    <FBDPortExtSettings z:Id="4692">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4693">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4694">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4695">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4696">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4697">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4698">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4699">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4700">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4701">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4702">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3810</d8p1:_x>
                <d8p1:_y>3600</d8p1:_y>
              </Location>
              <Name z:Id="4703">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="4704" z:Size="4">
                <FBDPort z:Id="4705" i:type="OutputFBDPort">
                  <Alias z:Id="4706">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1209</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4707" z:Size="1">
                    <FBDPortExtSettings z:Id="4708">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4709" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4710">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="4711" i:type="OutputFBDPort">
                  <Alias z:Id="4712">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1210</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4713" z:Size="1">
                    <FBDPortExtSettings z:Id="4714">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4715" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4716">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="4717" i:type="OutputFBDPort">
                  <Alias z:Id="4718">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1211</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4719" z:Size="1">
                    <FBDPortExtSettings z:Id="4720">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4721" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4722">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4723" i:type="OutputFBDPort">
                  <Alias z:Id="4724">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1212</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4725" z:Size="1">
                    <FBDPortExtSettings z:Id="4726">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4727" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4728">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4729">YART</Prefix>
              <SecondName z:Id="4730">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Ref="3771" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4731" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2247</Id>
              <InputPortsCollection z:Id="4732" z:Size="0" />
              <InternalPortsCollection z:Id="4733" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3541</d8p1:_x>
                <d8p1:_y>3846</d8p1:_y>
              </Location>
              <Name z:Id="4734">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="4735" z:Size="1">
                <FBDPort z:Ref="4662" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4736">_</Prefix>
              <SecondName z:Id="4737">_00_A1_AI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4738">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4739" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4740">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>862</HelpID>
              <Id>2313</Id>
              <InputPortsCollection z:Id="4741" z:Size="3">
                <FBDPort z:Ref="4656" i:nil="true" />
                <FBDPort z:Id="4742" i:type="InputFBDPort">
                  <Alias z:Id="4743">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2316</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4744" z:Size="1">
                    <FBDPortExtSettings z:Id="4745">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4746" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4747" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4748">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="4749" i:type="InputFBDPort">
                  <Alias z:Id="4750">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2317</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4751" z:Size="1">
                    <FBDPortExtSettings z:Id="4752">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4753">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4754" z:Size="1">
                <FBDPort z:Id="4755" i:type="InternalFBDPort">
                  <Alias z:Id="4756">Внутренняя 54731</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>2314</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4757" z:Size="10">
                    <FBDPortExtSettings z:Id="4758">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4759">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4760">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4761">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4762">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4763">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4764">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4765">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4766">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4767">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4768">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3740</d8p1:_y>
              </Location>
              <Name z:Id="4769">PT 1000 (385)</Name>
              <OutputPortsCollection z:Id="4770" z:Size="4">
                <FBDPort z:Id="4771" i:type="OutputFBDPort">
                  <Alias z:Id="4772">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2318</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4773" z:Size="1">
                    <FBDPortExtSettings z:Id="4774">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4775" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4776">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="4777" i:type="OutputFBDPort">
                  <Alias z:Id="4778">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2319</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4779" z:Size="1">
                    <FBDPortExtSettings z:Id="4780">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4781" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4782">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="4783" i:type="OutputFBDPort">
                  <Alias z:Id="4784">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2320</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4785" z:Size="1">
                    <FBDPortExtSettings z:Id="4786">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4787" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4788">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4789" i:type="OutputFBDPort">
                  <Alias z:Id="4790">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2321</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4791" z:Size="1">
                    <FBDPortExtSettings z:Id="4792">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4793" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4794">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4795">YART</Prefix>
              <SecondName z:Id="4796">PT1000_385</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>287faa38-da5e-478a-9de8-0469f4d3ce63</SpecificationId>
              <Code z:Ref="4105" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4797" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2253</Id>
              <InputPortsCollection z:Id="4798" z:Size="0" />
              <InternalPortsCollection z:Id="4799" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3469</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4800" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4736" i:nil="true" />
              <SecondName z:Id="4801">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName i:nil="true" />
              <Height>300</Height>
              <Series z:Id="4802" z:Size="1">
                <TagChartSeriesVisualItem z:Id="4803">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="4804">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="4805">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>2249</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-11-13T16:10:36.446792+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-11-13T15:50:36.446792+03:00</VisualXRangeMin>
              <Width>1480</Width>
            </FBDItem>
            <FBDItem z:Id="4806" i:type="MeterVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2255</Id>
              <InputPortsCollection z:Id="4807" z:Size="0" />
              <InternalPortsCollection z:Id="4808" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4240</d8p1:_x>
                <d8p1:_y>3650</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4809" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4736" i:nil="true" />
              <SecondName z:Id="4810">newfun_1350831332</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>30564771-8fd2-4b47-8909-ef003bfbeed2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="4811">
                <ArrayIndex>0</ArrayIndex>
                <TagId>2249</TagId>
              </Tag>
              <Dimension z:Ref="67" i:nil="true" />
              <EndValueScale>90</EndValueScale>
              <FormatLabel z:Id="4812">{0:f0}</FormatLabel>
              <MajorIntervalCount>20</MajorIntervalCount>
              <StartValueScale>0</StartValueScale>
            </FBDItem>
          </FBDItems>
          <Name z:Id="4813">Room_Control</Name>
          <Parent z:Ref="4630" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>4</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="4814">ROOM</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="4815" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="4816" z:Size="1">
        <d2p1:anyType z:Id="4817" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="4818" z:Size="3">
            <FBDConnector z:Id="4819">
              <EndFBDPort z:Id="4820" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1973</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4821" z:Size="1">
                  <FBDPortExtSettings z:Id="4822">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4823" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="1690" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4824" i:type="OutputFBDPort">
                <Alias z:Id="4825">E1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1962</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4826" z:Size="1">
                  <FBDPortExtSettings z:Id="4827">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4823" i:nil="true" />
                <VariableName z:Id="4828">_e1</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4829">
              <EndFBDPort z:Id="4830" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1976</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4831" z:Size="1">
                  <FBDPortExtSettings z:Id="4832">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4833" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="1690" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4834" i:type="OutputFBDPort">
                <Alias z:Id="4835">E2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1963</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4836" z:Size="1">
                  <FBDPortExtSettings z:Id="4837">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4833" i:nil="true" />
                <VariableName z:Id="4838">_e2</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4839">
              <EndFBDPort z:Id="4840" i:type="InputFBDPort">
                <Alias z:Id="4841">Port Par</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1951</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4842" z:Size="1">
                  <FBDPortExtSettings z:Id="4843">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="4844" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="4845">pp_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4846" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1980</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4847" z:Size="1">
                  <FBDPortExtSettings z:Id="4848">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="4844" i:nil="true" />
                <VariableName z:Ref="1706" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="4849" z:Size="4">
            <FBDItem z:Id="4850" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1978</Id>
              <InputPortsCollection z:Id="4851" z:Size="1">
                <FBDPort z:Id="4852" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1979</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4853" z:Size="1">
                    <FBDPortExtSettings z:Id="4854">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1690" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4855" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3450</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="1763" i:nil="true" />
              <OutputPortsCollection z:Id="4856" z:Size="1">
                <FBDPort z:Ref="4846" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1765" i:nil="true" />
              <SecondName z:Ref="1763" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="356" i:nil="true" />
              <InputFBDPort z:Ref="4852" i:nil="true" />
              <OutputFBDPort z:Ref="4846" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4857" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4858">Опрос счетчика Меркурий 203</Description>
              <HelpID>707</HelpID>
              <Id>1927</Id>
              <InputPortsCollection z:Id="4859" z:Size="4">
                <FBDPort z:Id="4860" i:type="InputFBDPort">
                  <Alias z:Id="4861">Enable</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1950</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4862" z:Size="1">
                    <FBDPortExtSettings z:Id="4863">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4864" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4865" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4866">e_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4840" i:nil="true" />
                <FBDPort z:Id="4867" i:type="InputFBDPort">
                  <Alias z:Id="4868">ADDR</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1952</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4869" z:Size="1">
                    <FBDPortExtSettings z:Id="4870">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4871" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4872" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">42687530</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4873">da_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4874" i:type="InputFBDPort">
                  <Alias z:Id="4875">Timeout</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1953</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4876" z:Size="1">
                    <FBDPortExtSettings z:Id="4877">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4878" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4879" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4880">t_</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4881" z:Size="22">
                <FBDPort z:Id="4882" i:type="InternalFBDPort">
                  <Alias z:Id="4883">Внутренняя 10753</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1928</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4884" z:Size="1">
                    <FBDPortExtSettings z:Id="4885">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4886">_init_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4887" i:type="InternalFBDPort">
                  <Alias z:Id="4888">Внутренняя 10759</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1929</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4889" z:Size="1">
                    <FBDPortExtSettings z:Id="4890">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4891">_blockId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4892" i:type="InternalFBDPort">
                  <Alias z:Id="4893">Внутренняя 10760</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1930</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4894" z:Size="1">
                    <FBDPortExtSettings z:Id="4895">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4896">_stage_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4897" i:type="InternalFBDPort">
                  <Alias z:Id="4898">Внутренняя 13906</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1931</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4899" z:Size="1">
                    <FBDPortExtSettings z:Id="4900">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4901">_timer_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4902" i:type="InternalFBDPort">
                  <Alias z:Id="4903">Внутренняя 14582</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1932</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4904" z:Size="1">
                    <FBDPortExtSettings z:Id="4905">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4906">_timerNA_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4907" i:type="InternalFBDPort">
                  <Alias z:Id="4908">Внутренняя 13878</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1933</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4909" z:Size="1">
                    <FBDPortExtSettings z:Id="4910">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4911">_na_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4912" i:type="InternalFBDPort">
                  <Alias z:Id="4913">Внутренняя 16763</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1934</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4914" z:Size="1">
                    <FBDPortExtSettings z:Id="4915">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4916">_err_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4917" i:type="InternalFBDPort">
                  <Alias z:Id="4918">Внутренняя 16765</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1935</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4919" z:Size="1">
                    <FBDPortExtSettings z:Id="4920">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4921">_msgLen_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4922" i:type="InternalFBDPort">
                  <Alias z:Id="4923">Внутренняя 16767</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1936</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4924" z:Size="1">
                    <FBDPortExtSettings z:Id="4925">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4926">_txloop_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4927" i:type="InternalFBDPort">
                  <Alias z:Id="4928">Внутренняя 17727</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1937</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4929" z:Size="1">
                    <FBDPortExtSettings z:Id="4930">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4931">_lastBi_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4932" i:type="InternalFBDPort">
                  <Alias z:Id="4933">Внутренняя 17965</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1938</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4934" z:Size="1">
                    <FBDPortExtSettings z:Id="4935">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4936">_le_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4937" i:type="InternalFBDPort">
                  <Alias z:Id="4938">Внутренняя 17966</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1939</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4939" z:Size="1">
                    <FBDPortExtSettings z:Id="4940">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4941">_lda_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4942" i:type="InternalFBDPort">
                  <Alias z:Id="4943">Внутренняя 19074</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1940</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4944" z:Size="1">
                    <FBDPortExtSettings z:Id="4945">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4946">_mid_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4947" i:type="InternalFBDPort">
                  <Alias z:Id="4948">Внутренняя 21339</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1941</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4949" z:Size="1">
                    <FBDPortExtSettings z:Id="4950">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4951">_date_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4952" i:type="InternalFBDPort">
                  <Alias z:Id="4953">Внутренняя 21340</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1942</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4954" z:Size="1">
                    <FBDPortExtSettings z:Id="4955">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4956">_time_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4957" i:type="InternalFBDPort">
                  <Alias z:Id="4958">Внутренняя 20951</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1943</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4959" z:Size="1">
                    <FBDPortExtSettings z:Id="4960">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4961">_u_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4962" i:type="InternalFBDPort">
                  <Alias z:Id="4963">Внутренняя 23664</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1944</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4964" z:Size="1">
                    <FBDPortExtSettings z:Id="4965">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4966">_i_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4967" i:type="InternalFBDPort">
                  <Alias z:Id="4968">Внутренняя 23666</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1945</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4969" z:Size="1">
                    <FBDPortExtSettings z:Id="4970">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4971">_p_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4972" i:type="InternalFBDPort">
                  <Alias z:Id="4973">Внутренняя 23676</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1946</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4974" z:Size="1">
                    <FBDPortExtSettings z:Id="4975">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4976">_e1_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4977" i:type="InternalFBDPort">
                  <Alias z:Id="4978">Внутренняя 23678</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1947</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4979" z:Size="1">
                    <FBDPortExtSettings z:Id="4980">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4981">_e2_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4982" i:type="InternalFBDPort">
                  <Alias z:Id="4983">Внутренняя 23680</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1948</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4984" z:Size="1">
                    <FBDPortExtSettings z:Id="4985">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4986">_e3_</VariableName>
                </FBDPort>
                <FBDPort z:Id="4987" i:type="InternalFBDPort">
                  <Alias z:Id="4988">Внутренняя 23682</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1949</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4989" z:Size="1">
                    <FBDPortExtSettings z:Id="4990">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4991">_e4_</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670.5</d8p1:_x>
                <d8p1:_y>3918.5</d8p1:_y>
              </Location>
              <Name z:Id="4992">Merc203</Name>
              <OutputPortsCollection z:Id="4993" z:Size="12">
                <FBDPort z:Id="4994" i:type="OutputFBDPort">
                  <Alias z:Id="4995">Done</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1954</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4996" z:Size="1">
                    <FBDPortExtSettings z:Id="4997">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4998" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="4999">_d</VariableName>
                </FBDPort>
                <FBDPort z:Id="5000" i:type="OutputFBDPort">
                  <Alias z:Id="5001">NA</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1955</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5002" z:Size="1">
                    <FBDPortExtSettings z:Id="5003">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5004" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5005">_na</VariableName>
                </FBDPort>
                <FBDPort z:Id="5006" i:type="OutputFBDPort">
                  <Alias z:Id="5007">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1956</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5008" z:Size="1">
                    <FBDPortExtSettings z:Id="5009">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5010" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5011">_err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5012" i:type="OutputFBDPort">
                  <Alias z:Id="5013">Date</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1957</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5014" z:Size="1">
                    <FBDPortExtSettings z:Id="5015">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value z:Id="5016" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5017">_date</VariableName>
                </FBDPort>
                <FBDPort z:Id="5018" i:type="OutputFBDPort">
                  <Alias z:Id="5019">Time</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1958</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5020" z:Size="1">
                    <FBDPortExtSettings z:Id="5021">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="5022" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5023">_time</VariableName>
                </FBDPort>
                <FBDPort z:Id="5024" i:type="OutputFBDPort">
                  <Alias z:Id="5025">U</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1959</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5026" z:Size="1">
                    <FBDPortExtSettings z:Id="5027">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5028" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5029">_u</VariableName>
                </FBDPort>
                <FBDPort z:Id="5030" i:type="OutputFBDPort">
                  <Alias z:Id="5031">I</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1960</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5032" z:Size="1">
                    <FBDPortExtSettings z:Id="5033">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5034" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5035">_i</VariableName>
                </FBDPort>
                <FBDPort z:Id="5036" i:type="OutputFBDPort">
                  <Alias z:Id="5037">P</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1961</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5038" z:Size="1">
                    <FBDPortExtSettings z:Id="5039">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5040" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5041">_p</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4824" i:nil="true" />
                <FBDPort z:Ref="4834" i:nil="true" />
                <FBDPort z:Id="5042" i:type="OutputFBDPort">
                  <Alias z:Id="5043">E3</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1964</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5044" z:Size="1">
                    <FBDPortExtSettings z:Id="5045">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5046" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5047">_e3</VariableName>
                </FBDPort>
                <FBDPort z:Id="5048" i:type="OutputFBDPort">
                  <Alias z:Id="5049">E4</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1965</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5050" z:Size="1">
                    <FBDPortExtSettings z:Id="5051">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5052" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5053">_e4</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5054">YART</Prefix>
              <SecondName z:Id="5055">M203</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>632cf310-223b-4d34-8229-04a971866e4e</SpecificationId>
              <Code z:Id="5056">// Константы


const BL_MIN				= 28;


const TIMEOUT_CYCLE			= 200;


const TX_LOOP_COUNT_MAX		= 3;





const ST_PORT_OPEN			= 0;


const ST_CLEAN				= 1;


const ST_MSG_OUT_CREATE		= 2;


const ST_MSG_OUT_SEND		= 3;


const ST_MSG_IN_RECEIVE		= 4;


const ST_MSG_IN_PROCESS		= 5;


const ST_CYCLE_ABORT		= 253;


const ST_CYCLE_FINISHED		= 254;


const ST_NEXT_BLOCK			= 255;





const MSG_GET_DATETIME		= 0;


const MSG_GET_UIP			= 1;


const MSG_GET_E				= 2;


const MSG_COUNT				= 3;





new PortId, Flags, Baudrate, crc, BA, BL, check, offset, dt[7];





if(t_ &lt;= 0) t_ = TIMEOUT_CYCLE * 2;


if(t_ &lt; TIMEOUT_CYCLE) t_ = TIMEOUT_CYCLE;





// Проверка входящих параметров


YARTReadComSets(pp_, PortId, Flags, Baudrate);





// Первичная инициализация


if(!_init_){


	_blockId_ = getCountPortId(PortId);


	setCountPortId(PortId, _blockId_ + 1);


	togleUpdate(PortId);


	_stage_ = ST_PORT_OPEN;


	_init_ = true;


}





// Ссылки


BA = getPortBufferOffset(PortId);


if(BA &lt; 0) {_err_ = true; _na_ = true; e_ = false;}


BL = getPortBufferSize(PortId);


if(BL &lt; BL_MIN) {_err_ = true; _na_ = true; e_ = false;}





if(e_) if(!_le_) if(_stage_ &gt; ST_CLEAN) _stage_ = ST_CLEAN;


_le_ = e_;





check = false;


if(_lda_ != da_) {check = true; _lda_ = da_;}


if(check){


	_mid_ = 0;


	_u_ = 0.0;


	_i_ = 0.0;


	_p_ = 0.0;


	_e1_ = 0.0;


	_e2_ = 0.0;


	_e3_ = 0.0;


	_e4_ = 0.0;


	_date_ = 0;


	_time_ = 0;


	if(_stage_ &gt; ST_CLEAN) _stage_ = ST_CLEAN;


}





// Отображение значений


_na = _na_;


_err = _err_;


_u = _u_;


_i = _i_;


_p = _p_;


_e1 = _e1_;


_e2 = _e2_;


_e3 = _e3_;


_e4 = _e4_;


_date = _date_;


_time = _time_;








// Переход в другой блок при отмене выполнения текущего


if(!e_) _stage_ = ST_NEXT_BLOCK;





// Пропуск не активного блока


if(getCurrentPortId(PortId) != _blockId_){


	if(!togleIsActive(PortId)){ NextPortId(PortId); togleUpdate(PortId); }


	return;


}else{


	togleUpdate(PortId);


	_timer_ += GetScanDt;


	_timerNA_ += GetScanDt;





	// Остановка по таймауту


	if(_timerNA_ &gt; t_) {_mid_ = 0; _stage_ = ST_NEXT_BLOCK; _na_ = true;}


	else if(check) _stage_ = ST_PORT_OPEN;


	else if(_stage_ &lt; ST_CYCLE_ABORT) if(_timer_ &gt; TIMEOUT_CYCLE) _stage_ = ST_CYCLE_ABORT;


}





// Открытие порта


if(_stage_ == ST_PORT_OPEN){


	port_open(PortId, Baudrate, Flags);


	stop_port_receive(PortId);


	_stage_ = ST_CLEAN;


}





if(_stage_ == ST_CLEAN){


	stop_port_receive(PortId);


	_timer_ = 0;





	// Очистка буфера


	for(new i = BA; i &lt; BA + BL; i++) set_byte(i, 0);





	_txloop_ = TX_LOOP_COUNT_MAX;


	_stage_ = ST_MSG_OUT_CREATE;


}





// Подготовка сообщения


if(_stage_ == ST_MSG_OUT_CREATE){


	offset = BA;


	set_int(offset, YARTRotateInt(da_));


	offset += 4;


	switch(_mid_){


		case MSG_GET_DATETIME:	set_byte(offset++, 0x21);


		case MSG_GET_UIP:		set_byte(offset++, 0x63);


		case MSG_GET_E:			set_byte(offset++, 0x27);


	}


	





	crc = YARTCrc16_modbus_lnk(BA, offset - BA);


	set_byte(offset++, crc &amp; 0xFF);


	set_byte(offset++, (crc &gt;&gt; 8) &amp; 0xFF);


	_msgLen_ = offset - BA;


	_stage_ = ST_MSG_OUT_SEND;


}





// Отправка сообщения


if(_stage_ == ST_MSG_OUT_SEND){


	if(port_transmit_status(PortId) == 0 || --_txloop_ == 0){


		stop_port_receive(PortId);


		port_receive(PortId, BA + _msgLen_, BL - _msgLen_);


		port_send(PortId, BA, _msgLen_);


		_stage_ = ST_MSG_IN_RECEIVE;


	}


}





// Ожидание окончания получения ответа


if(_stage_ == ST_MSG_IN_RECEIVE){


	_lastBi_ = 0;


	for(new i = BA + BL - 1; i &gt;= BA + _msgLen_ + 2; i--) if(get_byte(i) &gt; 0) {_lastBi_ = i - BA; break;}


	if(_lastBi_ &gt; _msgLen_ + 2){


		crc = YARTCrc16_modbus_lnk(BA + _msgLen_, _lastBi_ - _msgLen_ - 1);


		if(get_byte(BA + _lastBi_ - 1) == (crc &amp; 0xFF))


		if(get_byte(BA + _lastBi_) == ((crc &gt;&gt; 8) &amp; 0xFF)) _stage_ = ST_MSG_IN_PROCESS;


	}


}





// Обработка ответа


if(_stage_ == ST_MSG_IN_PROCESS){


	_na_ = false;


	offset = BA + _msgLen_ + 5;


	switch(_mid_){


		case MSG_GET_DATETIME:{


			for(new i = 0; i &lt; 7; i++) dt[i] = YARTHex2Int(get_byte(offset++));


			_date_ = Date(TOBCD(dt[6]),TOBCD(dt[5]),TOBCD(dt[4]),TOBCD(dt[0]));


			_time_ = Time(TOBCD(dt[1]),TOBCD(dt[2]),TOBCD(dt[3]));


		}


		case MSG_GET_UIP:{


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_u_ = check / 10.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_i_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_p_ = check / 1000.0;


		}


		case MSG_GET_E:{


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e1_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e2_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e3_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e4_ = check / 100.0;


		}


	}


	_stage_ = ST_CYCLE_FINISHED;


}





// Прерывание работы цикла


if(_stage_ == ST_CYCLE_ABORT){


	stop_port_receive(PortId);


	if(t_ - _timerNA_ &gt; TIMEOUT_CYCLE){


		_timer_ = 0;


		_stage_ = ST_CLEAN;


	}


}





// Завершение работы цикла


if(_stage_ == ST_CYCLE_FINISHED){


	stop_port_receive(PortId);


	_mid_++;


	if(_mid_ == MSG_COUNT){


		_mid_ = 0;


		_d = true;


		_stage_ = ST_NEXT_BLOCK;


	}else{


		_stage_ = ST_CLEAN;


	}


}





// Завершение работы блока


if(_stage_ == ST_NEXT_BLOCK){


	stop_port_receive(PortId);


	port_close(PortId);


	NextPortId(PortId);


	_timerNA_ = 0;


	_timer_ = 0;


	_stage_ = ST_PORT_OPEN;


}</Code>
            </FBDItem>
            <FBDItem z:Id="5057" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1972</Id>
              <InputPortsCollection z:Id="5058" z:Size="1">
                <FBDPort z:Ref="4820" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5059" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Ref="1763" i:nil="true" />
              <OutputPortsCollection z:Id="5060" z:Size="1">
                <FBDPort z:Id="5061" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1974</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5062" z:Size="1">
                    <FBDPortExtSettings z:Id="5063">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5064" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="1706" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1765" i:nil="true" />
              <SecondName z:Ref="1763" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="84" i:nil="true" />
              <InputFBDPort z:Ref="4820" i:nil="true" />
              <OutputFBDPort z:Ref="5061" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5065" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1975</Id>
              <InputPortsCollection z:Id="5066" z:Size="1">
                <FBDPort z:Ref="4830" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5067" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Ref="1763" i:nil="true" />
              <OutputPortsCollection z:Id="5068" z:Size="1">
                <FBDPort z:Id="5069" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1977</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5070" z:Size="1">
                    <FBDPortExtSettings z:Id="5071">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5072" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="1706" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1765" i:nil="true" />
              <SecondName z:Ref="1763" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="360" i:nil="true" />
              <InputFBDPort z:Ref="4830" i:nil="true" />
              <OutputFBDPort z:Ref="5069" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="5073">Meter_Mecury203</Name>
          <Parent z:Ref="4815" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>6</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5074">METERS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5075" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5076" z:Size="1">
        <d2p1:anyType z:Id="5077" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5078" z:Size="13">
            <FBDConnector z:Id="5079">
              <EndFBDPort z:Id="5080" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1749</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5081" z:Size="1">
                  <FBDPortExtSettings z:Id="5082">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="5083" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="1973" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5084" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5085" z:Size="1">
                  <FBDPortExtSettings z:Id="5086">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="5083" i:nil="true" />
                <VariableName z:Id="5087">rez</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5088">
              <EndFBDPort z:Id="5089" i:type="InputFBDPort">
                <Alias z:Id="5090">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1990</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5091" z:Size="1">
                  <FBDPortExtSettings z:Id="5092">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5093" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5094">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5095" i:type="OutputFBDPort">
                <Alias z:Id="5096">DI.02: DIN_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1742</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5097" z:Size="1">
                  <FBDPortExtSettings z:Id="5098">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5093" i:nil="true" />
                <VariableName z:Ref="32" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5099">
              <EndFBDPort z:Id="5100" i:type="InputFBDPort">
                <Alias z:Id="5101">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1996</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5102" z:Size="1">
                  <FBDPortExtSettings z:Id="5103">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5104" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5105">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5106" i:type="OutputFBDPort">
                <Alias z:Id="5107">DI.03: DIN_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1744</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5108" z:Size="1">
                  <FBDPortExtSettings z:Id="5109">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5104" i:nil="true" />
                <VariableName z:Ref="34" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5110">
              <EndFBDPort z:Id="5111" i:type="InputFBDPort">
                <Alias z:Id="5112">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2002</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5113" z:Size="1">
                  <FBDPortExtSettings z:Id="5114">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5115" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5116">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5117" i:type="OutputFBDPort">
                <Alias z:Id="5118">DI.04: DIN_4</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1746</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5119" z:Size="1">
                  <FBDPortExtSettings z:Id="5120">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5115" i:nil="true" />
                <VariableName z:Ref="36" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5121">
              <EndFBDPort z:Id="5122" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>1737</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5123" z:Size="8">
                  <FBDPortExtSettings z:Id="5124">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5125">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5126">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5127">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5128">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5129">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5130">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5131">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5132" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5133">mas</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5134" i:type="OutputFBDPort">
                <Alias z:Id="5135">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1992</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5136" z:Size="1">
                  <FBDPortExtSettings z:Id="5137">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5132" i:nil="true" />
                <VariableName z:Id="5138">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5139">
              <EndFBDPort z:Ref="5122" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5140" i:type="OutputFBDPort">
                <Alias z:Id="5141">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1998</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5142" z:Size="1">
                  <FBDPortExtSettings z:Id="5143">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5144" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5145">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5146">
              <EndFBDPort z:Ref="5122" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5147" i:type="OutputFBDPort">
                <Alias z:Id="5148">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2004</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5149" z:Size="1">
                  <FBDPortExtSettings z:Id="5150">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5151" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5152">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5153">
              <EndFBDPort z:Id="5154" i:type="InputFBDPort">
                <Alias z:Id="5155">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2020</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5156" z:Size="1">
                  <FBDPortExtSettings z:Id="5157">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5158" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5159">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5160" i:type="OutputFBDPort">
                <Alias z:Id="5161">DI.06: DIN_6</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2014</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5162" z:Size="1">
                  <FBDPortExtSettings z:Id="5163">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5158" i:nil="true" />
                <VariableName z:Ref="42" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5164">
              <EndFBDPort z:Ref="5122" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5165" i:type="OutputFBDPort">
                <Alias z:Id="5166">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2022</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5167" z:Size="1">
                  <FBDPortExtSettings z:Id="5168">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5169" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5170">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5171">
              <EndFBDPort z:Ref="5122" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5172" i:type="OutputFBDPort">
                <Alias z:Id="5173">DI.07: DIN_7</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2016</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5174" z:Size="1">
                  <FBDPortExtSettings z:Id="5175">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5176" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="44" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5177">
              <EndFBDPort z:Ref="5122" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5178" i:type="OutputFBDPort">
                <Alias z:Id="5179">DI.08: DIN_8</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2018</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5180" z:Size="1">
                  <FBDPortExtSettings z:Id="5181">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5182" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="46" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5183">
              <EndFBDPort z:Id="5184" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2128</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5185" z:Size="1">
                  <FBDPortExtSettings z:Id="5186">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5187" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="3713" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5188" i:type="OutputFBDPort">
                <Alias z:Id="5189">AI.03: AIN_3_FLOOD</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5190" z:Size="1">
                  <FBDPortExtSettings z:Id="5191">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5187" i:nil="true" />
                <VariableName z:Ref="13" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5192">
              <EndFBDPort z:Ref="5122" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5193" i:type="OutputFBDPort">
                <Alias z:Id="5194">DI.01: DIN_1_POWER</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2008</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5195" z:Size="1">
                  <FBDPortExtSettings z:Id="5196">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5197" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="30" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5198" z:Size="15">
            <FBDItem z:Id="5199" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2013</Id>
              <InputPortsCollection z:Id="5200" z:Size="0" />
              <InternalPortsCollection z:Id="5201" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="5202">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5203" z:Size="1">
                <FBDPort z:Ref="5160" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Id="5204">_00_A1_DI_06</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5205">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5206" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5207">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>2019</Id>
              <InputPortsCollection z:Id="5208" z:Size="2">
                <FBDPort z:Ref="5154" i:nil="true" />
                <FBDPort z:Id="5209" i:type="InputFBDPort">
                  <Alias z:Id="5210">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2021</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5211" z:Size="1">
                    <FBDPortExtSettings z:Id="5212">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5213" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5214" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5215">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5216" z:Size="1">
                <FBDPort z:Id="5217" i:type="InternalFBDPort">
                  <Alias z:Id="5218">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2024</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5219" z:Size="2">
                    <FBDPortExtSettings z:Id="5220">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5221">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5222">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="5223">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5224" z:Size="2">
                <FBDPort z:Ref="5165" i:nil="true" />
                <FBDPort z:Id="5225" i:type="OutputFBDPort">
                  <Alias z:Id="5226">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2023</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5227" z:Size="1">
                    <FBDPortExtSettings z:Id="5228">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5229" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5230">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5231">YART</Prefix>
              <SecondName z:Id="5232">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Id="5233">if(IN != OUT){


	YARTAddScanTask(t[0], t[1]);


	if (t[0] &gt;= TF){


		OUT = IN;


		t[0] = 0; 


		t[1] = 0;


	} 


}else{


	t[0] = 0; 


	t[1] = 0;


}





T = t[0];</Code>
            </FBDItem>
            <FBDItem z:Id="5234" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2017</Id>
              <InputPortsCollection z:Id="5235" z:Size="0" />
              <InternalPortsCollection z:Id="5236" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="5202" i:nil="true" />
              <OutputPortsCollection z:Id="5237" z:Size="1">
                <FBDPort z:Ref="5178" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Id="5238">_00_A1_DI_08</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5239">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5240" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2015</Id>
              <InputPortsCollection z:Id="5241" z:Size="0" />
              <InternalPortsCollection z:Id="5242" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Ref="5202" i:nil="true" />
              <OutputPortsCollection z:Id="5243" z:Size="1">
                <FBDPort z:Ref="5172" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Id="5244">_00_A1_DI_07</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5245">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5246" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2007</Id>
              <InputPortsCollection z:Id="5247" z:Size="0" />
              <InternalPortsCollection z:Id="5248" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3450</d8p1:_x>
                <d8p1:_y>3620</d8p1:_y>
              </Location>
              <Name z:Ref="5202" i:nil="true" />
              <OutputPortsCollection z:Id="5249" z:Size="1">
                <FBDPort z:Ref="5193" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Id="5250">_00_A1_DI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5251">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5252" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1745</Id>
              <InputPortsCollection z:Id="5253" z:Size="0" />
              <InternalPortsCollection z:Id="5254" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="5255">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5256" z:Size="1">
                <FBDPort z:Ref="5117" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1999" i:nil="true" />
              <SecondName z:Id="5257">_00_A1_DI_04</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5258">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5259" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5260">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>2001</Id>
              <InputPortsCollection z:Id="5261" z:Size="2">
                <FBDPort z:Ref="5111" i:nil="true" />
                <FBDPort z:Id="5262" i:type="InputFBDPort">
                  <Alias z:Id="5263">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2003</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5264" z:Size="1">
                    <FBDPortExtSettings z:Id="5265">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5266" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5267" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5268">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5269" z:Size="1">
                <FBDPort z:Id="5270" i:type="InternalFBDPort">
                  <Alias z:Id="5271">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2006</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5272" z:Size="2">
                    <FBDPortExtSettings z:Id="5273">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5274">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5275">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="5276">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5277" z:Size="2">
                <FBDPort z:Ref="5147" i:nil="true" />
                <FBDPort z:Id="5278" i:type="OutputFBDPort">
                  <Alias z:Id="5279">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2005</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5280" z:Size="1">
                    <FBDPortExtSettings z:Id="5281">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5282" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5283">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5284">YART</Prefix>
              <SecondName z:Id="5285">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="5233" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5286" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1743</Id>
              <InputPortsCollection z:Id="5287" z:Size="0" />
              <InternalPortsCollection z:Id="5288" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="5255" i:nil="true" />
              <OutputPortsCollection z:Id="5289" z:Size="1">
                <FBDPort z:Ref="5106" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1999" i:nil="true" />
              <SecondName z:Id="5290">_00_A1_DI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5291">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5292" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5293">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1995</Id>
              <InputPortsCollection z:Id="5294" z:Size="2">
                <FBDPort z:Ref="5100" i:nil="true" />
                <FBDPort z:Id="5295" i:type="InputFBDPort">
                  <Alias z:Id="5296">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1997</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5297" z:Size="1">
                    <FBDPortExtSettings z:Id="5298">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5299" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5300" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5301">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5302" z:Size="1">
                <FBDPort z:Id="5303" i:type="InternalFBDPort">
                  <Alias z:Id="5304">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2000</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5305" z:Size="2">
                    <FBDPortExtSettings z:Id="5306">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5307">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5308">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="5309">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5310" z:Size="2">
                <FBDPort z:Ref="5140" i:nil="true" />
                <FBDPort z:Id="5311" i:type="OutputFBDPort">
                  <Alias z:Id="5312">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1999</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5313" z:Size="1">
                    <FBDPortExtSettings z:Id="5314">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5315" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5316">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5317">YART</Prefix>
              <SecondName z:Id="5318">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="5233" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5319" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1741</Id>
              <InputPortsCollection z:Id="5320" z:Size="0" />
              <InternalPortsCollection z:Id="5321" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Ref="5255" i:nil="true" />
              <OutputPortsCollection z:Id="5322" z:Size="1">
                <FBDPort z:Ref="5095" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1999" i:nil="true" />
              <SecondName z:Id="5323">_00_A1_DI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5324">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5325" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5326">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1989</Id>
              <InputPortsCollection z:Id="5327" z:Size="2">
                <FBDPort z:Ref="5089" i:nil="true" />
                <FBDPort z:Id="5328" i:type="InputFBDPort">
                  <Alias z:Id="5329">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1991</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5330" z:Size="1">
                    <FBDPortExtSettings z:Id="5331">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5332" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5333" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5334">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5335" z:Size="1">
                <FBDPort z:Id="5336" i:type="InternalFBDPort">
                  <Alias z:Id="5337">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>1994</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5338" z:Size="2">
                    <FBDPortExtSettings z:Id="5339">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5340">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5341">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="5342">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5343" z:Size="2">
                <FBDPort z:Ref="5134" i:nil="true" />
                <FBDPort z:Id="5344" i:type="OutputFBDPort">
                  <Alias z:Id="5345">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1993</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5346" z:Size="1">
                    <FBDPortExtSettings z:Id="5347">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5348" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5349">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5350">YART</Prefix>
              <SecondName z:Id="5351">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="5233" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5352" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5353">Упаковка массива Bool</Description>
              <HelpID>23</HelpID>
              <Id>1736</Id>
              <InputPortsCollection z:Id="5354" z:Size="1">
                <FBDPort z:Ref="5122" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5355" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="5356">CODER</Name>
              <OutputPortsCollection z:Id="5357" z:Size="1">
                <FBDPort z:Ref="5084" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5358">YART</Prefix>
              <SecondName z:Id="5359">coderByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb08a743-74ef-4983-849b-30926f9e4cce</SpecificationId>
              <Code z:Id="5360">//#CODER (Шифратор для Byte)


//Шифратор Byte


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (mas[i]) rez = rez |k;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="5361" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1748</Id>
              <InputPortsCollection z:Id="5362" z:Size="1">
                <FBDPort z:Ref="5080" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5363" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4080</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="1975" i:nil="true" />
              <OutputPortsCollection z:Id="5364" z:Size="1">
                <FBDPort z:Id="5365" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1750</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5366" z:Size="1">
                    <FBDPortExtSettings z:Id="5367">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5368" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="1998" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1999" i:nil="true" />
              <SecondName z:Ref="1975" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="340" i:nil="true" />
              <InputFBDPort z:Ref="5080" i:nil="true" />
              <OutputFBDPort z:Ref="5365" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5369" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2124</Id>
              <InputPortsCollection z:Id="5370" z:Size="0" />
              <InternalPortsCollection z:Id="5371" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3488</d8p1:_x>
                <d8p1:_y>3998</d8p1:_y>
              </Location>
              <Name z:Ref="5202" i:nil="true" />
              <OutputPortsCollection z:Id="5372" z:Size="1">
                <FBDPort z:Ref="5188" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Id="5373">_00_A1_AI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5374">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5375" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2127</Id>
              <InputPortsCollection z:Id="5376" z:Size="1">
                <FBDPort z:Ref="5184" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5377" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>4000</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="5378" z:Size="1">
                <FBDPort z:Id="5379" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5380" z:Size="1">
                    <FBDPortExtSettings z:Id="5381">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5382" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="3275" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="377" i:nil="true" />
              <InputFBDPort z:Ref="5184" i:nil="true" />
              <OutputFBDPort z:Ref="5379" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="5383">Alarm-1</Name>
          <Parent z:Ref="5075" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>7</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5384">ALARMS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5385" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5386" z:Size="1">
        <d2p1:anyType z:Id="5387" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5388" z:Size="25">
            <FBDConnector z:Id="5389">
              <EndFBDPort z:Id="5390" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1767</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5391" z:Size="1">
                  <FBDPortExtSettings z:Id="5392">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5393" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5394">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5395" i:type="OutputFBDPort">
                <Alias z:Id="5396">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1762</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5397" z:Size="1">
                  <FBDPortExtSettings z:Id="5398">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5393" i:nil="true" />
                <VariableName z:Id="5399">IPa</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5400">
              <EndFBDPort z:Id="5401" i:type="InputFBDPort">
                <Alias z:Id="5402">Period</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1770</Id>
                <IsArray>false</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5403" z:Size="1">
                  <FBDPortExtSettings z:Id="5404">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5405" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5406">p</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5407" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1776</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5408" z:Size="1">
                  <FBDPortExtSettings z:Id="5409">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5405" i:nil="true" />
                <VariableName z:Id="5410">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5411">
              <EndFBDPort z:Id="5412" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1871</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5413" z:Size="1">
                  <FBDPortExtSettings z:Id="5414">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5415" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5416">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5417" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1851</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5418" z:Size="1">
                  <FBDPortExtSettings z:Id="5419">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5415" i:nil="true" />
                <VariableName z:Ref="5410" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5420">
              <EndFBDPort z:Id="5421" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1875</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5422" z:Size="1">
                  <FBDPortExtSettings z:Id="5423">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5424" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5425">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5426" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1854</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5427" z:Size="1">
                  <FBDPortExtSettings z:Id="5428">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5424" i:nil="true" />
                <VariableName z:Ref="5410" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5429">
              <EndFBDPort z:Id="5430" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1882</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5431" z:Size="1">
                  <FBDPortExtSettings z:Id="5432">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5433" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5434">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5435" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1857</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5436" z:Size="1">
                  <FBDPortExtSettings z:Id="5437">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5433" i:nil="true" />
                <VariableName z:Ref="5410" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5438">
              <EndFBDPort z:Id="5439" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1886</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5440" z:Size="1">
                  <FBDPortExtSettings z:Id="5441">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5442" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5443">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5444" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1860</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5445" z:Size="1">
                  <FBDPortExtSettings z:Id="5446">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5442" i:nil="true" />
                <VariableName z:Ref="5410" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5447">
              <EndFBDPort z:Id="5448" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1902</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5449" z:Size="1">
                  <FBDPortExtSettings z:Id="5450">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="5451" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5452">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5453" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1863</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5454" z:Size="1">
                  <FBDPortExtSettings z:Id="5455">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="5451" i:nil="true" />
                <VariableName z:Ref="5410" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5456">
              <EndFBDPort z:Id="5457" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1982</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5458" z:Size="1">
                  <FBDPortExtSettings z:Id="5459">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5460" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5461">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5462" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1987</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5463" z:Size="1">
                  <FBDPortExtSettings z:Id="5464">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5460" i:nil="true" />
                <VariableName z:Id="5465">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5466">
              <EndFBDPort z:Id="5467" i:type="InputFBDPort">
                <Alias z:Id="5468">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2028</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5469" z:Size="1">
                  <FBDPortExtSettings z:Id="5470">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5471" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5472">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5473" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2033</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5474" z:Size="1">
                  <FBDPortExtSettings z:Id="5475">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5471" i:nil="true" />
                <VariableName z:Id="5476">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5477">
              <EndFBDPort z:Id="5478" i:type="InputFBDPort">
                <Alias z:Id="5479">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2040</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5480" z:Size="1">
                  <FBDPortExtSettings z:Id="5481">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5482" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5483">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5484" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2045</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5485" z:Size="1">
                  <FBDPortExtSettings z:Id="5486">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5482" i:nil="true" />
                <VariableName z:Id="5487">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5488">
              <EndFBDPort z:Id="5489" i:type="InputFBDPort">
                <Alias z:Id="5490">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2039</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5491" z:Size="1">
                  <FBDPortExtSettings z:Id="5492">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5493" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5494">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5495" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2048</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5496" z:Size="1">
                  <FBDPortExtSettings z:Id="5497">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5493" i:nil="true" />
                <VariableName z:Id="5498">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5499">
              <EndFBDPort z:Id="5500" i:type="InputFBDPort">
                <Alias z:Id="5501">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2027</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5502" z:Size="1">
                  <FBDPortExtSettings z:Id="5503">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5504" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5505">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5506" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2051</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5507" z:Size="1">
                  <FBDPortExtSettings z:Id="5508">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5504" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5509">
              <EndFBDPort z:Id="5510" i:type="InputFBDPort">
                <Alias z:Id="5511">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2054</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5512" z:Size="1">
                  <FBDPortExtSettings z:Id="5513">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5514" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5515">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5516" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2059</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5517" z:Size="1">
                  <FBDPortExtSettings z:Id="5518">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5514" i:nil="true" />
                <VariableName z:Id="5519">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5520">
              <EndFBDPort z:Id="5521" i:type="InputFBDPort">
                <Alias z:Id="5522">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2053</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5523" z:Size="1">
                  <FBDPortExtSettings z:Id="5524">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5525" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5526">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5527" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2062</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5528" z:Size="1">
                  <FBDPortExtSettings z:Id="5529">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5525" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5530">
              <EndFBDPort z:Id="5531" i:type="InputFBDPort">
                <Alias z:Id="5532">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2065</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5533" z:Size="1">
                  <FBDPortExtSettings z:Id="5534">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5535" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5536">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5537" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2070</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5538" z:Size="1">
                  <FBDPortExtSettings z:Id="5539">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5535" i:nil="true" />
                <VariableName z:Id="5540">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5541">
              <EndFBDPort z:Id="5542" i:type="InputFBDPort">
                <Alias z:Id="5543">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2084</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5544" z:Size="1">
                  <FBDPortExtSettings z:Id="5545">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5546" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5547">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5548" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2089</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5549" z:Size="1">
                  <FBDPortExtSettings z:Id="5550">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5546" i:nil="true" />
                <VariableName z:Id="5551">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5552">
              <EndFBDPort z:Id="5553" i:type="InputFBDPort">
                <Alias z:Id="5554">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2064</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5555" z:Size="1">
                  <FBDPortExtSettings z:Id="5556">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5557" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5558">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5559" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2092</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5560" z:Size="1">
                  <FBDPortExtSettings z:Id="5561">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5557" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5562">
              <EndFBDPort z:Id="5563" i:type="InputFBDPort">
                <Alias z:Id="5564">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2083</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5565" z:Size="1">
                  <FBDPortExtSettings z:Id="5566">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5567" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5568">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5569" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2095</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5570" z:Size="1">
                  <FBDPortExtSettings z:Id="5571">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5567" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5572">
              <EndFBDPort z:Id="5573" i:type="InputFBDPort">
                <Alias z:Id="5574">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5575" z:Size="1">
                  <FBDPortExtSettings z:Id="5576">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5577" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5578">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5579" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5580" z:Size="1">
                  <FBDPortExtSettings z:Id="5581">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5577" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5582">
              <EndFBDPort z:Id="5583" i:type="InputFBDPort">
                <Alias z:Id="5584">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2112</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5585" z:Size="1">
                  <FBDPortExtSettings z:Id="5586">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5587" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5588">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5589" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2117</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5590" z:Size="1">
                  <FBDPortExtSettings z:Id="5591">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5587" i:nil="true" />
                <VariableName z:Id="5592">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5593">
              <EndFBDPort z:Id="5594" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2131</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5595" z:Size="1">
                  <FBDPortExtSettings z:Id="5596">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5597" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5598">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5599" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2136</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5600" z:Size="1">
                  <FBDPortExtSettings z:Id="5601">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5597" i:nil="true" />
                <VariableName z:Ref="3275" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5602">
              <EndFBDPort z:Id="5603" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2875</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5604" z:Size="1">
                  <FBDPortExtSettings z:Id="5605">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5606" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5607">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5608" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2873</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5609" z:Size="1">
                  <FBDPortExtSettings z:Id="5610">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5606" i:nil="true" />
                <VariableName z:Id="5611">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5612">
              <EndFBDPort z:Id="5613" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2879</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5614" z:Size="1">
                  <FBDPortExtSettings z:Id="5615">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5616" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5617">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5618" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2884</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5619" z:Size="1">
                  <FBDPortExtSettings z:Id="5620">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5616" i:nil="true" />
                <VariableName z:Ref="2678" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5621">
              <EndFBDPort z:Id="5622" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2886</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5623" z:Size="1">
                  <FBDPortExtSettings z:Id="5624">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5625" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5626">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5627" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2895</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5628" z:Size="1">
                  <FBDPortExtSettings z:Id="5629">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5625" i:nil="true" />
                <VariableName z:Ref="2678" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5630">
              <EndFBDPort z:Id="5631" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2890</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5632" z:Size="1">
                  <FBDPortExtSettings z:Id="5633">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5634" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5635">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5636" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2898</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5637" z:Size="1">
                  <FBDPortExtSettings z:Id="5638">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5634" i:nil="true" />
                <VariableName z:Ref="2678" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5639" z:Size="46">
            <FBDItem z:Id="5640" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5641">Упаковка IP-адреса в Int</Description>
              <HelpID>492</HelpID>
              <Id>1757</Id>
              <InputPortsCollection z:Id="5642" z:Size="4">
                <FBDPort z:Id="5643" i:type="InputFBDPort">
                  <Alias z:Id="5644">IP1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1758</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5645" z:Size="1">
                    <FBDPortExtSettings z:Id="5646">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5647" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5648" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">192</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5649">IPa1</VariableName>
                </FBDPort>
                <FBDPort z:Id="5650" i:type="InputFBDPort">
                  <Alias z:Id="5651">IP2</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1759</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5652" z:Size="1">
                    <FBDPortExtSettings z:Id="5653">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5654" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5655" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">168</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5656">IPa2</VariableName>
                </FBDPort>
                <FBDPort z:Id="5657" i:type="InputFBDPort">
                  <Alias z:Id="5658">IP3</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1760</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5659" z:Size="1">
                    <FBDPortExtSettings z:Id="5660">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5661" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5662" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5663">IPa3</VariableName>
                </FBDPort>
                <FBDPort z:Id="5664" i:type="InputFBDPort">
                  <Alias z:Id="5665">IP4</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1761</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5666" z:Size="1">
                    <FBDPortExtSettings z:Id="5667">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5668" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5669" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">253</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5670">IPa4</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5671" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>4080</d8p1:_y>
              </Location>
              <Name z:Id="5672">IP CODER</Name>
              <OutputPortsCollection z:Id="5673" z:Size="1">
                <FBDPort z:Ref="5395" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5674">YART</Prefix>
              <SecondName z:Id="5675">IP_Mux</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3d25eb4f-de3f-4a3e-90b4-fac9892a907c</SpecificationId>
              <Code z:Id="5676">IPa = (IPa4 &lt;&lt; 24) | (IPa3 &lt;&lt; 16) | (IPa2 &lt;&lt; 8) | IPa1;</Code>
            </FBDItem>
            <FBDItem z:Id="5677" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1766</Id>
              <InputPortsCollection z:Id="5678" z:Size="1">
                <FBDPort z:Ref="5390" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5679" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4990</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Id="5680">Tag</Name>
              <OutputPortsCollection z:Id="5681" z:Size="1">
                <FBDPort z:Id="5682" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1768</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5683" z:Size="1">
                    <FBDPortExtSettings z:Id="5684">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5685" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="5410" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5686">_</Prefix>
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="5390" i:nil="true" />
              <OutputFBDPort z:Ref="5682" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5687" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1774</Id>
              <InputPortsCollection z:Id="5688" z:Size="1">
                <FBDPort z:Id="5689" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1775</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5690" z:Size="1">
                    <FBDPortExtSettings z:Id="5691">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5394" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5692" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4200</d8p1:_y>
              </Location>
              <Name z:Ref="5680" i:nil="true" />
              <OutputPortsCollection z:Id="5693" z:Size="1">
                <FBDPort z:Ref="5407" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5686" i:nil="true" />
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="348" i:nil="true" />
              <InputFBDPort z:Ref="5689" i:nil="true" />
              <OutputFBDPort z:Ref="5407" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5694" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5695">Отправка подготовленных переменных с указанной частотой</Description>
              <HelpID>499</HelpID>
              <Id>1769</Id>
              <InputPortsCollection z:Id="5696" z:Size="1">
                <FBDPort z:Ref="5401" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5697" z:Size="2">
                <FBDPort z:Id="5698" i:type="InternalFBDPort">
                  <Alias z:Id="5699">Внутренняя 1148</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1772</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5700" z:Size="1">
                    <FBDPortExtSettings z:Id="5701">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5702">ti</VariableName>
                </FBDPort>
                <FBDPort z:Id="5703" i:type="InternalFBDPort">
                  <Alias z:Id="5704">Внутренняя 53412</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1773</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5705" z:Size="1">
                    <FBDPortExtSettings z:Id="5706">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5707">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4910</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="5708">YL SEND PERIODIC</Name>
              <OutputPortsCollection z:Id="5709" z:Size="1">
                <FBDPort z:Id="5710" i:type="OutputFBDPort">
                  <Alias z:Id="5711">Sending</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1771</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5712" z:Size="1">
                    <FBDPortExtSettings z:Id="5713">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5714" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5715">sending</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5716">YART</Prefix>
              <SecondName z:Id="5717">Force_YL_Send_P</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1b1a03f4-cda4-4a77-8f8b-e842803f276a</SpecificationId>
              <Code z:Id="5718">// Period &gt;= 100 ms


if(p &lt; 100) p = 100;


YARTAddScanTask(ti, tf);


if(ti &gt;= p){


	ti -= p;


	sending = true;


	set_short(420, 1);


}else set_short(420, 0);


//sent = get_int(422); // sent bytes --


//sstate = get_int(426); // 0 - ОК --</Code>
            </FBDItem>
            <FBDItem z:Id="5719" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1849</Id>
              <InputPortsCollection z:Id="5720" z:Size="1">
                <FBDPort z:Id="5721" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1850</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5722" z:Size="1">
                    <FBDPortExtSettings z:Id="5723">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5394" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5724" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="5680" i:nil="true" />
              <OutputPortsCollection z:Id="5725" z:Size="1">
                <FBDPort z:Ref="5417" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5686" i:nil="true" />
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="236" i:nil="true" />
              <InputFBDPort z:Ref="5721" i:nil="true" />
              <OutputFBDPort z:Ref="5417" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5726" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5727">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1870</Id>
              <InputPortsCollection z:Id="5728" z:Size="1">
                <FBDPort z:Ref="5412" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5729" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4300</d8p1:_y>
              </Location>
              <Name z:Id="5730">YL FLOAT</Name>
              <OutputPortsCollection z:Id="5731" z:Size="2">
                <FBDPort z:Id="5732" i:type="OutputFBDPort">
                  <Alias z:Id="5733">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1872</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5734" z:Size="1">
                    <FBDPortExtSettings z:Id="5735">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5736" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5737">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="5738" i:type="OutputFBDPort">
                  <Alias z:Id="5739">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1873</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5740" z:Size="1">
                    <FBDPortExtSettings z:Id="5741">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="5742" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5743">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5744">YART</Prefix>
              <SecondName z:Id="5745">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Id="5746">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);</Code>
            </FBDItem>
            <FBDItem z:Id="5747" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2090</Id>
              <InputPortsCollection z:Id="5748" z:Size="1">
                <FBDPort z:Id="5749" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5750" z:Size="1">
                    <FBDPortExtSettings z:Id="5751">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5752" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="5753" z:Size="1">
                <FBDPort z:Ref="5559" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="365" i:nil="true" />
              <InputFBDPort z:Ref="5749" i:nil="true" />
              <OutputFBDPort z:Ref="5559" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5754" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2068</Id>
              <InputPortsCollection z:Id="5755" z:Size="1">
                <FBDPort z:Id="5756" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5757" z:Size="1">
                    <FBDPortExtSettings z:Id="5758">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5759">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5760" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4340</d8p1:_y>
              </Location>
              <Name z:Id="5761">Tag</Name>
              <OutputPortsCollection z:Id="5762" z:Size="1">
                <FBDPort z:Ref="5537" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5763">_</Prefix>
              <SecondName z:Ref="5761" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="5756" i:nil="true" />
              <OutputFBDPort z:Ref="5537" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5764" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5765">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2063</Id>
              <InputPortsCollection z:Id="5766" z:Size="3">
                <FBDPort z:Ref="5553" i:nil="true" />
                <FBDPort z:Ref="5531" i:nil="true" />
                <FBDPort z:Id="5767" i:type="InputFBDPort">
                  <Alias z:Id="5768">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2066</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5769" z:Size="1">
                    <FBDPortExtSettings z:Id="5770">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5771" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5772" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">364</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5773">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5774" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4300</d8p1:_y>
              </Location>
              <Name z:Id="5775">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="5776" z:Size="1">
                <FBDPort z:Id="5777" i:type="OutputFBDPort">
                  <Alias z:Id="5778">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5779" z:Size="1">
                    <FBDPortExtSettings z:Id="5780">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5781" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5782">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5783">YART</Prefix>
              <SecondName z:Id="5784">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="5785">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="5786" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2046</Id>
              <InputPortsCollection z:Id="5787" z:Size="1">
                <FBDPort z:Id="5788" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2047</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5789" z:Size="1">
                    <FBDPortExtSettings z:Id="5790">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5791">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5792" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4320</d8p1:_y>
              </Location>
              <Name z:Id="5793">Tag</Name>
              <OutputPortsCollection z:Id="5794" z:Size="1">
                <FBDPort z:Ref="5495" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5795">_</Prefix>
              <SecondName z:Ref="5793" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="248" i:nil="true" />
              <InputFBDPort z:Ref="5788" i:nil="true" />
              <OutputFBDPort z:Ref="5495" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5796" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2043</Id>
              <InputPortsCollection z:Id="5797" z:Size="1">
                <FBDPort z:Id="5798" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2044</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5799" z:Size="1">
                    <FBDPortExtSettings z:Id="5800">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5801">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5802" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="5803">Tag</Name>
              <OutputPortsCollection z:Id="5804" z:Size="1">
                <FBDPort z:Ref="5484" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5805">_</Prefix>
              <SecondName z:Ref="5803" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="5798" i:nil="true" />
              <OutputFBDPort z:Ref="5484" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5806" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5807">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2038</Id>
              <InputPortsCollection z:Id="5808" z:Size="3">
                <FBDPort z:Ref="5489" i:nil="true" />
                <FBDPort z:Ref="5478" i:nil="true" />
                <FBDPort z:Id="5809" i:type="InputFBDPort">
                  <Alias z:Id="5810">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2041</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5811" z:Size="1">
                    <FBDPortExtSettings z:Id="5812">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5813" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5814" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">362</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5815">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5816" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Id="5817">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="5818" z:Size="1">
                <FBDPort z:Id="5819" i:type="OutputFBDPort">
                  <Alias z:Id="5820">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2042</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5821" z:Size="1">
                    <FBDPortExtSettings z:Id="5822">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5823" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5824">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5825">YART</Prefix>
              <SecondName z:Id="5826">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="5827">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="5828" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1852</Id>
              <InputPortsCollection z:Id="5829" z:Size="1">
                <FBDPort z:Id="5830" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1853</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5831" z:Size="1">
                    <FBDPortExtSettings z:Id="5832">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5394" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5833" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Ref="5680" i:nil="true" />
              <OutputPortsCollection z:Id="5834" z:Size="1">
                <FBDPort z:Ref="5426" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5686" i:nil="true" />
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="240" i:nil="true" />
              <InputFBDPort z:Ref="5830" i:nil="true" />
              <OutputFBDPort z:Ref="5426" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5835" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5836">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1874</Id>
              <InputPortsCollection z:Id="5837" z:Size="1">
                <FBDPort z:Ref="5421" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5838" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="5839">YL FLOAT</Name>
              <OutputPortsCollection z:Id="5840" z:Size="2">
                <FBDPort z:Id="5841" i:type="OutputFBDPort">
                  <Alias z:Id="5842">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1876</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5843" z:Size="1">
                    <FBDPortExtSettings z:Id="5844">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5845" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5846">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="5847" i:type="OutputFBDPort">
                  <Alias z:Id="5848">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1877</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5849" z:Size="1">
                    <FBDPortExtSettings z:Id="5850">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="5851" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5852">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5853">YART</Prefix>
              <SecondName z:Id="5854">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5855" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2093</Id>
              <InputPortsCollection z:Id="5856" z:Size="1">
                <FBDPort z:Id="5857" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2094</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5858" z:Size="1">
                    <FBDPortExtSettings z:Id="5859">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5860" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="5861" z:Size="1">
                <FBDPort z:Ref="5569" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="369" i:nil="true" />
              <InputFBDPort z:Ref="5857" i:nil="true" />
              <OutputFBDPort z:Ref="5569" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5862" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2087</Id>
              <InputPortsCollection z:Id="5863" z:Size="1">
                <FBDPort z:Id="5864" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5865" z:Size="1">
                    <FBDPortExtSettings z:Id="5866">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5867">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5868" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4430</d8p1:_y>
              </Location>
              <Name z:Id="5869">Tag</Name>
              <OutputPortsCollection z:Id="5870" z:Size="1">
                <FBDPort z:Ref="5548" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5871">_</Prefix>
              <SecondName z:Ref="5869" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="5864" i:nil="true" />
              <OutputFBDPort z:Ref="5548" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5872" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5873">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2082</Id>
              <InputPortsCollection z:Id="5874" z:Size="3">
                <FBDPort z:Ref="5563" i:nil="true" />
                <FBDPort z:Ref="5542" i:nil="true" />
                <FBDPort z:Id="5875" i:type="InputFBDPort">
                  <Alias z:Id="5876">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2085</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5877" z:Size="1">
                    <FBDPortExtSettings z:Id="5878">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5879" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5880" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">402</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5881">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5882" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="5883">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="5884" z:Size="1">
                <FBDPort z:Id="5885" i:type="OutputFBDPort">
                  <Alias z:Id="5886">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5887" z:Size="1">
                    <FBDPortExtSettings z:Id="5888">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5889" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5890">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5891">YART</Prefix>
              <SecondName z:Id="5892">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="5893">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="5894" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1855</Id>
              <InputPortsCollection z:Id="5895" z:Size="1">
                <FBDPort z:Id="5896" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1856</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5897" z:Size="1">
                    <FBDPortExtSettings z:Id="5898">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5394" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5899" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Ref="5680" i:nil="true" />
              <OutputPortsCollection z:Id="5900" z:Size="1">
                <FBDPort z:Ref="5435" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5686" i:nil="true" />
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="244" i:nil="true" />
              <InputFBDPort z:Ref="5896" i:nil="true" />
              <OutputFBDPort z:Ref="5435" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5901" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5902">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1881</Id>
              <InputPortsCollection z:Id="5903" z:Size="1">
                <FBDPort z:Ref="5430" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5904" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="5905">YL FLOAT</Name>
              <OutputPortsCollection z:Id="5906" z:Size="2">
                <FBDPort z:Id="5907" i:type="OutputFBDPort">
                  <Alias z:Id="5908">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1883</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5909" z:Size="1">
                    <FBDPortExtSettings z:Id="5910">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5911" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5912">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="5913" i:type="OutputFBDPort">
                  <Alias z:Id="5914">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1884</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5915" z:Size="1">
                    <FBDPortExtSettings z:Id="5916">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="5917" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5918">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5919">YART</Prefix>
              <SecondName z:Id="5920">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5921" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2049</Id>
              <InputPortsCollection z:Id="5922" z:Size="1">
                <FBDPort z:Id="5923" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2050</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5924" z:Size="1">
                    <FBDPortExtSettings z:Id="5925">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5926" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="5927" z:Size="1">
                <FBDPort z:Ref="5506" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="252" i:nil="true" />
              <InputFBDPort z:Ref="5923" i:nil="true" />
              <OutputFBDPort z:Ref="5506" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5928" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2031</Id>
              <InputPortsCollection z:Id="5929" z:Size="1">
                <FBDPort z:Id="5930" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2032</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5931" z:Size="1">
                    <FBDPortExtSettings z:Id="5932">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5933">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5934" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Id="5935">Tag</Name>
              <OutputPortsCollection z:Id="5936" z:Size="1">
                <FBDPort z:Ref="5473" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5937">_</Prefix>
              <SecondName z:Ref="5935" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="5930" i:nil="true" />
              <OutputFBDPort z:Ref="5473" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5938" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5939">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2026</Id>
              <InputPortsCollection z:Id="5940" z:Size="3">
                <FBDPort z:Ref="5500" i:nil="true" />
                <FBDPort z:Ref="5467" i:nil="true" />
                <FBDPort z:Id="5941" i:type="InputFBDPort">
                  <Alias z:Id="5942">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2029</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5943" z:Size="1">
                    <FBDPortExtSettings z:Id="5944">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5945" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5946" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">361</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5947">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5948" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="5949">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="5950" z:Size="1">
                <FBDPort z:Id="5951" i:type="OutputFBDPort">
                  <Alias z:Id="5952">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2030</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5953" z:Size="1">
                    <FBDPortExtSettings z:Id="5954">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5955" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5956">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5957">YART</Prefix>
              <SecondName z:Id="5958">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="5959">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="5960" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1858</Id>
              <InputPortsCollection z:Id="5961" z:Size="1">
                <FBDPort z:Id="5962" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1859</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5963" z:Size="1">
                    <FBDPortExtSettings z:Id="5964">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5394" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5965" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Ref="5680" i:nil="true" />
              <OutputPortsCollection z:Id="5966" z:Size="1">
                <FBDPort z:Ref="5444" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5686" i:nil="true" />
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="401" i:nil="true" />
              <InputFBDPort z:Ref="5962" i:nil="true" />
              <OutputFBDPort z:Ref="5444" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5967" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5968">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1885</Id>
              <InputPortsCollection z:Id="5969" z:Size="1">
                <FBDPort z:Ref="5439" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5970" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Id="5971">YL FLOAT</Name>
              <OutputPortsCollection z:Id="5972" z:Size="2">
                <FBDPort z:Id="5973" i:type="OutputFBDPort">
                  <Alias z:Id="5974">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1887</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5975" z:Size="1">
                    <FBDPortExtSettings z:Id="5976">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5977" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5978">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="5979" i:type="OutputFBDPort">
                  <Alias z:Id="5980">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1888</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5981" z:Size="1">
                    <FBDPortExtSettings z:Id="5982">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="5983" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5984">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5985">YART</Prefix>
              <SecondName z:Id="5986">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5987" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2060</Id>
              <InputPortsCollection z:Id="5988" z:Size="1">
                <FBDPort z:Id="5989" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2061</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5990" z:Size="1">
                    <FBDPortExtSettings z:Id="5991">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5992" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="5993" z:Size="1">
                <FBDPort z:Ref="5527" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="256" i:nil="true" />
              <InputFBDPort z:Ref="5989" i:nil="true" />
              <OutputFBDPort z:Ref="5527" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5994" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2057</Id>
              <InputPortsCollection z:Id="5995" z:Size="1">
                <FBDPort z:Id="5996" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2058</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5997" z:Size="1">
                    <FBDPortExtSettings z:Id="5998">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5999">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6000" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="6001">Tag</Name>
              <OutputPortsCollection z:Id="6002" z:Size="1">
                <FBDPort z:Ref="5516" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6003">_</Prefix>
              <SecondName z:Ref="6001" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="5996" i:nil="true" />
              <OutputFBDPort z:Ref="5516" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6004" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6005">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2052</Id>
              <InputPortsCollection z:Id="6006" z:Size="3">
                <FBDPort z:Ref="5521" i:nil="true" />
                <FBDPort z:Ref="5510" i:nil="true" />
                <FBDPort z:Id="6007" i:type="InputFBDPort">
                  <Alias z:Id="6008">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2055</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6009" z:Size="1">
                    <FBDPortExtSettings z:Id="6010">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6011" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6012" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">363</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6013">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6014" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Id="6015">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6016" z:Size="1">
                <FBDPort z:Id="6017" i:type="OutputFBDPort">
                  <Alias z:Id="6018">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2056</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6019" z:Size="1">
                    <FBDPortExtSettings z:Id="6020">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6021" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6022">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6023">YART</Prefix>
              <SecondName z:Id="6024">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6025">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6026" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1861</Id>
              <InputPortsCollection z:Id="6027" z:Size="1">
                <FBDPort z:Id="6028" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1862</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6029" z:Size="1">
                    <FBDPortExtSettings z:Id="6030">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5394" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6031" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Ref="5680" i:nil="true" />
              <OutputPortsCollection z:Id="6032" z:Size="1">
                <FBDPort z:Ref="5453" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5686" i:nil="true" />
              <SecondName z:Ref="5680" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="340" i:nil="true" />
              <InputFBDPort z:Ref="6028" i:nil="true" />
              <OutputFBDPort z:Ref="5453" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6033" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6034">Подготовки переменной к отправке</Description>
              <HelpID>644</HelpID>
              <Id>1901</Id>
              <InputPortsCollection z:Id="6035" z:Size="1">
                <FBDPort z:Ref="5448" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6036" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Id="6037">YL BYTE</Name>
              <OutputPortsCollection z:Id="6038" z:Size="2">
                <FBDPort z:Id="6039" i:type="OutputFBDPort">
                  <Alias z:Id="6040">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1903</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6041" z:Size="1">
                    <FBDPortExtSettings z:Id="6042">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6043" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6044">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6045" i:type="OutputFBDPort">
                  <Alias z:Id="6046">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1904</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6047" z:Size="1">
                    <FBDPortExtSettings z:Id="6048">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6049" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6050">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6051">YART</Prefix>
              <SecondName z:Id="6052">YLPB</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>50b2378b-da55-4e21-a1dd-5d9f1c2dcf85</SpecificationId>
              <Code z:Id="6053">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);//*sysState 0 - ОК 1 - тэг не найден 2 - тип тега не поддерживается 3 - пакет переполнен</Code>
            </FBDItem>
            <FBDItem z:Id="6054" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2118</Id>
              <InputPortsCollection z:Id="6055" z:Size="1">
                <FBDPort z:Id="6056" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2119</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6057" z:Size="1">
                    <FBDPortExtSettings z:Id="6058">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6059" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="6060" z:Size="1">
                <FBDPort z:Ref="5579" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="373" i:nil="true" />
              <InputFBDPort z:Ref="6056" i:nil="true" />
              <OutputFBDPort z:Ref="5579" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6061" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2115</Id>
              <InputPortsCollection z:Id="6062" z:Size="1">
                <FBDPort z:Id="6063" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2116</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6064" z:Size="1">
                    <FBDPortExtSettings z:Id="6065">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6066">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6067" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4530</d8p1:_y>
              </Location>
              <Name z:Id="6068">Tag</Name>
              <OutputPortsCollection z:Id="6069" z:Size="1">
                <FBDPort z:Ref="5589" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6070">_</Prefix>
              <SecondName z:Ref="6068" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="344" i:nil="true" />
              <InputFBDPort z:Ref="6063" i:nil="true" />
              <OutputFBDPort z:Ref="5589" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6071" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6072">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2110</Id>
              <InputPortsCollection z:Id="6073" z:Size="3">
                <FBDPort z:Ref="5573" i:nil="true" />
                <FBDPort z:Ref="5583" i:nil="true" />
                <FBDPort z:Id="6074" i:type="InputFBDPort">
                  <Alias z:Id="6075">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2113</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6076" z:Size="1">
                    <FBDPortExtSettings z:Id="6077">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6078" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6079" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">365</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6080">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6081" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Id="6082">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6083" z:Size="1">
                <FBDPort z:Id="6084" i:type="OutputFBDPort">
                  <Alias z:Id="6085">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6086" z:Size="1">
                    <FBDPortExtSettings z:Id="6087">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6088" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6089">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6090">YART</Prefix>
              <SecondName z:Id="6091">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6092">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6093" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2134</Id>
              <InputPortsCollection z:Id="6094" z:Size="1">
                <FBDPort z:Id="6095" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2135</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6096" z:Size="1">
                    <FBDPortExtSettings z:Id="6097">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3713" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6098" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4540</d8p1:_y>
              </Location>
              <Name z:Ref="3715" i:nil="true" />
              <OutputPortsCollection z:Id="6099" z:Size="1">
                <FBDPort z:Ref="5599" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3717" i:nil="true" />
              <SecondName z:Ref="3715" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="377" i:nil="true" />
              <InputFBDPort z:Ref="6095" i:nil="true" />
              <OutputFBDPort z:Ref="5599" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6100" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6101">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2130</Id>
              <InputPortsCollection z:Id="6102" z:Size="1">
                <FBDPort z:Ref="5594" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6103" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4840</d8p1:_x>
                <d8p1:_y>4540</d8p1:_y>
              </Location>
              <Name z:Id="6104">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6105" z:Size="2">
                <FBDPort z:Id="6106" i:type="OutputFBDPort">
                  <Alias z:Id="6107">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6108" z:Size="1">
                    <FBDPortExtSettings z:Id="6109">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6110" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6111">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6112" i:type="OutputFBDPort">
                  <Alias z:Id="6113">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6114" z:Size="1">
                    <FBDPortExtSettings z:Id="6115">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6116" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6117">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6118">YART</Prefix>
              <SecondName z:Id="6119">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6120" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1985</Id>
              <InputPortsCollection z:Id="6121" z:Size="1">
                <FBDPort z:Id="6122" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1986</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6123" z:Size="1">
                    <FBDPortExtSettings z:Id="6124">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6125">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6126" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4590</d8p1:_y>
              </Location>
              <Name z:Id="6127">Tag</Name>
              <OutputPortsCollection z:Id="6128" z:Size="1">
                <FBDPort z:Ref="5462" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6129">_</Prefix>
              <SecondName z:Ref="6127" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="84" i:nil="true" />
              <InputFBDPort z:Ref="6122" i:nil="true" />
              <OutputFBDPort z:Ref="5462" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6130" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6131">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1981</Id>
              <InputPortsCollection z:Id="6132" z:Size="1">
                <FBDPort z:Ref="5457" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6133" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4590</d8p1:_y>
              </Location>
              <Name z:Id="6134">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6135" z:Size="2">
                <FBDPort z:Id="6136" i:type="OutputFBDPort">
                  <Alias z:Id="6137">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1983</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6138" z:Size="1">
                    <FBDPortExtSettings z:Id="6139">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6140" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6141">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6142" i:type="OutputFBDPort">
                  <Alias z:Id="6143">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1984</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6144" z:Size="1">
                    <FBDPortExtSettings z:Id="6145">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6146" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6147">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6148">YART</Prefix>
              <SecondName z:Id="6149">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6150" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2871</Id>
              <InputPortsCollection z:Id="6151" z:Size="1">
                <FBDPort z:Id="6152" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2872</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6153" z:Size="1">
                    <FBDPortExtSettings z:Id="6154">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6155">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6156" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4640</d8p1:_y>
              </Location>
              <Name z:Id="6157">Tag</Name>
              <OutputPortsCollection z:Id="6158" z:Size="1">
                <FBDPort z:Ref="5608" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6159">_</Prefix>
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="360" i:nil="true" />
              <InputFBDPort z:Ref="6152" i:nil="true" />
              <OutputFBDPort z:Ref="5608" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6160" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6161">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2874</Id>
              <InputPortsCollection z:Id="6162" z:Size="1">
                <FBDPort z:Ref="5603" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6163" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4640</d8p1:_y>
              </Location>
              <Name z:Id="6164">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6165" z:Size="2">
                <FBDPort z:Id="6166" i:type="OutputFBDPort">
                  <Alias z:Id="6167">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2876</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6168" z:Size="1">
                    <FBDPortExtSettings z:Id="6169">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6170" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6171">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6172" i:type="OutputFBDPort">
                  <Alias z:Id="6173">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2877</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6174" z:Size="1">
                    <FBDPortExtSettings z:Id="6175">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6176" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6177">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6178">YART</Prefix>
              <SecondName z:Id="6179">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6180" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2882</Id>
              <InputPortsCollection z:Id="6181" z:Size="1">
                <FBDPort z:Id="6182" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2883</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6183" z:Size="1">
                    <FBDPortExtSettings z:Id="6184">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2447" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6185" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4630</d8p1:_x>
                <d8p1:_y>4690</d8p1:_y>
              </Location>
              <Name z:Ref="2672" i:nil="true" />
              <OutputPortsCollection z:Id="6186" z:Size="1">
                <FBDPort z:Ref="5618" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2679" i:nil="true" />
              <SecondName z:Ref="2672" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="434" i:nil="true" />
              <InputFBDPort z:Ref="6182" i:nil="true" />
              <OutputFBDPort z:Ref="5618" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6187" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6188">Подготовки переменной к отправке</Description>
              <HelpID>646</HelpID>
              <Id>2878</Id>
              <InputPortsCollection z:Id="6189" z:Size="1">
                <FBDPort z:Ref="5613" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6190" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4700</d8p1:_y>
              </Location>
              <Name z:Id="6191">YL INT</Name>
              <OutputPortsCollection z:Id="6192" z:Size="2">
                <FBDPort z:Id="6193" i:type="OutputFBDPort">
                  <Alias z:Id="6194">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2880</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6195" z:Size="1">
                    <FBDPortExtSettings z:Id="6196">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6197" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6198">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6199" i:type="OutputFBDPort">
                  <Alias z:Id="6200">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2881</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6201" z:Size="1">
                    <FBDPortExtSettings z:Id="6202">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6203" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6204">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2653" i:nil="true" />
              <SecondName z:Id="6205">YLPI</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6241e6fe-1d07-4558-a335-b3285b9cb47e</SpecificationId>
              <Code z:Id="6206">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);</Code>
            </FBDItem>
            <FBDItem z:Id="6207" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2893</Id>
              <InputPortsCollection z:Id="6208" z:Size="1">
                <FBDPort z:Id="6209" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2894</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6210" z:Size="1">
                    <FBDPortExtSettings z:Id="6211">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2447" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6212" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4750</d8p1:_y>
              </Location>
              <Name z:Ref="2672" i:nil="true" />
              <OutputPortsCollection z:Id="6213" z:Size="1">
                <FBDPort z:Ref="5627" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2679" i:nil="true" />
              <SecondName z:Ref="2672" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="401" i:nil="true" />
              <InputFBDPort z:Ref="6209" i:nil="true" />
              <OutputFBDPort z:Ref="5627" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6214" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6215">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2885</Id>
              <InputPortsCollection z:Id="6216" z:Size="1">
                <FBDPort z:Ref="5622" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6217" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4750</d8p1:_y>
              </Location>
              <Name z:Id="6218">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6219" z:Size="2">
                <FBDPort z:Id="6220" i:type="OutputFBDPort">
                  <Alias z:Id="6221">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2887</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6222" z:Size="1">
                    <FBDPortExtSettings z:Id="6223">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6224" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6225">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6226" i:type="OutputFBDPort">
                  <Alias z:Id="6227">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2888</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6228" z:Size="1">
                    <FBDPortExtSettings z:Id="6229">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6230" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6231">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6232">YART</Prefix>
              <SecondName z:Id="6233">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6234" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2896</Id>
              <InputPortsCollection z:Id="6235" z:Size="1">
                <FBDPort z:Id="6236" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2897</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6237" z:Size="1">
                    <FBDPortExtSettings z:Id="6238">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2447" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6239" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4800</d8p1:_y>
              </Location>
              <Name z:Ref="2672" i:nil="true" />
              <OutputPortsCollection z:Id="6240" z:Size="1">
                <FBDPort z:Ref="5636" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2679" i:nil="true" />
              <SecondName z:Ref="2672" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="405" i:nil="true" />
              <InputFBDPort z:Ref="6236" i:nil="true" />
              <OutputFBDPort z:Ref="5636" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6241" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6242">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2889</Id>
              <InputPortsCollection z:Id="6243" z:Size="1">
                <FBDPort z:Ref="5631" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6244" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4800</d8p1:_y>
              </Location>
              <Name z:Id="6245">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6246" z:Size="2">
                <FBDPort z:Id="6247" i:type="OutputFBDPort">
                  <Alias z:Id="6248">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2891</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6249" z:Size="1">
                    <FBDPortExtSettings z:Id="6250">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6251" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6252">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6253" i:type="OutputFBDPort">
                  <Alias z:Id="6254">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2892</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6255" z:Size="1">
                    <FBDPortExtSettings z:Id="6256">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6257" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6258">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6259">YART</Prefix>
              <SecondName z:Id="6260">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="5746" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6261" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2025</Id>
              <InputPortsCollection z:Id="6262" z:Size="0" />
              <InternalPortsCollection z:Id="6263" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4593</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="6264">comment</Name>
              <OutputPortsCollection z:Id="6265" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="6266">_</Prefix>
              <SecondName z:Id="6267">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="6268">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</Comment>
              <Height>610</Height>
              <Width>425</Width>
            </FBDItem>
            <FBDItem z:Id="6269" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2037</Id>
              <InputPortsCollection z:Id="6270" z:Size="0" />
              <InternalPortsCollection z:Id="6271" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5040</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="6272">comment</Name>
              <OutputPortsCollection z:Id="6273" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="6274">_</Prefix>
              <SecondName z:Id="6275">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="6276">UEsDBBQAAgAIAN1rfVEWnXXzMQEAAP4BAAARAAAAZG9jUHJvcHMvY29yZS54bWxtkdFKwzAUhl+l5L5N04oboe0uFK8UBAeKdyE924JrEpJsnXfiK+ijKExUfIXsSXwF286VDXaXP//3H/jP+f38yUarah4swVihZI5IFKMAJFelkNMcLdwkHKJRkXFNuTJwbZQG4wTYoIlJS0ueo5lzmmKsF2YeKTPFJccwhwqks5hEBKOedWAqezTQOXtkJdyjhqPozuzplRU9WNd1VKcdmsQxwXdXlzd8BhULhbSOSQ67FNd9yHaEjZpusjEnylTM2W6IZvyBTaEddoorcKxkjuF2FaHud4GKrOSUG2BOmcK/+i+/3jxvnvzafwT+pXm8+7dGfGd4j8v+97H9gDJoetBt651zm56djy9QkcRkEMbDMI3HJKEnA5qk9+2sg3x3JANL0V6yIBnel506vGDxB1BLAwQUAAIACADda31R9znPlt8BAAAGBAAAEQAAAHdvcmQvZG9jdW1lbnQueG1spVNdbtQwEL5K5PfdZKuFrqLNVggkxANSRcUBHMdJLOIf2U7S5QmoEA8cgitUgkqI1ZYrOCfhCozdJltRCYH6Ys83/ubzN07m1+7n+uScN1FHtWFSZGgxT1BEBZEFE1WGWlvOVuhks+7TQpKWU2Ej4AuT9hmqrVVpHBtSU47NXCoq4KyUmmMLUFdxL3WhtCTUGJDjTXyUJI9jjplAo4wy94Q4I1oaWdo5kTyWZckIDVJQvkj+ED2rsaKjGif/4opj/aZVMxBX2LKcNcxug7PJ1CKB1rVIb0VmkyNflN44Sr2PsaL7G7/jzaHdxfJh/T7TuIftIFg9TO+5lq06qN1/wP9Se4pFhw2KOElfVEJqnDc0Q75r5P+hXBZbvyu/6LCchq3Boor6tMNNhnQ7e/UaAcpZwe5Aio19YhieUvFmHU8KduO+uGu3Gy6GT+7K7d13dxW5b+4Swv3wefgYDe+j4SJkdoGwB/pXdx25HxDshw/DO1/vDyG69NL25oKwBsuGEnt73VbR0bCg5/YUVzQ4AmZ19haOYEBWy8Uj77zO0PLoOIQwWPAgyUR9iTVkG1pamL3EMzSr6glYqcYwl9ZKPqKa4oLqDB0nKw9LKe0dWLU2wGR8pNF4PH6D+DDQm99QSwMEFAACAAgA3Wt9UVbLu1DfAgAAlwoAAA8AAAB3b3JkL3N0eWxlcy54bWzdVsFu3CAQ/RWLe2PvKqqiVZwo2SpKpTRdNVHu2GCbLgYEOE76az30k/oLHTBsdu1tUqnbS33x8IA3w7xh7J/ff5yeP7U8eaTaMClyNDvKUEJFKQkTdY46W707Qednp/3C2GdOTQKrhVn0OWqsVYs0NWVDW2yOpKIC5iqpW2xhqOu0l5ooLUtqDJC1PJ1n2fu0xUwgR0hk+YFWuOPWuKFe6TAMI/+6ksKapF9gUzKWoyXmrNAMAdJcCLONpG59AROPmOcoCwAbAyVWZowZq9majlEhV1rKagw/YsFMM6GVXOoI4s7KSP0tgvN5gLqICCloXNaQiJacYu0O6CkjWb+oGN+lBs3sBWe1iDsLbChnG06ORe2sNGQzHedYjUfutaZU3dInOz6gw2+AfJI8hWt6qSleX1IQf5LFnhHZL0FFLXmcm8VTd0ppqA7He9u1BRThRJo9iZlkIvJcAHT9rBoqpjwKl1CEALsMfek4fcmsQ0Cf48wNCn8KvxGqrrJUB3uYcC4C1/aaMTzUniA+Wm3sjXfh13Na2WBqVjd2u4aEhcx3mN9tot05RMHIpJ6/lhFxxCgIroLg2xKnkyvnrzRst88KolNY41pj1bjQ/NRHkqOVj5QMu5x0/mrgdiP0rbvxPBbDSg+GHow0ME29lQ24KyF1O96Wb3kL4SerGGziOkQUmbbsmhFCxd8FMXXr9EuGEo1awGUjnzd3b5kdOIb5JAaobKqhVtdowzzpPBk8V1fjRuPaL6do1Ax+E4/FhVu7Fcv9n5VAcj/s9L5twYfwwFhSzj/hYSQVbOpD/Q8OyROOHQsqeJieZSf7FhTSWtm+wuBv1CsU6W5A6XagOtauLd/SbE+Oplnx6UjuWKvgNdtfNvfZnnxdwncTWuFLvnZEdN+UHB17A9pEbCumwdBow6DSEEeww2ck889uog/Ou9Hn4MxR2IMTM/iLIPT631E/HJ46nZTJ/3DJomXOfgFQSwMEFAACAAgA3Wt9UQgE5gtzAAAAfwAAABIAAAB3b3JkL251bWJlcmluZy54bWwNi0EOwiAQAL9CuFvQgzGktG9Bum1JuruEpeLfPPgkvyDHmcn8Pt9xfuOhXlAkMXl9HaxWQJGXRJvXZ10vDz1PY3N04hNKt6oPJK55vdeanTESd8AgA2eg3lYuGGrHspnGZcmFI4j0Ew9zs/ZuMCTSykx/UEsDBBQAAgAIAN1rfVG8fuY2VQEAAJQCAAARAAAAd29yZC9zZXR0aW5ncy54bWxlkk1ugzAQha8Sed8QyE8rFBK1q2yiLugFBnsAK8a2bBPK2brokXqFGohFm+xmvvdmxjPyz9f3/vjZiMUVjeVKZiRersgCJVWMyyojrSufXsjxsO9Si855ZhfeL23aZaR2TqdRZGmNDdil0ii9VirTgPOpqaJOGaaNomitL21ElKxWu6gBLsnQknGrBfRvQC+VUa1keQ0aF116BZER/5BodGEJrXAfUORO6aA+J0GH1qlTr2uU4PwO9+V4Rfkq2TtjJwTm97w3UNVocHOUT4t6m4QGMzJRXnDBXX9WDImXWsMfDtBwapRVpVv6kkiVJac4noCEkXEyzoz+DRUmHxrgGbSe5hZVnBHBq9rFQ6nzGQNzGZOiSm5aMmrJpI0JUIpycN+CmSWB/fGtA1vPbBPYZmbbwLYz2wW2G1jdazSCy4s/SQgHXiohVIfsNOsPKBwkfK/DL1BLAwQUAAIACADda31RbVLev58FAAD9GwAAFQAAAHdvcmQvdGhlbWUvdGhlbWUxLnhtbO1ZT2/bNhT/KoTurSxbcp2gbhE7drs1aYPE69AjLdMSa0oUSDqpb0N7HDBgWDfsMmC3HYZtAVpgh2XYh8nWYeuAfIVRtCxRNtUkTVZsWHywRer33u/94Xsi5ZOffrl5+0lEwD5iHNO4bTnXaxZAsU9HOA7a1lSMr7Ws27duwnURoggBCY75OmxboRDJum1zX05Dfp0mKJb3xpRFUMghC+wRgwdSSUTseq3WtCOIYwvEMEJt68F4jH0EBqlKK1feI/IrFjyd8Anb8xWjLqGwo4mT/vAZ7xIG9iFpW5JnRA8G6ImwAIFcyBttq6Y+FrBv3bRzKSIqhDXBvvosBDOJ0aSuBFkwzCWdvrt2Y7NgqM8ZVoG9Xq/bcwqNCgF9X3rrrIDdfsvp5Fo11PxyVXu35tXcJQGNobEisNbpdLy1skCjEHBXBFq1prtRLwu4hYC36kNno9ttlgW8QqC5ItC/sdZ0lwQUKiQ4nqzA08wWKcoxY0ruGvEtiW/la6GA2dpKmyuIRdW6i+BjyvoSoLIMBY6BmCVoDH2J68JoyDBUDHAdQe1WNufz1bmUDnCf4US0rfcTKAukwJwcfXdy9AKcHB0eP315/PTH42fPjp/+YJK8C+NAl3z9zad/ffUR+PPF16+ff14hwHWB377/+NefP6tACh356ovD318evvrykz++fW7CbzA41PEDHCEO7qMDsEuj1D8DBRqyc4oMQohLIjCUUBOyJ8IS8v4MEiOwg8oxfMhkWzAi70wfl+zdC9lUYBPyXhiVkNuUkg5lZp/uKTrNp2kcVPCzqQ7chXDfSN9dynJvmsiVjY1KuyEqmbpDZOJhgGIkQHqPThAyyT3CuBTfbewzyulYgEcYdCA2B2aAh8IsdRdHMkEzo40y66UIbT8EHUqMBJtovwyVFQKJUSkipWjegVMBI7PVMCI6dAuK0Gjo3oz5pcBzIZMeIEJBb4Q4Nwo9YLOSyfegbFHmFbBNZlEZygSeGKFbkFIdukkn3RBGidluHIc6+D0+kSsWgh0qzHbQcs2kY5kQGFdn/iFG4pzF/gEOQvNiSe9MmbFGEC3X6IyMIYoXD4BSK49w/Ka+TrBs7Fd9famvb8iHnbGelrt5JfA/2sM34TTeQWmdXLXwqxZ+1cLfUOH/ROMuerWt79aVnqhy6z7GhOyJGUFbXHV5Ll0c9eWkGiih/KiQhPJywVcCBgyqa8Co+BCLcC+EieRxFEXAM90BBwnl8ohiVSpXJ14svVZzXn5MlXAotuloPt8onV9zRWoUcJ2qkao4K13jxkXpnDnyjHyOV8HnvZnP1mIqywjA9H2E06xnZnIfEjRKoz9XLTBBu8gXmb5Fri49bzyEI5QlzjF75jTOGsnW6YHU+NYaF+U7S+Z0QreK0LuM1NVOS529WrkkLo/AgTTTq3sW8KNE6uRpO4MkiNuWLzKHTi32ZbcrVqxTq3a7RJIwLjYhD+di6lb+7icu7K57bqruAoabutQZyRst592T28sJROOxTHzFTDHM7tGpQGwvHB2AIZmyXSgtd+dLaoS5fHjUFwMmi9PNVlu56LPFv/wuKSsKSJIQZu2pped6jlfXuRFqpNlnVxj/lr40LtEX7//sS7p85Sa4MVKnNbk1YBCk67RtUSZCKttNEmK/z+RmQpFJw4A8Bqr+RNJ34qmxaH/Rr+yFknl3C0KxiwPAsGxxImQI7YjM01O0OYt2mJVHpinrLbnBPJn/DtE+IoO0cptpCCwQ5g0ki4UCLifONtXYMOj/mzdEbtWG6JQdQ0HlnmeD4urtXnsKrF3UinM+besVbte9sz9tE3meAemXbOSY+aTY/g6oesQW+025JK+1slLMJ4fS6pbuX6rrXW6virS0qlbBpe5Ttfg3quJ/CuHbx98zhN87V/Tt1WK2tZOQGi39t7aYufU3UEsDBBQAAgAIAN1rfVE3I0061QAAALwBAAALAAAAX3JlbHMvLnJlbHOVkd9KQzEMh1+l5H4ndYiIrBuMMfBOhi8Q2pxzytY/tJluz+aFj+QrWEVkkwl62fSXL1/I28vrbHEIO/XEpfoUDVx1GhRHm5yPg4G99JNbWMxnG96RtEQdfa6qtcRqYBTJd4jVjhyodilzbD99KoGkPcuAmeyWBsap1jdYThlwzlT3zsBmqZd6fb0C9XjM/Bd+6ntveZXsPnCUC2N+JBqZysBiAJ9Tcei+6l3jgsILTjYV/r/X73tjYCFHQvhBnuTSuot4ridqzeqh1etn5FsNz24wfwdQSwMEFAACAAgA3Wt9UU27gToyAQAAEwQAABMAAABbQ29udGVudF9UeXBlc10ueG1stZNNTsMwEIWvYnlbJW5ZIISadgFsoQsuYJxJaxH/yDMp7dlYcCSuwCRps0ClLaJsIjnz3vueLfvz/WM637harCGhDb6Qk3wsBXgTSuuXhWyoym7kfDZ93kZAwVKPhVwRxVul0KzAacxDBM+TKiSniZdpqaI2r3oJ6mo8vlYmeAJPGbUZcja9h0o3NYmHDf/usQlqlOKuF7asQuoYa2s08VytffmNku0IOTs7Da5sxBELpFAHEd3oR8Le+MQnkWwJYqETPWrHMvUWUqnKYBrH1vx4zoGmoaqsgcHfpsUUDCDyEbs6HyZOWz86WcQ37gUSWy/fZIg+3QJpWwNevkKfewYfiNjxHw12yUc7sH2RQkS+2wl+32F/eVt3xvQIiew52yZ+cdB/J3/eehczMFX3xGdfUEsDBBQAAgAIAN1rfVHM7n/M4gAAALECAAAcAAAAd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsc62SS24CMQyGrxJ538lMF1VVEdiw6aaLwgXS4Hmok4diT1XOxoIjcQVMQTwkhLqYpf84nz852W22k9mv79UPZupiMFAVJSgMLq660BgYuH56hdl08om9Zemgtkuk5EogAy1zetOaXIveUhETBjmpY/aWpcyNTtZ92wb1c1m+6HzNgFumel8ZkGDB6x4rUMt1wv8MiHXdOZxHN3gMfGeOpgORhGhzg2zgWBfCAaXvS3wMflSFMPgvzLLQi8U5eiiyQGbpoXEXcoJereSUPHRZyshxX4YPxIvFX3kMq7OJvvl40z1QSwECFAAUAAIACADda31RFp118zEBAAD+AQAAEQAAAAAAAAAAAAAAAAAAAAAAZG9jUHJvcHMvY29yZS54bWxQSwECFAAUAAIACADda31R9znPlt8BAAAGBAAAEQAAAAAAAAAAAAAAAABgAQAAd29yZC9kb2N1bWVudC54bWxQSwECFAAUAAIACADda31RVsu7UN8CAACXCgAADwAAAAAAAAAAAAAAAABuAwAAd29yZC9zdHlsZXMueG1sUEsBAhQAFAACAAgA3Wt9UQgE5gtzAAAAfwAAABIAAAAAAAAAAAAAAAAAegYAAHdvcmQvbnVtYmVyaW5nLnhtbFBLAQIUABQAAgAIAN1rfVG8fuY2VQEAAJQCAAARAAAAAAAAAAAAAAAAAB0HAAB3b3JkL3NldHRpbmdzLnhtbFBLAQIUABQAAgAIAN1rfVFtUt6/nwUAAP0bAAAVAAAAAAAAAAAAAAAAAKEIAAB3b3JkL3RoZW1lL3RoZW1lMS54bWxQSwECFAAUAAIACADda31RNyNNOtUAAAC8AQAACwAAAAAAAAAAAAAAAABzDgAAX3JlbHMvLnJlbHNQSwECFAAUAAIACADda31RTbuBOjIBAAATBAAAEwAAAAAAAAAAAAAAAABxDwAAW0NvbnRlbnRfVHlwZXNdLnhtbFBLAQIUABQAAgAIAN1rfVHM7n/M4gAAALECAAAcAAAAAAAAAAAAAAAAANQQAAB3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzUEsFBgAAAAAJAAkAQQIAAPARAAAAAA==</Comment>
              <Height>345</Height>
              <Width>621</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="6277">YartLink</Name>
          <Parent z:Ref="5385" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>8</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="6278">YartLink</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
  </ProgramPartsCollection>
  <ProjectFBDLibrary xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="6279" z:Size="1">
    <d2p1:anyType z:Id="6280" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="6281" z:Size="0" />
      <Name z:Id="6282">Библиотека проекта</Name>
    </d2p1:anyType>
  </ProjectFBDLibrary>
  <RemotePublicCases z:Id="6283" z:Size="2">
    <RemotePublicCase z:Id="6284">
      <EventTagFlag z:Id="6285">
        <Address>0</Address>
        <AllowPublic>false</AllowPublic>
        <ArraySize>1</ArraySize>
        <Bit>0</Bit>
        <Comments z:Ref="67" i:nil="true" />
        <Id>-1</Id>
        <IsArray>false</IsArray>
        <IsAutoMemory>true</IsAutoMemory>
        <KeepingValue>false</KeepingValue>
        <LocalAddress>0</LocalAddress>
        <MemoryType>RamBit</MemoryType>
        <ModbusAddress>0</ModbusAddress>
        <Name z:Id="6286">Новый параметр -1</Name>
        <ParentId>0</ParentId>
        <ReadOnly>true</ReadOnly>
        <Type>Bool</Type>
        <Value z:Id="6287" xmlns:d5p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d5p1:ArrayOfanyType" z:Size="1">
          <d5p1:anyType z:Id="6288" xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:boolean">false</d5p1:anyType>
        </Value>
      </EventTagFlag>
      <IsOnlyPublic>true</IsOnlyPublic>
      <PublicTags z:Id="6289" z:Size="0" />
    </RemotePublicCase>
    <RemotePublicCase z:Id="6290">
      <EventTagFlag z:Ref="306" i:nil="true" />
      <IsOnlyPublic>false</IsOnlyPublic>
      <PublicTags z:Id="6291" z:Size="10">
        <CustomTag z:Ref="236" i:nil="true" />
        <CustomTag z:Ref="240" i:nil="true" />
        <CustomTag z:Ref="244" i:nil="true" />
        <CustomTag z:Ref="340" i:nil="true" />
        <CustomTag z:Ref="84" i:nil="true" />
        <CustomTag z:Ref="360" i:nil="true" />
        <CustomTag z:Ref="434" i:nil="true" />
        <CustomTag z:Ref="439" i:nil="true" />
        <CustomTag z:Ref="450" i:nil="true" />
        <CustomTag z:Ref="455" i:nil="true" />
      </PublicTags>
    </RemotePublicCase>
  </RemotePublicCases>
  <SafeExtModuleWork>true</SafeExtModuleWork>
  <SerialInterfaces z:Id="6292">
    <SerialPorts z:Id="6293" z:Size="3">
      <SerialPort z:Id="6294">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>1</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
      <SerialPort z:Id="6295">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>2</PortID>
        <PortModeID>0</PortModeID>
      </SerialPort>
      <SerialPort z:Id="6296">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>3</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
    </SerialPorts>
  </SerialInterfaces>
  <Telemetry z:Id="6297">
    <GPRSProperty z:Id="6298">
      <GPRS_Modem_APN z:Id="6299">
        <Constant z:Id="6300">internet</Constant>
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_APN>
      <GPRS_Modem_Password z:Id="6301">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Password>
      <GPRS_Modem_Username z:Id="6302">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Username>
    </GPRSProperty>
    <TelemetryInterface>Ethernet</TelemetryInterface>
    <TelemetryServers z:Id="6303" z:Size="1">
      <TelemetryServer z:Id="6304">
        <Password z:Id="6305">
          <Constant z:Id="6306">82435RS98</Constant>
          <IsLink>true</IsLink>
          <Link z:Ref="328" i:nil="true" />
        </Password>
        <Port z:Id="6307">
          <Constant z:Id="6308">1883</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Port>
        <TelemetryServerName z:Id="6309">Сервер телеметрии</TelemetryServerName>
        <Timeout z:Id="6310">
          <Constant z:Id="6311">3000</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Timeout>
        <URL z:Id="6312">
          <Constant z:Id="6313">192.168.1.38</Constant>
          <IsLink>true</IsLink>
          <Link z:Ref="310" i:nil="true" />
        </URL>
        <Username z:Id="6314">
          <Constant z:Id="6315">empty</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Username>
      </TelemetryServer>
    </TelemetryServers>
  </Telemetry>
  <Version xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="6316">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>2</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </Version>
</Program></Project>
</Root>