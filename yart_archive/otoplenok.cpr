<?xml version="1.0" encoding="utf-8"?>
<Root>
  <Header>
    <Version Value="4.0" />
    <ProjectName Value="Отопленок" />
    <ProjectVersion Value="2.0" />
    <ProjectDescription>Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</ProjectDescription>
  </Header>
  <Project>﻿<?xml version="1.0" encoding="utf-8"?>
<Program xmlns:i="http://www.w3.org/2001/XMLSchema-instance" z:Id="1" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" xmlns="http://Cerebrum.ru/Project">
  <BaseDevise z:Id="2">
    <DevName z:Id="3">YART 1.8</DevName>
    <IODeviceCollection z:Id="4" z:Size="26">
      <IODevice z:Id="5" i:type="AIODevice">
        <Alias z:Id="6">AIN_1_WaterT</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="7">AIN_1</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="8" i:type="AIODevice">
        <Alias z:Id="9">AIN_2_RoomT</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Id="10">AIN_2</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="11" i:type="AIODevice">
        <Alias z:Id="12">AIN_3_FLOOD</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Id="13">AIN_3</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="14" i:type="AIODevice">
        <Alias z:Id="15">AIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="15" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="16" i:type="AIODevice">
        <Alias z:Id="17">AIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Ref="17" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="18" i:type="AIODevice">
        <Alias z:Id="19">AIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Ref="19" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="20" i:type="AIODevice">
        <Alias z:Id="21">AIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="21" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="22" i:type="AIODevice">
        <Alias z:Id="23">AIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="23" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="24" i:type="AIODevice">
        <Alias z:Id="25">AOUT_1</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Ref="25" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="26" i:type="AIODevice">
        <Alias z:Id="27">AOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="27" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="28" i:type="DIODevice">
        <Alias z:Id="29">DIN_1_POWER</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="30">DIN_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="31" i:type="DIODevice">
        <Alias z:Id="32">DIN_2</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Ref="32" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="33" i:type="DIODevice">
        <Alias z:Id="34">DIN_3</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Ref="34" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="35" i:type="DIODevice">
        <Alias z:Id="36">DIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="36" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="37" i:type="DIODevice">
        <Alias z:Id="38">DIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Id="39">DIN_5</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="40" i:type="DIODevice">
        <Alias z:Id="41">DIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Id="42">DIN_6</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="43" i:type="DIODevice">
        <Alias z:Id="44">DIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="44" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="45" i:type="DIODevice">
        <Alias z:Id="46">DIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="46" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="47" i:type="DIODevice">
        <Alias z:Id="48">DOUT_1_WaterPWM</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Id="49">DOUT_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="50" i:type="DIODevice">
        <Alias z:Id="51">DOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="51" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="52" i:type="DIODevice">
        <Alias z:Id="53">DOUT_3</Alias>
        <Direction>Output</Direction>
        <Index>3</Index>
        <Name z:Id="54">DOUT_3</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="55" i:type="DIODevice">
        <Alias z:Id="56">DOUT_4</Alias>
        <Direction>Output</Direction>
        <Index>4</Index>
        <Name z:Ref="56" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="57" i:type="DIODevice">
        <Alias z:Id="58">DOUT_5</Alias>
        <Direction>Output</Direction>
        <Index>5</Index>
        <Name z:Ref="58" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="59" i:type="DIODevice">
        <Alias z:Id="60">DOUT_6</Alias>
        <Direction>Output</Direction>
        <Index>6</Index>
        <Name z:Ref="60" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="61" i:type="DIODevice">
        <Alias z:Id="62">DOUT_7</Alias>
        <Direction>Output</Direction>
        <Index>7</Index>
        <Name z:Ref="62" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="63" i:type="DIODevice">
        <Alias z:Id="64">DOUT_8</Alias>
        <Direction>Output</Direction>
        <Index>8</Index>
        <Name z:Ref="64" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
    </IODeviceCollection>
    <PLCId>52737</PLCId>
  </BaseDevise>
  <Build>0</Build>
  <CustomListsCollection z:Id="65" z:Size="9">
    <CustomList z:Id="66">
      <Comments z:Id="67"></Comments>
      <Description i:nil="true" />
      <Id>99</Id>
      <Name z:Id="68">Otoplenok</Name>
      <ParentID>0</ParentID>
    </CustomList>
    <CustomList z:Id="69">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>684</Id>
      <Name z:Id="70">MODBUS_Read</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="71">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1242</Id>
      <Name z:Id="72">Serial</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="73">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1243</Id>
      <Name z:Id="74">TemperaturesControl</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="75">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1322</Id>
      <Name z:Id="76">Alarms</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="77">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1326</Id>
      <Name z:Id="78">Meters</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="79">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1725</Id>
      <Name z:Id="80">Connection</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="81">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1763</Id>
      <Name z:Id="82">YartLink</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="83">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>2971</Id>
      <Name z:Id="84">TimeTable</Name>
      <ParentID>99</ParentID>
    </CustomList>
  </CustomListsCollection>
  <CustomTagsCollection z:Id="85" z:Size="86">
    <CustomTag z:Id="86">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="87">MERCURY 206</Comments>
      <Id>1970</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="88">ElectroMeterT1</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="89" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="90" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="91">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>135</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="92">Начать чтение</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="93" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="94" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">true</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="95">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>136</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="96">Адрес первого IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="97" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="98" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="99">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>260</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="100">Адрес первого HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="101" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="102" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">65</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="103">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>347</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="104">Адрес первого CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="105" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="106" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="107">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>416</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="108">Адрес первого DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="109" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="110" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="111">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>123</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="112">MB1TD_IR_Temperature_x10</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="113" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="114" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="115">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>261</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="116">Чтение одного HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="117" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="118" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="119">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>348</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="120">Чтение одного CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="121" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="122" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="123">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>417</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="124">Чтение одного DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="125" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="126" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="127">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>124</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="128">Чтение десяти IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="129" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="130" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="131" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="132" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="133" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="134" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="135" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="136" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="137" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="138" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="139" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="140">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>262</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="141">Чтение десяти HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="142" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="143" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="144" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="145" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="146" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="147" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="148" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="149" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="150" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="151" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="152" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="153">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>349</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="154">Чтение десяти CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="155" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="156" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="157" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="158" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="159" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="160" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="161" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="162" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="163" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="164" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="165" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="166">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>418</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="167">Чтение десяти DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="168" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="169" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="170" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="171" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="172" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="173" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="174" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="175" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="176" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="177" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="178" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="179">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1043</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="180">Repeat IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="181" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="182" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="183">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1049</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="184">Timeout IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="185" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="186" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="187">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1053</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="188">RegCnt</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="189" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="190" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="191">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>20</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1095</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="192">Read 20 IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="193" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="20">
        <d4p1:anyType z:Id="194" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="195" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="196" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="197" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="198" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="199" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="200" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="201" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="202" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="203" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="204" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="205" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="206" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="207" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="208" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="209" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="210" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="211" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="212" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="213" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="214">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>767</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="215">Timeout</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="216" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="217" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="218">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>109</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="219">Параметры COM3 485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="220" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="221" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="222">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>134</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="223">Сетевой адрес устройства</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="224" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="225" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="226">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>100</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="227">COM3 порт 485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="228" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="229" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">3</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="230">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>101</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="231">Baudrate</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="232" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="233" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="234">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>768</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="235">Retries</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="236" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="237" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="238">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1216</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="239">RoomT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="240" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="241" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="242">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1244</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="243">WaterT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="244" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="245" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="246">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1271</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="247">TargetT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="248" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="249" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">250</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="250">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1276</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="251">Kp_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="252" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="253" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">10</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="254">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1282</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="255">Ki_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="256" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="257" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.03</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="258">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1283</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="259">Kd_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="260" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="261" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="262">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>17</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1298</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="263">Buffer_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="264" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="17">
        <d4p1:anyType z:Id="265" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="266" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="267" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="268" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="269" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="270" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="271" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="272" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="273" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="274" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="275" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="276" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="277" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="278" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="279" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="280" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="281" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="282">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1302</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="283">TestAuto_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="284" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="285" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="286">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1323</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="287">Alarm1</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="288" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="289" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="290">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1601</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="291">X_PWM_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="292" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="293" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">-100</d4p1:anyType>
        <d4p1:anyType z:Id="294" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="295" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">100</d4p1:anyType>
        <d4p1:anyType z:Id="296" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">200</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="297">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1602</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="298">Y_PWM_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="299" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="300" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="301" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="302" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="303" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="304">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1712</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="305">TargetT_shifted</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="306" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="307" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="308">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1195</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>false</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="309">публикатор_1195</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="310" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="311" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="312">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>14</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="313">193.124.56.188</Comments>
      <Id>1988</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="314">IP GW</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="315" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="14">
        <d4p1:anyType z:Id="316" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="317" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="318" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="319" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="320" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="321" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="322" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="323" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="324" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="325" i:type="z:char">54</d4p1:anyType>
        <d4p1:anyType z:Id="326" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="327" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="328" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="329" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="330">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>9</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1727</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="331">CloudPassword</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="332" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="9">
        <d4p1:anyType z:Id="333" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="334" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="335" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="336" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="337" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="338" i:type="z:char">82</d4p1:anyType>
        <d4p1:anyType z:Id="339" i:type="z:char">83</d4p1:anyType>
        <d4p1:anyType z:Id="340" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="341" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="342">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1747</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="343">Alarm_B</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="344" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="345" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="346">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1764</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="347">IP источника</Name>
      <ParentId>1763</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="348" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="349" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="350">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1765</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="351">Период отправки</Name>
      <ParentId>1763</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="352" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="353" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1000</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="354">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1919</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="355">COM2 port i485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="356" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="357" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="358">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1923</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="359">Параметры COM2 i485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="360" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="361" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="362">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="363">MERCURY 206</Comments>
      <Id>1971</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="364">ElectroMeterT2</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="365" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="366" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="367">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2074</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="368">max_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="369" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="370" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="371">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2075</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="372">min_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="373" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="374" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">-1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="375">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2096</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="376">Pt_K</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="377" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="378" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.0001</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="379">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2126</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="380">AIN_3_FLOOD_U</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="381" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="382" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="383">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>5</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2157</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="384">Protey15_IR_array_1</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="385" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="5">
        <d4p1:anyType z:Id="386" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="387" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="388" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="389" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="390" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="391">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2309</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="392">DiffErrReset</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="393" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="394" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="395">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2325</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="396">PZA_SETUP</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="397" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="398" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">29</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="399">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2554</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="400">Button</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="401" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="402" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="403">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1680</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="404">PWM_value</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="405" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="406" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="407">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2624</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="408">PWM_Val_0_100</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="409" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="410" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="411">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>7</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2643</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="412">X_PZA_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="413" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="7">
        <d4p1:anyType z:Id="414" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">25</d4p1:anyType>
        <d4p1:anyType z:Id="415" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">30</d4p1:anyType>
        <d4p1:anyType z:Id="416" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">35</d4p1:anyType>
        <d4p1:anyType z:Id="417" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">50</d4p1:anyType>
        <d4p1:anyType z:Id="418" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">60</d4p1:anyType>
        <d4p1:anyType z:Id="419" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">70</d4p1:anyType>
        <d4p1:anyType z:Id="420" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="421">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>7</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2644</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="422">Y_PZA_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="423" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="7">
        <d4p1:anyType z:Id="424" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="425" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">5</d4p1:anyType>
        <d4p1:anyType z:Id="426" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">8</d4p1:anyType>
        <d4p1:anyType z:Id="427" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">15</d4p1:anyType>
        <d4p1:anyType z:Id="428" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">24</d4p1:anyType>
        <d4p1:anyType z:Id="429" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">35</d4p1:anyType>
        <d4p1:anyType z:Id="430" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">55</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="431">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="432">градусы Цельсия
</Comments>
      <Id>2817</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="433">MB1TD_Temperature</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="434" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="435" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="436">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="437">PROTEY </Comments>
      <Id>2835</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="438">WaterColdMeter_lit_x1000</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="439" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="440" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="441">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>8</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2942</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="442">Array_F8_2Server</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="443" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="8">
        <d4p1:anyType z:Id="444" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="445" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="446" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="447" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="448" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="449" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="450" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="451" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="452">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>2</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2946</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="453">Array_B2_2Server</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="454" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="2">
        <d4p1:anyType z:Id="455" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="456" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="457">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2956</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="458">WeatherT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="459" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="460" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="461">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="462">Meter (PROTEY) is not installed at the stend</Comments>
      <Id>2960</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="463">WaterHotMeter_lit_x1000</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="464" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="465" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="466">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="467">Мкал (или 0.1 Мкал) -в документации есть разночтение</Comments>
      <Id>2967</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="468">WarmMeter</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="469" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="470" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="471">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>16</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="472">0 - MODE [0 - User; 1 - TimeTable]
1 - ComfortT byte0 (x10 градусов)
2 - ComfortT byte1 (x10 градусов)
3 - EconomT byte 0 (x10 градусов)
4 - EconomT byte1 (x10 градусов)
5 - Status [TBD]
6 - Reserve
7 - Start 0
8 - End 0
9 - Start 1
10 - End 1
11 - Start 2
12 - End 2
13 - tt_days[0] [false, false, false, false, false, false, false],
14 - tt_days[1] [false, false, false, false, false, false, false],
15 - tt_days[2] [false, false, false, false, false, false, false],

</Comments>
      <Id>2972</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="473">TimeTableArray</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="474" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="16">
        <d4p1:anyType z:Id="475" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="476" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">240</d4p1:anyType>
        <d4p1:anyType z:Id="477" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="478" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">180</d4p1:anyType>
        <d4p1:anyType z:Id="479" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="480" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="481" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="482" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="483" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">24</d4p1:anyType>
        <d4p1:anyType z:Id="484" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="485" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">24</d4p1:anyType>
        <d4p1:anyType z:Id="486" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="487" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">24</d4p1:anyType>
        <d4p1:anyType z:Id="488" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">16</d4p1:anyType>
        <d4p1:anyType z:Id="489" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">16</d4p1:anyType>
        <d4p1:anyType z:Id="490" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">16</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="491">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="492">0-USER;  1-TIMETABLE</Comments>
      <Id>2979</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="493">MODE</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="494" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="495" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="496">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="497">x10 градусов</Comments>
      <Id>2983</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="498">ComfortT</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="499" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="500" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="501">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="502">x10 градусов</Comments>
      <Id>2984</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="503">EconomT</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="504" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="505" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="506">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2985</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="507">Status</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="508" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="509" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="510">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2986</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="511">start_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="512" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="513" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="514">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2987</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="515">end_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="516" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="517" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="518">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2988</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="519">start_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="520" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="521" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="522">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2989</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="523">end_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="524" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="525" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="526">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2990</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="527">start_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="528" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="529" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="530">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2991</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="531">end_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="532" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="533" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="534">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="535">биты [0:6] - [Пн Вт Ср Чт Пт Сб Вс]</Comments>
      <Id>2992</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="536">tt_days_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="537" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="538" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="539">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="540">биты [0:6] - [Пн Вт Ср Чт Пт Сб Вс]</Comments>
      <Id>2993</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="541">tt_days_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="542" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="543" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="544">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="545">биты [0:6] - [Пн Вт Ср Чт Пт Сб Вс]</Comments>
      <Id>2994</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="546">tt_days_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="547" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="548" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="549">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="550">1 - Пн; 7 - Вс</Comments>
      <Id>3037</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="551">WeekDay</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="552" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="553" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="554">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3126</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="555">hour</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="556" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="557" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="558">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3184</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="559">isInterval_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="560" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="561" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="562">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3185</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="563">isInterval_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="564" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="565" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="566">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3186</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="567">isInterval_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="568" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="569" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="570">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3230</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="571">TT_TargetT</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="572" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="573" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="574">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3267</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="575">Target_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="576" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="577" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="578">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>16</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="579">Счетчик тепла
регистры</Comments>
      <Id>3339</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="580">VHM-T Array 32</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="581" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="16">
        <d4p1:anyType z:Id="582" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="583" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="584" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="585" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="586" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="587" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="588" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="589" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="590" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="591" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="592" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="593" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="594" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="595" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="596" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="597" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
  </CustomTagsCollection>
  <Description z:Id="598">Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</Description>
  <DeviceSpecificationId>52737</DeviceSpecificationId>
  <Devices xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="599" z:Size="1">
    <d2p1:anyType z:Ref="2" i:nil="true" />
  </Devices>
  <GlobalIdCounter>3363</GlobalIdCounter>
  <Id>f71354af-7d88-42bb-a1ac-f5413ff0a57c</Id>
  <LastBuildTimestamp>2020-12-23T18:34:58.7412333+03:00</LastBuildTimestamp>
  <LocalArchive z:Id="600" z:Size="0" />
  <MemoryInfo z:Id="601">
    <AlgMem z:Id="602">
      <AMX>58384</AMX>
      <CRC>4</CRC>
      <Capacity>655360</Capacity>
      <DefaultValues>288</DefaultValues>
      <ExtModules>8</ExtModules>
      <Header>72</Header>
      <LocalArchive>0</LocalArchive>
      <MapMemory>5616</MapMemory>
      <ProjectDesc>40</ProjectDesc>
      <PublicTags>52</PublicTags>
      <Var>2768</Var>
    </AlgMem>
    <BRam z:Id="603">
      <Capacity>4080</Capacity>
      <Used>0</Used>
    </BRam>
    <BitFRam z:Id="604">
      <Capacity>2048</Capacity>
      <Used>0</Used>
    </BitFRam>
    <BitRam z:Id="605">
      <Capacity>2048</Capacity>
      <Used>130</Used>
    </BitRam>
    <FRam z:Id="606">
      <Capacity>15104</Capacity>
      <Used>56</Used>
    </FRam>
    <Ram z:Id="607">
      <Capacity>32012</Capacity>
      <Used>1808</Used>
    </Ram>
    <Statistics z:Id="608">Статистика программы:
Блоков переменных: 125
Блоков кода: 128
Блоков констант: 11
Общее кол-во блоков: 282

Переменные: 86
Списков публикации: 2
Переменных в списках публикации: 11
Связей блоков: 257
Входы как константа: 65
</Statistics>
  </MemoryInfo>
  <MemoryMapStore z:Id="609">
    <Items xmlns:d3p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="610" z:Size="468">
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1970</d3p1:Key>
        <d3p1:Value z:Id="611">
          <Address z:Id="612">
            <ArrayCount>1</ArrayCount>
            <Location>4776</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="613" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>1970</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>135</d3p1:Key>
        <d3p1:Value z:Id="614">
          <Address z:Id="615">
            <ArrayCount>1</ArrayCount>
            <Location>9</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="616" z:Size="1">
            <d3p1:anyType z:Ref="94" i:nil="true" />
          </DefaultValues>
          <Id>135</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>136</d3p1:Key>
        <d3p1:Value z:Id="617">
          <Address z:Id="618">
            <ArrayCount>1</ArrayCount>
            <Location>4780</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="619" z:Size="1">
            <d3p1:anyType z:Ref="98" i:nil="true" />
          </DefaultValues>
          <Id>136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>260</d3p1:Key>
        <d3p1:Value z:Id="620">
          <Address z:Id="621">
            <ArrayCount>1</ArrayCount>
            <Location>4784</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="622" z:Size="1">
            <d3p1:anyType z:Ref="102" i:nil="true" />
          </DefaultValues>
          <Id>260</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>347</d3p1:Key>
        <d3p1:Value z:Id="623">
          <Address z:Id="624">
            <ArrayCount>1</ArrayCount>
            <Location>4786</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="625" z:Size="1">
            <d3p1:anyType z:Ref="106" i:nil="true" />
          </DefaultValues>
          <Id>347</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>416</d3p1:Key>
        <d3p1:Value z:Id="626">
          <Address z:Id="627">
            <ArrayCount>1</ArrayCount>
            <Location>4788</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="628" z:Size="1">
            <d3p1:anyType z:Ref="110" i:nil="true" />
          </DefaultValues>
          <Id>416</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>123</d3p1:Key>
        <d3p1:Value z:Id="629">
          <Address z:Id="630">
            <ArrayCount>1</ArrayCount>
            <Location>4790</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="631" z:Size="1">
            <d3p1:anyType z:Ref="114" i:nil="true" />
          </DefaultValues>
          <Id>123</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>261</d3p1:Key>
        <d3p1:Value z:Id="632">
          <Address z:Id="633">
            <ArrayCount>1</ArrayCount>
            <Location>4792</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="634" z:Size="1">
            <d3p1:anyType z:Ref="118" i:nil="true" />
          </DefaultValues>
          <Id>261</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>348</d3p1:Key>
        <d3p1:Value z:Id="635">
          <Address z:Id="636">
            <ArrayCount>1</ArrayCount>
            <Location>4794</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="637" z:Size="1">
            <d3p1:anyType z:Ref="122" i:nil="true" />
          </DefaultValues>
          <Id>348</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>417</d3p1:Key>
        <d3p1:Value z:Id="638">
          <Address z:Id="639">
            <ArrayCount>1</ArrayCount>
            <Location>4796</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="640" z:Size="1">
            <d3p1:anyType z:Ref="126" i:nil="true" />
          </DefaultValues>
          <Id>417</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>124</d3p1:Key>
        <d3p1:Value z:Id="641">
          <Address z:Id="642">
            <ArrayCount>10</ArrayCount>
            <Location>4798</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="643" z:Size="10">
            <d3p1:anyType z:Ref="130" i:nil="true" />
            <d3p1:anyType z:Ref="131" i:nil="true" />
            <d3p1:anyType z:Ref="132" i:nil="true" />
            <d3p1:anyType z:Ref="133" i:nil="true" />
            <d3p1:anyType z:Ref="134" i:nil="true" />
            <d3p1:anyType z:Ref="135" i:nil="true" />
            <d3p1:anyType z:Ref="136" i:nil="true" />
            <d3p1:anyType z:Ref="137" i:nil="true" />
            <d3p1:anyType z:Ref="138" i:nil="true" />
            <d3p1:anyType z:Ref="139" i:nil="true" />
          </DefaultValues>
          <Id>124</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>262</d3p1:Key>
        <d3p1:Value z:Id="644">
          <Address z:Id="645">
            <ArrayCount>10</ArrayCount>
            <Location>4818</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="646" z:Size="10">
            <d3p1:anyType z:Ref="143" i:nil="true" />
            <d3p1:anyType z:Ref="144" i:nil="true" />
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
            <d3p1:anyType z:Ref="151" i:nil="true" />
            <d3p1:anyType z:Ref="152" i:nil="true" />
          </DefaultValues>
          <Id>262</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>349</d3p1:Key>
        <d3p1:Value z:Id="647">
          <Address z:Id="648">
            <ArrayCount>10</ArrayCount>
            <Location>4838</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="649" z:Size="10">
            <d3p1:anyType z:Ref="156" i:nil="true" />
            <d3p1:anyType z:Ref="157" i:nil="true" />
            <d3p1:anyType z:Ref="158" i:nil="true" />
            <d3p1:anyType z:Ref="159" i:nil="true" />
            <d3p1:anyType z:Ref="160" i:nil="true" />
            <d3p1:anyType z:Ref="161" i:nil="true" />
            <d3p1:anyType z:Ref="162" i:nil="true" />
            <d3p1:anyType z:Ref="163" i:nil="true" />
            <d3p1:anyType z:Ref="164" i:nil="true" />
            <d3p1:anyType z:Ref="165" i:nil="true" />
          </DefaultValues>
          <Id>349</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>418</d3p1:Key>
        <d3p1:Value z:Id="650">
          <Address z:Id="651">
            <ArrayCount>10</ArrayCount>
            <Location>4858</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="652" z:Size="10">
            <d3p1:anyType z:Ref="169" i:nil="true" />
            <d3p1:anyType z:Ref="170" i:nil="true" />
            <d3p1:anyType z:Ref="171" i:nil="true" />
            <d3p1:anyType z:Ref="172" i:nil="true" />
            <d3p1:anyType z:Ref="173" i:nil="true" />
            <d3p1:anyType z:Ref="174" i:nil="true" />
            <d3p1:anyType z:Ref="175" i:nil="true" />
            <d3p1:anyType z:Ref="176" i:nil="true" />
            <d3p1:anyType z:Ref="177" i:nil="true" />
            <d3p1:anyType z:Ref="178" i:nil="true" />
          </DefaultValues>
          <Id>418</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1043</d3p1:Key>
        <d3p1:Value z:Id="653">
          <Address z:Id="654">
            <ArrayCount>1</ArrayCount>
            <Location>4878</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="655" z:Size="1">
            <d3p1:anyType z:Ref="182" i:nil="true" />
          </DefaultValues>
          <Id>1043</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1049</d3p1:Key>
        <d3p1:Value z:Id="656">
          <Address z:Id="657">
            <ArrayCount>1</ArrayCount>
            <Location>4880</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="658" z:Size="1">
            <d3p1:anyType z:Ref="186" i:nil="true" />
          </DefaultValues>
          <Id>1049</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1053</d3p1:Key>
        <d3p1:Value z:Id="659">
          <Address z:Id="660">
            <ArrayCount>1</ArrayCount>
            <Location>4884</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="661" z:Size="1">
            <d3p1:anyType z:Ref="190" i:nil="true" />
          </DefaultValues>
          <Id>1053</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1095</d3p1:Key>
        <d3p1:Value z:Id="662">
          <Address z:Id="663">
            <ArrayCount>20</ArrayCount>
            <Location>4886</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="664" z:Size="20">
            <d3p1:anyType z:Ref="194" i:nil="true" />
            <d3p1:anyType z:Ref="195" i:nil="true" />
            <d3p1:anyType z:Ref="196" i:nil="true" />
            <d3p1:anyType z:Ref="197" i:nil="true" />
            <d3p1:anyType z:Ref="198" i:nil="true" />
            <d3p1:anyType z:Ref="199" i:nil="true" />
            <d3p1:anyType z:Ref="200" i:nil="true" />
            <d3p1:anyType z:Ref="201" i:nil="true" />
            <d3p1:anyType z:Ref="202" i:nil="true" />
            <d3p1:anyType z:Ref="203" i:nil="true" />
            <d3p1:anyType z:Ref="204" i:nil="true" />
            <d3p1:anyType z:Ref="205" i:nil="true" />
            <d3p1:anyType z:Ref="206" i:nil="true" />
            <d3p1:anyType z:Ref="207" i:nil="true" />
            <d3p1:anyType z:Ref="208" i:nil="true" />
            <d3p1:anyType z:Ref="209" i:nil="true" />
            <d3p1:anyType z:Ref="210" i:nil="true" />
            <d3p1:anyType z:Ref="211" i:nil="true" />
            <d3p1:anyType z:Ref="212" i:nil="true" />
            <d3p1:anyType z:Ref="213" i:nil="true" />
          </DefaultValues>
          <Id>1095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>767</d3p1:Key>
        <d3p1:Value z:Id="665">
          <Address z:Id="666">
            <ArrayCount>1</ArrayCount>
            <Location>4926</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="667" z:Size="1">
            <d3p1:anyType z:Ref="217" i:nil="true" />
          </DefaultValues>
          <Id>767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>109</d3p1:Key>
        <d3p1:Value z:Id="668">
          <Address z:Id="669">
            <ArrayCount>1</ArrayCount>
            <Location>4928</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="670" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>134</d3p1:Key>
        <d3p1:Value z:Id="671">
          <Address z:Id="672">
            <ArrayCount>1</ArrayCount>
            <Location>4930</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="673" z:Size="1">
            <d3p1:anyType z:Ref="225" i:nil="true" />
          </DefaultValues>
          <Id>134</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>100</d3p1:Key>
        <d3p1:Value z:Id="674">
          <Address z:Id="675">
            <ArrayCount>1</ArrayCount>
            <Location>4932</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="676" z:Size="1">
            <d3p1:anyType z:Ref="229" i:nil="true" />
          </DefaultValues>
          <Id>100</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>101</d3p1:Key>
        <d3p1:Value z:Id="677">
          <Address z:Id="678">
            <ArrayCount>1</ArrayCount>
            <Location>4934</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="679" z:Size="1">
            <d3p1:anyType z:Ref="233" i:nil="true" />
          </DefaultValues>
          <Id>101</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>768</d3p1:Key>
        <d3p1:Value z:Id="680">
          <Address z:Id="681">
            <ArrayCount>1</ArrayCount>
            <Location>4936</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="682" z:Size="1">
            <d3p1:anyType z:Ref="237" i:nil="true" />
          </DefaultValues>
          <Id>768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1216</d3p1:Key>
        <d3p1:Value z:Id="683">
          <Address z:Id="684">
            <ArrayCount>1</ArrayCount>
            <Location>4938</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="685" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>1216</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1244</d3p1:Key>
        <d3p1:Value z:Id="686">
          <Address z:Id="687">
            <ArrayCount>1</ArrayCount>
            <Location>4942</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="688" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>1244</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1271</d3p1:Key>
        <d3p1:Value z:Id="689">
          <Address z:Id="690">
            <ArrayCount>1</ArrayCount>
            <Location>45312</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="691" z:Size="1">
            <d3p1:anyType z:Ref="249" i:nil="true" />
          </DefaultValues>
          <Id>1271</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1276</d3p1:Key>
        <d3p1:Value z:Id="692">
          <Address z:Id="693">
            <ArrayCount>1</ArrayCount>
            <Location>45316</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="694" z:Size="1">
            <d3p1:anyType z:Ref="253" i:nil="true" />
          </DefaultValues>
          <Id>1276</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1282</d3p1:Key>
        <d3p1:Value z:Id="695">
          <Address z:Id="696">
            <ArrayCount>1</ArrayCount>
            <Location>45320</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="697" z:Size="1">
            <d3p1:anyType z:Ref="257" i:nil="true" />
          </DefaultValues>
          <Id>1282</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1283</d3p1:Key>
        <d3p1:Value z:Id="698">
          <Address z:Id="699">
            <ArrayCount>1</ArrayCount>
            <Location>45324</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="700" z:Size="1">
            <d3p1:anyType z:Ref="261" i:nil="true" />
          </DefaultValues>
          <Id>1283</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1298</d3p1:Key>
        <d3p1:Value z:Id="701">
          <Address z:Id="702">
            <ArrayCount>17</ArrayCount>
            <Location>4946</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="703" z:Size="17">
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
            <d3p1:anyType z:Ref="271" i:nil="true" />
            <d3p1:anyType z:Ref="272" i:nil="true" />
            <d3p1:anyType z:Ref="273" i:nil="true" />
            <d3p1:anyType z:Ref="274" i:nil="true" />
            <d3p1:anyType z:Ref="275" i:nil="true" />
            <d3p1:anyType z:Ref="276" i:nil="true" />
            <d3p1:anyType z:Ref="277" i:nil="true" />
            <d3p1:anyType z:Ref="278" i:nil="true" />
            <d3p1:anyType z:Ref="279" i:nil="true" />
            <d3p1:anyType z:Ref="280" i:nil="true" />
            <d3p1:anyType z:Ref="281" i:nil="true" />
          </DefaultValues>
          <Id>1298</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1302</d3p1:Key>
        <d3p1:Value z:Id="704">
          <Address z:Id="705">
            <ArrayCount>1</ArrayCount>
            <Location>10</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="706" z:Size="1">
            <d3p1:anyType z:Ref="285" i:nil="true" />
          </DefaultValues>
          <Id>1302</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1323</d3p1:Key>
        <d3p1:Value z:Id="707">
          <Address z:Id="708">
            <ArrayCount>1</ArrayCount>
            <Location>11</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="709" z:Size="1">
            <d3p1:anyType z:Ref="289" i:nil="true" />
          </DefaultValues>
          <Id>1323</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1601</d3p1:Key>
        <d3p1:Value z:Id="710">
          <Address z:Id="711">
            <ArrayCount>4</ArrayCount>
            <Location>5014</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="712" z:Size="4">
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
            <d3p1:anyType z:Ref="295" i:nil="true" />
            <d3p1:anyType z:Ref="296" i:nil="true" />
          </DefaultValues>
          <Id>1601</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1602</d3p1:Key>
        <d3p1:Value z:Id="713">
          <Address z:Id="714">
            <ArrayCount>4</ArrayCount>
            <Location>5030</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="715" z:Size="4">
            <d3p1:anyType z:Ref="300" i:nil="true" />
            <d3p1:anyType z:Ref="301" i:nil="true" />
            <d3p1:anyType z:Ref="302" i:nil="true" />
            <d3p1:anyType z:Ref="303" i:nil="true" />
          </DefaultValues>
          <Id>1602</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1712</d3p1:Key>
        <d3p1:Value z:Id="716">
          <Address z:Id="717">
            <ArrayCount>1</ArrayCount>
            <Location>5046</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="718" z:Size="1">
            <d3p1:anyType z:Ref="307" i:nil="true" />
          </DefaultValues>
          <Id>1712</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1195</d3p1:Key>
        <d3p1:Value z:Id="719">
          <Address z:Id="720">
            <ArrayCount>1</ArrayCount>
            <Location>0</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="721" z:Size="1">
            <d3p1:anyType z:Ref="311" i:nil="true" />
          </DefaultValues>
          <Id>1195</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1988</d3p1:Key>
        <d3p1:Value z:Id="722">
          <Address z:Id="723">
            <ArrayCount>14</ArrayCount>
            <Location>45328</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="724" z:Size="14">
            <d3p1:anyType z:Ref="316" i:nil="true" />
            <d3p1:anyType z:Ref="317" i:nil="true" />
            <d3p1:anyType z:Ref="318" i:nil="true" />
            <d3p1:anyType z:Ref="319" i:nil="true" />
            <d3p1:anyType z:Ref="320" i:nil="true" />
            <d3p1:anyType z:Ref="321" i:nil="true" />
            <d3p1:anyType z:Ref="322" i:nil="true" />
            <d3p1:anyType z:Ref="323" i:nil="true" />
            <d3p1:anyType z:Ref="324" i:nil="true" />
            <d3p1:anyType z:Ref="325" i:nil="true" />
            <d3p1:anyType z:Ref="326" i:nil="true" />
            <d3p1:anyType z:Ref="327" i:nil="true" />
            <d3p1:anyType z:Ref="328" i:nil="true" />
            <d3p1:anyType z:Ref="329" i:nil="true" />
          </DefaultValues>
          <Id>1988</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1727</d3p1:Key>
        <d3p1:Value z:Id="725">
          <Address z:Id="726">
            <ArrayCount>9</ArrayCount>
            <Location>45342</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="727" z:Size="9">
            <d3p1:anyType z:Ref="333" i:nil="true" />
            <d3p1:anyType z:Ref="334" i:nil="true" />
            <d3p1:anyType z:Ref="335" i:nil="true" />
            <d3p1:anyType z:Ref="336" i:nil="true" />
            <d3p1:anyType z:Ref="337" i:nil="true" />
            <d3p1:anyType z:Ref="338" i:nil="true" />
            <d3p1:anyType z:Ref="339" i:nil="true" />
            <d3p1:anyType z:Ref="340" i:nil="true" />
            <d3p1:anyType z:Ref="341" i:nil="true" />
          </DefaultValues>
          <Id>1727</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1747</d3p1:Key>
        <d3p1:Value z:Id="728">
          <Address z:Id="729">
            <ArrayCount>1</ArrayCount>
            <Location>5050</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="730" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>1747</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1764</d3p1:Key>
        <d3p1:Value z:Id="731">
          <Address z:Id="732">
            <ArrayCount>1</ArrayCount>
            <Location>5052</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="733" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>1764</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1765</d3p1:Key>
        <d3p1:Value z:Id="734">
          <Address z:Id="735">
            <ArrayCount>1</ArrayCount>
            <Location>5056</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="736" z:Size="1">
            <d3p1:anyType z:Ref="353" i:nil="true" />
          </DefaultValues>
          <Id>1765</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1919</d3p1:Key>
        <d3p1:Value z:Id="737">
          <Address z:Id="738">
            <ArrayCount>1</ArrayCount>
            <Location>5060</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="739" z:Size="1">
            <d3p1:anyType z:Ref="357" i:nil="true" />
          </DefaultValues>
          <Id>1919</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1923</d3p1:Key>
        <d3p1:Value z:Id="740">
          <Address z:Id="741">
            <ArrayCount>1</ArrayCount>
            <Location>5062</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="742" z:Size="1">
            <d3p1:anyType z:Ref="361" i:nil="true" />
          </DefaultValues>
          <Id>1923</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1971</d3p1:Key>
        <d3p1:Value z:Id="743">
          <Address z:Id="744">
            <ArrayCount>1</ArrayCount>
            <Location>5064</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="745" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>1971</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2074</d3p1:Key>
        <d3p1:Value z:Id="746">
          <Address z:Id="747">
            <ArrayCount>1</ArrayCount>
            <Location>45352</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="748" z:Size="1">
            <d3p1:anyType z:Ref="370" i:nil="true" />
          </DefaultValues>
          <Id>2074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2075</d3p1:Key>
        <d3p1:Value z:Id="749">
          <Address z:Id="750">
            <ArrayCount>1</ArrayCount>
            <Location>45356</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="751" z:Size="1">
            <d3p1:anyType z:Ref="374" i:nil="true" />
          </DefaultValues>
          <Id>2075</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2096</d3p1:Key>
        <d3p1:Value z:Id="752">
          <Address z:Id="753">
            <ArrayCount>1</ArrayCount>
            <Location>45360</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="754" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2096</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2126</d3p1:Key>
        <d3p1:Value z:Id="755">
          <Address z:Id="756">
            <ArrayCount>1</ArrayCount>
            <Location>5068</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="757" z:Size="1">
            <d3p1:anyType z:Ref="382" i:nil="true" />
          </DefaultValues>
          <Id>2126</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2157</d3p1:Key>
        <d3p1:Value z:Id="758">
          <Address z:Id="759">
            <ArrayCount>5</ArrayCount>
            <Location>5072</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="760" z:Size="5">
            <d3p1:anyType z:Ref="386" i:nil="true" />
            <d3p1:anyType z:Ref="387" i:nil="true" />
            <d3p1:anyType z:Ref="388" i:nil="true" />
            <d3p1:anyType z:Ref="389" i:nil="true" />
            <d3p1:anyType z:Ref="390" i:nil="true" />
          </DefaultValues>
          <Id>2157</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2309</d3p1:Key>
        <d3p1:Value z:Id="761">
          <Address z:Id="762">
            <ArrayCount>1</ArrayCount>
            <Location>12</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="763" z:Size="1">
            <d3p1:anyType z:Ref="394" i:nil="true" />
          </DefaultValues>
          <Id>2309</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2325</d3p1:Key>
        <d3p1:Value z:Id="764">
          <Address z:Id="765">
            <ArrayCount>1</ArrayCount>
            <Location>5082</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="766" z:Size="1">
            <d3p1:anyType z:Ref="398" i:nil="true" />
          </DefaultValues>
          <Id>2325</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2554</d3p1:Key>
        <d3p1:Value z:Id="767">
          <Address z:Id="768">
            <ArrayCount>1</ArrayCount>
            <Location>5086</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="769" z:Size="1">
            <d3p1:anyType z:Ref="402" i:nil="true" />
          </DefaultValues>
          <Id>2554</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1680</d3p1:Key>
        <d3p1:Value z:Id="770">
          <Address z:Id="771">
            <ArrayCount>1</ArrayCount>
            <Location>5088</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="772" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>1680</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2624</d3p1:Key>
        <d3p1:Value z:Id="773">
          <Address z:Id="774">
            <ArrayCount>1</ArrayCount>
            <Location>5092</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="775" z:Size="1">
            <d3p1:anyType z:Ref="410" i:nil="true" />
          </DefaultValues>
          <Id>2624</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2643</d3p1:Key>
        <d3p1:Value z:Id="776">
          <Address z:Id="777">
            <ArrayCount>7</ArrayCount>
            <Location>5096</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="778" z:Size="7">
            <d3p1:anyType z:Ref="414" i:nil="true" />
            <d3p1:anyType z:Ref="415" i:nil="true" />
            <d3p1:anyType z:Ref="416" i:nil="true" />
            <d3p1:anyType z:Ref="417" i:nil="true" />
            <d3p1:anyType z:Ref="418" i:nil="true" />
            <d3p1:anyType z:Ref="419" i:nil="true" />
            <d3p1:anyType z:Ref="420" i:nil="true" />
          </DefaultValues>
          <Id>2643</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2644</d3p1:Key>
        <d3p1:Value z:Id="779">
          <Address z:Id="780">
            <ArrayCount>7</ArrayCount>
            <Location>5124</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="781" z:Size="7">
            <d3p1:anyType z:Ref="424" i:nil="true" />
            <d3p1:anyType z:Ref="425" i:nil="true" />
            <d3p1:anyType z:Ref="426" i:nil="true" />
            <d3p1:anyType z:Ref="427" i:nil="true" />
            <d3p1:anyType z:Ref="428" i:nil="true" />
            <d3p1:anyType z:Ref="429" i:nil="true" />
            <d3p1:anyType z:Ref="430" i:nil="true" />
          </DefaultValues>
          <Id>2644</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2817</d3p1:Key>
        <d3p1:Value z:Id="782">
          <Address z:Id="783">
            <ArrayCount>1</ArrayCount>
            <Location>5152</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="784" z:Size="1">
            <d3p1:anyType z:Ref="435" i:nil="true" />
          </DefaultValues>
          <Id>2817</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2835</d3p1:Key>
        <d3p1:Value z:Id="785">
          <Address z:Id="786">
            <ArrayCount>1</ArrayCount>
            <Location>5156</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="787" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2835</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2942</d3p1:Key>
        <d3p1:Value z:Id="788">
          <Address z:Id="789">
            <ArrayCount>8</ArrayCount>
            <Location>5160</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="790" z:Size="8">
            <d3p1:anyType z:Ref="444" i:nil="true" />
            <d3p1:anyType z:Ref="445" i:nil="true" />
            <d3p1:anyType z:Ref="446" i:nil="true" />
            <d3p1:anyType z:Ref="447" i:nil="true" />
            <d3p1:anyType z:Ref="448" i:nil="true" />
            <d3p1:anyType z:Ref="449" i:nil="true" />
            <d3p1:anyType z:Ref="450" i:nil="true" />
            <d3p1:anyType z:Ref="451" i:nil="true" />
          </DefaultValues>
          <Id>2942</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2946</d3p1:Key>
        <d3p1:Value z:Id="791">
          <Address z:Id="792">
            <ArrayCount>2</ArrayCount>
            <Location>5192</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="793" z:Size="2">
            <d3p1:anyType z:Ref="455" i:nil="true" />
            <d3p1:anyType z:Ref="456" i:nil="true" />
          </DefaultValues>
          <Id>2946</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2956</d3p1:Key>
        <d3p1:Value z:Id="794">
          <Address z:Id="795">
            <ArrayCount>1</ArrayCount>
            <Location>45364</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="796" z:Size="1">
            <d3p1:anyType z:Ref="460" i:nil="true" />
          </DefaultValues>
          <Id>2956</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2960</d3p1:Key>
        <d3p1:Value z:Id="797">
          <Address z:Id="798">
            <ArrayCount>1</ArrayCount>
            <Location>5194</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="799" z:Size="1">
            <d3p1:anyType z:Ref="465" i:nil="true" />
          </DefaultValues>
          <Id>2960</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2967</d3p1:Key>
        <d3p1:Value z:Id="800">
          <Address z:Id="801">
            <ArrayCount>1</ArrayCount>
            <Location>5198</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="802" z:Size="1">
            <d3p1:anyType z:Ref="470" i:nil="true" />
          </DefaultValues>
          <Id>2967</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2972</d3p1:Key>
        <d3p1:Value z:Id="803">
          <Address z:Id="804">
            <ArrayCount>16</ArrayCount>
            <Location>5202</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="805" z:Size="16">
            <d3p1:anyType z:Ref="475" i:nil="true" />
            <d3p1:anyType z:Ref="476" i:nil="true" />
            <d3p1:anyType z:Ref="477" i:nil="true" />
            <d3p1:anyType z:Ref="478" i:nil="true" />
            <d3p1:anyType z:Ref="479" i:nil="true" />
            <d3p1:anyType z:Ref="480" i:nil="true" />
            <d3p1:anyType z:Ref="481" i:nil="true" />
            <d3p1:anyType z:Ref="482" i:nil="true" />
            <d3p1:anyType z:Ref="483" i:nil="true" />
            <d3p1:anyType z:Ref="484" i:nil="true" />
            <d3p1:anyType z:Ref="485" i:nil="true" />
            <d3p1:anyType z:Ref="486" i:nil="true" />
            <d3p1:anyType z:Ref="487" i:nil="true" />
            <d3p1:anyType z:Ref="488" i:nil="true" />
            <d3p1:anyType z:Ref="489" i:nil="true" />
            <d3p1:anyType z:Ref="490" i:nil="true" />
          </DefaultValues>
          <Id>2972</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2979</d3p1:Key>
        <d3p1:Value z:Id="806">
          <Address z:Id="807">
            <ArrayCount>1</ArrayCount>
            <Location>5218</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="808" z:Size="1">
            <d3p1:anyType z:Ref="495" i:nil="true" />
          </DefaultValues>
          <Id>2979</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2983</d3p1:Key>
        <d3p1:Value z:Id="809">
          <Address z:Id="810">
            <ArrayCount>1</ArrayCount>
            <Location>5220</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="811" z:Size="1">
            <d3p1:anyType z:Ref="500" i:nil="true" />
          </DefaultValues>
          <Id>2983</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2984</d3p1:Key>
        <d3p1:Value z:Id="812">
          <Address z:Id="813">
            <ArrayCount>1</ArrayCount>
            <Location>5222</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="814" z:Size="1">
            <d3p1:anyType z:Ref="505" i:nil="true" />
          </DefaultValues>
          <Id>2984</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2985</d3p1:Key>
        <d3p1:Value z:Id="815">
          <Address z:Id="816">
            <ArrayCount>1</ArrayCount>
            <Location>5224</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="817" z:Size="1">
            <d3p1:anyType z:Ref="509" i:nil="true" />
          </DefaultValues>
          <Id>2985</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2986</d3p1:Key>
        <d3p1:Value z:Id="818">
          <Address z:Id="819">
            <ArrayCount>1</ArrayCount>
            <Location>5226</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="820" z:Size="1">
            <d3p1:anyType z:Ref="513" i:nil="true" />
          </DefaultValues>
          <Id>2986</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2987</d3p1:Key>
        <d3p1:Value z:Id="821">
          <Address z:Id="822">
            <ArrayCount>1</ArrayCount>
            <Location>5228</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="823" z:Size="1">
            <d3p1:anyType z:Ref="517" i:nil="true" />
          </DefaultValues>
          <Id>2987</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2988</d3p1:Key>
        <d3p1:Value z:Id="824">
          <Address z:Id="825">
            <ArrayCount>1</ArrayCount>
            <Location>5230</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="826" z:Size="1">
            <d3p1:anyType z:Ref="521" i:nil="true" />
          </DefaultValues>
          <Id>2988</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2989</d3p1:Key>
        <d3p1:Value z:Id="827">
          <Address z:Id="828">
            <ArrayCount>1</ArrayCount>
            <Location>5232</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="829" z:Size="1">
            <d3p1:anyType z:Ref="525" i:nil="true" />
          </DefaultValues>
          <Id>2989</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2990</d3p1:Key>
        <d3p1:Value z:Id="830">
          <Address z:Id="831">
            <ArrayCount>1</ArrayCount>
            <Location>5234</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="832" z:Size="1">
            <d3p1:anyType z:Ref="529" i:nil="true" />
          </DefaultValues>
          <Id>2990</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2991</d3p1:Key>
        <d3p1:Value z:Id="833">
          <Address z:Id="834">
            <ArrayCount>1</ArrayCount>
            <Location>5236</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="835" z:Size="1">
            <d3p1:anyType z:Ref="533" i:nil="true" />
          </DefaultValues>
          <Id>2991</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2992</d3p1:Key>
        <d3p1:Value z:Id="836">
          <Address z:Id="837">
            <ArrayCount>1</ArrayCount>
            <Location>5238</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="838" z:Size="1">
            <d3p1:anyType z:Ref="538" i:nil="true" />
          </DefaultValues>
          <Id>2992</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2993</d3p1:Key>
        <d3p1:Value z:Id="839">
          <Address z:Id="840">
            <ArrayCount>1</ArrayCount>
            <Location>5240</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="841" z:Size="1">
            <d3p1:anyType z:Ref="543" i:nil="true" />
          </DefaultValues>
          <Id>2993</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2994</d3p1:Key>
        <d3p1:Value z:Id="842">
          <Address z:Id="843">
            <ArrayCount>1</ArrayCount>
            <Location>5242</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="844" z:Size="1">
            <d3p1:anyType z:Ref="548" i:nil="true" />
          </DefaultValues>
          <Id>2994</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3037</d3p1:Key>
        <d3p1:Value z:Id="845">
          <Address z:Id="846">
            <ArrayCount>1</ArrayCount>
            <Location>5244</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="847" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3037</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3126</d3p1:Key>
        <d3p1:Value z:Id="848">
          <Address z:Id="849">
            <ArrayCount>1</ArrayCount>
            <Location>5246</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="850" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3126</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3184</d3p1:Key>
        <d3p1:Value z:Id="851">
          <Address z:Id="852">
            <ArrayCount>1</ArrayCount>
            <Location>13</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="853" z:Size="1">
            <d3p1:anyType z:Ref="561" i:nil="true" />
          </DefaultValues>
          <Id>3184</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3185</d3p1:Key>
        <d3p1:Value z:Id="854">
          <Address z:Id="855">
            <ArrayCount>1</ArrayCount>
            <Location>14</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="856" z:Size="1">
            <d3p1:anyType z:Ref="565" i:nil="true" />
          </DefaultValues>
          <Id>3185</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3186</d3p1:Key>
        <d3p1:Value z:Id="857">
          <Address z:Id="858">
            <ArrayCount>1</ArrayCount>
            <Location>15</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="859" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3186</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3230</d3p1:Key>
        <d3p1:Value z:Id="860">
          <Address z:Id="861">
            <ArrayCount>1</ArrayCount>
            <Location>5248</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="862" z:Size="1">
            <d3p1:anyType z:Ref="573" i:nil="true" />
          </DefaultValues>
          <Id>3230</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3267</d3p1:Key>
        <d3p1:Value z:Id="863">
          <Address z:Id="864">
            <ArrayCount>1</ArrayCount>
            <Location>5250</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="865" z:Size="1">
            <d3p1:anyType z:Ref="577" i:nil="true" />
          </DefaultValues>
          <Id>3267</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3339</d3p1:Key>
        <d3p1:Value z:Id="866">
          <Address z:Id="867">
            <ArrayCount>16</ArrayCount>
            <Location>5254</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="868" z:Size="16">
            <d3p1:anyType z:Ref="582" i:nil="true" />
            <d3p1:anyType z:Ref="583" i:nil="true" />
            <d3p1:anyType z:Ref="584" i:nil="true" />
            <d3p1:anyType z:Ref="585" i:nil="true" />
            <d3p1:anyType z:Ref="586" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="588" i:nil="true" />
            <d3p1:anyType z:Ref="589" i:nil="true" />
            <d3p1:anyType z:Ref="590" i:nil="true" />
            <d3p1:anyType z:Ref="591" i:nil="true" />
            <d3p1:anyType z:Ref="592" i:nil="true" />
            <d3p1:anyType z:Ref="593" i:nil="true" />
            <d3p1:anyType z:Ref="594" i:nil="true" />
            <d3p1:anyType z:Ref="595" i:nil="true" />
            <d3p1:anyType z:Ref="596" i:nil="true" />
            <d3p1:anyType z:Ref="597" i:nil="true" />
          </DefaultValues>
          <Id>3339</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>-2</d3p1:Key>
        <d3p1:Value z:Id="869">
          <Address z:Id="870">
            <ArrayCount>512</ArrayCount>
            <Location>5286</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="871" z:Size="512">
            <d3p1:anyType z:Id="872" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Id="873" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
            <d3p1:anyType z:Ref="873" i:nil="true" />
          </DefaultValues>
          <Id>-2</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>118</d3p1:Key>
        <d3p1:Value z:Id="874">
          <Address z:Ref="678" i:nil="true" />
          <DefaultValues z:Id="875" z:Size="1">
            <d3p1:anyType z:Ref="233" i:nil="true" />
          </DefaultValues>
          <Id>118</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>115</d3p1:Key>
        <d3p1:Value z:Id="876">
          <Address z:Ref="675" i:nil="true" />
          <DefaultValues z:Id="877" z:Size="1">
            <d3p1:anyType z:Ref="229" i:nil="true" />
          </DefaultValues>
          <Id>115</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>108</d3p1:Key>
        <d3p1:Value z:Id="878">
          <Address z:Id="879">
            <ArrayCount>1</ArrayCount>
            <Location>5798</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="880" z:Size="1">
            <d3p1:anyType z:Id="881" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>108</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>112</d3p1:Key>
        <d3p1:Value z:Id="882">
          <Address z:Ref="669" i:nil="true" />
          <DefaultValues z:Id="883" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>112</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1922</d3p1:Key>
        <d3p1:Value z:Id="884">
          <Address z:Ref="738" i:nil="true" />
          <DefaultValues z:Id="885" z:Size="1">
            <d3p1:anyType z:Ref="357" i:nil="true" />
          </DefaultValues>
          <Id>1922</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1917</d3p1:Key>
        <d3p1:Value z:Id="886">
          <Address z:Id="887">
            <ArrayCount>1</ArrayCount>
            <Location>5800</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="888" z:Size="1">
            <d3p1:anyType z:Id="889" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1917</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1926</d3p1:Key>
        <d3p1:Value z:Id="890">
          <Address z:Ref="741" i:nil="true" />
          <DefaultValues z:Id="891" z:Size="1">
            <d3p1:anyType z:Ref="361" i:nil="true" />
          </DefaultValues>
          <Id>1926</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1181</d3p1:Key>
        <d3p1:Value z:Id="892">
          <Address z:Id="893">
            <ArrayCount>1</ArrayCount>
            <Location>16</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="894" z:Size="1">
            <d3p1:anyType z:Id="895" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1181</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1182</d3p1:Key>
        <d3p1:Value z:Id="896">
          <Address z:Id="897">
            <ArrayCount>1</ArrayCount>
            <Location>17</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="898" z:Size="1">
            <d3p1:anyType z:Id="899" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1182</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1183</d3p1:Key>
        <d3p1:Value z:Id="900">
          <Address z:Id="901">
            <ArrayCount>1</ArrayCount>
            <Location>18</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="902" z:Size="1">
            <d3p1:anyType z:Id="903" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1183</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1184</d3p1:Key>
        <d3p1:Value z:Id="904">
          <Address z:Id="905">
            <ArrayCount>1</ArrayCount>
            <Location>5802</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="906" z:Size="1">
            <d3p1:anyType z:Id="907" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1184</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1185</d3p1:Key>
        <d3p1:Value z:Id="908">
          <Address z:Id="909">
            <ArrayCount>1</ArrayCount>
            <Location>5804</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="910" z:Size="1">
            <d3p1:anyType z:Id="911" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1185</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1191</d3p1:Key>
        <d3p1:Value z:Id="912">
          <Address z:Id="913">
            <ArrayCount>1</ArrayCount>
            <Location>19</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="914" z:Size="1">
            <d3p1:anyType z:Id="915" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1191</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1192</d3p1:Key>
        <d3p1:Value z:Id="916">
          <Address z:Id="917">
            <ArrayCount>1</ArrayCount>
            <Location>5806</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="918" z:Size="1">
            <d3p1:anyType z:Id="919" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1192</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1193</d3p1:Key>
        <d3p1:Value z:Id="920">
          <Address z:Id="921">
            <ArrayCount>1</ArrayCount>
            <Location>20</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="922" z:Size="1">
            <d3p1:anyType z:Id="923" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1193</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1194</d3p1:Key>
        <d3p1:Value z:Id="924">
          <Address z:Id="925">
            <ArrayCount>1</ArrayCount>
            <Location>5810</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="926" z:Size="1">
            <d3p1:anyType z:Id="927" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1194</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1199</d3p1:Key>
        <d3p1:Value z:Id="928">
          <Address z:Ref="720" i:nil="true" />
          <DefaultValues z:Id="929" z:Size="1">
            <d3p1:anyType z:Ref="311" i:nil="true" />
          </DefaultValues>
          <Id>1199</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1200</d3p1:Key>
        <d3p1:Value z:Id="930">
          <Address z:Id="931">
            <ArrayCount>1</ArrayCount>
            <Location>21</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="932" z:Size="1">
            <d3p1:anyType z:Id="933" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1200</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1730</d3p1:Key>
        <d3p1:Value z:Id="934">
          <Address z:Ref="726" i:nil="true" />
          <DefaultValues z:Id="935" z:Size="9">
            <d3p1:anyType z:Ref="333" i:nil="true" />
            <d3p1:anyType z:Ref="334" i:nil="true" />
            <d3p1:anyType z:Ref="335" i:nil="true" />
            <d3p1:anyType z:Ref="336" i:nil="true" />
            <d3p1:anyType z:Ref="337" i:nil="true" />
            <d3p1:anyType z:Ref="338" i:nil="true" />
            <d3p1:anyType z:Ref="339" i:nil="true" />
            <d3p1:anyType z:Ref="340" i:nil="true" />
            <d3p1:anyType z:Ref="341" i:nil="true" />
          </DefaultValues>
          <Id>1730</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2970</d3p1:Key>
        <d3p1:Value z:Id="936">
          <Address z:Ref="801" i:nil="true" />
          <DefaultValues z:Id="937" z:Size="1">
            <d3p1:anyType z:Ref="470" i:nil="true" />
          </DefaultValues>
          <Id>2970</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3360</d3p1:Key>
        <d3p1:Value z:Id="938">
          <Address z:Id="939">
            <ArrayCount>1</ArrayCount>
            <Location>5812</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="940" z:Size="1">
            <d3p1:anyType z:Id="941" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>3360</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2963</d3p1:Key>
        <d3p1:Value z:Id="942">
          <Address z:Ref="798" i:nil="true" />
          <DefaultValues z:Id="943" z:Size="1">
            <d3p1:anyType z:Ref="465" i:nil="true" />
          </DefaultValues>
          <Id>2963</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2966</d3p1:Key>
        <d3p1:Value z:Id="944">
          <Address z:Id="945">
            <ArrayCount>1</ArrayCount>
            <Location>5816</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="946" z:Size="1">
            <d3p1:anyType z:Id="947" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2966</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2922</d3p1:Key>
        <d3p1:Value z:Id="948">
          <Address z:Ref="786" i:nil="true" />
          <DefaultValues z:Id="949" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2922</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2931</d3p1:Key>
        <d3p1:Value z:Id="950">
          <Address z:Id="951">
            <ArrayCount>1</ArrayCount>
            <Location>5820</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="952" z:Size="1">
            <d3p1:anyType z:Id="953" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2931</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2919</d3p1:Key>
        <d3p1:Value z:Id="954">
          <Address z:Ref="744" i:nil="true" />
          <DefaultValues z:Id="955" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>2919</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2916</d3p1:Key>
        <d3p1:Value z:Id="956">
          <Address z:Ref="612" i:nil="true" />
          <DefaultValues z:Id="957" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>2916</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2907</d3p1:Key>
        <d3p1:Value z:Id="958">
          <Address z:Ref="687" i:nil="true" />
          <DefaultValues z:Id="959" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>2907</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2904</d3p1:Key>
        <d3p1:Value z:Id="960">
          <Address z:Ref="684" i:nil="true" />
          <DefaultValues z:Id="961" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>2904</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2901</d3p1:Key>
        <d3p1:Value z:Id="962">
          <Address z:Ref="783" i:nil="true" />
          <DefaultValues z:Id="963" z:Size="1">
            <d3p1:anyType z:Ref="435" i:nil="true" />
          </DefaultValues>
          <Id>2901</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2928</d3p1:Key>
        <d3p1:Value z:Id="964">
          <Address z:Id="965">
            <ArrayCount>8</ArrayCount>
            <Location>5824</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="966" z:Size="8">
            <d3p1:anyType z:Id="967" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
            <d3p1:anyType z:Ref="967" i:nil="true" />
            <d3p1:anyType z:Ref="967" i:nil="true" />
            <d3p1:anyType z:Ref="967" i:nil="true" />
            <d3p1:anyType z:Ref="967" i:nil="true" />
            <d3p1:anyType z:Ref="967" i:nil="true" />
            <d3p1:anyType z:Ref="967" i:nil="true" />
            <d3p1:anyType z:Ref="967" i:nil="true" />
          </DefaultValues>
          <Id>2928</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2945</d3p1:Key>
        <d3p1:Value z:Id="968">
          <Address z:Ref="789" i:nil="true" />
          <DefaultValues z:Id="969" z:Size="8">
            <d3p1:anyType z:Ref="444" i:nil="true" />
            <d3p1:anyType z:Ref="445" i:nil="true" />
            <d3p1:anyType z:Ref="446" i:nil="true" />
            <d3p1:anyType z:Ref="447" i:nil="true" />
            <d3p1:anyType z:Ref="448" i:nil="true" />
            <d3p1:anyType z:Ref="449" i:nil="true" />
            <d3p1:anyType z:Ref="450" i:nil="true" />
            <d3p1:anyType z:Ref="451" i:nil="true" />
          </DefaultValues>
          <Id>2945</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2913</d3p1:Key>
        <d3p1:Value z:Id="970">
          <Address z:Ref="729" i:nil="true" />
          <DefaultValues z:Id="971" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>2913</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2941</d3p1:Key>
        <d3p1:Value z:Id="972">
          <Address z:Id="973">
            <ArrayCount>2</ArrayCount>
            <Location>5856</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="974" z:Size="2">
            <d3p1:anyType z:Id="975" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="975" i:nil="true" />
          </DefaultValues>
          <Id>2941</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2949</d3p1:Key>
        <d3p1:Value z:Id="976">
          <Address z:Ref="792" i:nil="true" />
          <DefaultValues z:Id="977" z:Size="2">
            <d3p1:anyType z:Ref="455" i:nil="true" />
            <d3p1:anyType z:Ref="456" i:nil="true" />
          </DefaultValues>
          <Id>2949</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2160</d3p1:Key>
        <d3p1:Value z:Id="978">
          <Address z:Ref="759" i:nil="true" />
          <DefaultValues z:Id="979" z:Size="5">
            <d3p1:anyType z:Ref="386" i:nil="true" />
            <d3p1:anyType z:Ref="387" i:nil="true" />
            <d3p1:anyType z:Ref="388" i:nil="true" />
            <d3p1:anyType z:Ref="389" i:nil="true" />
            <d3p1:anyType z:Ref="390" i:nil="true" />
          </DefaultValues>
          <Id>2160</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2148</d3p1:Key>
        <d3p1:Value z:Id="980">
          <Address z:Ref="669" i:nil="true" />
          <DefaultValues z:Id="981" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>2148</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2233</d3p1:Key>
        <d3p1:Value z:Id="982">
          <Address z:Id="983">
            <ArrayCount>1</ArrayCount>
            <Location>5858</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="984" z:Size="1">
            <d3p1:anyType z:Id="985" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2233</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2151</d3p1:Key>
        <d3p1:Value z:Id="986">
          <Address z:Id="987">
            <ArrayCount>1</ArrayCount>
            <Location>22</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="988" z:Size="1">
            <d3p1:anyType z:Id="989" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2151</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2152</d3p1:Key>
        <d3p1:Value z:Id="990">
          <Address z:Id="991">
            <ArrayCount>1</ArrayCount>
            <Location>23</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="992" z:Size="1">
            <d3p1:anyType z:Id="993" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2152</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2153</d3p1:Key>
        <d3p1:Value z:Id="994">
          <Address z:Id="995">
            <ArrayCount>1</ArrayCount>
            <Location>24</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="996" z:Size="1">
            <d3p1:anyType z:Id="997" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2153</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2154</d3p1:Key>
        <d3p1:Value z:Id="998">
          <Address z:Id="999">
            <ArrayCount>1</ArrayCount>
            <Location>25</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1000" z:Size="1">
            <d3p1:anyType z:Id="1001" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2154</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2155</d3p1:Key>
        <d3p1:Value z:Id="1002">
          <Address z:Id="1003">
            <ArrayCount>1</ArrayCount>
            <Location>26</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1004" z:Size="1">
            <d3p1:anyType z:Id="1005" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2155</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2156</d3p1:Key>
        <d3p1:Value z:Id="1006">
          <Address z:Id="1007">
            <ArrayCount>1</ArrayCount>
            <Location>27</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1008" z:Size="1">
            <d3p1:anyType z:Id="1009" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2156</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2237</d3p1:Key>
        <d3p1:Value z:Id="1010">
          <Address z:Id="1011">
            <ArrayCount>5</ArrayCount>
            <Location>5860</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1012" z:Size="5">
            <d3p1:anyType z:Id="1013" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1013" i:nil="true" />
            <d3p1:anyType z:Ref="1013" i:nil="true" />
            <d3p1:anyType z:Ref="1013" i:nil="true" />
            <d3p1:anyType z:Ref="1013" i:nil="true" />
          </DefaultValues>
          <Id>2237</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2857</d3p1:Key>
        <d3p1:Value z:Id="1014">
          <Address z:Id="1015">
            <ArrayCount>2</ArrayCount>
            <Location>5870</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1016" z:Size="2">
            <d3p1:anyType z:Id="1017" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1017" i:nil="true" />
          </DefaultValues>
          <Id>2857</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2858</d3p1:Key>
        <d3p1:Value z:Id="1018">
          <Address z:Id="1019">
            <ArrayCount>1</ArrayCount>
            <Location>28</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1020" z:Size="1">
            <d3p1:anyType z:Id="1021" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2858</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2853</d3p1:Key>
        <d3p1:Value z:Id="1022">
          <Address z:Id="1023">
            <ArrayCount>2</ArrayCount>
            <Location>5872</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1024" z:Size="2">
            <d3p1:anyType z:Id="1025" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1025" i:nil="true" />
          </DefaultValues>
          <Id>2853</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2854</d3p1:Key>
        <d3p1:Value z:Id="1026">
          <Address z:Id="1027">
            <ArrayCount>1</ArrayCount>
            <Location>29</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1028" z:Size="1">
            <d3p1:anyType z:Id="1029" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2854</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2845</d3p1:Key>
        <d3p1:Value z:Id="1030">
          <Address z:Id="1031">
            <ArrayCount>1</ArrayCount>
            <Location>5874</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1032" z:Size="1">
            <d3p1:anyType z:Id="1033" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2845</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2846</d3p1:Key>
        <d3p1:Value z:Id="1034">
          <Address z:Id="1035">
            <ArrayCount>1</ArrayCount>
            <Location>30</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1036" z:Size="1">
            <d3p1:anyType z:Id="1037" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2846</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2842</d3p1:Key>
        <d3p1:Value z:Id="1038">
          <Address z:Ref="786" i:nil="true" />
          <DefaultValues z:Id="1039" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2842</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1094</d3p1:Key>
        <d3p1:Value z:Id="1040">
          <Address z:Ref="630" i:nil="true" />
          <DefaultValues z:Id="1041" z:Size="1">
            <d3p1:anyType z:Ref="114" i:nil="true" />
          </DefaultValues>
          <Id>1094</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1080</d3p1:Key>
        <d3p1:Value z:Id="1042">
          <Address z:Ref="669" i:nil="true" />
          <DefaultValues z:Id="1043" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>1080</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1074</d3p1:Key>
        <d3p1:Value z:Id="1044">
          <Address z:Id="1045">
            <ArrayCount>1</ArrayCount>
            <Location>5878</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1046" z:Size="1">
            <d3p1:anyType z:Id="1047" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1086</d3p1:Key>
        <d3p1:Value z:Id="1048">
          <Address z:Id="1049">
            <ArrayCount>1</ArrayCount>
            <Location>31</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1050" z:Size="1">
            <d3p1:anyType z:Id="1051" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1087</d3p1:Key>
        <d3p1:Value z:Id="1052">
          <Address z:Id="1053">
            <ArrayCount>1</ArrayCount>
            <Location>32</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1054" z:Size="1">
            <d3p1:anyType z:Id="1055" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1087</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1088</d3p1:Key>
        <d3p1:Value z:Id="1056">
          <Address z:Id="1057">
            <ArrayCount>1</ArrayCount>
            <Location>33</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1058" z:Size="1">
            <d3p1:anyType z:Id="1059" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1088</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1089</d3p1:Key>
        <d3p1:Value z:Id="1060">
          <Address z:Id="1061">
            <ArrayCount>1</ArrayCount>
            <Location>34</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1062" z:Size="1">
            <d3p1:anyType z:Id="1063" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1090</d3p1:Key>
        <d3p1:Value z:Id="1064">
          <Address z:Id="1065">
            <ArrayCount>1</ArrayCount>
            <Location>35</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1066" z:Size="1">
            <d3p1:anyType z:Id="1067" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1090</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1091</d3p1:Key>
        <d3p1:Value z:Id="1068">
          <Address z:Id="1069">
            <ArrayCount>1</ArrayCount>
            <Location>36</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1070" z:Size="1">
            <d3p1:anyType z:Id="1071" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1091</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2830</d3p1:Key>
        <d3p1:Value z:Id="1072">
          <Address z:Id="1073">
            <ArrayCount>1</ArrayCount>
            <Location>5880</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1074" z:Size="1">
            <d3p1:anyType z:Id="1075" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2830</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2834</d3p1:Key>
        <d3p1:Value z:Id="1076">
          <Address z:Id="1077">
            <ArrayCount>1</ArrayCount>
            <Location>5884</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1078" z:Size="1">
            <d3p1:anyType z:Id="1079" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2834</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2827</d3p1:Key>
        <d3p1:Value z:Id="1080">
          <Address z:Ref="783" i:nil="true" />
          <DefaultValues z:Id="1081" z:Size="1">
            <d3p1:anyType z:Ref="435" i:nil="true" />
          </DefaultValues>
          <Id>2827</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3342</d3p1:Key>
        <d3p1:Value z:Id="1082">
          <Address z:Ref="867" i:nil="true" />
          <DefaultValues z:Id="1083" z:Size="16">
            <d3p1:anyType z:Ref="582" i:nil="true" />
            <d3p1:anyType z:Ref="583" i:nil="true" />
            <d3p1:anyType z:Ref="584" i:nil="true" />
            <d3p1:anyType z:Ref="585" i:nil="true" />
            <d3p1:anyType z:Ref="586" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="588" i:nil="true" />
            <d3p1:anyType z:Ref="589" i:nil="true" />
            <d3p1:anyType z:Ref="590" i:nil="true" />
            <d3p1:anyType z:Ref="591" i:nil="true" />
            <d3p1:anyType z:Ref="592" i:nil="true" />
            <d3p1:anyType z:Ref="593" i:nil="true" />
            <d3p1:anyType z:Ref="594" i:nil="true" />
            <d3p1:anyType z:Ref="595" i:nil="true" />
            <d3p1:anyType z:Ref="596" i:nil="true" />
            <d3p1:anyType z:Ref="597" i:nil="true" />
          </DefaultValues>
          <Id>3342</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3305</d3p1:Key>
        <d3p1:Value z:Id="1084">
          <Address z:Ref="669" i:nil="true" />
          <DefaultValues z:Id="1085" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>3305</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3314</d3p1:Key>
        <d3p1:Value z:Id="1086">
          <Address z:Id="1087">
            <ArrayCount>1</ArrayCount>
            <Location>5888</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1088" z:Size="1">
            <d3p1:anyType z:Id="1089" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3314</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3317</d3p1:Key>
        <d3p1:Value z:Id="1090">
          <Address z:Id="1091">
            <ArrayCount>1</ArrayCount>
            <Location>37</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1092" z:Size="1">
            <d3p1:anyType z:Id="1093" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3317</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3318</d3p1:Key>
        <d3p1:Value z:Id="1094">
          <Address z:Id="1095">
            <ArrayCount>1</ArrayCount>
            <Location>38</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1096" z:Size="1">
            <d3p1:anyType z:Id="1097" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3318</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3319</d3p1:Key>
        <d3p1:Value z:Id="1098">
          <Address z:Id="1099">
            <ArrayCount>1</ArrayCount>
            <Location>39</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1100" z:Size="1">
            <d3p1:anyType z:Id="1101" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3319</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3320</d3p1:Key>
        <d3p1:Value z:Id="1102">
          <Address z:Id="1103">
            <ArrayCount>1</ArrayCount>
            <Location>40</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1104" z:Size="1">
            <d3p1:anyType z:Id="1105" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3320</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3321</d3p1:Key>
        <d3p1:Value z:Id="1106">
          <Address z:Id="1107">
            <ArrayCount>1</ArrayCount>
            <Location>41</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1108" z:Size="1">
            <d3p1:anyType z:Id="1109" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3321</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3322</d3p1:Key>
        <d3p1:Value z:Id="1110">
          <Address z:Id="1111">
            <ArrayCount>1</ArrayCount>
            <Location>42</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1112" z:Size="1">
            <d3p1:anyType z:Id="1113" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3322</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3325</d3p1:Key>
        <d3p1:Value z:Id="1114">
          <Address z:Id="1115">
            <ArrayCount>16</ArrayCount>
            <Location>5890</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1116" z:Size="16">
            <d3p1:anyType z:Id="1117" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
            <d3p1:anyType z:Ref="1117" i:nil="true" />
          </DefaultValues>
          <Id>3325</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3352</d3p1:Key>
        <d3p1:Value z:Id="1118">
          <Address z:Id="1119">
            <ArrayCount>2</ArrayCount>
            <Location>5922</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1120" z:Size="2">
            <d3p1:anyType z:Id="1121" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1121" i:nil="true" />
          </DefaultValues>
          <Id>3352</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3353</d3p1:Key>
        <d3p1:Value z:Id="1122">
          <Address z:Id="1123">
            <ArrayCount>1</ArrayCount>
            <Location>43</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1124" z:Size="1">
            <d3p1:anyType z:Id="1125" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3353</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3348</d3p1:Key>
        <d3p1:Value z:Id="1126">
          <Address z:Id="1127">
            <ArrayCount>2</ArrayCount>
            <Location>5924</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1128" z:Size="2">
            <d3p1:anyType z:Id="1129" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1129" i:nil="true" />
          </DefaultValues>
          <Id>3348</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3349</d3p1:Key>
        <d3p1:Value z:Id="1130">
          <Address z:Id="1131">
            <ArrayCount>1</ArrayCount>
            <Location>44</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1132" z:Size="1">
            <d3p1:anyType z:Id="1133" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3349</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3356</d3p1:Key>
        <d3p1:Value z:Id="1134">
          <Address z:Id="1135">
            <ArrayCount>1</ArrayCount>
            <Location>5926</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1136" z:Size="1">
            <d3p1:anyType z:Id="1137" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3356</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3357</d3p1:Key>
        <d3p1:Value z:Id="1138">
          <Address z:Id="1139">
            <ArrayCount>1</ArrayCount>
            <Location>45</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1140" z:Size="1">
            <d3p1:anyType z:Id="1141" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3357</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3363</d3p1:Key>
        <d3p1:Value z:Id="1142">
          <Address z:Ref="801" i:nil="true" />
          <DefaultValues z:Id="1143" z:Size="1">
            <d3p1:anyType z:Ref="470" i:nil="true" />
          </DefaultValues>
          <Id>3363</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3345</d3p1:Key>
        <d3p1:Value z:Id="1144">
          <Address z:Id="1145">
            <ArrayCount>8</ArrayCount>
            <Location>46</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1146" z:Size="8">
            <d3p1:anyType z:Id="1147" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="1147" i:nil="true" />
            <d3p1:anyType z:Ref="1147" i:nil="true" />
            <d3p1:anyType z:Ref="1147" i:nil="true" />
            <d3p1:anyType z:Ref="1147" i:nil="true" />
            <d3p1:anyType z:Ref="1147" i:nil="true" />
            <d3p1:anyType z:Ref="1147" i:nil="true" />
            <d3p1:anyType z:Ref="1147" i:nil="true" />
          </DefaultValues>
          <Id>3345</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1136</d3p1:Key>
        <d3p1:Value z:Id="1148">
          <Address z:Ref="645" i:nil="true" />
          <DefaultValues z:Id="1149" z:Size="10">
            <d3p1:anyType z:Ref="143" i:nil="true" />
            <d3p1:anyType z:Ref="144" i:nil="true" />
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
            <d3p1:anyType z:Ref="151" i:nil="true" />
            <d3p1:anyType z:Ref="152" i:nil="true" />
          </DefaultValues>
          <Id>1136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1113</d3p1:Key>
        <d3p1:Value z:Id="1150">
          <Address z:Ref="621" i:nil="true" />
          <DefaultValues z:Id="1151" z:Size="1">
            <d3p1:anyType z:Ref="102" i:nil="true" />
          </DefaultValues>
          <Id>1113</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1110</d3p1:Key>
        <d3p1:Value z:Id="1152">
          <Address z:Ref="672" i:nil="true" />
          <DefaultValues z:Id="1153" z:Size="1">
            <d3p1:anyType z:Ref="225" i:nil="true" />
          </DefaultValues>
          <Id>1110</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1107</d3p1:Key>
        <d3p1:Value z:Id="1154">
          <Address z:Ref="669" i:nil="true" />
          <DefaultValues z:Id="1155" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>1107</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1125</d3p1:Key>
        <d3p1:Value z:Id="1156">
          <Address z:Id="1157">
            <ArrayCount>1</ArrayCount>
            <Location>5930</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1158" z:Size="1">
            <d3p1:anyType z:Id="1159" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1128</d3p1:Key>
        <d3p1:Value z:Id="1160">
          <Address z:Id="1161">
            <ArrayCount>1</ArrayCount>
            <Location>54</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1162" z:Size="1">
            <d3p1:anyType z:Id="1163" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1128</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1129</d3p1:Key>
        <d3p1:Value z:Id="1164">
          <Address z:Id="1165">
            <ArrayCount>1</ArrayCount>
            <Location>55</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1166" z:Size="1">
            <d3p1:anyType z:Id="1167" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1130</d3p1:Key>
        <d3p1:Value z:Id="1168">
          <Address z:Id="1169">
            <ArrayCount>1</ArrayCount>
            <Location>56</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1170" z:Size="1">
            <d3p1:anyType z:Id="1171" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1130</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1131</d3p1:Key>
        <d3p1:Value z:Id="1172">
          <Address z:Id="1173">
            <ArrayCount>1</ArrayCount>
            <Location>57</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1174" z:Size="1">
            <d3p1:anyType z:Id="1175" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1131</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1132</d3p1:Key>
        <d3p1:Value z:Id="1176">
          <Address z:Id="1177">
            <ArrayCount>1</ArrayCount>
            <Location>58</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1178" z:Size="1">
            <d3p1:anyType z:Id="1179" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1133</d3p1:Key>
        <d3p1:Value z:Id="1180">
          <Address z:Id="1181">
            <ArrayCount>1</ArrayCount>
            <Location>59</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1182" z:Size="1">
            <d3p1:anyType z:Id="1183" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2659</d3p1:Key>
        <d3p1:Value z:Id="1184">
          <Address z:Id="1185">
            <ArrayCount>1</ArrayCount>
            <Location>60</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1186" z:Size="1">
            <d3p1:anyType z:Id="1187" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2659</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2660</d3p1:Key>
        <d3p1:Value z:Id="1188">
          <Address z:Id="1189">
            <ArrayCount>1</ArrayCount>
            <Location>61</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1190" z:Size="1">
            <d3p1:anyType z:Id="1191" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2660</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2106</d3p1:Key>
        <d3p1:Value z:Id="1192">
          <Address z:Ref="753" i:nil="true" />
          <DefaultValues z:Id="1193" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2106</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1423</d3p1:Key>
        <d3p1:Value z:Id="1194">
          <Address z:Id="1195">
            <ArrayCount>1</ArrayCount>
            <Location>5932</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1196" z:Size="1">
            <d3p1:anyType z:Id="1197" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1423</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1224</d3p1:Key>
        <d3p1:Value z:Id="1198">
          <Address z:Id="1199">
            <ArrayCount>1</ArrayCount>
            <Location>5936</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1200" z:Size="1">
            <d3p1:anyType z:Id="1201" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1224</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1225</d3p1:Key>
        <d3p1:Value z:Id="1202">
          <Address z:Id="1203">
            <ArrayCount>1</ArrayCount>
            <Location>62</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1204" z:Size="1">
            <d3p1:anyType z:Id="1205" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1225</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1226</d3p1:Key>
        <d3p1:Value z:Id="1206">
          <Address z:Id="1207">
            <ArrayCount>1</ArrayCount>
            <Location>63</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1208" z:Size="1">
            <d3p1:anyType z:Id="1209" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1226</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1227</d3p1:Key>
        <d3p1:Value z:Id="1210">
          <Address z:Id="1211">
            <ArrayCount>1</ArrayCount>
            <Location>64</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1212" z:Size="1">
            <d3p1:anyType z:Id="1213" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1227</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1228</d3p1:Key>
        <d3p1:Value z:Id="1214">
          <Address z:Id="1215">
            <ArrayCount>10</ArrayCount>
            <Location>5940</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1216" z:Size="10">
            <d3p1:anyType z:Id="1217" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
            <d3p1:anyType z:Ref="1217" i:nil="true" />
          </DefaultValues>
          <Id>1228</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1247</d3p1:Key>
        <d3p1:Value z:Id="1218">
          <Address z:Ref="687" i:nil="true" />
          <DefaultValues z:Id="1219" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>1247</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1700</d3p1:Key>
        <d3p1:Value z:Id="1220">
          <Address z:Id="1221">
            <ArrayCount>1</ArrayCount>
            <Location>5980</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1222" z:Size="1">
            <d3p1:anyType z:Id="1223" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1700</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1710</d3p1:Key>
        <d3p1:Value z:Id="1224">
          <Address z:Id="1225">
            <ArrayCount>1</ArrayCount>
            <Location>5984</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1226" z:Size="1">
            <d3p1:anyType z:Id="1227" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1710</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1703</d3p1:Key>
        <d3p1:Value z:Id="1228">
          <Address z:Ref="684" i:nil="true" />
          <DefaultValues z:Id="1229" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>1703</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2783</d3p1:Key>
        <d3p1:Value z:Id="1230">
          <Address z:Id="1231">
            <ArrayCount>1</ArrayCount>
            <Location>65</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1232" z:Size="1">
            <d3p1:anyType z:Id="1233" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2783</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2784</d3p1:Key>
        <d3p1:Value z:Id="1234">
          <Address z:Id="1235">
            <ArrayCount>1</ArrayCount>
            <Location>66</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1236" z:Size="1">
            <d3p1:anyType z:Id="1237" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2784</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2785</d3p1:Key>
        <d3p1:Value z:Id="1238">
          <Address z:Id="1239">
            <ArrayCount>1</ArrayCount>
            <Location>5988</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1240" z:Size="1">
            <d3p1:anyType z:Id="1241" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2785</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2776</d3p1:Key>
        <d3p1:Value z:Id="1242">
          <Address z:Id="1243">
            <ArrayCount>2</ArrayCount>
            <Location>5990</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1244" z:Size="2">
            <d3p1:anyType z:Id="1245" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1245" i:nil="true" />
          </DefaultValues>
          <Id>2776</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2777</d3p1:Key>
        <d3p1:Value z:Id="1246">
          <Address z:Id="1247">
            <ArrayCount>1</ArrayCount>
            <Location>67</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1248" z:Size="1">
            <d3p1:anyType z:Id="1249" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2777</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2755</d3p1:Key>
        <d3p1:Value z:Id="1250">
          <Address z:Id="1251">
            <ArrayCount>1</ArrayCount>
            <Location>5998</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1252" z:Size="1">
            <d3p1:anyType z:Id="1253" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>2755</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2756</d3p1:Key>
        <d3p1:Value z:Id="1254">
          <Address z:Id="1255">
            <ArrayCount>1</ArrayCount>
            <Location>6002</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1256" z:Size="1">
            <d3p1:anyType z:Id="1257" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2756</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2757</d3p1:Key>
        <d3p1:Value z:Id="1258">
          <Address z:Id="1259">
            <ArrayCount>1</ArrayCount>
            <Location>6004</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1260" z:Size="1">
            <d3p1:anyType z:Id="1261" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2757</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2758</d3p1:Key>
        <d3p1:Value z:Id="1262">
          <Address z:Id="1263">
            <ArrayCount>1</ArrayCount>
            <Location>6006</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1264" z:Size="1">
            <d3p1:anyType z:Id="1265" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2758</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2759</d3p1:Key>
        <d3p1:Value z:Id="1266">
          <Address z:Id="1267">
            <ArrayCount>1</ArrayCount>
            <Location>6008</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1268" z:Size="1">
            <d3p1:anyType z:Id="1269" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2759</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2767</d3p1:Key>
        <d3p1:Value z:Id="1270">
          <Address z:Id="1271">
            <ArrayCount>1</ArrayCount>
            <Location>68</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1272" z:Size="1">
            <d3p1:anyType z:Id="1273" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2788</d3p1:Key>
        <d3p1:Value z:Id="1274">
          <Address z:Id="1275">
            <ArrayCount>1</ArrayCount>
            <Location>69</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1276" z:Size="1">
            <d3p1:anyType z:Id="1277" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2788</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2697</d3p1:Key>
        <d3p1:Value z:Id="1278">
          <Address z:Id="1279">
            <ArrayCount>1</ArrayCount>
            <Location>70</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1280" z:Size="1">
            <d3p1:anyType z:Id="1281" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2697</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2698</d3p1:Key>
        <d3p1:Value z:Id="1282">
          <Address z:Id="1283">
            <ArrayCount>1</ArrayCount>
            <Location>6010</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1284" z:Size="1">
            <d3p1:anyType z:Id="1285" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2698</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2693</d3p1:Key>
        <d3p1:Value z:Id="1286">
          <Address z:Id="1287">
            <ArrayCount>1</ArrayCount>
            <Location>71</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1288" z:Size="1">
            <d3p1:anyType z:Id="1289" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2739</d3p1:Key>
        <d3p1:Value z:Id="1290">
          <Address z:Id="1291">
            <ArrayCount>1</ArrayCount>
            <Location>6014</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1292" z:Size="1">
            <d3p1:anyType z:Id="1293" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2739</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2664</d3p1:Key>
        <d3p1:Value z:Id="1294">
          <Address z:Id="1295">
            <ArrayCount>1</ArrayCount>
            <Location>6016</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1296" z:Size="1">
            <d3p1:anyType z:Id="1297" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2664</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2802</d3p1:Key>
        <d3p1:Value z:Id="1298">
          <Address z:Id="1299">
            <ArrayCount>1</ArrayCount>
            <Location>6020</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1300" z:Size="1">
            <d3p1:anyType z:Id="1301" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2802</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2799</d3p1:Key>
        <d3p1:Value z:Id="1302">
          <Address z:Id="1303">
            <ArrayCount>1</ArrayCount>
            <Location>72</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1304" z:Size="1">
            <d3p1:anyType z:Id="1305" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2799</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2813</d3p1:Key>
        <d3p1:Value z:Id="1306">
          <Address z:Id="1307">
            <ArrayCount>1</ArrayCount>
            <Location>6024</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1308" z:Size="1">
            <d3p1:anyType z:Id="1309" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2813</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2814</d3p1:Key>
        <d3p1:Value z:Id="1310">
          <Address z:Id="1311">
            <ArrayCount>1</ArrayCount>
            <Location>73</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1312" z:Size="1">
            <d3p1:anyType z:Id="1313" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2814</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2815</d3p1:Key>
        <d3p1:Value z:Id="1314">
          <Address z:Id="1315">
            <ArrayCount>1</ArrayCount>
            <Location>74</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1316" z:Size="1">
            <d3p1:anyType z:Id="1317" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2815</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2816</d3p1:Key>
        <d3p1:Value z:Id="1318">
          <Address z:Id="1319">
            <ArrayCount>1</ArrayCount>
            <Location>75</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1320" z:Size="1">
            <d3p1:anyType z:Id="1321" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2816</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2809</d3p1:Key>
        <d3p1:Value z:Id="1322">
          <Address z:Id="1323">
            <ArrayCount>10</ArrayCount>
            <Location>6028</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1324" z:Size="10">
            <d3p1:anyType z:Id="1325" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
            <d3p1:anyType z:Ref="1325" i:nil="true" />
          </DefaultValues>
          <Id>2809</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2635</d3p1:Key>
        <d3p1:Value z:Id="1326">
          <Address z:Ref="768" i:nil="true" />
          <DefaultValues z:Id="1327" z:Size="1">
            <d3p1:anyType z:Ref="402" i:nil="true" />
          </DefaultValues>
          <Id>2635</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2650</d3p1:Key>
        <d3p1:Value z:Id="1328">
          <Address z:Ref="780" i:nil="true" />
          <DefaultValues z:Id="1329" z:Size="7">
            <d3p1:anyType z:Ref="424" i:nil="true" />
            <d3p1:anyType z:Ref="425" i:nil="true" />
            <d3p1:anyType z:Ref="426" i:nil="true" />
            <d3p1:anyType z:Ref="427" i:nil="true" />
            <d3p1:anyType z:Ref="428" i:nil="true" />
            <d3p1:anyType z:Ref="429" i:nil="true" />
            <d3p1:anyType z:Ref="430" i:nil="true" />
          </DefaultValues>
          <Id>2650</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2647</d3p1:Key>
        <d3p1:Value z:Id="1330">
          <Address z:Ref="777" i:nil="true" />
          <DefaultValues z:Id="1331" z:Size="7">
            <d3p1:anyType z:Ref="414" i:nil="true" />
            <d3p1:anyType z:Ref="415" i:nil="true" />
            <d3p1:anyType z:Ref="416" i:nil="true" />
            <d3p1:anyType z:Ref="417" i:nil="true" />
            <d3p1:anyType z:Ref="418" i:nil="true" />
            <d3p1:anyType z:Ref="419" i:nil="true" />
            <d3p1:anyType z:Ref="420" i:nil="true" />
          </DefaultValues>
          <Id>2647</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3270</d3p1:Key>
        <d3p1:Value z:Id="1332">
          <Address z:Ref="864" i:nil="true" />
          <DefaultValues z:Id="1333" z:Size="1">
            <d3p1:anyType z:Ref="577" i:nil="true" />
          </DefaultValues>
          <Id>3270</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1719</d3p1:Key>
        <d3p1:Value z:Id="1334">
          <Address z:Id="1335">
            <ArrayCount>1</ArrayCount>
            <Location>6068</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1336" z:Size="1">
            <d3p1:anyType z:Id="1337" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1719</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1693</d3p1:Key>
        <d3p1:Value z:Id="1338">
          <Address z:Id="1339">
            <ArrayCount>1</ArrayCount>
            <Location>6072</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1340" z:Size="1">
            <d3p1:anyType z:Id="1341" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1715</d3p1:Key>
        <d3p1:Value z:Id="1342">
          <Address z:Ref="717" i:nil="true" />
          <DefaultValues z:Id="1343" z:Size="1">
            <d3p1:anyType z:Ref="307" i:nil="true" />
          </DefaultValues>
          <Id>1715</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2642</d3p1:Key>
        <d3p1:Value z:Id="1344">
          <Address z:Id="1345">
            <ArrayCount>1</ArrayCount>
            <Location>6076</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1346" z:Size="1">
            <d3p1:anyType z:Id="1347" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2642</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2478</d3p1:Key>
        <d3p1:Value z:Id="1348">
          <Address z:Ref="765" i:nil="true" />
          <DefaultValues z:Id="1349" z:Size="1">
            <d3p1:anyType z:Ref="398" i:nil="true" />
          </DefaultValues>
          <Id>2478</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2312</d3p1:Key>
        <d3p1:Value z:Id="1350">
          <Address z:Ref="762" i:nil="true" />
          <DefaultValues z:Id="1351" z:Size="1">
            <d3p1:anyType z:Ref="394" i:nil="true" />
          </DefaultValues>
          <Id>2312</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2081</d3p1:Key>
        <d3p1:Value z:Id="1352">
          <Address z:Ref="750" i:nil="true" />
          <DefaultValues z:Id="1353" z:Size="1">
            <d3p1:anyType z:Ref="374" i:nil="true" />
          </DefaultValues>
          <Id>2081</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2078</d3p1:Key>
        <d3p1:Value z:Id="1354">
          <Address z:Ref="747" i:nil="true" />
          <DefaultValues z:Id="1355" z:Size="1">
            <d3p1:anyType z:Ref="370" i:nil="true" />
          </DefaultValues>
          <Id>2078</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1305</d3p1:Key>
        <d3p1:Value z:Id="1356">
          <Address z:Ref="705" i:nil="true" />
          <DefaultValues z:Id="1357" z:Size="1">
            <d3p1:anyType z:Ref="285" i:nil="true" />
          </DefaultValues>
          <Id>1305</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1301</d3p1:Key>
        <d3p1:Value z:Id="1358">
          <Address z:Ref="702" i:nil="true" />
          <DefaultValues z:Id="1359" z:Size="17">
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
            <d3p1:anyType z:Ref="271" i:nil="true" />
            <d3p1:anyType z:Ref="272" i:nil="true" />
            <d3p1:anyType z:Ref="273" i:nil="true" />
            <d3p1:anyType z:Ref="274" i:nil="true" />
            <d3p1:anyType z:Ref="275" i:nil="true" />
            <d3p1:anyType z:Ref="276" i:nil="true" />
            <d3p1:anyType z:Ref="277" i:nil="true" />
            <d3p1:anyType z:Ref="278" i:nil="true" />
            <d3p1:anyType z:Ref="279" i:nil="true" />
            <d3p1:anyType z:Ref="280" i:nil="true" />
            <d3p1:anyType z:Ref="281" i:nil="true" />
          </DefaultValues>
          <Id>1301</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1297</d3p1:Key>
        <d3p1:Value z:Id="1360">
          <Address z:Id="1361">
            <ArrayCount>1</ArrayCount>
            <Location>6080</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1362" z:Size="1">
            <d3p1:anyType z:Id="1363" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1297</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1289</d3p1:Key>
        <d3p1:Value z:Id="1364">
          <Address z:Ref="699" i:nil="true" />
          <DefaultValues z:Id="1365" z:Size="1">
            <d3p1:anyType z:Ref="261" i:nil="true" />
          </DefaultValues>
          <Id>1289</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1286</d3p1:Key>
        <d3p1:Value z:Id="1366">
          <Address z:Ref="696" i:nil="true" />
          <DefaultValues z:Id="1367" z:Size="1">
            <d3p1:anyType z:Ref="257" i:nil="true" />
          </DefaultValues>
          <Id>1286</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1279</d3p1:Key>
        <d3p1:Value z:Id="1368">
          <Address z:Ref="693" i:nil="true" />
          <DefaultValues z:Id="1369" z:Size="1">
            <d3p1:anyType z:Ref="253" i:nil="true" />
          </DefaultValues>
          <Id>1279</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1264</d3p1:Key>
        <d3p1:Value z:Id="1370">
          <Address z:Id="1371">
            <ArrayCount>1</ArrayCount>
            <Location>6082</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1372" z:Size="1">
            <d3p1:anyType z:Id="1373" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1264</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1265</d3p1:Key>
        <d3p1:Value z:Id="1374">
          <Address z:Id="1375">
            <ArrayCount>1</ArrayCount>
            <Location>6086</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1376" z:Size="1">
            <d3p1:anyType z:Id="1377" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1265</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1266</d3p1:Key>
        <d3p1:Value z:Id="1378">
          <Address z:Id="1379">
            <ArrayCount>1</ArrayCount>
            <Location>6090</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1380" z:Size="1">
            <d3p1:anyType z:Id="1381" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1266</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1267</d3p1:Key>
        <d3p1:Value z:Id="1382">
          <Address z:Id="1383">
            <ArrayCount>1</ArrayCount>
            <Location>6092</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1384" z:Size="1">
            <d3p1:anyType z:Id="1385" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1267</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1268</d3p1:Key>
        <d3p1:Value z:Id="1386">
          <Address z:Id="1387">
            <ArrayCount>1</ArrayCount>
            <Location>6096</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1388" z:Size="1">
            <d3p1:anyType z:Id="1389" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1268</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1269</d3p1:Key>
        <d3p1:Value z:Id="1390">
          <Address z:Id="1391">
            <ArrayCount>1</ArrayCount>
            <Location>76</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1392" z:Size="1">
            <d3p1:anyType z:Id="1393" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1269</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1270</d3p1:Key>
        <d3p1:Value z:Id="1394">
          <Address z:Id="1395">
            <ArrayCount>4</ArrayCount>
            <Location>6100</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1396" z:Size="4">
            <d3p1:anyType z:Id="1397" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1397" i:nil="true" />
            <d3p1:anyType z:Ref="1397" i:nil="true" />
            <d3p1:anyType z:Ref="1397" i:nil="true" />
          </DefaultValues>
          <Id>1270</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2623</d3p1:Key>
        <d3p1:Value z:Id="1398">
          <Address z:Id="1399">
            <ArrayCount>1</ArrayCount>
            <Location>6116</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1400" z:Size="1">
            <d3p1:anyType z:Id="1401" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2623</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2620</d3p1:Key>
        <d3p1:Value z:Id="1402">
          <Address z:Ref="714" i:nil="true" />
          <DefaultValues z:Id="1403" z:Size="4">
            <d3p1:anyType z:Ref="300" i:nil="true" />
            <d3p1:anyType z:Ref="301" i:nil="true" />
            <d3p1:anyType z:Ref="302" i:nil="true" />
            <d3p1:anyType z:Ref="303" i:nil="true" />
          </DefaultValues>
          <Id>2620</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2617</d3p1:Key>
        <d3p1:Value z:Id="1404">
          <Address z:Ref="711" i:nil="true" />
          <DefaultValues z:Id="1405" z:Size="4">
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
            <d3p1:anyType z:Ref="295" i:nil="true" />
            <d3p1:anyType z:Ref="296" i:nil="true" />
          </DefaultValues>
          <Id>2617</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2605</d3p1:Key>
        <d3p1:Value z:Id="1406">
          <Address z:Id="1407">
            <ArrayCount>1</ArrayCount>
            <Location>6120</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1408" z:Size="1">
            <d3p1:anyType z:Id="1409" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2605</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2627</d3p1:Key>
        <d3p1:Value z:Id="1410">
          <Address z:Ref="774" i:nil="true" />
          <DefaultValues z:Id="1411" z:Size="1">
            <d3p1:anyType z:Ref="410" i:nil="true" />
          </DefaultValues>
          <Id>2627</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2632</d3p1:Key>
        <d3p1:Value z:Id="1412">
          <Address z:Id="1413">
            <ArrayCount>1</ArrayCount>
            <Location>6124</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1414" z:Size="1">
            <d3p1:anyType z:Id="1415" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2632</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1533</d3p1:Key>
        <d3p1:Value z:Id="1416">
          <Address z:Id="1417">
            <ArrayCount>1</ArrayCount>
            <Location>6128</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1418" z:Size="1">
            <d3p1:anyType z:Id="1419" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1533</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1530</d3p1:Key>
        <d3p1:Value z:Id="1420">
          <Address z:Id="1421">
            <ArrayCount>1</ArrayCount>
            <Location>6132</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1422" z:Size="1">
            <d3p1:anyType z:Id="1423" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1530</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1488</d3p1:Key>
        <d3p1:Value z:Id="1424">
          <Address z:Id="1425">
            <ArrayCount>2</ArrayCount>
            <Location>6136</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1426" z:Size="2">
            <d3p1:anyType z:Id="1427" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1427" i:nil="true" />
          </DefaultValues>
          <Id>1488</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1539</d3p1:Key>
        <d3p1:Value z:Id="1428">
          <Address z:Id="1429">
            <ArrayCount>1</ArrayCount>
            <Location>6144</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1430" z:Size="1">
            <d3p1:anyType z:Id="1431" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1539</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1543</d3p1:Key>
        <d3p1:Value z:Id="1432">
          <Address z:Id="1433">
            <ArrayCount>1</ArrayCount>
            <Location>6148</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1434" z:Size="1">
            <d3p1:anyType z:Id="1435" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1543</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1434</d3p1:Key>
        <d3p1:Value z:Id="1436">
          <Address z:Id="1437">
            <ArrayCount>2</ArrayCount>
            <Location>6152</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1438" z:Size="2">
            <d3p1:anyType z:Id="1439" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1439" i:nil="true" />
          </DefaultValues>
          <Id>1434</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1686</d3p1:Key>
        <d3p1:Value z:Id="1440">
          <Address z:Ref="771" i:nil="true" />
          <DefaultValues z:Id="1441" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>1686</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1908</d3p1:Key>
        <d3p1:Value z:Id="1442">
          <Address z:Id="1443">
            <ArrayCount>2</ArrayCount>
            <Location>6160</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1444" z:Size="2">
            <d3p1:anyType z:Id="1445" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1445" i:nil="true" />
          </DefaultValues>
          <Id>1908</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2109</d3p1:Key>
        <d3p1:Value z:Id="1446">
          <Address z:Ref="753" i:nil="true" />
          <DefaultValues z:Id="1447" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1425</d3p1:Key>
        <d3p1:Value z:Id="1448">
          <Address z:Id="1449">
            <ArrayCount>1</ArrayCount>
            <Location>6168</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1450" z:Size="1">
            <d3p1:anyType z:Id="1451" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1425</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1209</d3p1:Key>
        <d3p1:Value z:Id="1452">
          <Address z:Id="1453">
            <ArrayCount>1</ArrayCount>
            <Location>6172</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1454" z:Size="1">
            <d3p1:anyType z:Id="1455" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1209</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1210</d3p1:Key>
        <d3p1:Value z:Id="1456">
          <Address z:Id="1457">
            <ArrayCount>1</ArrayCount>
            <Location>77</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1458" z:Size="1">
            <d3p1:anyType z:Id="1459" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1210</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1211</d3p1:Key>
        <d3p1:Value z:Id="1460">
          <Address z:Id="1461">
            <ArrayCount>1</ArrayCount>
            <Location>78</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1462" z:Size="1">
            <d3p1:anyType z:Id="1463" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1211</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1212</d3p1:Key>
        <d3p1:Value z:Id="1464">
          <Address z:Id="1465">
            <ArrayCount>1</ArrayCount>
            <Location>79</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1466" z:Size="1">
            <d3p1:anyType z:Id="1467" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1212</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1213</d3p1:Key>
        <d3p1:Value z:Id="1468">
          <Address z:Id="1469">
            <ArrayCount>10</ArrayCount>
            <Location>6176</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1470" z:Size="10">
            <d3p1:anyType z:Id="1471" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
            <d3p1:anyType z:Ref="1471" i:nil="true" />
          </DefaultValues>
          <Id>1213</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2248</d3p1:Key>
        <d3p1:Value z:Id="1472">
          <Address z:Id="1473">
            <ArrayCount>1</ArrayCount>
            <Location>6216</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1474" z:Size="1">
            <d3p1:anyType z:Id="1475" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2248</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2318</d3p1:Key>
        <d3p1:Value z:Id="1476">
          <Address z:Id="1477">
            <ArrayCount>1</ArrayCount>
            <Location>6220</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1478" z:Size="1">
            <d3p1:anyType z:Id="1479" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2318</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2319</d3p1:Key>
        <d3p1:Value z:Id="1480">
          <Address z:Id="1481">
            <ArrayCount>1</ArrayCount>
            <Location>80</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1482" z:Size="1">
            <d3p1:anyType z:Id="1483" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2319</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2320</d3p1:Key>
        <d3p1:Value z:Id="1484">
          <Address z:Id="1485">
            <ArrayCount>1</ArrayCount>
            <Location>81</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1486" z:Size="1">
            <d3p1:anyType z:Id="1487" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2320</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2321</d3p1:Key>
        <d3p1:Value z:Id="1488">
          <Address z:Id="1489">
            <ArrayCount>1</ArrayCount>
            <Location>82</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1490" z:Size="1">
            <d3p1:anyType z:Id="1491" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2321</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2314</d3p1:Key>
        <d3p1:Value z:Id="1492">
          <Address z:Id="1493">
            <ArrayCount>10</ArrayCount>
            <Location>6224</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1494" z:Size="10">
            <d3p1:anyType z:Id="1495" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
            <d3p1:anyType z:Ref="1495" i:nil="true" />
          </DefaultValues>
          <Id>2314</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1980</d3p1:Key>
        <d3p1:Value z:Id="1496">
          <Address z:Ref="741" i:nil="true" />
          <DefaultValues z:Id="1497" z:Size="1">
            <d3p1:anyType z:Ref="361" i:nil="true" />
          </DefaultValues>
          <Id>1980</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1954</d3p1:Key>
        <d3p1:Value z:Id="1498">
          <Address z:Id="1499">
            <ArrayCount>1</ArrayCount>
            <Location>83</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1500" z:Size="1">
            <d3p1:anyType z:Id="1501" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1954</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1955</d3p1:Key>
        <d3p1:Value z:Id="1502">
          <Address z:Id="1503">
            <ArrayCount>1</ArrayCount>
            <Location>84</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1504" z:Size="1">
            <d3p1:anyType z:Id="1505" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1955</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1956</d3p1:Key>
        <d3p1:Value z:Id="1506">
          <Address z:Id="1507">
            <ArrayCount>1</ArrayCount>
            <Location>85</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1508" z:Size="1">
            <d3p1:anyType z:Id="1509" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1956</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1957</d3p1:Key>
        <d3p1:Value z:Id="1510">
          <Address z:Id="1511">
            <ArrayCount>1</ArrayCount>
            <Location>6264</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1512" z:Size="1">
            <d3p1:anyType z:Id="1513" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1957</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1958</d3p1:Key>
        <d3p1:Value z:Id="1514">
          <Address z:Id="1515">
            <ArrayCount>1</ArrayCount>
            <Location>6268</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1516" z:Size="1">
            <d3p1:anyType z:Id="1517" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1958</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1959</d3p1:Key>
        <d3p1:Value z:Id="1518">
          <Address z:Id="1519">
            <ArrayCount>1</ArrayCount>
            <Location>6272</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1520" z:Size="1">
            <d3p1:anyType z:Id="1521" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1959</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1960</d3p1:Key>
        <d3p1:Value z:Id="1522">
          <Address z:Id="1523">
            <ArrayCount>1</ArrayCount>
            <Location>6276</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1524" z:Size="1">
            <d3p1:anyType z:Id="1525" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1960</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1961</d3p1:Key>
        <d3p1:Value z:Id="1526">
          <Address z:Id="1527">
            <ArrayCount>1</ArrayCount>
            <Location>6280</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1528" z:Size="1">
            <d3p1:anyType z:Id="1529" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1961</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1962</d3p1:Key>
        <d3p1:Value z:Id="1530">
          <Address z:Id="1531">
            <ArrayCount>1</ArrayCount>
            <Location>6284</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1532" z:Size="1">
            <d3p1:anyType z:Id="1533" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1962</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1963</d3p1:Key>
        <d3p1:Value z:Id="1534">
          <Address z:Id="1535">
            <ArrayCount>1</ArrayCount>
            <Location>6288</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1536" z:Size="1">
            <d3p1:anyType z:Id="1537" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1963</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1964</d3p1:Key>
        <d3p1:Value z:Id="1538">
          <Address z:Id="1539">
            <ArrayCount>1</ArrayCount>
            <Location>6292</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1540" z:Size="1">
            <d3p1:anyType z:Id="1541" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1964</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1965</d3p1:Key>
        <d3p1:Value z:Id="1542">
          <Address z:Id="1543">
            <ArrayCount>1</ArrayCount>
            <Location>6296</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1544" z:Size="1">
            <d3p1:anyType z:Id="1545" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1965</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1928</d3p1:Key>
        <d3p1:Value z:Id="1546">
          <Address z:Id="1547">
            <ArrayCount>1</ArrayCount>
            <Location>86</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1548" z:Size="1">
            <d3p1:anyType z:Id="1549" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1928</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1929</d3p1:Key>
        <d3p1:Value z:Id="1550">
          <Address z:Id="1551">
            <ArrayCount>1</ArrayCount>
            <Location>6300</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1552" z:Size="1">
            <d3p1:anyType z:Id="1553" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1929</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1930</d3p1:Key>
        <d3p1:Value z:Id="1554">
          <Address z:Id="1555">
            <ArrayCount>1</ArrayCount>
            <Location>6302</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1556" z:Size="1">
            <d3p1:anyType z:Id="1557" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1930</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1931</d3p1:Key>
        <d3p1:Value z:Id="1558">
          <Address z:Id="1559">
            <ArrayCount>1</ArrayCount>
            <Location>6304</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1560" z:Size="1">
            <d3p1:anyType z:Id="1561" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1931</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1932</d3p1:Key>
        <d3p1:Value z:Id="1562">
          <Address z:Id="1563">
            <ArrayCount>1</ArrayCount>
            <Location>6308</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1564" z:Size="1">
            <d3p1:anyType z:Id="1565" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1932</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1933</d3p1:Key>
        <d3p1:Value z:Id="1566">
          <Address z:Id="1567">
            <ArrayCount>1</ArrayCount>
            <Location>87</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1568" z:Size="1">
            <d3p1:anyType z:Id="1569" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1933</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1934</d3p1:Key>
        <d3p1:Value z:Id="1570">
          <Address z:Id="1571">
            <ArrayCount>1</ArrayCount>
            <Location>88</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1572" z:Size="1">
            <d3p1:anyType z:Id="1573" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1934</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1935</d3p1:Key>
        <d3p1:Value z:Id="1574">
          <Address z:Id="1575">
            <ArrayCount>1</ArrayCount>
            <Location>6312</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1576" z:Size="1">
            <d3p1:anyType z:Id="1577" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1935</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1936</d3p1:Key>
        <d3p1:Value z:Id="1578">
          <Address z:Id="1579">
            <ArrayCount>1</ArrayCount>
            <Location>6314</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1580" z:Size="1">
            <d3p1:anyType z:Id="1581" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1936</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1937</d3p1:Key>
        <d3p1:Value z:Id="1582">
          <Address z:Id="1583">
            <ArrayCount>1</ArrayCount>
            <Location>6316</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1584" z:Size="1">
            <d3p1:anyType z:Id="1585" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1937</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1938</d3p1:Key>
        <d3p1:Value z:Id="1586">
          <Address z:Id="1587">
            <ArrayCount>1</ArrayCount>
            <Location>89</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1588" z:Size="1">
            <d3p1:anyType z:Id="1589" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1938</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1939</d3p1:Key>
        <d3p1:Value z:Id="1590">
          <Address z:Id="1591">
            <ArrayCount>1</ArrayCount>
            <Location>6318</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1592" z:Size="1">
            <d3p1:anyType z:Id="1593" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1939</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1940</d3p1:Key>
        <d3p1:Value z:Id="1594">
          <Address z:Id="1595">
            <ArrayCount>1</ArrayCount>
            <Location>6322</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1596" z:Size="1">
            <d3p1:anyType z:Id="1597" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1940</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1941</d3p1:Key>
        <d3p1:Value z:Id="1598">
          <Address z:Id="1599">
            <ArrayCount>1</ArrayCount>
            <Location>6324</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1600" z:Size="1">
            <d3p1:anyType z:Id="1601" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1941</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1942</d3p1:Key>
        <d3p1:Value z:Id="1602">
          <Address z:Id="1603">
            <ArrayCount>1</ArrayCount>
            <Location>6328</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1604" z:Size="1">
            <d3p1:anyType z:Id="1605" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1942</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1943</d3p1:Key>
        <d3p1:Value z:Id="1606">
          <Address z:Id="1607">
            <ArrayCount>1</ArrayCount>
            <Location>6332</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1608" z:Size="1">
            <d3p1:anyType z:Id="1609" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1943</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1944</d3p1:Key>
        <d3p1:Value z:Id="1610">
          <Address z:Id="1611">
            <ArrayCount>1</ArrayCount>
            <Location>6336</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1612" z:Size="1">
            <d3p1:anyType z:Id="1613" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1944</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1945</d3p1:Key>
        <d3p1:Value z:Id="1614">
          <Address z:Id="1615">
            <ArrayCount>1</ArrayCount>
            <Location>6340</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1616" z:Size="1">
            <d3p1:anyType z:Id="1617" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1945</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1946</d3p1:Key>
        <d3p1:Value z:Id="1618">
          <Address z:Id="1619">
            <ArrayCount>1</ArrayCount>
            <Location>6344</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1620" z:Size="1">
            <d3p1:anyType z:Id="1621" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1946</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1947</d3p1:Key>
        <d3p1:Value z:Id="1622">
          <Address z:Id="1623">
            <ArrayCount>1</ArrayCount>
            <Location>6348</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1624" z:Size="1">
            <d3p1:anyType z:Id="1625" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1947</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1948</d3p1:Key>
        <d3p1:Value z:Id="1626">
          <Address z:Id="1627">
            <ArrayCount>1</ArrayCount>
            <Location>6352</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1628" z:Size="1">
            <d3p1:anyType z:Id="1629" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1948</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1949</d3p1:Key>
        <d3p1:Value z:Id="1630">
          <Address z:Id="1631">
            <ArrayCount>1</ArrayCount>
            <Location>6356</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1632" z:Size="1">
            <d3p1:anyType z:Id="1633" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1949</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1974</d3p1:Key>
        <d3p1:Value z:Id="1634">
          <Address z:Ref="612" i:nil="true" />
          <DefaultValues z:Id="1635" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>1974</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1977</d3p1:Key>
        <d3p1:Value z:Id="1636">
          <Address z:Ref="744" i:nil="true" />
          <DefaultValues z:Id="1637" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>1977</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2014</d3p1:Key>
        <d3p1:Value z:Id="1638">
          <Address z:Id="1639">
            <ArrayCount>1</ArrayCount>
            <Location>90</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1640" z:Size="1">
            <d3p1:anyType z:Id="1641" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2014</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2022</d3p1:Key>
        <d3p1:Value z:Id="1642">
          <Address z:Id="1643">
            <ArrayCount>1</ArrayCount>
            <Location>91</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1644" z:Size="1">
            <d3p1:anyType z:Id="1645" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2022</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2023</d3p1:Key>
        <d3p1:Value z:Id="1646">
          <Address z:Id="1647">
            <ArrayCount>1</ArrayCount>
            <Location>6360</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1648" z:Size="1">
            <d3p1:anyType z:Id="1649" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2023</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2024</d3p1:Key>
        <d3p1:Value z:Id="1650">
          <Address z:Id="1651">
            <ArrayCount>2</ArrayCount>
            <Location>6364</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1652" z:Size="2">
            <d3p1:anyType z:Id="1653" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1653" i:nil="true" />
          </DefaultValues>
          <Id>2024</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2018</d3p1:Key>
        <d3p1:Value z:Id="1654">
          <Address z:Id="1655">
            <ArrayCount>1</ArrayCount>
            <Location>92</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1656" z:Size="1">
            <d3p1:anyType z:Id="1657" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2018</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2016</d3p1:Key>
        <d3p1:Value z:Id="1658">
          <Address z:Id="1659">
            <ArrayCount>1</ArrayCount>
            <Location>93</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1660" z:Size="1">
            <d3p1:anyType z:Id="1661" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2016</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2008</d3p1:Key>
        <d3p1:Value z:Id="1662">
          <Address z:Id="1663">
            <ArrayCount>1</ArrayCount>
            <Location>94</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1664" z:Size="1">
            <d3p1:anyType z:Id="1665" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2008</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1746</d3p1:Key>
        <d3p1:Value z:Id="1666">
          <Address z:Id="1667">
            <ArrayCount>1</ArrayCount>
            <Location>95</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1668" z:Size="1">
            <d3p1:anyType z:Id="1669" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1746</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2004</d3p1:Key>
        <d3p1:Value z:Id="1670">
          <Address z:Id="1671">
            <ArrayCount>1</ArrayCount>
            <Location>96</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1672" z:Size="1">
            <d3p1:anyType z:Id="1673" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2004</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2005</d3p1:Key>
        <d3p1:Value z:Id="1674">
          <Address z:Id="1675">
            <ArrayCount>1</ArrayCount>
            <Location>6372</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1676" z:Size="1">
            <d3p1:anyType z:Id="1677" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2005</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2006</d3p1:Key>
        <d3p1:Value z:Id="1678">
          <Address z:Id="1679">
            <ArrayCount>2</ArrayCount>
            <Location>6376</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1680" z:Size="2">
            <d3p1:anyType z:Id="1681" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1681" i:nil="true" />
          </DefaultValues>
          <Id>2006</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1744</d3p1:Key>
        <d3p1:Value z:Id="1682">
          <Address z:Id="1683">
            <ArrayCount>1</ArrayCount>
            <Location>97</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1684" z:Size="1">
            <d3p1:anyType z:Id="1685" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1744</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1998</d3p1:Key>
        <d3p1:Value z:Id="1686">
          <Address z:Id="1687">
            <ArrayCount>1</ArrayCount>
            <Location>98</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1688" z:Size="1">
            <d3p1:anyType z:Id="1689" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1998</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1999</d3p1:Key>
        <d3p1:Value z:Id="1690">
          <Address z:Id="1691">
            <ArrayCount>1</ArrayCount>
            <Location>6384</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1692" z:Size="1">
            <d3p1:anyType z:Id="1693" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1999</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2000</d3p1:Key>
        <d3p1:Value z:Id="1694">
          <Address z:Id="1695">
            <ArrayCount>2</ArrayCount>
            <Location>6388</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1696" z:Size="2">
            <d3p1:anyType z:Id="1697" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1697" i:nil="true" />
          </DefaultValues>
          <Id>2000</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1742</d3p1:Key>
        <d3p1:Value z:Id="1698">
          <Address z:Id="1699">
            <ArrayCount>1</ArrayCount>
            <Location>99</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1700" z:Size="1">
            <d3p1:anyType z:Id="1701" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1742</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1992</d3p1:Key>
        <d3p1:Value z:Id="1702">
          <Address z:Id="1703">
            <ArrayCount>1</ArrayCount>
            <Location>100</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1704" z:Size="1">
            <d3p1:anyType z:Id="1705" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1992</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1993</d3p1:Key>
        <d3p1:Value z:Id="1706">
          <Address z:Id="1707">
            <ArrayCount>1</ArrayCount>
            <Location>6396</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1708" z:Size="1">
            <d3p1:anyType z:Id="1709" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1993</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1994</d3p1:Key>
        <d3p1:Value z:Id="1710">
          <Address z:Id="1711">
            <ArrayCount>2</ArrayCount>
            <Location>6400</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1712" z:Size="2">
            <d3p1:anyType z:Id="1713" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1713" i:nil="true" />
          </DefaultValues>
          <Id>1994</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1738</d3p1:Key>
        <d3p1:Value z:Id="1714">
          <Address z:Id="1715">
            <ArrayCount>1</ArrayCount>
            <Location>6408</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1716" z:Size="1">
            <d3p1:anyType z:Id="1717" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1738</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1750</d3p1:Key>
        <d3p1:Value z:Id="1718">
          <Address z:Ref="729" i:nil="true" />
          <DefaultValues z:Id="1719" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>1750</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2125</d3p1:Key>
        <d3p1:Value z:Id="1720">
          <Address z:Id="1721">
            <ArrayCount>1</ArrayCount>
            <Location>6410</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1722" z:Size="1">
            <d3p1:anyType z:Id="1723" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2129</d3p1:Key>
        <d3p1:Value z:Id="1724">
          <Address z:Ref="756" i:nil="true" />
          <DefaultValues z:Id="1725" z:Size="1">
            <d3p1:anyType z:Ref="382" i:nil="true" />
          </DefaultValues>
          <Id>2129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1762</d3p1:Key>
        <d3p1:Value z:Id="1726">
          <Address z:Id="1727">
            <ArrayCount>1</ArrayCount>
            <Location>6414</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1728" z:Size="1">
            <d3p1:anyType z:Id="1729" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1762</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1768</d3p1:Key>
        <d3p1:Value z:Id="1730">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1731" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>1768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1776</d3p1:Key>
        <d3p1:Value z:Id="1732">
          <Address z:Ref="735" i:nil="true" />
          <DefaultValues z:Id="1733" z:Size="1">
            <d3p1:anyType z:Ref="353" i:nil="true" />
          </DefaultValues>
          <Id>1776</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1771</d3p1:Key>
        <d3p1:Value z:Id="1734">
          <Address z:Id="1735">
            <ArrayCount>1</ArrayCount>
            <Location>101</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1736" z:Size="1">
            <d3p1:anyType z:Id="1737" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1771</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1772</d3p1:Key>
        <d3p1:Value z:Id="1738">
          <Address z:Id="1739">
            <ArrayCount>1</ArrayCount>
            <Location>6418</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1740" z:Size="1">
            <d3p1:anyType z:Id="1741" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1772</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1773</d3p1:Key>
        <d3p1:Value z:Id="1742">
          <Address z:Id="1743">
            <ArrayCount>1</ArrayCount>
            <Location>6422</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1744" z:Size="1">
            <d3p1:anyType z:Id="1745" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1773</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1851</d3p1:Key>
        <d3p1:Value z:Id="1746">
          <Address z:Ref="684" i:nil="true" />
          <DefaultValues z:Id="1747" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>1851</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1872</d3p1:Key>
        <d3p1:Value z:Id="1748">
          <Address z:Id="1749">
            <ArrayCount>1</ArrayCount>
            <Location>6424</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1750" z:Size="1">
            <d3p1:anyType z:Id="1751" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1872</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1873</d3p1:Key>
        <d3p1:Value z:Id="1752">
          <Address z:Id="1753">
            <ArrayCount>1</ArrayCount>
            <Location>6428</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1754" z:Size="1">
            <d3p1:anyType z:Id="1755" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1873</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2092</d3p1:Key>
        <d3p1:Value z:Id="1756">
          <Address z:Ref="747" i:nil="true" />
          <DefaultValues z:Id="1757" z:Size="1">
            <d3p1:anyType z:Ref="370" i:nil="true" />
          </DefaultValues>
          <Id>2092</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2070</d3p1:Key>
        <d3p1:Value z:Id="1758">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1759" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2070</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2067</d3p1:Key>
        <d3p1:Value z:Id="1760">
          <Address z:Id="1761">
            <ArrayCount>1</ArrayCount>
            <Location>6430</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1762" z:Size="1">
            <d3p1:anyType z:Id="1763" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2067</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2048</d3p1:Key>
        <d3p1:Value z:Id="1764">
          <Address z:Ref="693" i:nil="true" />
          <DefaultValues z:Id="1765" z:Size="1">
            <d3p1:anyType z:Ref="253" i:nil="true" />
          </DefaultValues>
          <Id>2048</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2045</d3p1:Key>
        <d3p1:Value z:Id="1766">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1767" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2045</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2042</d3p1:Key>
        <d3p1:Value z:Id="1768">
          <Address z:Id="1769">
            <ArrayCount>1</ArrayCount>
            <Location>6434</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1770" z:Size="1">
            <d3p1:anyType z:Id="1771" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2042</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1854</d3p1:Key>
        <d3p1:Value z:Id="1772">
          <Address z:Ref="687" i:nil="true" />
          <DefaultValues z:Id="1773" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>1854</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1876</d3p1:Key>
        <d3p1:Value z:Id="1774">
          <Address z:Id="1775">
            <ArrayCount>1</ArrayCount>
            <Location>6438</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1776" z:Size="1">
            <d3p1:anyType z:Id="1777" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1876</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1877</d3p1:Key>
        <d3p1:Value z:Id="1778">
          <Address z:Id="1779">
            <ArrayCount>1</ArrayCount>
            <Location>6442</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1780" z:Size="1">
            <d3p1:anyType z:Id="1781" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1877</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2095</d3p1:Key>
        <d3p1:Value z:Id="1782">
          <Address z:Ref="750" i:nil="true" />
          <DefaultValues z:Id="1783" z:Size="1">
            <d3p1:anyType z:Ref="374" i:nil="true" />
          </DefaultValues>
          <Id>2095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2089</d3p1:Key>
        <d3p1:Value z:Id="1784">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1785" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2086</d3p1:Key>
        <d3p1:Value z:Id="1786">
          <Address z:Id="1787">
            <ArrayCount>1</ArrayCount>
            <Location>6444</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1788" z:Size="1">
            <d3p1:anyType z:Id="1789" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1857</d3p1:Key>
        <d3p1:Value z:Id="1790">
          <Address z:Ref="690" i:nil="true" />
          <DefaultValues z:Id="1791" z:Size="1">
            <d3p1:anyType z:Ref="249" i:nil="true" />
          </DefaultValues>
          <Id>1857</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1883</d3p1:Key>
        <d3p1:Value z:Id="1792">
          <Address z:Id="1793">
            <ArrayCount>1</ArrayCount>
            <Location>6448</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1794" z:Size="1">
            <d3p1:anyType z:Id="1795" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1883</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1884</d3p1:Key>
        <d3p1:Value z:Id="1796">
          <Address z:Id="1797">
            <ArrayCount>1</ArrayCount>
            <Location>6452</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1798" z:Size="1">
            <d3p1:anyType z:Id="1799" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1884</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2051</d3p1:Key>
        <d3p1:Value z:Id="1800">
          <Address z:Ref="696" i:nil="true" />
          <DefaultValues z:Id="1801" z:Size="1">
            <d3p1:anyType z:Ref="257" i:nil="true" />
          </DefaultValues>
          <Id>2051</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2033</d3p1:Key>
        <d3p1:Value z:Id="1802">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1803" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2033</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2030</d3p1:Key>
        <d3p1:Value z:Id="1804">
          <Address z:Id="1805">
            <ArrayCount>1</ArrayCount>
            <Location>6454</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1806" z:Size="1">
            <d3p1:anyType z:Id="1807" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2030</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1860</d3p1:Key>
        <d3p1:Value z:Id="1808">
          <Address z:Ref="771" i:nil="true" />
          <DefaultValues z:Id="1809" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>1860</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1887</d3p1:Key>
        <d3p1:Value z:Id="1810">
          <Address z:Id="1811">
            <ArrayCount>1</ArrayCount>
            <Location>6458</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1812" z:Size="1">
            <d3p1:anyType z:Id="1813" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1887</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1888</d3p1:Key>
        <d3p1:Value z:Id="1814">
          <Address z:Id="1815">
            <ArrayCount>1</ArrayCount>
            <Location>6462</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1816" z:Size="1">
            <d3p1:anyType z:Id="1817" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1888</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2062</d3p1:Key>
        <d3p1:Value z:Id="1818">
          <Address z:Ref="699" i:nil="true" />
          <DefaultValues z:Id="1819" z:Size="1">
            <d3p1:anyType z:Ref="261" i:nil="true" />
          </DefaultValues>
          <Id>2062</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2059</d3p1:Key>
        <d3p1:Value z:Id="1820">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1821" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2059</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2056</d3p1:Key>
        <d3p1:Value z:Id="1822">
          <Address z:Id="1823">
            <ArrayCount>1</ArrayCount>
            <Location>6464</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1824" z:Size="1">
            <d3p1:anyType z:Id="1825" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2056</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1863</d3p1:Key>
        <d3p1:Value z:Id="1826">
          <Address z:Ref="729" i:nil="true" />
          <DefaultValues z:Id="1827" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>1863</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1903</d3p1:Key>
        <d3p1:Value z:Id="1828">
          <Address z:Id="1829">
            <ArrayCount>1</ArrayCount>
            <Location>6468</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1830" z:Size="1">
            <d3p1:anyType z:Id="1831" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1903</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1904</d3p1:Key>
        <d3p1:Value z:Id="1832">
          <Address z:Id="1833">
            <ArrayCount>1</ArrayCount>
            <Location>6472</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1834" z:Size="1">
            <d3p1:anyType z:Id="1835" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1904</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2120</d3p1:Key>
        <d3p1:Value z:Id="1836">
          <Address z:Ref="753" i:nil="true" />
          <DefaultValues z:Id="1837" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2120</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2117</d3p1:Key>
        <d3p1:Value z:Id="1838">
          <Address z:Ref="732" i:nil="true" />
          <DefaultValues z:Id="1839" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2117</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2114</d3p1:Key>
        <d3p1:Value z:Id="1840">
          <Address z:Id="1841">
            <ArrayCount>1</ArrayCount>
            <Location>6474</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1842" z:Size="1">
            <d3p1:anyType z:Id="1843" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2114</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2136</d3p1:Key>
        <d3p1:Value z:Id="1844">
          <Address z:Ref="756" i:nil="true" />
          <DefaultValues z:Id="1845" z:Size="1">
            <d3p1:anyType z:Ref="382" i:nil="true" />
          </DefaultValues>
          <Id>2136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2132</d3p1:Key>
        <d3p1:Value z:Id="1846">
          <Address z:Id="1847">
            <ArrayCount>1</ArrayCount>
            <Location>6478</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1848" z:Size="1">
            <d3p1:anyType z:Id="1849" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2133</d3p1:Key>
        <d3p1:Value z:Id="1850">
          <Address z:Id="1851">
            <ArrayCount>1</ArrayCount>
            <Location>6482</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1852" z:Size="1">
            <d3p1:anyType z:Id="1853" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1987</d3p1:Key>
        <d3p1:Value z:Id="1854">
          <Address z:Ref="612" i:nil="true" />
          <DefaultValues z:Id="1855" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>1987</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1983</d3p1:Key>
        <d3p1:Value z:Id="1856">
          <Address z:Id="1857">
            <ArrayCount>1</ArrayCount>
            <Location>6484</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1858" z:Size="1">
            <d3p1:anyType z:Id="1859" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1983</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1984</d3p1:Key>
        <d3p1:Value z:Id="1860">
          <Address z:Id="1861">
            <ArrayCount>1</ArrayCount>
            <Location>6488</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1862" z:Size="1">
            <d3p1:anyType z:Id="1863" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1984</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2873</d3p1:Key>
        <d3p1:Value z:Id="1864">
          <Address z:Ref="744" i:nil="true" />
          <DefaultValues z:Id="1865" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>2873</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2876</d3p1:Key>
        <d3p1:Value z:Id="1866">
          <Address z:Id="1867">
            <ArrayCount>1</ArrayCount>
            <Location>6490</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1868" z:Size="1">
            <d3p1:anyType z:Id="1869" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2876</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2877</d3p1:Key>
        <d3p1:Value z:Id="1870">
          <Address z:Id="1871">
            <ArrayCount>1</ArrayCount>
            <Location>6494</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1872" z:Size="1">
            <d3p1:anyType z:Id="1873" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2877</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2884</d3p1:Key>
        <d3p1:Value z:Id="1874">
          <Address z:Ref="786" i:nil="true" />
          <DefaultValues z:Id="1875" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2884</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2880</d3p1:Key>
        <d3p1:Value z:Id="1876">
          <Address z:Id="1877">
            <ArrayCount>1</ArrayCount>
            <Location>6496</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1878" z:Size="1">
            <d3p1:anyType z:Id="1879" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2880</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2881</d3p1:Key>
        <d3p1:Value z:Id="1880">
          <Address z:Id="1881">
            <ArrayCount>1</ArrayCount>
            <Location>6500</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1882" z:Size="1">
            <d3p1:anyType z:Id="1883" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2881</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2895</d3p1:Key>
        <d3p1:Value z:Id="1884">
          <Address z:Ref="771" i:nil="true" />
          <DefaultValues z:Id="1885" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>2895</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2887</d3p1:Key>
        <d3p1:Value z:Id="1886">
          <Address z:Id="1887">
            <ArrayCount>1</ArrayCount>
            <Location>6502</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1888" z:Size="1">
            <d3p1:anyType z:Id="1889" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2887</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2888</d3p1:Key>
        <d3p1:Value z:Id="1890">
          <Address z:Id="1891">
            <ArrayCount>1</ArrayCount>
            <Location>6506</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1892" z:Size="1">
            <d3p1:anyType z:Id="1893" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2888</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2898</d3p1:Key>
        <d3p1:Value z:Id="1894">
          <Address z:Ref="774" i:nil="true" />
          <DefaultValues z:Id="1895" z:Size="1">
            <d3p1:anyType z:Ref="410" i:nil="true" />
          </DefaultValues>
          <Id>2898</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2891</d3p1:Key>
        <d3p1:Value z:Id="1896">
          <Address z:Id="1897">
            <ArrayCount>1</ArrayCount>
            <Location>6508</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1898" z:Size="1">
            <d3p1:anyType z:Id="1899" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2891</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2892</d3p1:Key>
        <d3p1:Value z:Id="1900">
          <Address z:Id="1901">
            <ArrayCount>1</ArrayCount>
            <Location>6512</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1902" z:Size="1">
            <d3p1:anyType z:Id="1903" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2892</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2975</d3p1:Key>
        <d3p1:Value z:Id="1904">
          <Address z:Ref="804" i:nil="true" />
          <DefaultValues z:Id="1905" z:Size="16">
            <d3p1:anyType z:Ref="475" i:nil="true" />
            <d3p1:anyType z:Ref="476" i:nil="true" />
            <d3p1:anyType z:Ref="477" i:nil="true" />
            <d3p1:anyType z:Ref="478" i:nil="true" />
            <d3p1:anyType z:Ref="479" i:nil="true" />
            <d3p1:anyType z:Ref="480" i:nil="true" />
            <d3p1:anyType z:Ref="481" i:nil="true" />
            <d3p1:anyType z:Ref="482" i:nil="true" />
            <d3p1:anyType z:Ref="483" i:nil="true" />
            <d3p1:anyType z:Ref="484" i:nil="true" />
            <d3p1:anyType z:Ref="485" i:nil="true" />
            <d3p1:anyType z:Ref="486" i:nil="true" />
            <d3p1:anyType z:Ref="487" i:nil="true" />
            <d3p1:anyType z:Ref="488" i:nil="true" />
            <d3p1:anyType z:Ref="489" i:nil="true" />
            <d3p1:anyType z:Ref="490" i:nil="true" />
          </DefaultValues>
          <Id>2975</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2978</d3p1:Key>
        <d3p1:Value z:Id="1906">
          <Address z:Id="1907">
            <ArrayCount>16</ArrayCount>
            <Location>6514</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1908" z:Size="16">
            <d3p1:anyType z:Id="1909" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
            <d3p1:anyType z:Ref="1909" i:nil="true" />
          </DefaultValues>
          <Id>2978</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2982</d3p1:Key>
        <d3p1:Value z:Id="1910">
          <Address z:Ref="807" i:nil="true" />
          <DefaultValues z:Id="1911" z:Size="1">
            <d3p1:anyType z:Ref="495" i:nil="true" />
          </DefaultValues>
          <Id>2982</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3243</d3p1:Key>
        <d3p1:Value z:Id="1912">
          <Address z:Id="1913">
            <ArrayCount>1</ArrayCount>
            <Location>6530</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1914" z:Size="1">
            <d3p1:anyType z:Id="1915" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3243</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2997</d3p1:Key>
        <d3p1:Value z:Id="1916">
          <Address z:Ref="810" i:nil="true" />
          <DefaultValues z:Id="1917" z:Size="1">
            <d3p1:anyType z:Ref="500" i:nil="true" />
          </DefaultValues>
          <Id>2997</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3246</d3p1:Key>
        <d3p1:Value z:Id="1918">
          <Address z:Id="1919">
            <ArrayCount>1</ArrayCount>
            <Location>6532</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1920" z:Size="1">
            <d3p1:anyType z:Id="1921" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3246</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3000</d3p1:Key>
        <d3p1:Value z:Id="1922">
          <Address z:Ref="813" i:nil="true" />
          <DefaultValues z:Id="1923" z:Size="1">
            <d3p1:anyType z:Ref="505" i:nil="true" />
          </DefaultValues>
          <Id>3000</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3249</d3p1:Key>
        <d3p1:Value z:Id="1924">
          <Address z:Ref="816" i:nil="true" />
          <DefaultValues z:Id="1925" z:Size="1">
            <d3p1:anyType z:Ref="509" i:nil="true" />
          </DefaultValues>
          <Id>3249</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3006</d3p1:Key>
        <d3p1:Value z:Id="1926">
          <Address z:Ref="819" i:nil="true" />
          <DefaultValues z:Id="1927" z:Size="1">
            <d3p1:anyType z:Ref="513" i:nil="true" />
          </DefaultValues>
          <Id>3006</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3009</d3p1:Key>
        <d3p1:Value z:Id="1928">
          <Address z:Ref="822" i:nil="true" />
          <DefaultValues z:Id="1929" z:Size="1">
            <d3p1:anyType z:Ref="517" i:nil="true" />
          </DefaultValues>
          <Id>3009</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3012</d3p1:Key>
        <d3p1:Value z:Id="1930">
          <Address z:Ref="825" i:nil="true" />
          <DefaultValues z:Id="1931" z:Size="1">
            <d3p1:anyType z:Ref="521" i:nil="true" />
          </DefaultValues>
          <Id>3012</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3015</d3p1:Key>
        <d3p1:Value z:Id="1932">
          <Address z:Ref="828" i:nil="true" />
          <DefaultValues z:Id="1933" z:Size="1">
            <d3p1:anyType z:Ref="525" i:nil="true" />
          </DefaultValues>
          <Id>3015</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3018</d3p1:Key>
        <d3p1:Value z:Id="1934">
          <Address z:Ref="831" i:nil="true" />
          <DefaultValues z:Id="1935" z:Size="1">
            <d3p1:anyType z:Ref="529" i:nil="true" />
          </DefaultValues>
          <Id>3018</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3021</d3p1:Key>
        <d3p1:Value z:Id="1936">
          <Address z:Ref="834" i:nil="true" />
          <DefaultValues z:Id="1937" z:Size="1">
            <d3p1:anyType z:Ref="533" i:nil="true" />
          </DefaultValues>
          <Id>3021</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3263</d3p1:Key>
        <d3p1:Value z:Id="1938">
          <Address z:Ref="807" i:nil="true" />
          <DefaultValues z:Id="1939" z:Size="1">
            <d3p1:anyType z:Ref="495" i:nil="true" />
          </DefaultValues>
          <Id>3263</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3256</d3p1:Key>
        <d3p1:Value z:Id="1940">
          <Address z:Ref="690" i:nil="true" />
          <DefaultValues z:Id="1941" z:Size="1">
            <d3p1:anyType z:Ref="249" i:nil="true" />
          </DefaultValues>
          <Id>3256</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3260</d3p1:Key>
        <d3p1:Value z:Id="1942">
          <Address z:Id="1943">
            <ArrayCount>1</ArrayCount>
            <Location>6534</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1944" z:Size="1">
            <d3p1:anyType z:Id="1945" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3260</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3213</d3p1:Key>
        <d3p1:Value z:Id="1946">
          <Address z:Ref="858" i:nil="true" />
          <DefaultValues z:Id="1947" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3213</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3183</d3p1:Key>
        <d3p1:Value z:Id="1948">
          <Address z:Ref="834" i:nil="true" />
          <DefaultValues z:Id="1949" z:Size="1">
            <d3p1:anyType z:Ref="533" i:nil="true" />
          </DefaultValues>
          <Id>3183</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3169</d3p1:Key>
        <d3p1:Value z:Id="1950">
          <Address z:Ref="849" i:nil="true" />
          <DefaultValues z:Id="1951" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3169</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3177</d3p1:Key>
        <d3p1:Value z:Id="1952">
          <Address z:Id="1953">
            <ArrayCount>1</ArrayCount>
            <Location>102</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1954" z:Size="1">
            <d3p1:anyType z:Id="1955" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3177</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3180</d3p1:Key>
        <d3p1:Value z:Id="1956">
          <Address z:Ref="831" i:nil="true" />
          <DefaultValues z:Id="1957" z:Size="1">
            <d3p1:anyType z:Ref="529" i:nil="true" />
          </DefaultValues>
          <Id>3180</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3173</d3p1:Key>
        <d3p1:Value z:Id="1958">
          <Address z:Id="1959">
            <ArrayCount>1</ArrayCount>
            <Location>103</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1960" z:Size="1">
            <d3p1:anyType z:Id="1961" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3173</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3201</d3p1:Key>
        <d3p1:Value z:Id="1962">
          <Address z:Id="1963">
            <ArrayCount>1</ArrayCount>
            <Location>104</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1964" z:Size="1">
            <d3p1:anyType z:Id="1965" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3201</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3210</d3p1:Key>
        <d3p1:Value z:Id="1966">
          <Address z:Ref="858" i:nil="true" />
          <DefaultValues z:Id="1967" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3210</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3166</d3p1:Key>
        <d3p1:Value z:Id="1968">
          <Address z:Ref="828" i:nil="true" />
          <DefaultValues z:Id="1969" z:Size="1">
            <d3p1:anyType z:Ref="525" i:nil="true" />
          </DefaultValues>
          <Id>3166</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3152</d3p1:Key>
        <d3p1:Value z:Id="1970">
          <Address z:Ref="849" i:nil="true" />
          <DefaultValues z:Id="1971" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3152</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3160</d3p1:Key>
        <d3p1:Value z:Id="1972">
          <Address z:Id="1973">
            <ArrayCount>1</ArrayCount>
            <Location>105</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1974" z:Size="1">
            <d3p1:anyType z:Id="1975" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3160</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3163</d3p1:Key>
        <d3p1:Value z:Id="1976">
          <Address z:Ref="825" i:nil="true" />
          <DefaultValues z:Id="1977" z:Size="1">
            <d3p1:anyType z:Ref="521" i:nil="true" />
          </DefaultValues>
          <Id>3163</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3156</d3p1:Key>
        <d3p1:Value z:Id="1978">
          <Address z:Id="1979">
            <ArrayCount>1</ArrayCount>
            <Location>106</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1980" z:Size="1">
            <d3p1:anyType z:Id="1981" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3156</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3195</d3p1:Key>
        <d3p1:Value z:Id="1982">
          <Address z:Id="1983">
            <ArrayCount>1</ArrayCount>
            <Location>107</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1984" z:Size="1">
            <d3p1:anyType z:Id="1985" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3195</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3207</d3p1:Key>
        <d3p1:Value z:Id="1986">
          <Address z:Ref="858" i:nil="true" />
          <DefaultValues z:Id="1987" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3207</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3149</d3p1:Key>
        <d3p1:Value z:Id="1988">
          <Address z:Ref="822" i:nil="true" />
          <DefaultValues z:Id="1989" z:Size="1">
            <d3p1:anyType z:Ref="517" i:nil="true" />
          </DefaultValues>
          <Id>3149</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3132</d3p1:Key>
        <d3p1:Value z:Id="1990">
          <Address z:Ref="849" i:nil="true" />
          <DefaultValues z:Id="1991" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3140</d3p1:Key>
        <d3p1:Value z:Id="1992">
          <Address z:Id="1993">
            <ArrayCount>1</ArrayCount>
            <Location>108</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1994" z:Size="1">
            <d3p1:anyType z:Id="1995" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3140</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3143</d3p1:Key>
        <d3p1:Value z:Id="1996">
          <Address z:Ref="819" i:nil="true" />
          <DefaultValues z:Id="1997" z:Size="1">
            <d3p1:anyType z:Ref="513" i:nil="true" />
          </DefaultValues>
          <Id>3143</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3136</d3p1:Key>
        <d3p1:Value z:Id="1998">
          <Address z:Id="1999">
            <ArrayCount>1</ArrayCount>
            <Location>109</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2000" z:Size="1">
            <d3p1:anyType z:Id="2001" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3189</d3p1:Key>
        <d3p1:Value z:Id="2002">
          <Address z:Id="2003">
            <ArrayCount>1</ArrayCount>
            <Location>110</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2004" z:Size="1">
            <d3p1:anyType z:Id="2005" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3189</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3216</d3p1:Key>
        <d3p1:Value z:Id="2006">
          <Address z:Id="2007">
            <ArrayCount>1</ArrayCount>
            <Location>111</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2008" z:Size="1">
            <d3p1:anyType z:Id="2009" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3216</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3229</d3p1:Key>
        <d3p1:Value z:Id="2010">
          <Address z:Id="2011">
            <ArrayCount>1</ArrayCount>
            <Location>6536</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2012" z:Size="1">
            <d3p1:anyType z:Id="2013" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3229</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3226</d3p1:Key>
        <d3p1:Value z:Id="2014">
          <Address z:Ref="813" i:nil="true" />
          <DefaultValues z:Id="2015" z:Size="1">
            <d3p1:anyType z:Ref="505" i:nil="true" />
          </DefaultValues>
          <Id>3226</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3223</d3p1:Key>
        <d3p1:Value z:Id="2016">
          <Address z:Ref="810" i:nil="true" />
          <DefaultValues z:Id="2017" z:Size="1">
            <d3p1:anyType z:Ref="500" i:nil="true" />
          </DefaultValues>
          <Id>3223</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3237</d3p1:Key>
        <d3p1:Value z:Id="2018">
          <Address z:Id="2019">
            <ArrayCount>1</ArrayCount>
            <Location>6538</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="2020" z:Size="1">
            <d3p1:anyType z:Id="2021" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3237</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3233</d3p1:Key>
        <d3p1:Value z:Id="2022">
          <Address z:Ref="861" i:nil="true" />
          <DefaultValues z:Id="2023" z:Size="1">
            <d3p1:anyType z:Ref="573" i:nil="true" />
          </DefaultValues>
          <Id>3233</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3253</d3p1:Key>
        <d3p1:Value z:Id="2024">
          <Address z:Id="2025">
            <ArrayCount>1</ArrayCount>
            <Location>6540</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="2026" z:Size="1">
            <d3p1:anyType z:Id="2027" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3253</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3266</d3p1:Key>
        <d3p1:Value z:Id="2028">
          <Address z:Id="2029">
            <ArrayCount>1</ArrayCount>
            <Location>6542</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="2030" z:Size="1">
            <d3p1:anyType z:Id="2031" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>3266</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3273</d3p1:Key>
        <d3p1:Value z:Id="2032">
          <Address z:Ref="864" i:nil="true" />
          <DefaultValues z:Id="2033" z:Size="1">
            <d3p1:anyType z:Ref="577" i:nil="true" />
          </DefaultValues>
          <Id>3273</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3032</d3p1:Key>
        <d3p1:Value z:Id="2034">
          <Address z:Id="2035">
            <ArrayCount>1</ArrayCount>
            <Location>6546</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="2036" z:Size="1">
            <d3p1:anyType z:Id="2037" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>3032</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3033</d3p1:Key>
        <d3p1:Value z:Id="2038">
          <Address z:Id="2039">
            <ArrayCount>1</ArrayCount>
            <Location>6550</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2040" z:Size="1">
            <d3p1:anyType z:Id="2041" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3033</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3034</d3p1:Key>
        <d3p1:Value z:Id="2042">
          <Address z:Id="2043">
            <ArrayCount>1</ArrayCount>
            <Location>6552</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2044" z:Size="1">
            <d3p1:anyType z:Id="2045" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3034</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3035</d3p1:Key>
        <d3p1:Value z:Id="2046">
          <Address z:Id="2047">
            <ArrayCount>1</ArrayCount>
            <Location>6554</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2048" z:Size="1">
            <d3p1:anyType z:Id="2049" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3035</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3036</d3p1:Key>
        <d3p1:Value z:Id="2050">
          <Address z:Id="2051">
            <ArrayCount>1</ArrayCount>
            <Location>6556</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2052" z:Size="1">
            <d3p1:anyType z:Id="2053" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3036</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3040</d3p1:Key>
        <d3p1:Value z:Id="2054">
          <Address z:Ref="846" i:nil="true" />
          <DefaultValues z:Id="2055" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3040</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3099</d3p1:Key>
        <d3p1:Value z:Id="2056">
          <Address z:Ref="846" i:nil="true" />
          <DefaultValues z:Id="2057" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3099</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3024</d3p1:Key>
        <d3p1:Value z:Id="2058">
          <Address z:Ref="837" i:nil="true" />
          <DefaultValues z:Id="2059" z:Size="1">
            <d3p1:anyType z:Ref="538" i:nil="true" />
          </DefaultValues>
          <Id>3024</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3092</d3p1:Key>
        <d3p1:Value z:Id="2060">
          <Address z:Id="2061">
            <ArrayCount>7</ArrayCount>
            <Location>112</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2062" z:Size="7">
            <d3p1:anyType z:Id="2063" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="2063" i:nil="true" />
            <d3p1:anyType z:Ref="2063" i:nil="true" />
            <d3p1:anyType z:Ref="2063" i:nil="true" />
            <d3p1:anyType z:Ref="2063" i:nil="true" />
            <d3p1:anyType z:Ref="2063" i:nil="true" />
            <d3p1:anyType z:Ref="2063" i:nil="true" />
          </DefaultValues>
          <Id>3092</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3096</d3p1:Key>
        <d3p1:Value z:Id="2064">
          <Address z:Id="2065">
            <ArrayCount>1</ArrayCount>
            <Location>119</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2066" z:Size="1">
            <d3p1:anyType z:Id="2067" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3096</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3121</d3p1:Key>
        <d3p1:Value z:Id="2068">
          <Address z:Id="2069">
            <ArrayCount>1</ArrayCount>
            <Location>6558</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="2070" z:Size="1">
            <d3p1:anyType z:Id="2071" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>3121</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3122</d3p1:Key>
        <d3p1:Value z:Id="2072">
          <Address z:Id="2073">
            <ArrayCount>1</ArrayCount>
            <Location>6562</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2074" z:Size="1">
            <d3p1:anyType z:Id="2075" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3122</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3123</d3p1:Key>
        <d3p1:Value z:Id="2076">
          <Address z:Id="2077">
            <ArrayCount>1</ArrayCount>
            <Location>6564</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2078" z:Size="1">
            <d3p1:anyType z:Id="2079" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3123</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3124</d3p1:Key>
        <d3p1:Value z:Id="2080">
          <Address z:Id="2081">
            <ArrayCount>1</ArrayCount>
            <Location>6566</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2082" z:Size="1">
            <d3p1:anyType z:Id="2083" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3124</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3125</d3p1:Key>
        <d3p1:Value z:Id="2084">
          <Address z:Id="2085">
            <ArrayCount>1</ArrayCount>
            <Location>6568</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2086" z:Size="1">
            <d3p1:anyType z:Id="2087" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3129</d3p1:Key>
        <d3p1:Value z:Id="2088">
          <Address z:Ref="849" i:nil="true" />
          <DefaultValues z:Id="2089" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3288</d3p1:Key>
        <d3p1:Value z:Id="2090">
          <Address z:Ref="846" i:nil="true" />
          <DefaultValues z:Id="2091" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3288</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3298</d3p1:Key>
        <d3p1:Value z:Id="2092">
          <Address z:Id="2093">
            <ArrayCount>1</ArrayCount>
            <Location>6570</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2094" z:Size="1">
            <d3p1:anyType z:Id="2095" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3298</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3291</d3p1:Key>
        <d3p1:Value z:Id="2096">
          <Address z:Id="2097">
            <ArrayCount>1</ArrayCount>
            <Location>6572</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="2098" z:Size="1">
            <d3p1:anyType z:Id="2099" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3291</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3276</d3p1:Key>
        <d3p1:Value z:Id="2100">
          <Address z:Ref="837" i:nil="true" />
          <DefaultValues z:Id="2101" z:Size="1">
            <d3p1:anyType z:Ref="538" i:nil="true" />
          </DefaultValues>
          <Id>3276</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3279</d3p1:Key>
        <d3p1:Value z:Id="2102">
          <Address z:Id="2103">
            <ArrayCount>1</ArrayCount>
            <Location>6576</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="2104" z:Size="1">
            <d3p1:anyType z:Id="2105" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3279</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3284</d3p1:Key>
        <d3p1:Value z:Id="2106">
          <Address z:Id="2107">
            <ArrayCount>1</ArrayCount>
            <Location>6580</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="2108" z:Size="1">
            <d3p1:anyType z:Id="2109" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3284</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3285</d3p1:Key>
        <d3p1:Value z:Id="2110">
          <Address z:Id="2111">
            <ArrayCount>1</ArrayCount>
            <Location>120</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2112" z:Size="1">
            <d3p1:anyType z:Id="2113" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3285</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3294</d3p1:Key>
        <d3p1:Value z:Id="2114">
          <Address z:Id="2115">
            <ArrayCount>1</ArrayCount>
            <Location>121</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2116" z:Size="1">
            <d3p1:anyType z:Id="2117" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3294</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3192</d3p1:Key>
        <d3p1:Value z:Id="2118">
          <Address z:Ref="858" i:nil="true" />
          <DefaultValues z:Id="2119" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3192</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3109</d3p1:Key>
        <d3p1:Value z:Id="2120">
          <Address z:Ref="846" i:nil="true" />
          <DefaultValues z:Id="2121" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3027</d3p1:Key>
        <d3p1:Value z:Id="2122">
          <Address z:Ref="840" i:nil="true" />
          <DefaultValues z:Id="2123" z:Size="1">
            <d3p1:anyType z:Ref="543" i:nil="true" />
          </DefaultValues>
          <Id>3027</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3102</d3p1:Key>
        <d3p1:Value z:Id="2124">
          <Address z:Id="2125">
            <ArrayCount>7</ArrayCount>
            <Location>122</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2126" z:Size="7">
            <d3p1:anyType z:Id="2127" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="2127" i:nil="true" />
            <d3p1:anyType z:Ref="2127" i:nil="true" />
            <d3p1:anyType z:Ref="2127" i:nil="true" />
            <d3p1:anyType z:Ref="2127" i:nil="true" />
            <d3p1:anyType z:Ref="2127" i:nil="true" />
            <d3p1:anyType z:Ref="2127" i:nil="true" />
          </DefaultValues>
          <Id>3102</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3106</d3p1:Key>
        <d3p1:Value z:Id="2128">
          <Address z:Id="2129">
            <ArrayCount>1</ArrayCount>
            <Location>129</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2130" z:Size="1">
            <d3p1:anyType z:Id="2131" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3106</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3198</d3p1:Key>
        <d3p1:Value z:Id="2132">
          <Address z:Ref="852" i:nil="true" />
          <DefaultValues z:Id="2133" z:Size="1">
            <d3p1:anyType z:Ref="561" i:nil="true" />
          </DefaultValues>
          <Id>3198</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3119</d3p1:Key>
        <d3p1:Value z:Id="2134">
          <Address z:Ref="846" i:nil="true" />
          <DefaultValues z:Id="2135" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3119</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3030</d3p1:Key>
        <d3p1:Value z:Id="2136">
          <Address z:Ref="843" i:nil="true" />
          <DefaultValues z:Id="2137" z:Size="1">
            <d3p1:anyType z:Ref="548" i:nil="true" />
          </DefaultValues>
          <Id>3030</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3112</d3p1:Key>
        <d3p1:Value z:Id="2138">
          <Address z:Id="2139">
            <ArrayCount>7</ArrayCount>
            <Location>130</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2140" z:Size="7">
            <d3p1:anyType z:Id="2141" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="2141" i:nil="true" />
            <d3p1:anyType z:Ref="2141" i:nil="true" />
            <d3p1:anyType z:Ref="2141" i:nil="true" />
            <d3p1:anyType z:Ref="2141" i:nil="true" />
            <d3p1:anyType z:Ref="2141" i:nil="true" />
            <d3p1:anyType z:Ref="2141" i:nil="true" />
          </DefaultValues>
          <Id>3112</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3116</d3p1:Key>
        <d3p1:Value z:Id="2142">
          <Address z:Id="2143">
            <ArrayCount>1</ArrayCount>
            <Location>137</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2144" z:Size="1">
            <d3p1:anyType z:Id="2145" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3116</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3204</d3p1:Key>
        <d3p1:Value z:Id="2146">
          <Address z:Ref="855" i:nil="true" />
          <DefaultValues z:Id="2147" z:Size="1">
            <d3p1:anyType z:Ref="565" i:nil="true" />
          </DefaultValues>
          <Id>3204</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
    </Items>
  </MemoryMapStore>
  <MinimalIdeVersionForSharedLibrary xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="2148">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>0</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </MinimalIdeVersionForSharedLibrary>
  <Name z:Id="2149">Отопленок</Name>
  <PawnConfig z:Id="2150">
    <CompilerVersion>Version2</CompilerVersion>
    <MaxExecTime>500</MaxExecTime>
    <Mode>FreeRun</Mode>
    <Periodic>300</Periodic>
    <StackSize>1024</StackSize>
  </PawnConfig>
  <ProgramPartsCollection xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="2151" z:Size="8">
    <d2p1:anyType z:Id="2152" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2153" z:Size="3">
        <d2p1:anyType z:Id="2154" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2155" z:Size="6">
            <FBDConnector z:Id="2156">
              <EndFBDPort z:Id="2157" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2158" z:Size="1">
                  <FBDPortExtSettings z:Id="2159">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2160" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2161">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2162" i:type="OutputFBDPort">
                <Alias z:Id="2163">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>108</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2164" z:Size="1">
                  <FBDPortExtSettings z:Id="2165">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2160" i:nil="true" />
                <VariableName z:Id="2166">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2167">
              <EndFBDPort z:Id="2168" i:type="InputFBDPort">
                <Alias z:Id="2169">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>103</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2170" z:Size="1">
                  <FBDPortExtSettings z:Id="2171">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2172" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2173">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2174" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>115</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2175" z:Size="1">
                  <FBDPortExtSettings z:Id="2176">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2172" i:nil="true" />
                <VariableName z:Id="2177">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2178">
              <EndFBDPort z:Id="2179" i:type="InputFBDPort">
                <Alias z:Id="2180">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2181" z:Size="1">
                  <FBDPortExtSettings z:Id="2182">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2183" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2184">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2185" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>118</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2186" z:Size="1">
                  <FBDPortExtSettings z:Id="2187">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2183" i:nil="true" />
                <VariableName z:Ref="2177" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2188">
              <EndFBDPort z:Id="2189" i:type="InputFBDPort">
                <Alias z:Id="2190">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1916</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2191" z:Size="1">
                  <FBDPortExtSettings z:Id="2192">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2183" i:nil="true" />
                <VariableName z:Id="2193">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2185" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2194">
              <EndFBDPort z:Id="2195" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1925</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2196" z:Size="1">
                  <FBDPortExtSettings z:Id="2197">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2198" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2199">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2200" i:type="OutputFBDPort">
                <Alias z:Id="2201">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1917</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2202" z:Size="1">
                  <FBDPortExtSettings z:Id="2203">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2198" i:nil="true" />
                <VariableName z:Id="2204">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2205">
              <EndFBDPort z:Id="2206" i:type="InputFBDPort">
                <Alias z:Id="2207">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1912</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2208" z:Size="1">
                  <FBDPortExtSettings z:Id="2209">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2210" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2211">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2212" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1922</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2213" z:Size="1">
                  <FBDPortExtSettings z:Id="2214">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2210" i:nil="true" />
                <VariableName z:Id="2215">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2216" z:Size="9">
            <FBDItem z:Id="2217" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>116</Id>
              <InputPortsCollection z:Id="2218" z:Size="1">
                <FBDPort z:Id="2219" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>117</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2220" z:Size="1">
                    <FBDPortExtSettings z:Id="2221">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2161" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2222" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="2223">Tag</Name>
              <OutputPortsCollection z:Id="2224" z:Size="1">
                <FBDPort z:Ref="2185" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2225">_</Prefix>
              <SecondName z:Ref="2223" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="230" i:nil="true" />
              <InputFBDPort z:Ref="2219" i:nil="true" />
              <OutputFBDPort z:Ref="2185" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2226" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>113</Id>
              <InputPortsCollection z:Id="2227" z:Size="1">
                <FBDPort z:Id="2228" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2229" z:Size="1">
                    <FBDPortExtSettings z:Id="2230">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2161" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2231" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="2223" i:nil="true" />
              <OutputPortsCollection z:Id="2232" z:Size="1">
                <FBDPort z:Ref="2174" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2225" i:nil="true" />
              <SecondName z:Ref="2223" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="226" i:nil="true" />
              <InputFBDPort z:Ref="2228" i:nil="true" />
              <OutputFBDPort z:Ref="2174" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2233" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2234">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>102</Id>
              <InputPortsCollection z:Id="2235" z:Size="5">
                <FBDPort z:Ref="2168" i:nil="true" />
                <FBDPort z:Id="2236" i:type="InputFBDPort">
                  <Alias z:Id="2237">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>104</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2238" z:Size="1">
                    <FBDPortExtSettings z:Id="2239">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2240">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="2241" i:type="InputFBDPort">
                  <Alias z:Id="2242">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2243" z:Size="1">
                    <FBDPortExtSettings z:Id="2244">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2245">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="2246" i:type="InputFBDPort">
                  <Alias z:Id="2247">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2248" z:Size="1">
                    <FBDPortExtSettings z:Id="2249">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2250" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2251" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2252">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2179" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2253" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3690</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Id="2254">SerialPortParam</Name>
              <OutputPortsCollection z:Id="2255" z:Size="1">
                <FBDPort z:Ref="2162" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2256">YART</Prefix>
              <SecondName z:Ref="2254" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Id="2257">// Ограничение на входящие значение с применением значения по умолчанию, если это необходимо


if(Port &lt; 1 || Port &gt; 3) Port = 2;					// значение по умолчанию: 2


//if(DataBits &lt; 0 || DataBits &gt; 3) DataBits = 0;	// параметр временно не используется; значение по умолчанию: 0 


DataBits = 0;										// принудительная установка в 0


if(Parity &lt; 0 || Parity &gt; 2) Parity = 0;			// значение по умолчанию: 0


if(StopBits &lt; 0 || StopBits &gt; 2) StopBits = 0;		// значение по умолчанию: 0


if(Baudrate &lt; 1) Baudrate = 4;


if(Baudrate &gt; 8) Baudrate = 8;						// принудительная установка при превышении допустимой скорости





// Допустимые значения DataBits:


// 0 = 8


// 1 = 7


// 2 = 6


// 3 = 5





// Допустимые значения Parity:


// 0 = N


// 1 = O


// 2 = E


// 3 = M


// 4 = S





// Допустимые значения StopBits:


// 0 = 1


// 1 = 2


// 2 = 1.5





// Допустимые значения Baudrate:


// 1 =   1200


// 2 =   2400


// 3 =   4800


// 4 =   9600


// 5 =  19200


// 6 =  38400


// 7 =  57600


// 8 = 115200





// Формирование результата


PortPar = (Baudrate &lt;&lt; 12) | (StopBits &lt;&lt; 10) | (Parity &lt;&lt; 7) | (DataBits &lt;&lt; 4) | Port;</Code>
            </FBDItem>
            <FBDItem z:Id="2258" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>110</Id>
              <InputPortsCollection z:Id="2259" z:Size="1">
                <FBDPort z:Ref="2157" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2260" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3850</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="2223" i:nil="true" />
              <OutputPortsCollection z:Id="2261" z:Size="1">
                <FBDPort z:Id="2262" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2263" z:Size="1">
                    <FBDPortExtSettings z:Id="2264">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2265" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2177" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2225" i:nil="true" />
              <SecondName z:Ref="2223" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="2157" i:nil="true" />
              <OutputFBDPort z:Ref="2262" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2266" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1920</Id>
              <InputPortsCollection z:Id="2267" z:Size="1">
                <FBDPort z:Id="2268" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1921</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2269" z:Size="1">
                    <FBDPortExtSettings z:Id="2270">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2199" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2271" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Id="2272">Tag</Name>
              <OutputPortsCollection z:Id="2273" z:Size="1">
                <FBDPort z:Ref="2212" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2274">_</Prefix>
              <SecondName z:Ref="2272" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="354" i:nil="true" />
              <InputFBDPort z:Ref="2268" i:nil="true" />
              <OutputFBDPort z:Ref="2212" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2275" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2276">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>1911</Id>
              <InputPortsCollection z:Id="2277" z:Size="5">
                <FBDPort z:Ref="2206" i:nil="true" />
                <FBDPort z:Id="2278" i:type="InputFBDPort">
                  <Alias z:Id="2279">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1913</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2280" z:Size="1">
                    <FBDPortExtSettings z:Id="2281">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2282">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="2283" i:type="InputFBDPort">
                  <Alias z:Id="2284">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1914</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2285" z:Size="1">
                    <FBDPortExtSettings z:Id="2286">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2287">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="2288" i:type="InputFBDPort">
                  <Alias z:Id="2289">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1915</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2290" z:Size="1">
                    <FBDPortExtSettings z:Id="2291">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2292">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2189" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2293" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3720</d8p1:_x>
                <d8p1:_y>3950</d8p1:_y>
              </Location>
              <Name z:Id="2294">SerialPortParam</Name>
              <OutputPortsCollection z:Id="2295" z:Size="1">
                <FBDPort z:Ref="2200" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2296">YART</Prefix>
              <SecondName z:Ref="2294" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Ref="2257" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2297" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1924</Id>
              <InputPortsCollection z:Id="2298" z:Size="1">
                <FBDPort z:Ref="2195" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2299" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Ref="2272" i:nil="true" />
              <OutputPortsCollection z:Id="2300" z:Size="1">
                <FBDPort z:Id="2301" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1926</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2302" z:Size="1">
                    <FBDPortExtSettings z:Id="2303">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2304" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2215" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2274" i:nil="true" />
              <SecondName z:Ref="2272" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="358" i:nil="true" />
              <InputFBDPort z:Ref="2195" i:nil="true" />
              <OutputFBDPort z:Ref="2301" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2305" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>119</Id>
              <InputPortsCollection z:Id="2306" z:Size="0" />
              <InternalPortsCollection z:Id="2307" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="2308">comment</Name>
              <OutputPortsCollection z:Id="2309" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2225" i:nil="true" />
              <SecondName z:Id="2310">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2311">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</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
            <FBDItem z:Id="2312" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1918</Id>
              <InputPortsCollection z:Id="2313" z:Size="0" />
              <InternalPortsCollection z:Id="2314" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Id="2315">comment</Name>
              <OutputPortsCollection z:Id="2316" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2317">_</Prefix>
              <SecondName z:Id="2318">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2319">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</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="2320">RS485_Setup</Name>
          <Parent z:Ref="2152" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>1</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="2321" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2322" z:Size="4">
            <FBDConnector z:Id="2323">
              <EndFBDPort z:Id="2324" i:type="InputFBDPort">
                <Alias z:Id="2325">Write</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1198</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2326" z:Size="1">
                  <FBDPortExtSettings z:Id="2327">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2328" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2329">write</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2330" i:type="OutputFBDPort">
                <Alias z:Id="2331">Выход 5254</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1191</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2332" z:Size="1">
                  <FBDPortExtSettings z:Id="2333">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2328" i:nil="true" />
                <VariableName z:Id="2334">PULSE</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2335">
              <EndFBDPort z:Id="2336" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1197</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2337" z:Size="1">
                  <FBDPortExtSettings z:Id="2338">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2339">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2340" i:type="OutputFBDPort">
                <Alias z:Id="2341"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1202</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2342" z:Size="1">
                  <FBDPortExtSettings z:Id="2343">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2344" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2345" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="2346">out_180</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2347">
              <EndFBDPort z:Id="2348" i:type="InputFBDPort">
                <Alias z:Id="2349">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1189</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2350" z:Size="1">
                  <FBDPortExtSettings z:Id="2351">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2352">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2353" i:type="OutputFBDPort">
                <Alias z:Id="2354"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1187</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2355" z:Size="1">
                  <FBDPortExtSettings z:Id="2356">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2357" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2358" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2359">out_161</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2360">
              <EndFBDPort z:Id="2361" i:type="InputFBDPort">
                <Alias z:Id="2362">Вход 5252</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1190</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2363" z:Size="1">
                  <FBDPortExtSettings z:Id="2364">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2365" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2366">EN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2367" i:type="OutputFBDPort">
                <Alias z:Id="2368">Выход 117</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1182</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2369" z:Size="1">
                  <FBDPortExtSettings z:Id="2370">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2365" i:nil="true" />
                <VariableName z:Id="2371">Ok</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2372" z:Size="6">
            <FBDItem z:Id="2373" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1201</Id>
              <InputPortsCollection z:Id="2374" z:Size="0" />
              <InternalPortsCollection z:Id="2375" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3820</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2376" z:Size="1">
                <FBDPort z:Ref="2340" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2377">_</Prefix>
              <SecondName z:Id="2378">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2344" i:nil="true" />
              <OutputFBDPort z:Ref="2340" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2379" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1186</Id>
              <InputPortsCollection z:Id="2380" z:Size="0" />
              <InternalPortsCollection z:Id="2381" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2382" z:Size="1">
                <FBDPort z:Ref="2353" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2383">_</Prefix>
              <SecondName z:Id="2384">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2357" i:nil="true" />
              <OutputFBDPort z:Ref="2353" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2385" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2386">Статус подключения к серверу телеметрии</Description>
              <HelpID>714</HelpID>
              <Id>1180</Id>
              <InputPortsCollection z:Id="2387" z:Size="0" />
              <InternalPortsCollection z:Id="2388" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="2389">Telemetry State</Name>
              <OutputPortsCollection z:Id="2390" z:Size="5">
                <FBDPort z:Id="2391" i:type="OutputFBDPort">
                  <Alias z:Id="2392">Выход 112</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1181</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2393" z:Size="1">
                    <FBDPortExtSettings z:Id="2394">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2395" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2396">Init</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2367" i:nil="true" />
                <FBDPort z:Id="2397" i:type="OutputFBDPort">
                  <Alias z:Id="2398">Выход 113</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1183</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2399" z:Size="1">
                    <FBDPortExtSettings z:Id="2400">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2401" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2402">Error</VariableName>
                </FBDPort>
                <FBDPort z:Id="2403" i:type="OutputFBDPort">
                  <Alias z:Id="2404">Выход 15051</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1184</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2405" z:Size="1">
                    <FBDPortExtSettings z:Id="2406">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2407" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2408">LastErr</VariableName>
                </FBDPort>
                <FBDPort z:Id="2409" i:type="OutputFBDPort">
                  <Alias z:Id="2410">Выход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1185</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2411" z:Size="1">
                    <FBDPortExtSettings z:Id="2412">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2413" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2414">State</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2415">YART</Prefix>
              <SecondName z:Id="2416">TeleState</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ad2295d-eb4d-4b18-9a03-4145c7b12a45</SpecificationId>
              <Code z:Id="2417">new state_tmp = get_short(MQTT_STATE);


State = state_tmp;


Init = state_tmp == 0;


Error= state_tmp != 0 &amp;&amp; state_tmp!=6;


Ok = state_tmp == 6;





/*


Last state (addr 366)


enum {


  MQTT_LST_INIT=0,


  MQTT_LST_WRONG_MODE_PTR,


  MQTT_LST_WRONG_MODE_CONTENTS,


  MQTT_LST_INCORRECT_MODE,


  MQTT_LST_CANT_CONNECT_IP,


  MQTT_LST_CANT_AUTHORIZE,


  MQTT_LST_CANT_SUBSCRIBE,


  MQTT_LST_DESCRIPTION_ERROR,


  MQTT_LST_RUN_TIME_ERROR,


  MQTT_LST_USER_RESET,


  MQTT_LST_PUBLISH_ERROR


};


*/





LastErr = get_short(MQTT_LAST_ERR);</Code>
            </FBDItem>
            <FBDItem z:Id="2418" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2419">Генерация импульсов с заданной периодичностью</Description>
              <HelpID>16</HelpID>
              <Id>1188</Id>
              <InputPortsCollection z:Id="2420" z:Size="2">
                <FBDPort z:Ref="2348" i:nil="true" />
                <FBDPort z:Ref="2361" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2421" z:Size="1">
                <FBDPort z:Id="2422" i:type="InternalFBDPort">
                  <Alias z:Id="2423">Внутренняя 5256</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1194</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="2424" z:Size="1">
                    <FBDPortExtSettings z:Id="2425">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2426">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="2427">PULSE GENERATOR</Name>
              <OutputPortsCollection z:Id="2428" z:Size="3">
                <FBDPort z:Ref="2330" i:nil="true" />
                <FBDPort z:Id="2429" i:type="OutputFBDPort">
                  <Alias z:Id="2430">ELAPSED</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1192</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2431" z:Size="1">
                    <FBDPortExtSettings z:Id="2432">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="2433" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2434">COUNTER</VariableName>
                </FBDPort>
                <FBDPort z:Id="2435" i:type="OutputFBDPort">
                  <Alias z:Id="2436">Выход 5255</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1193</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2437" z:Size="1">
                    <FBDPortExtSettings z:Id="2438">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2439" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2440">ENO</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2441">YART</Prefix>
              <SecondName z:Id="2442">PULSEGENERATOR</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3c324fa4-d4d4-48e7-95af-5ff85ab56d15</SpecificationId>
              <Code z:Id="2443">//#PULSE GENERATOR (Генератор импульсов)


if(!EN){


	COUNTER = 0; 


	tf = 0;


}else{


	if(COUNTER &gt;= PERIOD){


		PULSE = true;


		COUNTER -= PERIOD;


	}else{


		PULSE = false;


	}


	YARTAddScanTask(COUNTER, tf);


}


ENO = EN;</Code>
            </FBDItem>
            <FBDItem z:Id="2444" i:type="SetpointFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1196</Id>
              <InputPortsCollection z:Id="2445" z:Size="2">
                <FBDPort z:Ref="2336" i:nil="true" />
                <FBDPort z:Ref="2324" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2446" z:Size="1">
                <FBDPort z:Id="2447" i:type="InternalFBDPort">
                  <Alias z:Id="2448">writeStatus</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1200</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="2449" z:Size="1">
                    <FBDPortExtSettings z:Id="2450">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2448" i:nil="true" />
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="2451">Tag</Name>
              <OutputPortsCollection z:Id="2452" z:Size="1">
                <FBDPort z:Id="2453" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1199</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2454" z:Size="1">
                    <FBDPortExtSettings z:Id="2455">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2456" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2457">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2458">_</Prefix>
              <SecondName z:Id="2459">__00__WriteSetpoint</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>59d31f4d-66d3-4778-a3c2-9315c0b02c9b</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="308" i:nil="true" />
              <InputFBDPort z:Ref="2336" i:nil="true" />
              <OutputFBDPort z:Ref="2453" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
              <InputWriteFBDPort z:Ref="2324" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2460" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1728</Id>
              <InputPortsCollection z:Id="2461" z:Size="1">
                <FBDPort z:Id="2462" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1729</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2463" z:Size="9">
                    <FBDPortExtSettings z:Id="2464">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2465">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2466">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2467">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2468">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2469">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2470">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2471">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2472">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2473">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2474" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name z:Id="2475">Tag</Name>
              <OutputPortsCollection z:Id="2476" z:Size="1">
                <FBDPort z:Id="2477" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1730</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2478" z:Size="9">
                    <FBDPortExtSettings z:Id="2479">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2480">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2481">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2482">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2483">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2484">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2485">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2486">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2487">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value z:Id="2488" i:type="d2p1:ArrayOfanyType" z:Size="9">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2489">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2490">_</Prefix>
              <SecondName z:Ref="2475" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="330" i:nil="true" />
              <InputFBDPort z:Ref="2462" i:nil="true" />
              <OutputFBDPort z:Ref="2477" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="2491">Publicator</Name>
          <Parent z:Ref="2152" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>5</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="2492" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2493" z:Size="15">
            <FBDConnector z:Id="2494">
              <EndFBDPort z:Id="2495" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2927</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2496" z:Size="8">
                  <FBDPortExtSettings z:Id="2497">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2498">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2499">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2500">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2501">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2502">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2503">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2504">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2505" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2506">FloatIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2507" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2901</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2508" z:Size="1">
                  <FBDPortExtSettings z:Id="2509">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2505" i:nil="true" />
                <VariableName z:Id="2510">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2511">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2512" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2904</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2513" z:Size="1">
                  <FBDPortExtSettings z:Id="2514">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2515" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2510" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2516">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2517" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2907</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2518" z:Size="1">
                  <FBDPortExtSettings z:Id="2519">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2520" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2510" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2521">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2522" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2916</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2523" z:Size="1">
                  <FBDPortExtSettings z:Id="2524">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2525" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2510" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2526">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2527" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2919</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2528" z:Size="1">
                  <FBDPortExtSettings z:Id="2529">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2530" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2510" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2531">
              <EndFBDPort z:Id="2532" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2930</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2533" z:Size="1">
                  <FBDPortExtSettings z:Id="2534">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2535" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2536">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2537" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2922</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2538" z:Size="1">
                  <FBDPortExtSettings z:Id="2539">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2535" i:nil="true" />
                <VariableName z:Ref="2510" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2540">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2541" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2931</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2542" z:Size="1">
                  <FBDPortExtSettings z:Id="2543">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2544" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2545">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2546">
              <EndFBDPort z:Id="2547" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2940</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2548" z:Size="2">
                  <FBDPortExtSettings z:Id="2549">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2550">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2551" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2552">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2553" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2913</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2554" z:Size="1">
                  <FBDPortExtSettings z:Id="2555">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2551" i:nil="true" />
                <VariableName z:Ref="2510" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2556">
              <EndFBDPort z:Ref="2547" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2553" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2557">
              <EndFBDPort z:Id="2558" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2944</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2559" z:Size="8">
                  <FBDPortExtSettings z:Id="2560">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2561">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2562">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2563">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2564">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2565">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2566">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2567">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2568" i:type="d2p1:ArrayOfanyType" z:Size="8">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2569">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2570" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2928</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2571" z:Size="8">
                  <FBDPortExtSettings z:Id="2572">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2573">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2574">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2575">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2576">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2577">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2578">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2579">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2568" i:nil="true" />
                <VariableName z:Id="2580">FloatOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2581">
              <EndFBDPort z:Id="2582" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2948</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2583" z:Size="2">
                  <FBDPortExtSettings z:Id="2584">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2585">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2586" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2569" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2587" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2941</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2588" z:Size="2">
                  <FBDPortExtSettings z:Id="2589">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2590">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2586" i:nil="true" />
                <VariableName z:Id="2591">ByteOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2592">
              <EndFBDPort z:Id="2593" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2965</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2594" z:Size="1">
                  <FBDPortExtSettings z:Id="2595">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2596" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2597">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2598" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2963</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2599" z:Size="1">
                  <FBDPortExtSettings z:Id="2600">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2596" i:nil="true" />
                <VariableName z:Id="2601">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2602">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2603" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2966</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2604" z:Size="1">
                  <FBDPortExtSettings z:Id="2605">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2606" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2607">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2608">
              <EndFBDPort z:Id="2609" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3359</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2610" z:Size="1">
                  <FBDPortExtSettings z:Id="2611">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2612" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2613">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2614" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2970</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2615" z:Size="1">
                  <FBDPortExtSettings z:Id="2616">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2612" i:nil="true" />
                <VariableName z:Ref="2601" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2617">
              <EndFBDPort z:Ref="2495" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2618" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3360</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2619" z:Size="1">
                  <FBDPortExtSettings z:Id="2620">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2621" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2622">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2623" z:Size="16">
            <FBDItem z:Id="2624" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2968</Id>
              <InputPortsCollection z:Id="2625" z:Size="1">
                <FBDPort z:Id="2626" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2969</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2627" z:Size="1">
                    <FBDPortExtSettings z:Id="2628">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2629">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2630" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3400</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="2631">Tag</Name>
              <OutputPortsCollection z:Id="2632" z:Size="1">
                <FBDPort z:Ref="2614" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2633">_</Prefix>
              <SecondName z:Ref="2631" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="466" i:nil="true" />
              <InputFBDPort z:Ref="2626" i:nil="true" />
              <OutputFBDPort z:Ref="2614" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2634" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2635">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>3358</Id>
              <InputPortsCollection z:Id="2636" z:Size="1">
                <FBDPort z:Ref="2609" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2637" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3590</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="2638">I&gt;F</Name>
              <OutputPortsCollection z:Id="2639" z:Size="1">
                <FBDPort z:Ref="2618" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2640">YART</Prefix>
              <SecondName z:Id="2641">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Id="2642">//#I  &gt; F (Int в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="2643" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2961</Id>
              <InputPortsCollection z:Id="2644" z:Size="1">
                <FBDPort z:Id="2645" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2962</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2646" z:Size="1">
                    <FBDPortExtSettings z:Id="2647">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2629" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2648" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3420</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Ref="2631" i:nil="true" />
              <OutputPortsCollection z:Id="2649" z:Size="1">
                <FBDPort z:Ref="2598" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2633" i:nil="true" />
              <SecondName z:Ref="2631" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="461" i:nil="true" />
              <InputFBDPort z:Ref="2645" i:nil="true" />
              <OutputFBDPort z:Ref="2598" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2650" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2651">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>2964</Id>
              <InputPortsCollection z:Id="2652" z:Size="1">
                <FBDPort z:Ref="2593" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2653" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Id="2654">I&gt;F</Name>
              <OutputPortsCollection z:Id="2655" z:Size="1">
                <FBDPort z:Ref="2603" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2656">YART</Prefix>
              <SecondName z:Id="2657">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2642" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2658" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2920</Id>
              <InputPortsCollection z:Id="2659" z:Size="1">
                <FBDPort z:Id="2660" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2921</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2661" z:Size="1">
                    <FBDPortExtSettings z:Id="2662">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2663" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Id="2664">Tag</Name>
              <OutputPortsCollection z:Id="2665" z:Size="1">
                <FBDPort z:Ref="2537" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2666">_</Prefix>
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="436" i:nil="true" />
              <InputFBDPort z:Ref="2660" i:nil="true" />
              <OutputFBDPort z:Ref="2537" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2667" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2668">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>2929</Id>
              <InputPortsCollection z:Id="2669" z:Size="1">
                <FBDPort z:Ref="2532" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2670" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3650</d8p1:_x>
                <d8p1:_y>3850</d8p1:_y>
              </Location>
              <Name z:Id="2671">I&gt;F</Name>
              <OutputPortsCollection z:Id="2672" z:Size="1">
                <FBDPort z:Ref="2541" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2673">YART</Prefix>
              <SecondName z:Id="2674">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2642" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2675" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2917</Id>
              <InputPortsCollection z:Id="2676" z:Size="1">
                <FBDPort z:Id="2677" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2918</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2678" z:Size="1">
                    <FBDPortExtSettings z:Id="2679">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2680" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2681" z:Size="1">
                <FBDPort z:Ref="2527" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="362" i:nil="true" />
              <InputFBDPort z:Ref="2677" i:nil="true" />
              <OutputFBDPort z:Ref="2527" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2682" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2914</Id>
              <InputPortsCollection z:Id="2683" z:Size="1">
                <FBDPort z:Id="2684" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2915</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2685" z:Size="1">
                    <FBDPortExtSettings z:Id="2686">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2687" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2688" z:Size="1">
                <FBDPort z:Ref="2522" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="86" i:nil="true" />
              <InputFBDPort z:Ref="2684" i:nil="true" />
              <OutputFBDPort z:Ref="2522" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2689" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2905</Id>
              <InputPortsCollection z:Id="2690" z:Size="1">
                <FBDPort z:Id="2691" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2906</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2692" z:Size="1">
                    <FBDPortExtSettings z:Id="2693">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2694" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2695" z:Size="1">
                <FBDPort z:Ref="2517" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="242" i:nil="true" />
              <InputFBDPort z:Ref="2691" i:nil="true" />
              <OutputFBDPort z:Ref="2517" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2696" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2902</Id>
              <InputPortsCollection z:Id="2697" z:Size="1">
                <FBDPort z:Id="2698" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2903</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2699" z:Size="1">
                    <FBDPortExtSettings z:Id="2700">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2701" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2702" z:Size="1">
                <FBDPort z:Ref="2512" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="238" i:nil="true" />
              <InputFBDPort z:Ref="2698" i:nil="true" />
              <OutputFBDPort z:Ref="2512" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2703" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2899</Id>
              <InputPortsCollection z:Id="2704" z:Size="1">
                <FBDPort z:Id="2705" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2900</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2706" z:Size="1">
                    <FBDPortExtSettings z:Id="2707">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2708" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2709" z:Size="1">
                <FBDPort z:Ref="2507" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="431" i:nil="true" />
              <InputFBDPort z:Ref="2705" i:nil="true" />
              <OutputFBDPort z:Ref="2507" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2710" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2711">Упаковка/Распаковка массива</Description>
              <HelpID>95</HelpID>
              <Id>2926</Id>
              <InputPortsCollection z:Id="2712" z:Size="1">
                <FBDPort z:Ref="2495" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2713" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3770</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="2714">ARRAY</Name>
              <OutputPortsCollection z:Id="2715" z:Size="1">
                <FBDPort z:Ref="2570" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2673" i:nil="true" />
              <SecondName z:Id="2716">FloatMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7d6e82cd-5de6-4502-94a0-4c47d2596119</SpecificationId>
              <Code z:Id="2717">//#FLOATARR (Свертка / Развертка Bit массивов)


for(new i = 0; i&lt;sizeof_FloatIn; i++)


{


	if(i&gt;=sizeof_FloatOut) return;


	FloatOut[i] = FloatIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2718" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2943</Id>
              <InputPortsCollection z:Id="2719" z:Size="1">
                <FBDPort z:Ref="2558" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2720" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2721" z:Size="1">
                <FBDPort z:Id="2722" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>8</ArrayItemsCount>
                  <Id>2945</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2723" z:Size="8">
                    <FBDPortExtSettings z:Id="2724">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2725">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2726">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2727">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2728">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2729">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2730">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2731">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2732" i:type="d2p1:ArrayOfanyType" z:Size="8">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2510" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="441" i:nil="true" />
              <InputFBDPort z:Ref="2558" i:nil="true" />
              <OutputFBDPort z:Ref="2722" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2733" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2911</Id>
              <InputPortsCollection z:Id="2734" z:Size="1">
                <FBDPort z:Id="2735" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2912</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2736" z:Size="1">
                    <FBDPortExtSettings z:Id="2737">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2569" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2738" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2739" z:Size="1">
                <FBDPort z:Ref="2553" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="342" i:nil="true" />
              <InputFBDPort z:Ref="2735" i:nil="true" />
              <OutputFBDPort z:Ref="2553" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2740" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2741">Упаковка/Распаковка массива</Description>
              <HelpID>92</HelpID>
              <Id>2939</Id>
              <InputPortsCollection z:Id="2742" z:Size="1">
                <FBDPort z:Ref="2547" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2743" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3750</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Id="2744">ARRAY</Name>
              <OutputPortsCollection z:Id="2745" z:Size="1">
                <FBDPort z:Ref="2587" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2673" i:nil="true" />
              <SecondName z:Id="2746">ByteMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>487e1ff3-87f3-4b13-b3dd-4a1be44bd7b7</SpecificationId>
              <Code z:Id="2747">//#BYTEARR (Свертка / Развертка Bit массивов )  


for(new i = 0; i&lt;sizeof_ByteIn; i++)


{


	if(i&gt;=sizeof_ByteOut) return;


	ByteOut[i] = ByteIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2748" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2947</Id>
              <InputPortsCollection z:Id="2749" z:Size="1">
                <FBDPort z:Ref="2582" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2750" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3900</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2664" i:nil="true" />
              <OutputPortsCollection z:Id="2751" z:Size="1">
                <FBDPort z:Id="2752" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2949</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2753" z:Size="2">
                    <FBDPortExtSettings z:Id="2754">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2755">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2756" i:type="d2p1:ArrayOfanyType" z:Size="2">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2510" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2666" i:nil="true" />
              <SecondName z:Ref="2664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="452" i:nil="true" />
              <InputFBDPort z:Ref="2582" i:nil="true" />
              <OutputFBDPort z:Ref="2752" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="2757">ToArray</Name>
          <Parent z:Ref="2152" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>9</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="2758">Connection</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="2759" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2760" z:Size="1">
        <d2p1:anyType z:Id="2761" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2762" z:Size="34">
            <FBDConnector z:Id="2763">
              <EndFBDPort z:Id="2764" i:type="InputFBDPort">
                <Alias z:Id="2765">Вход 279</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1068</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2766" z:Size="1">
                  <FBDPortExtSettings z:Id="2767">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2768" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2769">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2770" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1080</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2771" z:Size="1">
                  <FBDPortExtSettings z:Id="2772">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2768" i:nil="true" />
                <VariableName z:Id="2773">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2774">
              <EndFBDPort z:Id="2775" i:type="InputFBDPort">
                <Alias z:Id="2776">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1085</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2777" z:Size="1">
                  <FBDPortExtSettings z:Id="2778">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2779" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2780">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2781" i:type="OutputFBDPort">
                <Alias z:Id="2782">Выход 315</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1074</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2783" z:Size="1">
                  <FBDPortExtSettings z:Id="2784">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2779" i:nil="true" />
                <VariableName z:Id="2785">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2786">
              <EndFBDPort z:Id="2787" i:type="InputFBDPort">
                <Alias z:Id="2788">Вход 282</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1071</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2789" z:Size="1">
                  <FBDPortExtSettings z:Id="2790">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2791" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2792">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2793" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1094</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2794" z:Size="1">
                  <FBDPortExtSettings z:Id="2795">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2791" i:nil="true" />
                <VariableName z:Id="2796">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2797">
              <EndFBDPort z:Id="2798" i:type="InputFBDPort">
                <Alias z:Id="2799">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1127</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2800" z:Size="1">
                  <FBDPortExtSettings z:Id="2801">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2802" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2803">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2804" i:type="OutputFBDPort">
                <Alias z:Id="2805">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2806" z:Size="1">
                  <FBDPortExtSettings z:Id="2807">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2802" i:nil="true" />
                <VariableName z:Id="2808">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2809">
              <EndFBDPort z:Id="2810" i:type="InputFBDPort">
                <Alias z:Id="2811">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1119</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2812" z:Size="1">
                  <FBDPortExtSettings z:Id="2813">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2814" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2815">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2816" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2817" z:Size="1">
                  <FBDPortExtSettings z:Id="2818">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2814" i:nil="true" />
                <VariableName z:Id="2819">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2820">
              <EndFBDPort z:Id="2821" i:type="InputFBDPort">
                <Alias z:Id="2822">Вход 124</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2823" z:Size="1">
                  <FBDPortExtSettings z:Id="2824">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2825" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2826">NodeId</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2827" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1110</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2828" z:Size="1">
                  <FBDPortExtSettings z:Id="2829">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2825" i:nil="true" />
                <VariableName z:Ref="2819" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2830">
              <EndFBDPort z:Id="2831" i:type="InputFBDPort">
                <Alias z:Id="2832">Вход 127</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1121</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2833" z:Size="1">
                  <FBDPortExtSettings z:Id="2834">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2835" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2836">NodeAddress</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2837" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1113</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2838" z:Size="1">
                  <FBDPortExtSettings z:Id="2839">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2835" i:nil="true" />
                <VariableName z:Ref="2819" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2840">
              <EndFBDPort z:Id="2841" i:type="InputFBDPort">
                <Alias z:Id="2842">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1122</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2843" z:Size="1">
                  <FBDPortExtSettings z:Id="2844">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2845" i:type="d2p1:ArrayOfanyType" z:Size="10">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2846">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2847" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>10</ArrayItemsCount>
                <Id>1136</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2848" z:Size="10">
                  <FBDPortExtSettings z:Id="2849">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2850">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2851">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2852">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2853">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2854">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2855">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2856">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2857">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2858">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2845" i:nil="true" />
                <VariableName z:Ref="2819" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2859">
              <EndFBDPort z:Id="2860" i:type="InputFBDPort">
                <Alias z:Id="2861">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2227</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2862" z:Size="1">
                  <FBDPortExtSettings z:Id="2863">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2864" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2865">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2866" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2148</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2867" z:Size="1">
                  <FBDPortExtSettings z:Id="2868">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2864" i:nil="true" />
                <VariableName z:Id="2869">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2870">
              <EndFBDPort z:Id="2871" i:type="InputFBDPort">
                <Alias z:Id="2872">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2150</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2873" z:Size="1">
                  <FBDPortExtSettings z:Id="2874">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2875" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2876">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2877" i:type="OutputFBDPort">
                <Alias z:Id="2878">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2233</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2879" z:Size="1">
                  <FBDPortExtSettings z:Id="2880">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2875" i:nil="true" />
                <VariableName z:Id="2881">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2882">
              <EndFBDPort z:Id="2883" i:type="InputFBDPort">
                <Alias z:Id="2884">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2230</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2885" z:Size="1">
                  <FBDPortExtSettings z:Id="2886">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2887" i:type="d2p1:ArrayOfanyType" z:Size="5">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2888">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2889" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2160</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2890" z:Size="5">
                  <FBDPortExtSettings z:Id="2891">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2892">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2893">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2894">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2895">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2887" i:nil="true" />
                <VariableName z:Id="2896">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2897">
              <EndFBDPort z:Id="2898" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2236</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2899" z:Size="5">
                  <FBDPortExtSettings z:Id="2900">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2901">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2902">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2903">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2904">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2887" i:nil="true" />
                <VariableName z:Id="2905">ShortIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2889" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2906">
              <EndFBDPort z:Id="2907" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2829</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2908" z:Size="1">
                  <FBDPortExtSettings z:Id="2909">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2791" i:nil="true" />
                <VariableName z:Id="2910">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2793" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2911">
              <EndFBDPort z:Id="2912" i:type="InputFBDPort">
                <Alias z:Id="2913">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2832</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2914" z:Size="1">
                  <FBDPortExtSettings z:Id="2915">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2916" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2917">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2918" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2830</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2919" z:Size="1">
                  <FBDPortExtSettings z:Id="2920">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2916" i:nil="true" />
                <VariableName z:Id="2921">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2922">
              <EndFBDPort z:Id="2923" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2826</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2924" z:Size="1">
                  <FBDPortExtSettings z:Id="2925">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2926" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2927">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2928" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2834</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2929" z:Size="1">
                  <FBDPortExtSettings z:Id="2930">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2926" i:nil="true" />
                <VariableName z:Id="2931">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2932">
              <EndFBDPort z:Id="2933" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2852</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2934" z:Size="1">
                  <FBDPortExtSettings z:Id="2935">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2936" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2937">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Id="2938" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2237</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2939" z:Size="5">
                  <FBDPortExtSettings z:Id="2940">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2941">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2942">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2943">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2944">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2945" i:type="d2p1:ArrayOfanyType" z:Size="5">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2946">ShortOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2947">
              <EndFBDPort z:Id="2948" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2856</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2949" z:Size="1">
                  <FBDPortExtSettings z:Id="2950">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2951" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2952">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="2938" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2953">
              <EndFBDPort z:Id="2954" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2844</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2955" z:Size="4">
                  <FBDPortExtSettings z:Id="2956">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2957">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2958">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2959">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2960" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2961">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2962" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2853</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2963" z:Size="2">
                  <FBDPortExtSettings z:Id="2964">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2965">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2966" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2967">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2968">
              <EndFBDPort z:Ref="2954" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="2962" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2969">
              <EndFBDPort z:Ref="2954" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2970" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2857</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2971" z:Size="2">
                  <FBDPortExtSettings z:Id="2972">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2973">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2974" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2975">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2976">
              <EndFBDPort z:Ref="2954" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="2970" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2977">
              <EndFBDPort z:Id="2978" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2841</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2979" z:Size="1">
                  <FBDPortExtSettings z:Id="2980">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2981" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2927" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2982" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2845</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2983" z:Size="1">
                  <FBDPortExtSettings z:Id="2984">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2981" i:nil="true" />
                <VariableName z:Id="2985">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2986">
              <EndFBDPort z:Id="2987" i:type="InputFBDPort">
                <Alias z:Id="2988">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3308</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2989" z:Size="1">
                  <FBDPortExtSettings z:Id="2990">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2991" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2992">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2993" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3305</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2994" z:Size="1">
                  <FBDPortExtSettings z:Id="2995">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2991" i:nil="true" />
                <VariableName z:Id="2996">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2997">
              <EndFBDPort z:Id="2998" i:type="InputFBDPort">
                <Alias z:Id="2999">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3316</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3000" z:Size="1">
                  <FBDPortExtSettings z:Id="3001">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="3002" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3003">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3004" i:type="OutputFBDPort">
                <Alias z:Id="3005">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3314</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3006" z:Size="1">
                  <FBDPortExtSettings z:Id="3007">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="3002" i:nil="true" />
                <VariableName z:Id="3008">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3009">
              <EndFBDPort z:Id="3010" i:type="InputFBDPort">
                <Alias z:Id="3011">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3311</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3012" z:Size="1">
                  <FBDPortExtSettings z:Id="3013">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="3014" i:type="d2p1:ArrayOfanyType" z:Size="16">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3015">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3016" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>3342</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3017" z:Size="16">
                  <FBDPortExtSettings z:Id="3018">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3019">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3020">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3021">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3022">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3023">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3024">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3025">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3026">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3027">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3028">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3029">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3030">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3031">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3032">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3033">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="3014" i:nil="true" />
                <VariableName z:Id="3034">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3035">
              <EndFBDPort z:Id="3036" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>3324</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3037" z:Size="16">
                  <FBDPortExtSettings z:Id="3038">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3039">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3040">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3041">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3042">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3043">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3044">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3045">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3046">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3047">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3048">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3049">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3050">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3051">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3052">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3053">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="3014" i:nil="true" />
                <VariableName z:Id="3054">ShortIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3016" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3055">
              <EndFBDPort z:Id="3056" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3344</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3057" z:Size="1">
                  <FBDPortExtSettings z:Id="3058">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="3059" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3060">ShortIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>11</IndexStartFBDPort>
              <StartFBDPort z:Id="3061" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>3325</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3062" z:Size="16">
                  <FBDPortExtSettings z:Id="3063">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3064">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3065">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3066">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3067">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3068">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3069">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3070">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3071">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3072">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3073">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3074">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3075">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3076">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3077">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3078">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="3079" i:type="d2p1:ArrayOfanyType" z:Size="16">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3080">ShortOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3081">
              <EndFBDPort z:Id="3082" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>3355</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3083" z:Size="4">
                  <FBDPortExtSettings z:Id="3084">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3085">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3086">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3087">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3088" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3089">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3090" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3352</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3091" z:Size="2">
                  <FBDPortExtSettings z:Id="3092">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3093">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3094" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3095">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3096">
              <EndFBDPort z:Ref="3082" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="3090" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3097">
              <EndFBDPort z:Ref="3082" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3098" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3348</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3099" z:Size="2">
                  <FBDPortExtSettings z:Id="3100">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3101">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3102" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3103">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3104">
              <EndFBDPort z:Ref="3082" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="3098" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3105">
              <EndFBDPort z:Id="3106" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3351</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3107" z:Size="1">
                  <FBDPortExtSettings z:Id="3108">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="3109" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3110">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="3061" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3111">
              <EndFBDPort z:Id="3112" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3347</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3113" z:Size="1">
                  <FBDPortExtSettings z:Id="3114">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="3115" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3116">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="3061" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3117">
              <EndFBDPort z:Id="3118" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3362</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3119" z:Size="1">
                  <FBDPortExtSettings z:Id="3120">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3121" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3122">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3123" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3356</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3124" z:Size="1">
                  <FBDPortExtSettings z:Id="3125">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3121" i:nil="true" />
                <VariableName z:Id="3126">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="3127" z:Size="37">
            <FBDItem z:Id="3128" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2158</Id>
              <InputPortsCollection z:Id="3129" z:Size="1">
                <FBDPort z:Id="3130" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>5</ArrayItemsCount>
                  <Id>2159</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3131" z:Size="5">
                    <FBDPortExtSettings z:Id="3132">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3133">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3134">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3135">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3136">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3137">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3138" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4180</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="3139">Tag</Name>
              <OutputPortsCollection z:Id="3140" z:Size="1">
                <FBDPort z:Ref="2889" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3141">_</Prefix>
              <SecondName z:Ref="3139" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="383" i:nil="true" />
              <InputFBDPort z:Ref="3130" i:nil="true" />
              <OutputFBDPort z:Ref="2889" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3142" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2146</Id>
              <InputPortsCollection z:Id="3143" z:Size="1">
                <FBDPort z:Id="3144" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2147</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3145" z:Size="1">
                    <FBDPortExtSettings z:Id="3146">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3147">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3148" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4170</d8p1:_x>
                <d8p1:_y>4080</d8p1:_y>
              </Location>
              <Name z:Id="3149">Tag</Name>
              <OutputPortsCollection z:Id="3150" z:Size="1">
                <FBDPort z:Ref="2866" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3151">_</Prefix>
              <SecondName z:Ref="3149" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="3144" i:nil="true" />
              <OutputFBDPort z:Ref="2866" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3152" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3153">Read holding registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>272</HelpID>
              <Id>2225</Id>
              <InputPortsCollection z:Id="3154" z:Size="7">
                <FBDPort z:Id="3155" i:type="InputFBDPort">
                  <Alias z:Id="3156">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3157" z:Size="1">
                    <FBDPortExtSettings z:Id="3158">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3159" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3160" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3161">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2860" i:nil="true" />
                <FBDPort z:Id="3162" i:type="InputFBDPort">
                  <Alias z:Id="3163">Вход 124</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2228</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3164" z:Size="1">
                    <FBDPortExtSettings z:Id="3165">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3166" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3167" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3168">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="3169" i:type="InputFBDPort">
                  <Alias z:Id="3170">Вход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2229</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3171" z:Size="1">
                    <FBDPortExtSettings z:Id="3172">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3173" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3174" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">4096</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3175">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2883" i:nil="true" />
                <FBDPort z:Id="3176" i:type="InputFBDPort">
                  <Alias z:Id="3177">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2231</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3178" z:Size="1">
                    <FBDPortExtSettings z:Id="3179">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3180" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3181" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3182">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="3183" i:type="InputFBDPort">
                  <Alias z:Id="3184">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2232</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3185" z:Size="1">
                    <FBDPortExtSettings z:Id="3186">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3187" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3188" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3189">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3190" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4400</d8p1:_x>
                <d8p1:_y>4050</d8p1:_y>
              </Location>
              <Name z:Id="3191">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="3192" z:Size="1">
                <FBDPort z:Ref="2877" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3193">YART</Prefix>
              <SecondName z:Ref="3191" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Id="3194">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 3 &lt;&lt; 24; //функция MODBUS (read holding registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="3195" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3196">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>2149</Id>
              <InputPortsCollection z:Id="3197" z:Size="1">
                <FBDPort z:Ref="2871" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3198" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>4060</d8p1:_y>
              </Location>
              <Name z:Id="3199">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="3200" z:Size="6">
                <FBDPort z:Id="3201" i:type="OutputFBDPort">
                  <Alias z:Id="3202">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2151</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3203" z:Size="1">
                    <FBDPortExtSettings z:Id="3204">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3205" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3206">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="3207" i:type="OutputFBDPort">
                  <Alias z:Id="3208">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2152</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3209" z:Size="1">
                    <FBDPortExtSettings z:Id="3210">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3211" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3212">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="3213" i:type="OutputFBDPort">
                  <Alias z:Id="3214">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2153</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3215" z:Size="1">
                    <FBDPortExtSettings z:Id="3216">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3217" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3218">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="3219" i:type="OutputFBDPort">
                  <Alias z:Id="3220">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2154</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3221" z:Size="1">
                    <FBDPortExtSettings z:Id="3222">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3223" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3224">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="3225" i:type="OutputFBDPort">
                  <Alias z:Id="3226">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2155</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3227" z:Size="1">
                    <FBDPortExtSettings z:Id="3228">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3229" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3230">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="3231" i:type="OutputFBDPort">
                  <Alias z:Id="3232">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2156</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3233" z:Size="1">
                    <FBDPortExtSettings z:Id="3234">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3235" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3236">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3237">YART</Prefix>
              <SecondName z:Ref="3199" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Id="3238">if (Status == -1)


{


	Failed = 1;


	return;


}


Connected = Status &amp; 0x0080 != 0;


Free = Status &amp; 0x007f == 0;


Sending = Status &amp; 0x007f == 1;


WaitRespond = Status &amp; 0x007f == 2;


Failed = Status &amp; 0x007f == 3;


Disconnected = Status &amp; 0x007f == 4;</Code>
            </FBDItem>
            <FBDItem z:Id="3239" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3240">Упаковка/Распаковка массива</Description>
              <HelpID>93</HelpID>
              <Id>2235</Id>
              <InputPortsCollection z:Id="3241" z:Size="1">
                <FBDPort z:Ref="2898" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3242" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4370</d8p1:_x>
                <d8p1:_y>4220</d8p1:_y>
              </Location>
              <Name z:Id="3243">ARRAY</Name>
              <OutputPortsCollection z:Id="3244" z:Size="1">
                <FBDPort z:Ref="2938" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3193" i:nil="true" />
              <SecondName z:Id="3245">ShortMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>450cea9c-3952-4754-8583-dd32c04d9ec8</SpecificationId>
              <Code z:Id="3246">//#INTARR (Свертка / Развертка Bit массивов)SH


for(new i = 0; i&lt;sizeof_ShortIn; i++)


{


	if(i&gt;=sizeof_ShortOut) return;


	ShortOut[i] = ShortIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="3247" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3248">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>2855</Id>
              <InputPortsCollection z:Id="3249" z:Size="1">
                <FBDPort z:Ref="2948" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3250" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4540</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="3251">SPLIT LE</Name>
              <OutputPortsCollection z:Id="3252" z:Size="2">
                <FBDPort z:Ref="2970" i:nil="true" />
                <FBDPort z:Id="3253" i:type="OutputFBDPort">
                  <Alias z:Id="3254">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2858</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3255" z:Size="1">
                    <FBDPortExtSettings z:Id="3256">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3257" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3258">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3259">YART</Prefix>
              <SecondName z:Id="3260">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Id="3261">const S = 2;





if(sizeof_y == S) for(new i = 0; i &lt; S; i++) y[i] = (x &gt;&gt; (8 * i)) &amp; 0xFF;


else e = true;</Code>
            </FBDItem>
            <FBDItem z:Id="3262" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3263">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>2851</Id>
              <InputPortsCollection z:Id="3264" z:Size="1">
                <FBDPort z:Ref="2933" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3265" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4540</d8p1:_x>
                <d8p1:_y>4230</d8p1:_y>
              </Location>
              <Name z:Id="3266">SPLIT LE</Name>
              <OutputPortsCollection z:Id="3267" z:Size="2">
                <FBDPort z:Ref="2962" i:nil="true" />
                <FBDPort z:Id="3268" i:type="OutputFBDPort">
                  <Alias z:Id="3269">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2854</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3270" z:Size="1">
                    <FBDPortExtSettings z:Id="3271">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3272" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3273">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3274">YART</Prefix>
              <SecondName z:Id="3275">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Ref="3261" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3276" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3277">Сборка массива байт (little-endian) в значение</Description>
              <HelpID>884</HelpID>
              <Id>2843</Id>
              <InputPortsCollection z:Id="3278" z:Size="1">
                <FBDPort z:Ref="2954" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3279" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="3280">JOIN LE</Name>
              <OutputPortsCollection z:Id="3281" z:Size="2">
                <FBDPort z:Ref="2982" i:nil="true" />
                <FBDPort z:Id="3282" i:type="OutputFBDPort">
                  <Alias z:Id="3283">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2846</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3284" z:Size="1">
                    <FBDPortExtSettings z:Id="3285">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3286" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3287">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3274" i:nil="true" />
              <SecondName z:Id="3288">join_i_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>98ef9844-4840-4068-892c-b0954294f66b</SpecificationId>
              <Code z:Id="3289">const S = 4;





if(sizeof_x == S) for(new i = 0; i &lt; S; i++) y |= (x[i] &amp; 0xFF) &lt;&lt; (8 * i);


else e = true;</Code>
            </FBDItem>
            <FBDItem z:Id="3290" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2840</Id>
              <InputPortsCollection z:Id="3291" z:Size="1">
                <FBDPort z:Ref="2978" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3292" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="3293">Tag</Name>
              <OutputPortsCollection z:Id="3294" z:Size="1">
                <FBDPort z:Id="3295" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2842</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3296" z:Size="1">
                    <FBDPortExtSettings z:Id="3297">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3298" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3299">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3300">_</Prefix>
              <SecondName z:Ref="3293" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="436" i:nil="true" />
              <InputFBDPort z:Ref="2978" i:nil="true" />
              <OutputFBDPort z:Ref="3295" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3301" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1092</Id>
              <InputPortsCollection z:Id="3302" z:Size="1">
                <FBDPort z:Id="3303" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1093</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3304" z:Size="1">
                    <FBDPortExtSettings z:Id="3305">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3306">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3307" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3510</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="3308">Tag</Name>
              <OutputPortsCollection z:Id="3309" z:Size="1">
                <FBDPort z:Ref="2793" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3310">_</Prefix>
              <SecondName z:Ref="3308" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="111" i:nil="true" />
              <InputFBDPort z:Ref="3303" i:nil="true" />
              <OutputFBDPort z:Ref="2793" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3311" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1078</Id>
              <InputPortsCollection z:Id="3312" z:Size="1">
                <FBDPort z:Id="3313" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1079</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3314" z:Size="1">
                    <FBDPortExtSettings z:Id="3315">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3316">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3317" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="3318">Tag</Name>
              <OutputPortsCollection z:Id="3319" z:Size="1">
                <FBDPort z:Ref="2770" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3320">_</Prefix>
              <SecondName z:Ref="3318" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="3313" i:nil="true" />
              <OutputFBDPort z:Ref="2770" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3321" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3322">Read input registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>271</HelpID>
              <Id>1066</Id>
              <InputPortsCollection z:Id="3323" z:Size="7">
                <FBDPort z:Id="3324" i:type="InputFBDPort">
                  <Alias z:Id="3325">Вход 278</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3326" z:Size="1">
                    <FBDPortExtSettings z:Id="3327">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3328" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3329" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3330">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2764" i:nil="true" />
                <FBDPort z:Id="3331" i:type="InputFBDPort">
                  <Alias z:Id="3332">Вход 280</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3333" z:Size="1">
                    <FBDPortExtSettings z:Id="3334">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3335" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3336" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3337">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="3338" i:type="InputFBDPort">
                  <Alias z:Id="3339">Вход 281</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1070</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3340" z:Size="1">
                    <FBDPortExtSettings z:Id="3341">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3342" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3343" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3344">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2787" i:nil="true" />
                <FBDPort z:Id="3345" i:type="InputFBDPort">
                  <Alias z:Id="3346">Вход 283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1072</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3347" z:Size="1">
                    <FBDPortExtSettings z:Id="3348">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3349" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3350" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3351">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="3352" i:type="InputFBDPort">
                  <Alias z:Id="3353">Вход 284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1073</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3354" z:Size="1">
                    <FBDPortExtSettings z:Id="3355">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3356" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3357" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3358">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3359" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3740</d8p1:_x>
                <d8p1:_y>4110</d8p1:_y>
              </Location>
              <Name z:Id="3360">MBRTUMIRRead</Name>
              <OutputPortsCollection z:Id="3361" z:Size="1">
                <FBDPort z:Ref="2781" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3362">YART</Prefix>
              <SecondName z:Ref="3360" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>19be49cb-7d11-4952-942b-1f42f10cdde5</SpecificationId>
              <Code z:Id="3363">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 4 &lt;&lt; 24; //функция MODBUS (read input registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="3364" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3365">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1084</Id>
              <InputPortsCollection z:Id="3366" z:Size="1">
                <FBDPort z:Ref="2775" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3367" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3920</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="3368">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="3369" z:Size="6">
                <FBDPort z:Id="3370" i:type="OutputFBDPort">
                  <Alias z:Id="3371">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3372" z:Size="1">
                    <FBDPortExtSettings z:Id="3373">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3374" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3375">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="3376" i:type="OutputFBDPort">
                  <Alias z:Id="3377">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1087</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3378" z:Size="1">
                    <FBDPortExtSettings z:Id="3379">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3380" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3381">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="3382" i:type="OutputFBDPort">
                  <Alias z:Id="3383">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3384" z:Size="1">
                    <FBDPortExtSettings z:Id="3385">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3386" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3387">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="3388" i:type="OutputFBDPort">
                  <Alias z:Id="3389">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1089</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3390" z:Size="1">
                    <FBDPortExtSettings z:Id="3391">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3392" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3393">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="3394" i:type="OutputFBDPort">
                  <Alias z:Id="3395">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1090</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3396" z:Size="1">
                    <FBDPortExtSettings z:Id="3397">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3398" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3399">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="3400" i:type="OutputFBDPort">
                  <Alias z:Id="3401">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3402" z:Size="1">
                    <FBDPortExtSettings z:Id="3403">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3404" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3405">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3362" i:nil="true" />
              <SecondName z:Ref="3368" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="3238" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3406" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3407">Преобразование Short в Float</Description>
              <HelpID>106</HelpID>
              <Id>2828</Id>
              <InputPortsCollection z:Id="3408" z:Size="1">
                <FBDPort z:Ref="2907" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3409" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3479.0489745693226</d8p1:_x>
                <d8p1:_y>4223.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="3410">S&gt;F</Name>
              <OutputPortsCollection z:Id="3411" z:Size="1">
                <FBDPort z:Ref="2918" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3274" i:nil="true" />
              <SecondName z:Id="3412">ShortFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>06e48c4e-f372-4aee-84a8-6b45e846a795</SpecificationId>
              <Code z:Id="3413">//#S &gt; F (Short в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="3414" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3415">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>2831</Id>
              <InputPortsCollection z:Id="3416" z:Size="2">
                <FBDPort z:Ref="2912" i:nil="true" />
                <FBDPort z:Id="3417" i:type="InputFBDPort">
                  <Alias z:Id="3418">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2833</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3419" z:Size="1">
                    <FBDPortExtSettings z:Id="3420">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3421" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3422" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3423">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3424" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3598.0489745693226</d8p1:_x>
                <d8p1:_y>4241.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="3425">DIV</Name>
              <OutputPortsCollection z:Id="3426" z:Size="1">
                <FBDPort z:Ref="2928" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3274" i:nil="true" />
              <SecondName z:Ref="3425" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Id="3427">if(b != 0.0){


	y = a / b;


} else __eno = false;</Code>
            </FBDItem>
            <FBDItem z:Id="3428" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2825</Id>
              <InputPortsCollection z:Id="3429" z:Size="1">
                <FBDPort z:Ref="2923" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3430" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>4250</d8p1:_y>
              </Location>
              <Name z:Ref="3293" i:nil="true" />
              <OutputPortsCollection z:Id="3431" z:Size="1">
                <FBDPort z:Id="3432" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2827</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3433" z:Size="1">
                    <FBDPortExtSettings z:Id="3434">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3435" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="3299" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3300" i:nil="true" />
              <SecondName z:Ref="3293" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="431" i:nil="true" />
              <InputFBDPort z:Ref="2923" i:nil="true" />
              <OutputFBDPort z:Ref="3432" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3436" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3340</Id>
              <InputPortsCollection z:Id="3437" z:Size="1">
                <FBDPort z:Id="3438" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>16</ArrayItemsCount>
                  <Id>3341</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3439" z:Size="16">
                    <FBDPortExtSettings z:Id="3440">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3441">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3442">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3443">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3444">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3445">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3446">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3447">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3448">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3449">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3450">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3451">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3452">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3453">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3454">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3455">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3456">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3457" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4220</d8p1:_x>
                <d8p1:_y>4470</d8p1:_y>
              </Location>
              <Name z:Id="3458">Tag</Name>
              <OutputPortsCollection z:Id="3459" z:Size="1">
                <FBDPort z:Ref="3016" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3460">_</Prefix>
              <SecondName z:Ref="3458" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="578" i:nil="true" />
              <InputFBDPort z:Ref="3438" i:nil="true" />
              <OutputFBDPort z:Ref="3016" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3461" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3303</Id>
              <InputPortsCollection z:Id="3462" z:Size="1">
                <FBDPort z:Id="3463" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3304</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3464" z:Size="1">
                    <FBDPortExtSettings z:Id="3465">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3466">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3467" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4230</d8p1:_x>
                <d8p1:_y>4430</d8p1:_y>
              </Location>
              <Name z:Id="3468">Tag</Name>
              <OutputPortsCollection z:Id="3469" z:Size="1">
                <FBDPort z:Ref="2993" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3470">_</Prefix>
              <SecondName z:Ref="3468" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="3463" i:nil="true" />
              <OutputFBDPort z:Ref="2993" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3471" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3472">Read holding registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>272</HelpID>
              <Id>3306</Id>
              <InputPortsCollection z:Id="3473" z:Size="7">
                <FBDPort z:Id="3474" i:type="InputFBDPort">
                  <Alias z:Id="3475">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3307</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3476" z:Size="1">
                    <FBDPortExtSettings z:Id="3477">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3478" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3479" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3480">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2987" i:nil="true" />
                <FBDPort z:Id="3481" i:type="InputFBDPort">
                  <Alias z:Id="3482">Вход 124</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3309</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3483" z:Size="1">
                    <FBDPortExtSettings z:Id="3484">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3485" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3486" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">3</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3487">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="3488" i:type="InputFBDPort">
                  <Alias z:Id="3489">Вход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3310</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3490" z:Size="1">
                    <FBDPortExtSettings z:Id="3491">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3492" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3493" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">4096</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3494">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3010" i:nil="true" />
                <FBDPort z:Id="3495" i:type="InputFBDPort">
                  <Alias z:Id="3496">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3312</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3497" z:Size="1">
                    <FBDPortExtSettings z:Id="3498">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3499" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3500" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1500</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3501">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="3502" i:type="InputFBDPort">
                  <Alias z:Id="3503">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3313</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3504" z:Size="1">
                    <FBDPortExtSettings z:Id="3505">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3506" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3507" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3508">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3509" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4460</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="3510">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="3511" z:Size="1">
                <FBDPort z:Ref="3004" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3512">YART</Prefix>
              <SecondName z:Ref="3510" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Ref="3194" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3513" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3514">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>3315</Id>
              <InputPortsCollection z:Id="3515" z:Size="1">
                <FBDPort z:Ref="2998" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3516" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4650</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Id="3517">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="3518" z:Size="6">
                <FBDPort z:Id="3519" i:type="OutputFBDPort">
                  <Alias z:Id="3520">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3317</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3521" z:Size="1">
                    <FBDPortExtSettings z:Id="3522">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3523" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3524">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="3525" i:type="OutputFBDPort">
                  <Alias z:Id="3526">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3318</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3527" z:Size="1">
                    <FBDPortExtSettings z:Id="3528">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3529" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3530">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="3531" i:type="OutputFBDPort">
                  <Alias z:Id="3532">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3319</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3533" z:Size="1">
                    <FBDPortExtSettings z:Id="3534">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3535" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3536">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="3537" i:type="OutputFBDPort">
                  <Alias z:Id="3538">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3320</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3539" z:Size="1">
                    <FBDPortExtSettings z:Id="3540">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3541" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3542">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="3543" i:type="OutputFBDPort">
                  <Alias z:Id="3544">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3321</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3545" z:Size="1">
                    <FBDPortExtSettings z:Id="3546">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3547" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3548">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="3549" i:type="OutputFBDPort">
                  <Alias z:Id="3550">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3322</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3551" z:Size="1">
                    <FBDPortExtSettings z:Id="3552">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3553" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3554">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3555">YART</Prefix>
              <SecondName z:Ref="3517" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="3238" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3556" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3557">Упаковка/Распаковка массива</Description>
              <HelpID>93</HelpID>
              <Id>3323</Id>
              <InputPortsCollection z:Id="3558" z:Size="1">
                <FBDPort z:Ref="3036" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3559" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4430</d8p1:_x>
                <d8p1:_y>4570</d8p1:_y>
              </Location>
              <Name z:Id="3560">ARRAY</Name>
              <OutputPortsCollection z:Id="3561" z:Size="1">
                <FBDPort z:Ref="3061" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3512" i:nil="true" />
              <SecondName z:Id="3562">ShortMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>450cea9c-3952-4754-8583-dd32c04d9ec8</SpecificationId>
              <Code z:Ref="3246" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3563" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3564">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>3350</Id>
              <InputPortsCollection z:Id="3565" z:Size="1">
                <FBDPort z:Ref="3106" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3566" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>4550</d8p1:_y>
              </Location>
              <Name z:Id="3567">SPLIT LE</Name>
              <OutputPortsCollection z:Id="3568" z:Size="2">
                <FBDPort z:Ref="3090" i:nil="true" />
                <FBDPort z:Id="3569" i:type="OutputFBDPort">
                  <Alias z:Id="3570">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3353</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3571" z:Size="1">
                    <FBDPortExtSettings z:Id="3572">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3573" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3574">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3575">YART</Prefix>
              <SecondName z:Id="3576">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Ref="3261" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3577" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3578">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>3346</Id>
              <InputPortsCollection z:Id="3579" z:Size="1">
                <FBDPort z:Ref="3112" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3580" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>4600</d8p1:_y>
              </Location>
              <Name z:Id="3581">SPLIT LE</Name>
              <OutputPortsCollection z:Id="3582" z:Size="2">
                <FBDPort z:Ref="3098" i:nil="true" />
                <FBDPort z:Id="3583" i:type="OutputFBDPort">
                  <Alias z:Id="3584">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3349</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3585" z:Size="1">
                    <FBDPortExtSettings z:Id="3586">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3587" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3588">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3589">YART</Prefix>
              <SecondName z:Id="3590">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Ref="3261" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3591" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3592">Сборка массива байт (little-endian) в значение</Description>
              <HelpID>884</HelpID>
              <Id>3354</Id>
              <InputPortsCollection z:Id="3593" z:Size="1">
                <FBDPort z:Ref="3082" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3594" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>4560</d8p1:_y>
              </Location>
              <Name z:Id="3595">JOIN LE</Name>
              <OutputPortsCollection z:Id="3596" z:Size="2">
                <FBDPort z:Ref="3123" i:nil="true" />
                <FBDPort z:Id="3597" i:type="OutputFBDPort">
                  <Alias z:Id="3598">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3357</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3599" z:Size="1">
                    <FBDPortExtSettings z:Id="3600">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3601" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3602">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3575" i:nil="true" />
              <SecondName z:Id="3603">join_i_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>98ef9844-4840-4068-892c-b0954294f66b</SpecificationId>
              <Code z:Ref="3289" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3604" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3361</Id>
              <InputPortsCollection z:Id="3605" z:Size="1">
                <FBDPort z:Ref="3118" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3606" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="3607">Tag</Name>
              <OutputPortsCollection z:Id="3608" z:Size="1">
                <FBDPort z:Id="3609" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3363</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3610" z:Size="1">
                    <FBDPortExtSettings z:Id="3611">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3612" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3613">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3614">_</Prefix>
              <SecondName z:Ref="3607" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="466" i:nil="true" />
              <InputFBDPort z:Ref="3118" i:nil="true" />
              <OutputFBDPort z:Ref="3609" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3615" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3616">Распаковка массива Bool</Description>
              <HelpID>26</HelpID>
              <Id>3343</Id>
              <InputPortsCollection z:Id="3617" z:Size="1">
                <FBDPort z:Ref="3056" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3618" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4640</d8p1:_x>
                <d8p1:_y>4690</d8p1:_y>
              </Location>
              <Name z:Id="3619">DECODER</Name>
              <OutputPortsCollection z:Id="3620" z:Size="1">
                <FBDPort z:Id="3621" i:type="OutputFBDPort">
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>8</ArrayItemsCount>
                  <Id>3345</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>true</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3622" z:Size="8">
                    <FBDPortExtSettings z:Id="3623">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3624">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3625">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3626">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3627">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3628">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3629">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3630">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3631" i:type="d2p1:ArrayOfanyType" z:Size="8">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3632">mas</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3633">YART</Prefix>
              <SecondName z:Id="3634">DEcoderShort</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a3150ec8-8c90-4ba3-8cf5-ea66e59dd0d3</SpecificationId>
              <Code z:Id="3635">//#DECODER (Дешифратор для Short)


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (ShortIn &amp; k) mas[i] = true;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="3636" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1134</Id>
              <InputPortsCollection z:Id="3637" z:Size="1">
                <FBDPort z:Id="3638" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1135</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3639" z:Size="10">
                    <FBDPortExtSettings z:Id="3640">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3641">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3642">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3643">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3644">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3645">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3646">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3647">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3648">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3649">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3650">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3651" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4610</d8p1:_y>
              </Location>
              <Name z:Id="3652">Tag</Name>
              <OutputPortsCollection z:Id="3653" z:Size="1">
                <FBDPort z:Ref="2847" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3654">_</Prefix>
              <SecondName z:Ref="3652" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="140" i:nil="true" />
              <InputFBDPort z:Ref="3638" i:nil="true" />
              <OutputFBDPort z:Ref="2847" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3655" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1111</Id>
              <InputPortsCollection z:Id="3656" z:Size="1">
                <FBDPort z:Id="3657" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3658" z:Size="1">
                    <FBDPortExtSettings z:Id="3659">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3650" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3660" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4570</d8p1:_y>
              </Location>
              <Name z:Ref="3652" i:nil="true" />
              <OutputPortsCollection z:Id="3661" z:Size="1">
                <FBDPort z:Ref="2837" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3654" i:nil="true" />
              <SecondName z:Ref="3652" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="99" i:nil="true" />
              <InputFBDPort z:Ref="3657" i:nil="true" />
              <OutputFBDPort z:Ref="2837" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3662" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1108</Id>
              <InputPortsCollection z:Id="3663" z:Size="1">
                <FBDPort z:Id="3664" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1109</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3665" z:Size="1">
                    <FBDPortExtSettings z:Id="3666">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3650" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3667" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Ref="3652" i:nil="true" />
              <OutputPortsCollection z:Id="3668" z:Size="1">
                <FBDPort z:Ref="2827" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3654" i:nil="true" />
              <SecondName z:Ref="3652" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="222" i:nil="true" />
              <InputFBDPort z:Ref="3664" i:nil="true" />
              <OutputFBDPort z:Ref="2827" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3669" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1105</Id>
              <InputPortsCollection z:Id="3670" z:Size="1">
                <FBDPort z:Id="3671" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3672" z:Size="1">
                    <FBDPortExtSettings z:Id="3673">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3650" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3674" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4480</d8p1:_y>
              </Location>
              <Name z:Ref="3652" i:nil="true" />
              <OutputPortsCollection z:Id="3675" z:Size="1">
                <FBDPort z:Ref="2816" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3654" i:nil="true" />
              <SecondName z:Ref="3652" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="3671" i:nil="true" />
              <OutputFBDPort z:Ref="2816" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3676" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3677">Read holding registers

Внимание: Нельзя использовать более 20 блоков MODBUS RTU MASTER</Description>
              <HelpID>272</HelpID>
              <Id>1117</Id>
              <InputPortsCollection z:Id="3678" z:Size="7">
                <FBDPort z:Id="3679" i:type="InputFBDPort">
                  <Alias z:Id="3680">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1118</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3681" z:Size="1">
                    <FBDPortExtSettings z:Id="3682">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3683" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3684" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3685">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2810" i:nil="true" />
                <FBDPort z:Ref="2821" i:nil="true" />
                <FBDPort z:Ref="2831" i:nil="true" />
                <FBDPort z:Ref="2841" i:nil="true" />
                <FBDPort z:Id="3686" i:type="InputFBDPort">
                  <Alias z:Id="3687">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1123</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3688" z:Size="1">
                    <FBDPortExtSettings z:Id="3689">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3690" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3691" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1300</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3692">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="3693" i:type="InputFBDPort">
                  <Alias z:Id="3694">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1124</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3695" z:Size="1">
                    <FBDPortExtSettings z:Id="3696">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3697" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3698" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3699">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3700" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3800</d8p1:_x>
                <d8p1:_y>4480</d8p1:_y>
              </Location>
              <Name z:Id="3701">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="3702" z:Size="1">
                <FBDPort z:Ref="2804" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3703">YART</Prefix>
              <SecondName z:Ref="3701" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Ref="3194" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3704" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3705">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1126</Id>
              <InputPortsCollection z:Id="3706" z:Size="1">
                <FBDPort z:Ref="2798" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3707" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="3708">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="3709" z:Size="6">
                <FBDPort z:Id="3710" i:type="OutputFBDPort">
                  <Alias z:Id="3711">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1128</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3712" z:Size="1">
                    <FBDPortExtSettings z:Id="3713">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3714" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3715">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="3716" i:type="OutputFBDPort">
                  <Alias z:Id="3717">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3718" z:Size="1">
                    <FBDPortExtSettings z:Id="3719">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3720" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3721">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="3722" i:type="OutputFBDPort">
                  <Alias z:Id="3723">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1130</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3724" z:Size="1">
                    <FBDPortExtSettings z:Id="3725">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3726" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3727">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="3728" i:type="OutputFBDPort">
                  <Alias z:Id="3729">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1131</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3730" z:Size="1">
                    <FBDPortExtSettings z:Id="3731">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3732" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3733">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="3734" i:type="OutputFBDPort">
                  <Alias z:Id="3735">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3736" z:Size="1">
                    <FBDPortExtSettings z:Id="3737">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3738" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3739">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="3740" i:type="OutputFBDPort">
                  <Alias z:Id="3741">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3742" z:Size="1">
                    <FBDPortExtSettings z:Id="3743">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3744" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3745">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3746">YART</Prefix>
              <SecondName z:Ref="3708" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="3238" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3747" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1137</Id>
              <InputPortsCollection z:Id="3748" z:Size="0" />
              <InternalPortsCollection z:Id="3749" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3500</d8p1:_x>
                <d8p1:_y>4420</d8p1:_y>
              </Location>
              <Name z:Id="3750">comment</Name>
              <OutputPortsCollection z:Id="3751" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="3752">_</Prefix>
              <SecondName z:Id="3753">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3754">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</Comment>
              <Height>256.99871895158185</Height>
              <Width>652.8334433743903</Width>
            </FBDItem>
            <FBDItem z:Id="3755" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1140</Id>
              <InputPortsCollection z:Id="3756" z:Size="0" />
              <InternalPortsCollection z:Id="3757" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3420</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Id="3758">comment</Name>
              <OutputPortsCollection z:Id="3759" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="3760">_</Prefix>
              <SecondName z:Id="3761">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3762">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</Comment>
              <Height>384.23943374694227</Height>
              <Width>677.28701152943631</Width>
            </FBDItem>
            <FBDItem z:Id="3763" i:type="DisplayVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1177</Id>
              <InputPortsCollection z:Id="3764" z:Size="0" />
              <InternalPortsCollection z:Id="3765" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3766" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3310" i:nil="true" />
              <SecondName z:Id="3767">newfun_266497545</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>17fe287e-341c-4631-bf6b-2c3c220f2e46</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="3768">
                <ArrayIndex>0</ArrayIndex>
                <TagId>2817</TagId>
              </Tag>
              <FontSize>14</FontSize>
              <Format z:Id="3769">0.#</Format>
            </FBDItem>
            <FBDItem z:Id="3770" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2234</Id>
              <InputPortsCollection z:Id="3771" z:Size="0" />
              <InternalPortsCollection z:Id="3772" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4155.5348040758736</d8p1:_x>
                <d8p1:_y>3993.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="3773">comment</Name>
              <OutputPortsCollection z:Id="3774" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3141" i:nil="true" />
              <SecondName z:Id="3775">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3776">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</Comment>
              <Height>368.73961250369985</Height>
              <Width>829.82943214598617</Width>
            </FBDItem>
            <FBDItem z:Id="3777" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3338</Id>
              <InputPortsCollection z:Id="3778" z:Size="0" />
              <InternalPortsCollection z:Id="3779" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>4380</d8p1:_y>
              </Location>
              <Name z:Id="3780">comment</Name>
              <OutputPortsCollection z:Id="3781" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="3782">_</Prefix>
              <SecondName z:Id="3783">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3784">UEsDBBQAAgAIABk0lVG3WsM8EQEAAOUBAAARAAAAZG9jUHJvcHMvY29yZS54bWxtkU1qwzAQha9itLdl2VBS4SiLlq5aKDTQ0p2QJo6I9YOkxOnZuuiReoXaSm0cCGjz9L430sz8fv80m7PushP4oKxZI1KUKAMjrFSmXaNj3OUrtGGNcFRYD6/eOvBRQciGmAlUijXax+goxu7ou8L6FkuBoQMNJgZMCoLRzEbwOtwMJGdBahW/HNxEJ3Omz0HNYN/3RV8ntCpLgj9ent/EHjTPlQmRGwFTSrg5FBIRiqE3M5g76zWPIRVxXBx4C2OxO6whcskjx+MocjfPArFGCio88Gg9q0mDF7L5b/tyATIbvksvzU3Oe/3wuH1CrCqrMidkOFtS03pFy/vPsdZVPu3Cw0mNC2PDW0uZ1PWi2B9QSwMEFAACAAgAGTSVUQGzw6T7AQAAlQUAABEAAAB3b3JkL2RvY3VtZW50LnhtbL2UzW7UMBSFXyXyPuOE0lKiyVQIJGBRqWJo945zk1jEP7KdpMMKeBm2XTASUoX6Cpkn4RXqZCZJf1AFKrCJfZx7P59jJf55eTU/OuelV4M2TIoYhbMAeSCoTJnIY1TZzD9ER4t5E6WSVhyE9Vy9MFETo8JaFWFsaAGcmJlUINy7TGpOrJM6x43UqdKSgjEOx0v8JAgOMCdMoAGjzD0QZ1RLIzM7o5JjmWWMQo9y7WFwB7osiIKBxunvuOJEf6iU7+CKWJawktlV72w0FQYuuhbRDuKPjrqmaOso6nwMHfVD9TUvp7jh08flfaVJ44YJmD+O91rLSk20+wf4R7SXRNTEII/T6G0upCZJCTHqUqPuG0pkuupG1T9OdDfo7VASkXtNVJMyRrry350ipxKWshsSiLEvDCPjEl7M8Y6AJ+BfpDZR/71HRhHqgigNBnQNaNF+3Xxp1+2P9nu79vrpVXvZXnhdp932P+QFhH+6nLyMcvKyW7rtZXH25th/752R0gK9tRUeDvX/ncBF+23zqV1vPv/r0LG398usBqjd1awUDLsIOLcnJIce4yrz5Uf3yl1XYbi/H3T7FTE62HveT90950IFY+0x0W61hMy6+r5Cs7wYhZVqmCbSWskHVQBJQcfoWXDYyUxKe0Pmle1lMEQbnOPhl8DT/bq4BlBLAwQUAAIACAAZNJVRVsu7UN8CAACXCgAADwAAAHdvcmQvc3R5bGVzLnhtbN1WwW7cIBD9FYt7Y+8qqqJVnCjZKkqlNF01Ue7YYJsuBgQ4TvprPfST+gsdMGx27W1SqdtLffHwgDfDvGHsn99/nJ4/tTx5pNowKXI0O8pQQkUpCRN1jjpbvTtB52en/cLYZ05NAquFWfQ5aqxVizQ1ZUNbbI6kogLmKqlbbGGo67SXmigtS2oMkLU8nWfZ+7TFTCBHSGT5gVa449a4oV7pMAwj/7qSwpqkX2BTMpajJeas0AwB0lwIs42kbn0BE4+Y5ygLABsDJVZmjBmr2ZqOUSFXWspqDD9iwUwzoZVc6gjizspI/S2C83mAuogIKWhc1pCIlpxi7Q7oKSNZv6gY36UGzewFZ7WIOwtsKGcbTo5F7aw0ZDMd51iNR+61plTd0ic7PqDDb4B8kjyFa3qpKV5fUhB/ksWeEdkvQUUteZybxVN3SmmoDsd727UFFOFEmj2JmWQi8lwAdP2sGiqmPAqXUIQAuwx96Th9yaxDQJ/jzA0Kfwq/EaquslQHe5hwLgLX9poxPNSeID5abeyNd+HXc1rZYGpWN3a7hoSFzHeY322i3TlEwciknr+WEXHEKAiuguDbEqeTK+evNGy3zwqiU1jjWmPVuND81EeSo5WPlAy7nHT+auB2I/Stu/E8FsNKD4YejDQwTb2VDbgrIXU73pZveQvhJ6sYbOI6RBSZtuyaEULF3wUxdev0S4YSjVrAZSOfN3dvmR04hvkkBqhsqqFW12jDPOk8GTxXV+NG49ovp2jUDH4Tj8WFW7sVy/2flUByP+z0vm3Bh/DAWFLOP+FhJBVs6kP9Dw7JE44dCyp4mJ5lJ/sWFNJa2b7C4G/UKxTpbkDpdqA61q4t39JsT46mWfHpSO5Yq+A1218299mefF3CdxNa4Uu+dkR035QcHXsD2kRsK6bB0GjDoNIQR7DDZyTzz26iD8670efgzFHYgxMz+Isg9PrfUT8cnjqdlMn/cMmiZc5+AVBLAwQUAAIACAAZNJVRCATmC3MAAAB/AAAAEgAAAHdvcmQvbnVtYmVyaW5nLnhtbA2LQQ7CIBAAv0K4W9CDMaS0b0G6bUm6u4Sl4t88+CS/IMeZyfw+33F+46FeUCQxeX0drFZAkZdEm9dnXS8PPU9jc3TiE0q3qg8krnm915qdMRJ3wCADZ6DeVi4YaseymcZlyYUjiPQTD3Oz9m4wJNLKTH9QSwMEFAACAAgAGTSVUbx+5jZVAQAAlAIAABEAAAB3b3JkL3NldHRpbmdzLnhtbGWSTW6DMBCFrxJ53xDITysUErWrbKIu6AUGewArxrZsE8rZuuiReoUaiEWb7Ga+92bGM/LP1/f++NmIxRWN5UpmJF6uyAIlVYzLKiOtK59eyPGw71KLznlmF94vbdplpHZOp1FkaY0N2KXSKL1WKtOA86mpok4Zpo2iaK0vbUSUrFa7qAEuydCScasF9G9AL5VRrWR5DRoXXXoFkRH/kGh0YQmtcB9Q5E7poD4nQYfWqVOva5Tg/A735XhF+SrZO2MnBOb3vDdQ1Whwc5RPi3qbhAYzMlFecMFdf1YMiZdawx8O0HBqlFWlW/qSSJUlpziegISRcTLOjP4NFSYfGuAZtJ7mFlWcEcGr2sVDqfMZA3MZk6JKbloyasmkjQlQinJw34KZJYH98a0DW89sE9hmZtvAtjPbBbYbWN1rNILLiz9JCAdeKiFUh+w06w8oHCR8r8MvUEsDBBQAAgAIABk0lVFtUt6/nwUAAP0bAAAVAAAAd29yZC90aGVtZS90aGVtZTEueG1s7VlPb9s2FP8qhO6tLFtynaBuETt2uzVpg8Tr0CMt0xJrShRIOqlvQ3scMGBYN+wyYLcdhm0BWmCHZdiHydZh64B8hVG0LFE21SRNVmxYfLBF6vfe7/3heyLlk59+uXn7SUTAPmIc07htOddrFkCxT0c4DtrWVIyvtazbt27CdRGiCAEJjvk6bFuhEMm6bXNfTkN+nSYolvfGlEVQyCEL7BGDB1JJROx6rda0I4hjC8QwQm3rwXiMfQQGqUorV94j8isWPJ3wCdvzFaMuobCjiZP+8BnvEgb2IWlbkmdEDwboibAAgVzIG22rpj4WsG/dtHMpIiqENcG++iwEM4nRpK4EWTDMJZ2+u3Zjs2CozxlWgb1er9tzCo0KAX1feuusgN1+y+nkWjXU/HJVe7fm1dwlAY2hsSKw1ul0vLWyQKMQcFcEWrWmu1EvC7iFgLfqQ2ej222WBbxCoLki0L+x1nSXBBQqJDierMDTzBYpyjFjSu4a8S2Jb+VroYDZ2kqbK4hF1bqL4GPK+hKgsgwFjoGYJWgMfYnrwmjIMFQMcB1B7VY25/PVuZQOcJ/hRLSt9xMoC6TAnBx9d3L0ApwcHR4/fXn89MfjZ8+On/5gkrwL40CXfP3Np3999RH488XXr59/XiHAdYHfvv/4158/q0AKHfnqi8PfXx6++vKTP759bsJvMDjU8QMcIQ7uowOwS6PUPwMFGrJzigxCiEsiMJRQE7InwhLy/gwSI7CDyjF8yGRbMCLvTB+X7N0L2VRgE/JeGJWQ25SSDmVmn+4pOs2naRxU8LOpDtyFcN9I313Kcm+ayJWNjUq7ISqZukNk4mGAYiRAeo9OEDLJPcK4FN9t7DPK6ViARxh0IDYHZoCHwix1F0cyQTOjjTLrpQhtPwQdSowEm2i/DJUVAolRKSKlaN6BUwEjs9UwIjp0C4rQaOjejPmlwHMhkx4gQkFvhDg3Cj1gs5LJ96BsUeYVsE1mURnKBJ4YoVuQUh26SSfdEEaJ2W4chzr4PT6RKxaCHSrMdtByzaRjmRAYV2f+IUbinMX+AQ5C82JJ70yZsUYQLdfojIwhihcPgFIrj3D8pr5OsGzsV319qa9vyIedsZ6Wu3kl8D/awzfhNN5BaZ1ctfCrFn7Vwt9Q4f9E4y56ta3v1pWeqHLrPsaE7IkZQVtcdXkuXRz15aQaKKH8qJCE8nLBVwIGDKprwKj4EItwL4SJ5HEURcAz3QEHCeXyiGJVKlcnXiy9VnNefkyVcCi26Wg+3yidX3NFahRwnaqRqjgrXePGRemcOfKMfI5Xwee9mc/WYirLCMD0fYTTrGdmch8SNEqjP1ctMEG7yBeZvkWuLj1vPIQjlCXOMXvmNM4aydbpgdT41hoX5TtL5nRCt4rQu4zU1U5Lnb1auSQuj8CBNNOrexbwo0Tq5Gk7gySI25YvModOLfZltytWrFOrdrtEkjAuNiEP52LqVv7uJy7srntuqu4Chpu61BnJGy3n3ZPbywlE47FMfMVMMczu0alAbC8cHYAhmbJdKC1350tqhLl8eNQXAyaL081WW7nos8W//C4pKwpIkhBm7aml53qOV9e5EWqk2WdXGP+WvjQu0Rfv/+xLunzlJrgxUqc1uTVgEKTrtG1RJkIq200SYr/P5GZCkUnDgDwGqv5E0nfiqbFof9Gv7IWSeXcLQrGLA8CwbHEiZAjtiMzTU7Q5i3aYlUemKestucE8mf8O0T4ig7Rym2kILBDmDSSLhQIuJ8421dgw6P+bN0Ru1YbolB1DQeWeZ4Pi6u1eewqsXdSKcz5t6xVu172zP20TeZ4B6Zds5Jj5pNj+Dqh6xBb7Tbkkr7WyUswnh9Lqlu5fqutdbq+KtLSqVsGl7lO1+Deq4n8K4dvH3zOE3ztX9O3VYra1k5AaLf23tpi59TdQSwMEFAACAAgAGTSVUWJRBP/XAAAAvgEAAAsAAABfcmVscy8ucmVsc52RX0oDMRCHrxLmvTu7hapI01Lqi2+leIGQzO6GNn+YTNWezQeP5BWMItJKBfFxZn7zzRfy9vI6Xz6HvXokLj5FDV3TgqJok/Nx0HCQfnIDy8V8S3sjNVFGn4uqK7FoGEXyLWKxIwVTmpQp1kmfOBipJQ+Yjd2ZgXDatlfIpww4Z6p7p2E766ar9fWsA/VwzPSXA6nvvaW7ZA+Boly48yNRyYYHEg34lNih++o3lQsKL0jZxPQPsd9fjoHEOCMGP9CTzHWbxVM5catam9ovn5FvNzz7hcU7UEsDBBQAAgAIABk0lVFNu4E6MgEAABMEAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbLWTTU7DMBCFr2J5WyVuWSCEmnYBbKELLmCcSWsR/8gzKe3ZWHAkrsAkabNApS2ibCI58977ni378/1jOt+4WqwhoQ2+kJN8LAV4E0rrl4VsqMpu5Hw2fd5GQMFSj4VcEcVbpdCswGnMQwTPkyokp4mXaamiNq96CepqPL5WJngCTxm1GXI2vYdKNzWJhw3/7rEJapTirhe2rELqGGtrNPFcrX35jZLtCDk7Ow2ubMQRC6RQBxHd6EfC3vjEJ5FsCWKhEz1qxzL1FlKpymAax9b8eM6BpqGqrIHB36bFFAwg8hG7Oh8mTls/OlnEN+4FElsv32SIPt0CaVsDXr5Cn3sGH4jY8R8NdslHO7B9kUJEvtsJft9hf3lbd8b0CInsOdsmfnHQfyd/3noXMzBV98RnX1BLAwQUAAIACAAZNJVRzO5/zOIAAACxAgAAHAAAAHdvcmQvX3JlbHMvZG9jdW1lbnQueG1sLnJlbHOtkktuAjEMhq8Sed/JTBdVVRHYsOmmi8IF0uB5qJOHYk9VzsaCI3EFTEE8JIS6mKX/OJ8/OdlttpPZr+/VD2bqYjBQFSUoDC6uutAYGLh+eoXZdPKJvWXpoLZLpORKIAMtc3rTmlyL3lIREwY5qWP2lqXMjU7WfdsG9XNZvuh8zYBbpnpfGZBgweseK1DLdcL/DIh13TmcRzd4DHxnjqYDkYRoc4Ns4FgXwgGl70t8DH5UhTD4L8yy0IvFOXooskBm6aFxF3KCXq3klDx0WcrIcV+GD8SLxV95DKuzib75eNM9UEsBAhQAFAACAAgAGTSVUbdawzwRAQAA5QEAABEAAAAAAAAAAAAAAAAAAAAAAGRvY1Byb3BzL2NvcmUueG1sUEsBAhQAFAACAAgAGTSVUQGzw6T7AQAAlQUAABEAAAAAAAAAAAAAAAAAQAEAAHdvcmQvZG9jdW1lbnQueG1sUEsBAhQAFAACAAgAGTSVUVbLu1DfAgAAlwoAAA8AAAAAAAAAAAAAAAAAagMAAHdvcmQvc3R5bGVzLnhtbFBLAQIUABQAAgAIABk0lVEIBOYLcwAAAH8AAAASAAAAAAAAAAAAAAAAAHYGAAB3b3JkL251bWJlcmluZy54bWxQSwECFAAUAAIACAAZNJVRvH7mNlUBAACUAgAAEQAAAAAAAAAAAAAAAAAZBwAAd29yZC9zZXR0aW5ncy54bWxQSwECFAAUAAIACAAZNJVRbVLev58FAAD9GwAAFQAAAAAAAAAAAAAAAACdCAAAd29yZC90aGVtZS90aGVtZTEueG1sUEsBAhQAFAACAAgAGTSVUWJRBP/XAAAAvgEAAAsAAAAAAAAAAAAAAAAAbw4AAF9yZWxzLy5yZWxzUEsBAhQAFAACAAgAGTSVUU27gToyAQAAEwQAABMAAAAAAAAAAAAAAAAAbw8AAFtDb250ZW50X1R5cGVzXS54bWxQSwECFAAUAAIACAAZNJVRzO5/zOIAAACxAgAAHAAAAAAAAAAAAAAAAADSEAAAd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsc1BLBQYAAAAACQAJAEECAADuEQAAAAA=</Comment>
              <Height>485.73961250369985</Height>
              <Width>829.82943214598617</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="3785">Read IR HR</Name>
          <Parent z:Ref="2759" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>2</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="3786">Read_MODBUS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="3787" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="3788" z:Size="1">
        <d2p1:anyType z:Id="3789" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="3790" z:Size="63">
            <FBDConnector z:Id="3791">
              <EndFBDPort z:Id="3792" i:type="InputFBDPort">
                <Alias z:Id="3793">DO.02: DOUT_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1447</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3794" z:Size="2">
                  <FBDPortExtSettings z:Id="3795">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3796">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3797" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="3798" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                  <d2p1:anyType z:Id="3799" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">4000</d2p1:anyType>
                </Value>
                <VariableName z:Ref="51" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3800" i:type="OutputFBDPort">
                <Alias z:Id="3801">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1434</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3802" z:Size="2">
                  <FBDPortExtSettings z:Id="3803">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3804">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3797" i:nil="true" />
                <VariableName z:Id="3805">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3806">
              <EndFBDPort z:Id="3807" i:type="InputFBDPort">
                <Alias z:Id="3808">X[t)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1250</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3809" z:Size="1">
                  <FBDPortExtSettings z:Id="3810">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3811" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3812" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">44.0672951</d2p1:anyType>
                </Value>
                <VariableName z:Id="3813">Feedback</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3814" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1247</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3815" z:Size="1">
                  <FBDPortExtSettings z:Id="3816">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3811" i:nil="true" />
                <VariableName z:Id="3817">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3818">
              <EndFBDPort z:Id="3819" i:type="InputFBDPort">
                <Alias z:Id="3820">Вход 1619</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1251</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3821" z:Size="1">
                  <FBDPortExtSettings z:Id="3822">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3823" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3824" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="3825">KP</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3826" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1279</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3827" z:Size="1">
                  <FBDPortExtSettings z:Id="3828">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3823" i:nil="true" />
                <VariableName z:Id="3829">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3830">
              <EndFBDPort z:Id="3831" i:type="InputFBDPort">
                <Alias z:Id="3832">Вход 1623</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1253</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3833" z:Size="1">
                  <FBDPortExtSettings z:Id="3834">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3835" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3836" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.2</d2p1:anyType>
                </Value>
                <VariableName z:Id="3837">KD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3838" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1289</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3839" z:Size="1">
                  <FBDPortExtSettings z:Id="3840">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3835" i:nil="true" />
                <VariableName z:Id="3841">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3842">
              <EndFBDPort z:Id="3843" i:type="InputFBDPort">
                <Alias z:Id="3844">Вход 1621</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1252</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3845" z:Size="1">
                  <FBDPortExtSettings z:Id="3846">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3847" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3848" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.02</d2p1:anyType>
                </Value>
                <VariableName z:Id="3849">KI</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3850" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1286</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3851" z:Size="1">
                  <FBDPortExtSettings z:Id="3852">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3847" i:nil="true" />
                <VariableName z:Ref="3841" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3853">
              <EndFBDPort z:Id="3854" i:type="InputFBDPort">
                <Alias z:Id="3855">Вход 1629</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1262</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3856" z:Size="1">
                  <FBDPortExtSettings z:Id="3857">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3858" i:type="d2p1:ArrayOfanyType" z:Size="17">
                  <d2p1:anyType z:Id="3859" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.424999982</d2p1:anyType>
                  <d2p1:anyType z:Id="3860" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.440677166</d2p1:anyType>
                  <d2p1:anyType z:Id="3861" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                  <d2p1:anyType z:Id="3862" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3863" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                  <d2p1:anyType z:Id="3864" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                  <d2p1:anyType z:Id="3865" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.02</d2p1:anyType>
                  <d2p1:anyType z:Id="3866" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.2</d2p1:anyType>
                  <d2p1:anyType z:Id="3867" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3868" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">-0.0156632364</d2p1:anyType>
                  <d2p1:anyType z:Id="3869" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3870" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3871" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3872" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3873" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3874" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3875" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="3876">BUFFER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3877" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>17</ArrayItemsCount>
                <Id>1301</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3878" z:Size="17">
                  <FBDPortExtSettings z:Id="3879">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3880">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3881">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3882">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3883">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3884">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3885">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3886">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3887">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3888">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3889">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3890">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3891">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3892">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3893">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3894">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3895">
                    <Index>16</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3858" i:nil="true" />
                <VariableName z:Id="3896">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3897">
              <EndFBDPort z:Id="3898" i:type="InputFBDPort">
                <Alias z:Id="3899">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1261</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3900" z:Size="1">
                  <FBDPortExtSettings z:Id="3901">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3902" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3903" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">10</d2p1:anyType>
                </Value>
                <VariableName z:Id="3904">TestCMD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3905" i:type="OutputFBDPort">
                <Alias z:Id="3906">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1297</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3907" z:Size="1">
                  <FBDPortExtSettings z:Id="3908">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3902" i:nil="true" />
                <VariableName z:Id="3909">Testconfig</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3910">
              <EndFBDPort z:Id="3911" i:type="InputFBDPort">
                <Alias z:Id="3912">Test RUN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1259</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3913" z:Size="1">
                  <FBDPortExtSettings z:Id="3914">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3915" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3916" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3917">Test</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3918" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1305</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3919" z:Size="1">
                  <FBDPortExtSettings z:Id="3920">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3915" i:nil="true" />
                <VariableName z:Id="3921">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3922">
              <EndFBDPort z:Id="3923" i:type="InputFBDPort">
                <Alias z:Id="3924">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1484</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3925" z:Size="1">
                  <FBDPortExtSettings z:Id="3926">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3927" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3928" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3929">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3930" i:type="OutputFBDPort">
                <Alias z:Id="3931"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1522</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3932" z:Size="1">
                  <FBDPortExtSettings z:Id="3933">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3934" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3935" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3936">out_1522</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3937">
              <EndFBDPort z:Id="3938" i:type="InputFBDPort">
                <Alias z:Id="3939">K IN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1485</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3940" z:Size="1">
                  <FBDPortExtSettings z:Id="3941">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3942" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3943" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">80</d2p1:anyType>
                </Value>
                <VariableName z:Id="3944">KIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3945" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1530</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3946" z:Size="1">
                  <FBDPortExtSettings z:Id="3947">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3942" i:nil="true" />
                <VariableName z:Id="3948">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3949">
              <EndFBDPort z:Id="3950" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1532</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3951" z:Size="1">
                  <FBDPortExtSettings z:Id="3952">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3953">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3930" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3954">
              <EndFBDPort z:Id="3955" i:type="InputFBDPort">
                <Alias z:Id="3956">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1528</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3957" z:Size="1">
                  <FBDPortExtSettings z:Id="3958">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3959" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3960" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3961">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3962" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1533</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3963" z:Size="1">
                  <FBDPortExtSettings z:Id="3964">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3959" i:nil="true" />
                <VariableName z:Id="3965">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3966">
              <EndFBDPort z:Id="3967" i:type="InputFBDPort">
                <Alias z:Id="3968">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1430</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3969" z:Size="1">
                  <FBDPortExtSettings z:Id="3970">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3971" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3972" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3973">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3930" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3974">
              <EndFBDPort z:Id="3975" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1538</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3976" z:Size="1">
                  <FBDPortExtSettings z:Id="3977">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3978">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3930" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3979">
              <EndFBDPort z:Id="3980" i:type="InputFBDPort">
                <Alias z:Id="3981">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1541</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3982" z:Size="1">
                  <FBDPortExtSettings z:Id="3983">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3984" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3985" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3986">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3987" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1539</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3988" z:Size="1">
                  <FBDPortExtSettings z:Id="3989">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3984" i:nil="true" />
                <VariableName z:Id="3990">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3991">
              <EndFBDPort z:Id="3992" i:type="InputFBDPort">
                <Alias z:Id="3993">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1429</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3994" z:Size="1">
                  <FBDPortExtSettings z:Id="3995">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3996" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3997" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">4000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3998">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3999" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1543</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4000" z:Size="1">
                  <FBDPortExtSettings z:Id="4001">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3996" i:nil="true" />
                <VariableName z:Id="4002">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4003">
              <EndFBDPort z:Id="4004" i:type="InputFBDPort">
                <Alias z:Id="4005">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1221</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4006" z:Size="1">
                  <FBDPortExtSettings z:Id="4007">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4008" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4009" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1169.93</d2p1:anyType>
                </Value>
                <VariableName z:Id="4010">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4011" i:type="OutputFBDPort">
                <Alias z:Id="4012">AI.01: AIN_1_WaterT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1423</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4013" z:Size="1">
                  <FBDPortExtSettings z:Id="4014">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4008" i:nil="true" />
                <VariableName z:Ref="7" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4015">
              <EndFBDPort z:Id="4016" i:type="InputFBDPort">
                <Alias z:Id="4017">DO.01: DOUT_1_WaterPWM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1453</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4018" z:Size="2">
                  <FBDPortExtSettings z:Id="4019">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4020">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="4021" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="4022" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                  <d2p1:anyType z:Id="4023" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1840</d2p1:anyType>
                </Value>
                <VariableName z:Ref="49" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4024" i:type="OutputFBDPort">
                <Alias z:Id="4025">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1488</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4026" z:Size="2">
                  <FBDPortExtSettings z:Id="4027">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4028">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="4021" i:nil="true" />
                <VariableName z:Id="4029">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4030">
              <EndFBDPort z:Id="4031" i:type="InputFBDPort">
                <Alias z:Id="4032">SP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1249</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4033" z:Size="1">
                  <FBDPortExtSettings z:Id="4034">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4035" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4036" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">42.5</d2p1:anyType>
                </Value>
                <VariableName z:Id="4037">Reference</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4038" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1693</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4039" z:Size="1">
                  <FBDPortExtSettings z:Id="4040">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4035" i:nil="true" />
                <VariableName z:Id="4041">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4042">
              <EndFBDPort z:Id="4043" i:type="InputFBDPort">
                <Alias z:Id="4044">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1692</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4045" z:Size="2">
                  <FBDPortExtSettings z:Id="4046">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4047">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4048" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4049" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">17.5</d2p1:anyType>
                </Value>
                <VariableName z:Id="4050">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4051" i:type="OutputFBDPort">
                <Alias z:Id="4052"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1695</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4053" z:Size="1">
                  <FBDPortExtSettings z:Id="4054">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4055" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4056" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">25</d2p1:anyType>
                </Value>
                <VariableName z:Id="4057">out_1695</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4058">
              <EndFBDPort z:Id="4059" i:type="InputFBDPort">
                <Alias z:Id="4060">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1699</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4061" z:Size="1">
                  <FBDPortExtSettings z:Id="4062">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Id="4063">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="4051" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4064">
              <EndFBDPort z:Id="4065" i:type="InputFBDPort">
                <Alias z:Id="4066">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1705</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4067" z:Size="1">
                  <FBDPortExtSettings z:Id="4068">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4069" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4070" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">19.0672951</d2p1:anyType>
                </Value>
                <VariableName z:Id="4071">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4072" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1700</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4073" z:Size="1">
                  <FBDPortExtSettings z:Id="4074">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4069" i:nil="true" />
                <VariableName z:Id="4075">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4076">
              <EndFBDPort z:Id="4077" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1702</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4078" z:Size="1">
                  <FBDPortExtSettings z:Id="4079">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4080" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4081" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">19.0671844</d2p1:anyType>
                </Value>
                <VariableName z:Id="4082">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4083" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1710</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4084" z:Size="1">
                  <FBDPortExtSettings z:Id="4085">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4080" i:nil="true" />
                <VariableName z:Id="4086">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4087">
              <EndFBDPort z:Id="4088" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1714</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4089" z:Size="1">
                  <FBDPortExtSettings z:Id="4090">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4035" i:nil="true" />
                <VariableName z:Id="4091">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="4038" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4092">
              <EndFBDPort z:Ref="4043" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4093" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1719</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4094" z:Size="1">
                  <FBDPortExtSettings z:Id="4095">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4048" i:nil="true" />
                <VariableName z:Id="4096">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4097">
              <EndFBDPort z:Id="4098" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1685</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4099" z:Size="1">
                  <FBDPortExtSettings z:Id="4100">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4101" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4102" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4082" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4103" i:type="OutputFBDPort">
                <Alias z:Id="4104">Выход 1257</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1268</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4105" z:Size="1">
                  <FBDPortExtSettings z:Id="4106">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4101" i:nil="true" />
                <VariableName z:Id="4107">Y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4108">
              <EndFBDPort z:Id="4109" i:type="InputFBDPort">
                <Alias z:Id="4110">DO.03: DOUT_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1910</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4111" z:Size="2">
                  <FBDPortExtSettings z:Id="4112">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4113">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="4114" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="4115" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">50</d2p1:anyType>
                  <d2p1:anyType z:Id="4116" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">25</d2p1:anyType>
                </Value>
                <VariableName z:Ref="54" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4117" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1908</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4118" z:Size="2">
                  <FBDPortExtSettings z:Id="4119">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4120">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="4114" i:nil="true" />
                <VariableName z:Id="4121">mass</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4122">
              <EndFBDPort z:Id="4123" i:type="InputFBDPort">
                <Alias z:Id="4124">MIN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1255</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4125" z:Size="1">
                  <FBDPortExtSettings z:Id="4126">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4127" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4128" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="4129">PID_Min</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4130" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2081</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4131" z:Size="1">
                  <FBDPortExtSettings z:Id="4132">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4127" i:nil="true" />
                <VariableName z:Id="4133">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4134">
              <EndFBDPort z:Id="4135" i:type="InputFBDPort">
                <Alias z:Id="4136">MAX</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1254</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4137" z:Size="1">
                  <FBDPortExtSettings z:Id="4138">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4139" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4140" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                </Value>
                <VariableName z:Id="4141">PID_Max</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4142" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2078</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4143" z:Size="1">
                  <FBDPortExtSettings z:Id="4144">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4139" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4145">
              <EndFBDPort z:Id="4146" i:type="InputFBDPort">
                <Alias z:Id="4147">K filter</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1222</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4148" z:Size="1">
                  <FBDPortExtSettings z:Id="4149">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4150" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4151" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.001</d2p1:anyType>
                </Value>
                <VariableName z:Id="4152">k</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4153" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2106</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4154" z:Size="1">
                  <FBDPortExtSettings z:Id="4155">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4150" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4156">
              <EndFBDPort z:Id="4157" i:type="InputFBDPort">
                <Alias z:Id="4158">DifErrReset</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1263</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4159" z:Size="1">
                  <FBDPortExtSettings z:Id="4160">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4161" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4162" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4163">DER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4164" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2312</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4165" z:Size="1">
                  <FBDPortExtSettings z:Id="4166">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="4161" i:nil="true" />
                <VariableName z:Id="4167">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4168">
              <EndFBDPort z:Id="4169" i:type="InputFBDPort">
                <Alias z:Id="4170">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4171" z:Size="1">
                  <FBDPortExtSettings z:Id="4172">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3811" i:nil="true" />
                <VariableName z:Id="4173">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3814" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4174">
              <EndFBDPort z:Id="4175" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1246</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4176" z:Size="1">
                  <FBDPortExtSettings z:Id="4177">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4178" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4179" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">44.0663223</d2p1:anyType>
                </Value>
                <VariableName z:Id="4180">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4181" i:type="OutputFBDPort">
                <Alias z:Id="4182">T (°C)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1224</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4183" z:Size="1">
                  <FBDPortExtSettings z:Id="4184">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4178" i:nil="true" />
                <VariableName z:Id="4185">t</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4186">
              <EndFBDPort z:Id="4187" i:type="InputFBDPort">
                <Alias z:Id="4188">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2604</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4189" z:Size="4">
                  <FBDPortExtSettings z:Id="4190">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4191">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4192">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4193">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4194" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType z:Id="4195" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="4196" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="4197" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="4198" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="4199">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4200" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2620</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4201" z:Size="4">
                  <FBDPortExtSettings z:Id="4202">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4203">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4204">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4205">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4194" i:nil="true" />
                <VariableName z:Id="4206">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4207">
              <EndFBDPort z:Id="4208" i:type="InputFBDPort">
                <Alias z:Id="4209">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2603</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4210" z:Size="4">
                  <FBDPortExtSettings z:Id="4211">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4212">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4213">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4214">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4215" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType z:Id="4216" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">-100</d2p1:anyType>
                  <d2p1:anyType z:Id="4217" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="4218" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="4219" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">200</d2p1:anyType>
                </Value>
                <VariableName z:Id="4220">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4221" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2617</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4222" z:Size="4">
                  <FBDPortExtSettings z:Id="4223">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4224">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4225">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4226">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4215" i:nil="true" />
                <VariableName z:Ref="4206" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4227">
              <EndFBDPort z:Id="4228" i:type="InputFBDPort">
                <Alias z:Id="4229">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2622</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4230" z:Size="2">
                  <FBDPortExtSettings z:Id="4231">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4232">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4101" i:nil="true" />
                <VariableName z:Id="4233">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="4103" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4234">
              <EndFBDPort z:Ref="4228" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4235" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2478</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4236" z:Size="1">
                  <FBDPortExtSettings z:Id="4237">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4238" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4239" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">23</d2p1:anyType>
                </Value>
                <VariableName z:Id="4240">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4241">
              <EndFBDPort z:Id="4242" i:type="InputFBDPort">
                <Alias z:Id="4243">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2602</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4244" z:Size="1">
                  <FBDPortExtSettings z:Id="4245">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4246" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4247" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">23</d2p1:anyType>
                </Value>
                <VariableName z:Id="4248">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4249" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2623</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4250" z:Size="1">
                  <FBDPortExtSettings z:Id="4251">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4246" i:nil="true" />
                <VariableName z:Id="4252">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4253">
              <EndFBDPort z:Id="4254" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2626</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4255" z:Size="1">
                  <FBDPortExtSettings z:Id="4256">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4257" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4258" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">23</d2p1:anyType>
                </Value>
                <VariableName z:Id="4259">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4260" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2605</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4261" z:Size="1">
                  <FBDPortExtSettings z:Id="4262">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4257" i:nil="true" />
                <VariableName z:Id="4263">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4264">
              <EndFBDPort z:Id="4265" i:type="InputFBDPort">
                <Alias z:Id="4266">Вход 2817</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2631</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4267" z:Size="1">
                  <FBDPortExtSettings z:Id="4268">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="4269" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4270" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="4271">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4272" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2635</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4273" z:Size="1">
                  <FBDPortExtSettings z:Id="4274">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="4269" i:nil="true" />
                <VariableName z:Ref="4206" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4275">
              <EndFBDPort z:Id="4276" i:type="InputFBDPort">
                <Alias z:Id="4277">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2630</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4278" z:Size="2">
                  <FBDPortExtSettings z:Id="4279">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4280">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4281" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4282" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">23</d2p1:anyType>
                </Value>
                <VariableName z:Id="4283">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4284" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2627</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4285" z:Size="1">
                  <FBDPortExtSettings z:Id="4286">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4281" i:nil="true" />
                <VariableName z:Ref="4206" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4287">
              <EndFBDPort z:Ref="4276" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4288" i:type="OutputFBDPort">
                <Alias z:Id="4289"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2637</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4290" z:Size="1">
                  <FBDPortExtSettings z:Id="4291">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4292" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4293" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="4294">out_2637</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4295">
              <EndFBDPort z:Id="4296" i:type="InputFBDPort">
                <Alias z:Id="4297">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1483</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4298" z:Size="1">
                  <FBDPortExtSettings z:Id="4299">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4300" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4301" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">23</d2p1:anyType>
                </Value>
                <VariableName z:Id="4302">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4303" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2632</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4304" z:Size="1">
                  <FBDPortExtSettings z:Id="4305">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4300" i:nil="true" />
                <VariableName z:Id="4306">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4307">
              <EndFBDPort z:Id="4308" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2477</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4309" z:Size="1">
                  <FBDPortExtSettings z:Id="4310">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4311" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4312" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">23</d2p1:anyType>
                </Value>
                <VariableName z:Id="4313">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4314" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2642</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4315" z:Size="1">
                  <FBDPortExtSettings z:Id="4316">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4311" i:nil="true" />
                <VariableName z:Id="4317">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4318">
              <EndFBDPort z:Id="4319" i:type="InputFBDPort">
                <Alias z:Id="4320">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2639</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4321" z:Size="1">
                  <FBDPortExtSettings z:Id="4322">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4323" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4324" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">42.5</d2p1:anyType>
                </Value>
                <VariableName z:Id="4325">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4326" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1715</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4327" z:Size="1">
                  <FBDPortExtSettings z:Id="4328">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4323" i:nil="true" />
                <VariableName z:Id="4329">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4330">
              <EndFBDPort z:Id="4331" i:type="InputFBDPort">
                <Alias z:Id="4332">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2662</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4333" z:Size="5">
                  <FBDPortExtSettings z:Id="4334">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4335">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4336">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4337">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4338">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4339" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4340" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">13.2167578</d2p1:anyType>
                </Value>
                <VariableName z:Id="4341">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4342" i:type="OutputFBDPort">
                <Alias z:Ref="4289" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2666</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4343" z:Size="1">
                  <FBDPortExtSettings z:Id="4344">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4345" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4346" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">450</d2p1:anyType>
                </Value>
                <VariableName z:Id="4347">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4348">
              <EndFBDPort z:Ref="4331" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4349" i:type="OutputFBDPort">
                <Alias z:Id="4350"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2668</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4351" z:Size="1">
                  <FBDPortExtSettings z:Id="4352">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4353" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4354" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">350</d2p1:anyType>
                </Value>
                <VariableName z:Id="4355">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4356">
              <EndFBDPort z:Ref="4331" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4357" i:type="OutputFBDPort">
                <Alias z:Id="4358"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2674</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4359" z:Size="1">
                  <FBDPortExtSettings z:Id="4360">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4361" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4362" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="4363">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4364">
              <EndFBDPort z:Ref="4331" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4365" i:type="OutputFBDPort">
                <Alias z:Id="4366"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2676</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4367" z:Size="1">
                  <FBDPortExtSettings z:Id="4368">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4369" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4370" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="4371">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4372">
              <EndFBDPort z:Ref="4331" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4373" i:type="OutputFBDPort">
                <Alias z:Id="4374"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2678</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4375" z:Size="1">
                  <FBDPortExtSettings z:Id="4376">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4377" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4378" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="4379">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4380">
              <EndFBDPort z:Id="4381" i:type="InputFBDPort">
                <Alias z:Id="4382">Вход 2817</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2663</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4383" z:Size="1">
                  <FBDPortExtSettings z:Id="4384">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="4385" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4386" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">2</d2p1:anyType>
                </Value>
                <VariableName z:Id="4387">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4388" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2739</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4389" z:Size="1">
                  <FBDPortExtSettings z:Id="4390">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="4385" i:nil="true" />
                <VariableName z:Id="4391">yByte</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4392">
              <EndFBDPort z:Id="4393" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4394" z:Size="1">
                  <FBDPortExtSettings z:Id="4395">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="4396" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4397" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">2</d2p1:anyType>
                </Value>
                <VariableName z:Id="4398">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4399" i:type="OutputFBDPort">
                <Alias z:Id="4400">CV</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4401" z:Size="1">
                  <FBDPortExtSettings z:Id="4402">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="4396" i:nil="true" />
                <VariableName z:Id="4403">CV</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4404">
              <EndFBDPort z:Id="4405" i:type="InputFBDPort">
                <Alias z:Id="4406">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2787</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4407" z:Size="2">
                  <FBDPortExtSettings z:Id="4408">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4409">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4410" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4411" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4412">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4413" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2767</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4414" z:Size="1">
                  <FBDPortExtSettings z:Id="4415">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="4410" i:nil="true" />
                <VariableName z:Id="4416">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4417">
              <EndFBDPort z:Id="4418" i:type="InputFBDPort">
                <Alias z:Id="4419">CU</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2694</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4420" z:Size="1">
                  <FBDPortExtSettings z:Id="4421">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4422" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4423" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4424">CU</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4425" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2788</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4426" z:Size="1">
                  <FBDPortExtSettings z:Id="4427">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="4422" i:nil="true" />
                <VariableName z:Id="4428">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4429">
              <EndFBDPort z:Id="4430" i:type="InputFBDPort">
                <Alias z:Id="4431">RESET</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2696</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4432" z:Size="1">
                  <FBDPortExtSettings z:Id="4433">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4434" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4435" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4436">Reset</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4437" i:type="OutputFBDPort">
                <Alias z:Id="4438">Выход 1571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2697</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4439" z:Size="1">
                  <FBDPortExtSettings z:Id="4440">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="4434" i:nil="true" />
                <VariableName z:Id="4441">Q</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4442">
              <EndFBDPort z:Id="4443" i:type="InputFBDPort">
                <Alias z:Id="4444">Reset</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2782</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4445" z:Size="1">
                  <FBDPortExtSettings z:Id="4446">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4447" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4448" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4449">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4450" i:type="OutputFBDPort">
                <Alias z:Id="4451">Done</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2784</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4452" z:Size="1">
                  <FBDPortExtSettings z:Id="4453">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="4447" i:nil="true" />
                <VariableName z:Id="4454">_d</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4455">
              <EndFBDPort z:Id="4456" i:type="InputFBDPort">
                <Alias z:Id="4457">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2765</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4458" z:Size="1">
                  <FBDPortExtSettings z:Id="4459">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="4460" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4461" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">38</d2p1:anyType>
                </Value>
                <VariableName z:Id="4462">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4463" i:type="OutputFBDPort">
                <Alias z:Id="4464">MM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2758</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4465" z:Size="1">
                  <FBDPortExtSettings z:Id="4466">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="4460" i:nil="true" />
                <VariableName z:Id="4467">mins</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4468">
              <EndFBDPort z:Ref="4405" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4469" i:type="OutputFBDPort">
                <Alias z:Ref="4289" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2790</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4470" z:Size="1">
                  <FBDPortExtSettings z:Id="4471">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4472" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4473" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4474">out_2790</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4475">
              <EndFBDPort z:Id="4476" i:type="InputFBDPort">
                <Alias z:Id="4477">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2640</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4478" z:Size="7">
                  <FBDPortExtSettings z:Id="4479">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4480">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4481">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4482">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4483">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4484">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4485">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4486" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="4487" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">25</d2p1:anyType>
                  <d2p1:anyType z:Id="4488" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">30</d2p1:anyType>
                  <d2p1:anyType z:Id="4489" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                  <d2p1:anyType z:Id="4490" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">50</d2p1:anyType>
                  <d2p1:anyType z:Id="4491" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">60</d2p1:anyType>
                  <d2p1:anyType z:Id="4492" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">70</d2p1:anyType>
                  <d2p1:anyType z:Id="4493" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="4494">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4495" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2647</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4496" z:Size="7">
                  <FBDPortExtSettings z:Id="4497">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4498">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4499">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4500">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4501">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4502">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4503">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4486" i:nil="true" />
                <VariableName z:Ref="4206" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4504">
              <EndFBDPort z:Id="4505" i:type="InputFBDPort">
                <Alias z:Id="4506">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2641</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4507" z:Size="7">
                  <FBDPortExtSettings z:Id="4508">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4509">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4510">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4511">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4512">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4513">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4514">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4515" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="4516" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">10</d2p1:anyType>
                  <d2p1:anyType z:Id="4517" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">15</d2p1:anyType>
                  <d2p1:anyType z:Id="4518" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">18</d2p1:anyType>
                  <d2p1:anyType z:Id="4519" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">28</d2p1:anyType>
                  <d2p1:anyType z:Id="4520" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                  <d2p1:anyType z:Id="4521" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">53</d2p1:anyType>
                  <d2p1:anyType z:Id="4522" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">75</d2p1:anyType>
                </Value>
                <VariableName z:Id="4523">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4524" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2650</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4525" z:Size="7">
                  <FBDPortExtSettings z:Id="4526">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4527">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4528">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4529">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4530">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4531">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4532">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4515" i:nil="true" />
                <VariableName z:Ref="4206" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4533">
              <EndFBDPort z:Id="4534" i:type="InputFBDPort">
                <Alias z:Id="4535">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2800</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4536" z:Size="1">
                  <FBDPortExtSettings z:Id="4537">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4008" i:nil="true" />
                <VariableName z:Id="4538">valueIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="4011" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4539">
              <EndFBDPort z:Id="4540" i:type="InputFBDPort">
                <Alias z:Id="4541">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2810</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4542" z:Size="1">
                  <FBDPortExtSettings z:Id="4543">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4008" i:nil="true" />
                <VariableName z:Id="4544">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="4011" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4545">
              <EndFBDPort z:Id="4546" i:type="InputFBDPort">
                <Alias z:Id="4547">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1717</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4548" z:Size="1">
                  <FBDPortExtSettings z:Id="4549">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4550" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4551" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">175</d2p1:anyType>
                </Value>
                <VariableName z:Id="4552">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4553" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3270</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4554" z:Size="1">
                  <FBDPortExtSettings z:Id="4555">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4550" i:nil="true" />
                <VariableName z:Id="4556">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="4557" z:Size="68">
            <FBDItem z:Id="4558" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4559">Планировщик базовый</Description>
              <HelpID>380</HelpID>
              <Id>2651</Id>
              <InputPortsCollection z:Id="4560" z:Size="7">
                <FBDPort z:Id="4561" i:type="InputFBDPort">
                  <Alias z:Id="4562">Вход 7275</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2652</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4563" z:Size="1">
                    <FBDPortExtSettings z:Id="4564">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4565">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Id="4566" i:type="InputFBDPort">
                  <Alias z:Id="4567">DD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2653</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4568" z:Size="1">
                    <FBDPortExtSettings z:Id="4569">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4570">DD</VariableName>
                </FBDPort>
                <FBDPort z:Id="4571" i:type="InputFBDPort">
                  <Alias z:Id="4572">MM</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2654</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4573" z:Size="1">
                    <FBDPortExtSettings z:Id="4574">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4575">MM</VariableName>
                </FBDPort>
                <FBDPort z:Id="4576" i:type="InputFBDPort">
                  <Alias z:Id="4577">DW</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2655</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4578" z:Size="1">
                    <FBDPortExtSettings z:Id="4579">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4580">WD</VariableName>
                </FBDPort>
                <FBDPort z:Id="4581" i:type="InputFBDPort">
                  <Alias z:Id="4582">hh</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2656</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4583" z:Size="1">
                    <FBDPortExtSettings z:Id="4584">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4585">H</VariableName>
                </FBDPort>
                <FBDPort z:Id="4586" i:type="InputFBDPort">
                  <Alias z:Id="4587">mm</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2657</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4588" z:Size="1">
                    <FBDPortExtSettings z:Id="4589">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4590">M</VariableName>
                </FBDPort>
                <FBDPort z:Id="4591" i:type="InputFBDPort">
                  <Alias z:Id="4592">ss</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2658</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4593" z:Size="1">
                    <FBDPortExtSettings z:Id="4594">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4595">S</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4596" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5444.8514415094469</d8p1:_x>
                <d8p1:_y>3514.1621018807978</d8p1:_y>
              </Location>
              <Name z:Id="4597">SCHEDULER</Name>
              <OutputPortsCollection z:Id="4598" z:Size="2">
                <FBDPort z:Id="4599" i:type="OutputFBDPort">
                  <Alias z:Id="4600">Выход 7283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2659</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4601" z:Size="1">
                    <FBDPortExtSettings z:Id="4602">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4603" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4604" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4605">Status</VariableName>
                </FBDPort>
                <FBDPort z:Id="4606" i:type="OutputFBDPort">
                  <Alias z:Id="4607">Выход 7284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2660</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4608" z:Size="1">
                    <FBDPortExtSettings z:Id="4609">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4610" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4611" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4612">Error</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4613">YART</Prefix>
              <SecondName z:Ref="4597" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>b2e3dc54-ccde-4742-842d-2ef2db49f5ac</SpecificationId>
              <Code z:Id="4614">Status = false;


if(DD &lt; 1 || (DD &gt; 31 &amp;&amp; DD != 255) || MM &lt; 1 || (MM &gt; 12 &amp;&amp; MM != 255) || WD &lt; 1 || (WD &gt; 7 &amp;&amp; WD !=255) || H &lt; 0 || (H &gt; 23 &amp;&amp; H != 255) || M &lt; 0 || (M &gt; 59 &amp;&amp; M != 255) || S &lt; 0 || (S &gt; 59 &amp;&amp; S != 255)){


	Error = true;


}else{


	Error = false;


	if(Enable){


		Status = true;


		new yMM = YARTMerc230ShortRToInt(88);


		new yDD = YARTMerc230ShortLToInt(88);


		new yWD = YARTMerc230ShortRToInt(90);


		new yH  = YARTMerc230ShortLToInt(86);


		new yM  = YARTMerc230ShortRToInt(86);


		new yS  = YARTMerc230ShortLToInt(84);


		if((MM != 255 &amp;&amp; MM != yMM) || (DD != 255 &amp;&amp; DD != yDD) || (WD != 255 &amp;&amp; WD != yWD) || 


			(H != 255 &amp;&amp; H != yH) || (M != 255 &amp;&amp; M != yM) || (S != 255 &amp;&amp; S != yS)) Status = false;


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="4615" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1694</Id>
              <InputPortsCollection z:Id="4616" z:Size="0" />
              <InternalPortsCollection z:Id="4617" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3950</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4618" z:Size="1">
                <FBDPort z:Ref="4051" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4619">_</Prefix>
              <SecondName z:Id="4620">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4055" i:nil="true" />
              <OutputFBDPort z:Ref="4051" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4621" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2104</Id>
              <InputPortsCollection z:Id="4622" z:Size="1">
                <FBDPort z:Id="4623" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4624" z:Size="1">
                    <FBDPortExtSettings z:Id="4625">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4626">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4627" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3590</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="4628">Tag</Name>
              <OutputPortsCollection z:Id="4629" z:Size="1">
                <FBDPort z:Ref="4153" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4630">_</Prefix>
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="375" i:nil="true" />
              <InputFBDPort z:Ref="4623" i:nil="true" />
              <OutputFBDPort z:Ref="4153" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4631" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1422</Id>
              <InputPortsCollection z:Id="4632" z:Size="0" />
              <InternalPortsCollection z:Id="4633" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3550</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Id="4634">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="4635" z:Size="1">
                <FBDPort z:Ref="4011" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4636">_</Prefix>
              <SecondName z:Id="4637">_00_A1_AI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4638">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4639" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4640">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1220</Id>
              <InputPortsCollection z:Id="4641" z:Size="3">
                <FBDPort z:Ref="4004" i:nil="true" />
                <FBDPort z:Ref="4146" i:nil="true" />
                <FBDPort z:Id="4642" i:type="InputFBDPort">
                  <Alias z:Id="4643">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1223</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4644" z:Size="1">
                    <FBDPortExtSettings z:Id="4645">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4646">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4647" z:Size="1">
                <FBDPort z:Id="4648" i:type="InternalFBDPort">
                  <Alias z:Id="4649">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1228</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4650" z:Size="10">
                    <FBDPortExtSettings z:Id="4651">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4652">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4653">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4654">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4655">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4656">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4657">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4658">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4659">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4660">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4661">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="4662">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="4663" z:Size="4">
                <FBDPort z:Ref="4181" i:nil="true" />
                <FBDPort z:Id="4664" i:type="OutputFBDPort">
                  <Alias z:Id="4665">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1225</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4666" z:Size="1">
                    <FBDPortExtSettings z:Id="4667">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4668" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4669" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4670">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="4671" i:type="OutputFBDPort">
                  <Alias z:Id="4672">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4673" z:Size="1">
                    <FBDPortExtSettings z:Id="4674">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4675" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4676" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4677">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4678" i:type="OutputFBDPort">
                  <Alias z:Id="4679">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1227</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4680" z:Size="1">
                    <FBDPortExtSettings z:Id="4681">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4682" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4683" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4684">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4685">YART</Prefix>
              <SecondName z:Id="4686">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Id="4687">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 0;





YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="4688" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1245</Id>
              <InputPortsCollection z:Id="4689" z:Size="1">
                <FBDPort z:Ref="4175" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4690" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="4691">Tag</Name>
              <OutputPortsCollection z:Id="4692" z:Size="1">
                <FBDPort z:Ref="3814" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4693">_</Prefix>
              <SecondName z:Ref="4691" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="242" i:nil="true" />
              <InputFBDPort z:Ref="4175" i:nil="true" />
              <OutputFBDPort z:Ref="3814" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4694" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4695">Разность A и B</Description>
              <HelpID>44</HelpID>
              <Id>1697</Id>
              <InputPortsCollection z:Id="4696" z:Size="2">
                <FBDPort z:Ref="4169" i:nil="true" />
                <FBDPort z:Ref="4059" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4697" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>3500</d8p1:_y>
              </Location>
              <Name z:Id="4698">SUB</Name>
              <OutputPortsCollection z:Id="4699" z:Size="1">
                <FBDPort z:Ref="4072" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4700">YART</Prefix>
              <SecondName z:Ref="4698" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>68db83f5-d55f-435e-9a28-1607ee207726</SpecificationId>
              <Code z:Id="4701">//#SUB (разность Float)


#inline y = a - b;</Code>
            </FBDItem>
            <FBDItem z:Id="4702" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4703">Поиск значения по линейной функции с ограничением минимального и максимального значений</Description>
              <HelpID>114</HelpID>
              <Id>1704</Id>
              <InputPortsCollection z:Id="4704" z:Size="5">
                <FBDPort z:Ref="4065" i:nil="true" />
                <FBDPort z:Id="4705" i:type="InputFBDPort">
                  <Alias z:Id="4706">Xmin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1706</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4707" z:Size="1">
                    <FBDPortExtSettings z:Id="4708">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4709" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4710" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4711">Xmin</VariableName>
                </FBDPort>
                <FBDPort z:Id="4712" i:type="InputFBDPort">
                  <Alias z:Id="4713">Ymin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1707</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4714" z:Size="1">
                    <FBDPortExtSettings z:Id="4715">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4716" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4717" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4718">Ymin</VariableName>
                </FBDPort>
                <FBDPort z:Id="4719" i:type="InputFBDPort">
                  <Alias z:Id="4720">Xmax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1708</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4721" z:Size="1">
                    <FBDPortExtSettings z:Id="4722">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4723" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4724" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4725">Xmax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4726" i:type="InputFBDPort">
                  <Alias z:Id="4727">Ymax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1709</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4728" z:Size="1">
                    <FBDPortExtSettings z:Id="4729">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4730" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4731" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4732">Ymax</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4733" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>3460</d8p1:_y>
              </Location>
              <Name z:Id="4734">PHIS.LIM</Name>
              <OutputPortsCollection z:Id="4735" z:Size="1">
                <FBDPort z:Ref="4083" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4700" i:nil="true" />
              <SecondName z:Id="4736">myFizValiml</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>fe2f4ea4-aeb0-4475-979d-b0c351f312ba</SpecificationId>
              <Code z:Id="4737">//#PHIS . LIM (Преобразование в физическую величину с ограничением выхода)


//Преобразование физ. величины с ограничением


if(x &gt; Xmin &amp;&amp; x &lt; Xmax) y = Ymin + (x - Xmin)*((Ymax - Ymin)/(Xmax - Xmin));


else if(x &lt;= Xmin) y = Ymin;


else if(x &gt;= Xmax) y = Ymax;</Code>
            </FBDItem>
            <FBDItem z:Id="4738" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1701</Id>
              <InputPortsCollection z:Id="4739" z:Size="1">
                <FBDPort z:Ref="4077" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4740" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4400</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name z:Id="4741">Tag</Name>
              <OutputPortsCollection z:Id="4742" z:Size="1">
                <FBDPort z:Id="4743" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1703</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4744" z:Size="1">
                    <FBDPortExtSettings z:Id="4745">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4746" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4747" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">19.0671844</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4748">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4619" i:nil="true" />
              <SecondName z:Ref="4741" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="238" i:nil="true" />
              <InputFBDPort z:Ref="4077" i:nil="true" />
              <OutputFBDPort z:Ref="4743" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4749" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4750">Автоматическое изменение значения по периоду и шагу</Description>
              <HelpID>450</HelpID>
              <Id>2775</Id>
              <InputPortsCollection z:Id="4751" z:Size="5">
                <FBDPort z:Id="4752" i:type="InputFBDPort">
                  <Alias z:Id="4753">First</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2778</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4754" z:Size="1">
                    <FBDPortExtSettings z:Id="4755">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4756" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4757" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4758">f</VariableName>
                </FBDPort>
                <FBDPort z:Id="4759" i:type="InputFBDPort">
                  <Alias z:Id="4760">Last</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2779</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4761" z:Size="1">
                    <FBDPortExtSettings z:Id="4762">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4763" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4764" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">50</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4765">l</VariableName>
                </FBDPort>
                <FBDPort z:Id="4766" i:type="InputFBDPort">
                  <Alias z:Id="4767">Step</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2780</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4768" z:Size="1">
                    <FBDPortExtSettings z:Id="4769">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4770" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4771" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4772">s</VariableName>
                </FBDPort>
                <FBDPort z:Id="4773" i:type="InputFBDPort">
                  <Alias z:Id="4774">Period (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2781</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4775" z:Size="1">
                    <FBDPortExtSettings z:Id="4776">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4777" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4778" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">10000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4779">p</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4443" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4780" z:Size="2">
                <FBDPort z:Id="4781" i:type="InternalFBDPort">
                  <Alias z:Id="4782">Внутренняя 45979</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2776</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4783" z:Size="2">
                    <FBDPortExtSettings z:Id="4784">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4785">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4786">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="4787" i:type="InternalFBDPort">
                  <Alias z:Id="4788">Внутренняя 46348</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2777</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4789" z:Size="1">
                    <FBDPortExtSettings z:Id="4790">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4791">init</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3010</d8p1:_x>
                <d8p1:_y>3540</d8p1:_y>
              </Location>
              <Name z:Id="4792">COUNTER B</Name>
              <OutputPortsCollection z:Id="4793" z:Size="3">
                <FBDPort z:Id="4794" i:type="OutputFBDPort">
                  <Alias z:Id="4795">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2783</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4796" z:Size="1">
                    <FBDPortExtSettings z:Id="4797">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4798" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4799" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4800">_e</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4450" i:nil="true" />
                <FBDPort z:Id="4801" i:type="OutputFBDPort">
                  <Alias z:Id="4802">Current</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2785</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4803" z:Size="1">
                    <FBDPortExtSettings z:Id="4804">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4805" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4806" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4807">_c</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="4808">counterExt_B</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>aa09f2f2-514a-44c3-856d-aa26d8d6c439</SpecificationId>
              <Code z:Id="4809">if(!init){


	r = true;


	init = true;


}





if((f &gt; l &amp;&amp; s &gt; 0) || (f &lt; l &amp;&amp; s &lt; 0)) s = -s;





if(s == 0 || p == 0){


	_e = true;


	r = true;


}





if(r){


	t[0] = 0;


	t[1] = 0;


	_c = f;


	_d = false;


}





if(!_e &amp;&amp; !_d){


	YARTAddScanTask(t[0], t[1]);


	if(t[0] &gt;= p){


		new k = t[0] / p;


		t[0] -= p * k;


		_c += s * k;


	}


	if((l &gt;= f &amp;&amp; _c &gt;= l) || (l &lt; f &amp;&amp; _c &lt;= l)){


		_c = l;


		_d = true;


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="4810" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2789</Id>
              <InputPortsCollection z:Id="4811" z:Size="0" />
              <InternalPortsCollection z:Id="4812" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3270</d8p1:_x>
                <d8p1:_y>3550</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4813" z:Size="1">
                <FBDPort z:Ref="4469" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4814">_</Prefix>
              <SecondName z:Id="4815">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4472" i:nil="true" />
              <OutputFBDPort z:Ref="4469" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4816" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4817">Считывание системного времени</Description>
              <HelpID>122</HelpID>
              <Id>2754</Id>
              <InputPortsCollection z:Id="4818" z:Size="0" />
              <InternalPortsCollection z:Id="4819" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3140</d8p1:_x>
                <d8p1:_y>3380</d8p1:_y>
              </Location>
              <Name z:Id="4820">GET TIME</Name>
              <OutputPortsCollection z:Id="4821" z:Size="5">
                <FBDPort z:Id="4822" i:type="OutputFBDPort">
                  <Alias z:Id="4823">TIME</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2755</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4824" z:Size="1">
                    <FBDPortExtSettings z:Id="4825">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="4826" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4827" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:dateTime">0001-01-01T21:38:15</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4828">time</VariableName>
                </FBDPort>
                <FBDPort z:Id="4829" i:type="OutputFBDPort">
                  <Alias z:Id="4830">SFRACT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2756</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4831" z:Size="1">
                    <FBDPortExtSettings z:Id="4832">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4833" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4834" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">111</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4835">sfract</VariableName>
                </FBDPort>
                <FBDPort z:Id="4836" i:type="OutputFBDPort">
                  <Alias z:Id="4837">SS</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2757</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4838" z:Size="1">
                    <FBDPortExtSettings z:Id="4839">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4840" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4841" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">15</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4842">sec</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4463" i:nil="true" />
                <FBDPort z:Id="4843" i:type="OutputFBDPort">
                  <Alias z:Id="4844">HH</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2759</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4845" z:Size="1">
                    <FBDPortExtSettings z:Id="4846">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4847" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4848" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">21</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4849">hrs</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="4850">myGetTime</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>91dda9a2-5588-4f94-a53e-c414a211e208</SpecificationId>
              <Code z:Id="4851">//#GET TIME (Читать время)


new ltime = GetTime(SYSTEM_TIME);


sfract = (10 * (FSeconds(ltime) &gt;&gt; 4)) + (FSeconds(ltime) &amp; 0x0f);


sec = 	(10 * (Seconds(ltime) &gt;&gt; 4)) + (Seconds(ltime) &amp; 0x0f);


mins =	(10 * (Minutes(ltime) &gt;&gt; 4)) + (Minutes(ltime) &amp; 0x0f);


hrs = 	(10 * (Hours(ltime) &gt;&gt; 4)) + (Hours(ltime) &amp; 0x0f);





time = ltime;</Code>
            </FBDItem>
            <FBDItem z:Id="4852" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4853">Сравнение двух значений</Description>
              <HelpID>297</HelpID>
              <Id>2764</Id>
              <InputPortsCollection z:Id="4854" z:Size="2">
                <FBDPort z:Ref="4456" i:nil="true" />
                <FBDPort z:Id="4855" i:type="InputFBDPort">
                  <Alias z:Id="4856">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2766</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4857" z:Size="1">
                    <FBDPortExtSettings z:Id="4858">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4859" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4860" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4861">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4862" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3280</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name z:Id="4863">A = B</Name>
              <OutputPortsCollection z:Id="4864" z:Size="1">
                <FBDPort z:Ref="4413" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="4865">aRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>54c7975f-0f11-42b6-beac-8b54f2c6b9a1</SpecificationId>
              <Code z:Id="4866">//#A = B (Равно byte)


#inline y = (a == b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="4867" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4868">Вычисление логического ИЛИ</Description>
              <HelpID>5</HelpID>
              <Id>2786</Id>
              <InputPortsCollection z:Id="4869" z:Size="1">
                <FBDPort z:Ref="4405" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4870" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3412.8726189002145</d8p1:_x>
                <d8p1:_y>3476.0841341658038</d8p1:_y>
              </Location>
              <Name z:Id="4871">OR</Name>
              <OutputPortsCollection z:Id="4872" z:Size="1">
                <FBDPort z:Ref="4425" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="4873">or</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>847d4d91-e424-48a2-a070-61748e5d053a</SpecificationId>
              <Code z:Id="4874">//#OR ( или )


for(new i = 0; i&lt;sizeof_x; i++) 	y = y|x[i];</Code>
            </FBDItem>
            <FBDItem z:Id="4875" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4876">Подсчет количества переходов CU из false в true. При достижении значения PV выход Q устанавливается в true. При включении Reset счетчик CV обнуляется</Description>
              <HelpID>15</HelpID>
              <Id>2692</Id>
              <InputPortsCollection z:Id="4877" z:Size="3">
                <FBDPort z:Ref="4418" i:nil="true" />
                <FBDPort z:Id="4878" i:type="InputFBDPort">
                  <Alias z:Id="4879">Вход 1570</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2695</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4880" z:Size="1">
                    <FBDPortExtSettings z:Id="4881">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4882" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4883" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4884">PV</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4430" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4885" z:Size="1">
                <FBDPort z:Id="4886" i:type="InternalFBDPort">
                  <Alias z:Id="4887">Отладка 2689</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2693</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4888" z:Size="1">
                    <FBDPortExtSettings z:Id="4889">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4890">lastIn</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name z:Id="4891">CTU</Name>
              <OutputPortsCollection z:Id="4892" z:Size="2">
                <FBDPort z:Ref="4437" i:nil="true" />
                <FBDPort z:Ref="4399" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="4893">CTU</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>56d44bca-6ca4-425b-bab2-36a857a3f483</SpecificationId>
              <Code z:Id="4894">//CTU  (Счетчик импульсов по переднему фронту)


if(CU &amp;&amp; !lastIn) CV++;


if(Reset) CV = 0;


if(CV &gt;= PV) Q = true;


lastIn = CU;</Code>
            </FBDItem>
            <FBDItem z:Id="4895" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4896">Преобразование Int в Byte</Description>
              <HelpID>107</HelpID>
              <Id>2737</Id>
              <InputPortsCollection z:Id="4897" z:Size="1">
                <FBDPort z:Ref="4393" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4898" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3631.8209332614306</d8p1:_x>
                <d8p1:_y>3550.5092528814744</d8p1:_y>
              </Location>
              <Name z:Id="4899">I&gt;B</Name>
              <OutputPortsCollection z:Id="4900" z:Size="1">
                <FBDPort z:Ref="4388" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="4901">IntByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e04c2635-a2c6-4e4a-bf64-ef55567929f6</SpecificationId>
              <Code z:Id="4902">//#I &gt; B (Int в Byte)


yByte = a;


if( a &gt; 255 )yByte = 255;


if( a &lt; 0 ) yByte = 0;</Code>
            </FBDItem>
            <FBDItem z:Id="4903" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2677</Id>
              <InputPortsCollection z:Id="4904" z:Size="0" />
              <InternalPortsCollection z:Id="4905" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3500</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4906" z:Size="1">
                <FBDPort z:Ref="4373" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4907">_</Prefix>
              <SecondName z:Id="4908">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4377" i:nil="true" />
              <OutputFBDPort z:Ref="4373" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4909" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2675</Id>
              <InputPortsCollection z:Id="4910" z:Size="0" />
              <InternalPortsCollection z:Id="4911" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4912" z:Size="1">
                <FBDPort z:Ref="4365" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4913">_</Prefix>
              <SecondName z:Id="4914">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4369" i:nil="true" />
              <OutputFBDPort z:Ref="4365" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4915" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2673</Id>
              <InputPortsCollection z:Id="4916" z:Size="0" />
              <InternalPortsCollection z:Id="4917" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3460</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4918" z:Size="1">
                <FBDPort z:Ref="4357" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4919">_</Prefix>
              <SecondName z:Id="4920">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4361" i:nil="true" />
              <OutputFBDPort z:Ref="4357" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4921" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2667</Id>
              <InputPortsCollection z:Id="4922" z:Size="0" />
              <InternalPortsCollection z:Id="4923" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3440</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4924" z:Size="1">
                <FBDPort z:Ref="4349" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4925">_</Prefix>
              <SecondName z:Id="4926">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4353" i:nil="true" />
              <OutputFBDPort z:Ref="4349" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4927" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2665</Id>
              <InputPortsCollection z:Id="4928" z:Size="0" />
              <InternalPortsCollection z:Id="4929" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4930" z:Size="1">
                <FBDPort z:Ref="4342" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Id="4931">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4345" i:nil="true" />
              <OutputFBDPort z:Ref="4342" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4932" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4933">Чтение значения элемента массива</Description>
              <HelpID>148</HelpID>
              <Id>2661</Id>
              <InputPortsCollection z:Id="4934" z:Size="2">
                <FBDPort z:Ref="4331" i:nil="true" />
                <FBDPort z:Ref="4381" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4935" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3400</d8p1:_y>
              </Location>
              <Name z:Id="4936">SWITCH FLOAT</Name>
              <OutputPortsCollection z:Id="4937" z:Size="1">
                <FBDPort z:Id="4938" i:type="OutputFBDPort">
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2664</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4939" z:Size="1">
                    <FBDPortExtSettings z:Id="4940">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4941" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4942" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">250</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4943">OUTSW</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4944">YART</Prefix>
              <SecondName z:Id="4945">SWITCHFLOAT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6ac531a6-d4cf-42c0-b2fb-54b61314db2b</SpecificationId>
              <Code z:Id="4946">//#SWITCH FLOAT (Переключатель Float   величин)


//Переключатель Float


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="4947" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4948">Экспоненциальное сглаживание</Description>
              <HelpID>118</HelpID>
              <Id>2798</Id>
              <InputPortsCollection z:Id="4949" z:Size="2">
                <FBDPort z:Ref="4534" i:nil="true" />
                <FBDPort z:Id="4950" i:type="InputFBDPort">
                  <Alias z:Id="4951">K</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2801</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4952" z:Size="1">
                    <FBDPortExtSettings z:Id="4953">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4954" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4955" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4956">inGain</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4957" z:Size="1">
                <FBDPort z:Id="4958" i:type="InternalFBDPort">
                  <Alias z:Id="4959">Внутренняя 33031</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2799</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4960" z:Size="1">
                    <FBDPortExtSettings z:Id="4961">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4962">init</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3780</d8p1:_y>
              </Location>
              <Name z:Id="4963">EXP FILTER</Name>
              <OutputPortsCollection z:Id="4964" z:Size="1">
                <FBDPort z:Id="4965" i:type="OutputFBDPort">
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2802</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4966" z:Size="1">
                    <FBDPortExtSettings z:Id="4967">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4968" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4969" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1173.68811</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4970">y</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4971">YART</Prefix>
              <SecondName z:Id="4972">expFilter</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>c0f209cb-bc81-4bd5-9567-53461322338d</SpecificationId>
              <Code z:Id="4973">//fix string - don`t remove this string!!!!!!!!!!


//YARTF_ExpFilter(valueIN, inGain, y, init, Last);


//#EXP FILTER (Экспоненциальное сглаживание)





if(init){


	y = inGain * (valueIN - y) + y;


}else{


	y = valueIN;


	init = true;


}</Code>
            </FBDItem>
            <FBDItem z:Id="4974" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4975">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>862</HelpID>
              <Id>2808</Id>
              <InputPortsCollection z:Id="4976" z:Size="3">
                <FBDPort z:Ref="4540" i:nil="true" />
                <FBDPort z:Id="4977" i:type="InputFBDPort">
                  <Alias z:Id="4978">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2811</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4979" z:Size="1">
                    <FBDPortExtSettings z:Id="4980">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4981" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4982" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4983">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="4984" i:type="InputFBDPort">
                  <Alias z:Id="4985">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2812</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4986" z:Size="1">
                    <FBDPortExtSettings z:Id="4987">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4988">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4989" z:Size="1">
                <FBDPort z:Id="4990" i:type="InternalFBDPort">
                  <Alias z:Id="4991">Внутренняя 54731</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>2809</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4992" z:Size="10">
                    <FBDPortExtSettings z:Id="4993">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4994">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4995">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4996">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4997">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4998">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4999">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5000">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5001">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5002">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5003">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="5004">PT 1000 (385)</Name>
              <OutputPortsCollection z:Id="5005" z:Size="4">
                <FBDPort z:Id="5006" i:type="OutputFBDPort">
                  <Alias z:Id="5007">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2813</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5008" z:Size="1">
                    <FBDPortExtSettings z:Id="5009">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5010" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5011" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">44.7131653</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5012">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="5013" i:type="OutputFBDPort">
                  <Alias z:Id="5014">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2814</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5015" z:Size="1">
                    <FBDPortExtSettings z:Id="5016">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5017" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5018" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5019">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5020" i:type="OutputFBDPort">
                  <Alias z:Id="5021">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2815</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5022" z:Size="1">
                    <FBDPortExtSettings z:Id="5023">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5024" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5025" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5026">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="5027" i:type="OutputFBDPort">
                  <Alias z:Id="5028">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2816</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5029" z:Size="1">
                    <FBDPortExtSettings z:Id="5030">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5031" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5032" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5033">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4971" i:nil="true" />
              <SecondName z:Id="5034">PT1000_385</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>287faa38-da5e-478a-9de8-0469f4d3ce63</SpecificationId>
              <Code z:Id="5035">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 1;








YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="5036" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2636</Id>
              <InputPortsCollection z:Id="5037" z:Size="0" />
              <InternalPortsCollection z:Id="5038" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4901.442295468305</d8p1:_x>
                <d8p1:_y>3700.9068481285485</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5039" z:Size="1">
                <FBDPort z:Ref="4288" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Id="5040">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4292" i:nil="true" />
              <OutputFBDPort z:Ref="4288" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5041" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2633</Id>
              <InputPortsCollection z:Id="5042" z:Size="1">
                <FBDPort z:Id="5043" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2634</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5044" z:Size="1">
                    <FBDPortExtSettings z:Id="5045">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4259" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5046" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4830</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Id="5047">Tag</Name>
              <OutputPortsCollection z:Id="5048" z:Size="1">
                <FBDPort z:Ref="4272" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Ref="5047" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="399" i:nil="true" />
              <InputFBDPort z:Ref="5043" i:nil="true" />
              <OutputFBDPort z:Ref="4272" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5049" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2648</Id>
              <InputPortsCollection z:Id="5050" z:Size="1">
                <FBDPort z:Id="5051" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>7</ArrayItemsCount>
                  <Id>2649</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5052" z:Size="7">
                    <FBDPortExtSettings z:Id="5053">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5054">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5055">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5056">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5057">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5058">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5059">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4259" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5060" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="5047" i:nil="true" />
              <OutputPortsCollection z:Id="5061" z:Size="1">
                <FBDPort z:Ref="4524" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Ref="5047" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="421" i:nil="true" />
              <InputFBDPort z:Ref="5051" i:nil="true" />
              <OutputFBDPort z:Ref="4524" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5062" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2645</Id>
              <InputPortsCollection z:Id="5063" z:Size="1">
                <FBDPort z:Id="5064" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>7</ArrayItemsCount>
                  <Id>2646</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5065" z:Size="7">
                    <FBDPortExtSettings z:Id="5066">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5067">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5068">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5069">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5070">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5071">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5072">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4259" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5073" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>3600</d8p1:_y>
              </Location>
              <Name z:Ref="5047" i:nil="true" />
              <OutputPortsCollection z:Id="5074" z:Size="1">
                <FBDPort z:Ref="4495" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Ref="5047" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="411" i:nil="true" />
              <InputFBDPort z:Ref="5064" i:nil="true" />
              <OutputFBDPort z:Ref="4495" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5075" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3268</Id>
              <InputPortsCollection z:Id="5076" z:Size="1">
                <FBDPort z:Id="5077" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3269</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5078" z:Size="1">
                    <FBDPortExtSettings z:Id="5079">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5080">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5081" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="5082">Tag</Name>
              <OutputPortsCollection z:Id="5083" z:Size="1">
                <FBDPort z:Ref="4553" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5084">_</Prefix>
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="574" i:nil="true" />
              <InputFBDPort z:Ref="5077" i:nil="true" />
              <OutputFBDPort z:Ref="4553" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5085" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="5086">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1716</Id>
              <InputPortsCollection z:Id="5087" z:Size="2">
                <FBDPort z:Ref="4546" i:nil="true" />
                <FBDPort z:Id="5088" i:type="InputFBDPort">
                  <Alias z:Id="5089">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1718</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5090" z:Size="1">
                    <FBDPortExtSettings z:Id="5091">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5092" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5093" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5094">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5095" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4020</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="5096">DIV</Name>
              <OutputPortsCollection z:Id="5097" z:Size="1">
                <FBDPort z:Ref="4093" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5098">YART</Prefix>
              <SecondName z:Ref="5096" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="3427" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5099" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="5100">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>1691</Id>
              <InputPortsCollection z:Id="5101" z:Size="1">
                <FBDPort z:Ref="4043" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5102" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4150</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="5103">ADD</Name>
              <OutputPortsCollection z:Id="5104" z:Size="1">
                <FBDPort z:Ref="4038" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4700" i:nil="true" />
              <SecondName z:Ref="5103" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Id="5105">//# ADD (сумма Float)  


for(new i = 0; i&lt;sizeof_x; i++)


{


		y = y + x[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="5106" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1713</Id>
              <InputPortsCollection z:Id="5107" z:Size="1">
                <FBDPort z:Ref="4088" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5108" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4390</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="5109">Tag</Name>
              <OutputPortsCollection z:Id="5110" z:Size="1">
                <FBDPort z:Ref="4326" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5111">_</Prefix>
              <SecondName z:Ref="5109" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="304" i:nil="true" />
              <InputFBDPort z:Ref="4088" i:nil="true" />
              <OutputFBDPort z:Ref="4326" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5112" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5113">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>2638</Id>
              <InputPortsCollection z:Id="5114" z:Size="3">
                <FBDPort z:Ref="4319" i:nil="true" />
                <FBDPort z:Ref="4476" i:nil="true" />
                <FBDPort z:Ref="4505" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5115" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4370</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Id="5116">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="5117" z:Size="1">
                <FBDPort z:Ref="4314" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5118">YART</Prefix>
              <SecondName z:Id="5119">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Id="5120">//#PIECEWISE LINEAR (Кусочно-линейное преобразование Float)


if(sizeof_X != sizeof_Y) return;


for(new i = 0; i &lt; sizeof_X - 1; i++){


	if(X[i] &lt;= INX &amp;&amp; INX &lt;= X[i+1]){


		OUTY = Y[i] + (INX - X[i])*((Y[i+1] - Y[i])/(X[i+1] - X[i]));


		return; 	


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="5121" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2476</Id>
              <InputPortsCollection z:Id="5122" z:Size="1">
                <FBDPort z:Ref="4308" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5123" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4450</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name z:Id="5124">Tag</Name>
              <OutputPortsCollection z:Id="5125" z:Size="1">
                <FBDPort z:Ref="4235" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5126">_</Prefix>
              <SecondName z:Ref="5124" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="395" i:nil="true" />
              <InputFBDPort z:Ref="4308" i:nil="true" />
              <OutputFBDPort z:Ref="4235" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5127" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2310</Id>
              <InputPortsCollection z:Id="5128" z:Size="1">
                <FBDPort z:Id="5129" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2311</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5130" z:Size="1">
                    <FBDPortExtSettings z:Id="5131">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5132">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5133" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4050</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Id="5134">Tag</Name>
              <OutputPortsCollection z:Id="5135" z:Size="1">
                <FBDPort z:Ref="4164" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5136">_</Prefix>
              <SecondName z:Ref="5134" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="391" i:nil="true" />
              <InputFBDPort z:Ref="5129" i:nil="true" />
              <OutputFBDPort z:Ref="4164" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5137" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2079</Id>
              <InputPortsCollection z:Id="5138" z:Size="1">
                <FBDPort z:Id="5139" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2080</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5140" z:Size="1">
                    <FBDPortExtSettings z:Id="5141">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5142" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5143" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5144" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="5145" z:Size="1">
                <FBDPort z:Ref="4130" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="371" i:nil="true" />
              <InputFBDPort z:Ref="5139" i:nil="true" />
              <OutputFBDPort z:Ref="4130" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5146" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2076</Id>
              <InputPortsCollection z:Id="5147" z:Size="1">
                <FBDPort z:Id="5148" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2077</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5149" z:Size="1">
                    <FBDPortExtSettings z:Id="5150">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5151" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5152" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5153" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="5154" z:Size="1">
                <FBDPort z:Ref="4142" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="367" i:nil="true" />
              <InputFBDPort z:Ref="5148" i:nil="true" />
              <OutputFBDPort z:Ref="4142" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5155" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1303</Id>
              <InputPortsCollection z:Id="5156" z:Size="1">
                <FBDPort z:Id="5157" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1304</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5158" z:Size="1">
                    <FBDPortExtSettings z:Id="5159">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5160">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5161" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3990</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Id="5162">Tag</Name>
              <OutputPortsCollection z:Id="5163" z:Size="1">
                <FBDPort z:Ref="3918" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5164">_</Prefix>
              <SecondName z:Ref="5162" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="282" i:nil="true" />
              <InputFBDPort z:Ref="5157" i:nil="true" />
              <OutputFBDPort z:Ref="3918" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5165" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1299</Id>
              <InputPortsCollection z:Id="5166" z:Size="1">
                <FBDPort z:Id="5167" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>17</ArrayItemsCount>
                  <Id>1300</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5168" z:Size="17">
                    <FBDPortExtSettings z:Id="5169">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5170">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5171">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5172">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5173">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5174">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5175">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5176">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5177">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5178">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5179">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5180">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5181">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5182">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5183">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5184">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5185">
                      <Index>16</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5186">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5187" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Id="5188">Tag</Name>
              <OutputPortsCollection z:Id="5189" z:Size="1">
                <FBDPort z:Ref="3877" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5190">_</Prefix>
              <SecondName z:Ref="5188" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="262" i:nil="true" />
              <InputFBDPort z:Ref="5167" i:nil="true" />
              <OutputFBDPort z:Ref="3877" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5191" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>877</HelpID>
              <Id>1294</Id>
              <InputPortsCollection z:Id="5192" z:Size="2">
                <FBDPort z:Id="5193" i:type="InputFBDPort">
                  <Alias z:Id="5194">Hysteresis</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1295</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5195" z:Size="1">
                    <FBDPortExtSettings z:Id="5196">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5197" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5198" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5199">Hysteresis</VariableName>
                </FBDPort>
                <FBDPort z:Id="5200" i:type="InputFBDPort">
                  <Alias z:Id="5201">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1296</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5202" z:Size="1">
                    <FBDPortExtSettings z:Id="5203">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5204" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5205" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5206">Error</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5207" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="5208">Test config</Name>
              <OutputPortsCollection z:Id="5209" z:Size="1">
                <FBDPort z:Ref="3905" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5210">YART</Prefix>
              <SecondName z:Id="5211">Test_config</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>2bebd07f-c4fe-4658-8c7d-514556245970</SpecificationId>
              <Code z:Id="5212">//Задание конфигурации автонастройки


Testconfig = Hysteresis + Error * 4;</Code>
            </FBDItem>
            <FBDItem z:Id="5213" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1287</Id>
              <InputPortsCollection z:Id="5214" z:Size="1">
                <FBDPort z:Id="5215" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1288</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5216" z:Size="1">
                    <FBDPortExtSettings z:Id="5217">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5218">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5219" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="5220">Tag</Name>
              <OutputPortsCollection z:Id="5221" z:Size="1">
                <FBDPort z:Ref="3838" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5222">_</Prefix>
              <SecondName z:Ref="5220" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="258" i:nil="true" />
              <InputFBDPort z:Ref="5215" i:nil="true" />
              <OutputFBDPort z:Ref="3838" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5223" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1284</Id>
              <InputPortsCollection z:Id="5224" z:Size="1">
                <FBDPort z:Id="5225" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1285</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5226" z:Size="1">
                    <FBDPortExtSettings z:Id="5227">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5218" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5228" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Ref="5220" i:nil="true" />
              <OutputPortsCollection z:Id="5229" z:Size="1">
                <FBDPort z:Ref="3850" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5222" i:nil="true" />
              <SecondName z:Ref="5220" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="254" i:nil="true" />
              <InputFBDPort z:Ref="5225" i:nil="true" />
              <OutputFBDPort z:Ref="3850" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5230" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1277</Id>
              <InputPortsCollection z:Id="5231" z:Size="1">
                <FBDPort z:Id="5232" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1278</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5233" z:Size="1">
                    <FBDPortExtSettings z:Id="5234">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5235">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5236" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="5237">Tag</Name>
              <OutputPortsCollection z:Id="5238" z:Size="1">
                <FBDPort z:Ref="3826" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5239">_</Prefix>
              <SecondName z:Ref="5237" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="250" i:nil="true" />
              <InputFBDPort z:Ref="5232" i:nil="true" />
              <OutputFBDPort z:Ref="3826" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5240" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5241">Встроенный ПИД регулятор с возможностью автоматической настройки</Description>
              <HelpID>782</HelpID>
              <Id>1248</Id>
              <InputPortsCollection z:Id="5242" z:Size="15">
                <FBDPort z:Ref="4031" i:nil="true" />
                <FBDPort z:Ref="3807" i:nil="true" />
                <FBDPort z:Ref="3819" i:nil="true" />
                <FBDPort z:Ref="3843" i:nil="true" />
                <FBDPort z:Ref="3831" i:nil="true" />
                <FBDPort z:Ref="4135" i:nil="true" />
                <FBDPort z:Ref="4123" i:nil="true" />
                <FBDPort z:Id="5243" i:type="InputFBDPort">
                  <Alias z:Id="5244">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1256</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5245" z:Size="1">
                    <FBDPortExtSettings z:Id="5246">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5247" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5248" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.01</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5249">Kinput</VariableName>
                </FBDPort>
                <FBDPort z:Id="5250" i:type="InputFBDPort">
                  <Alias z:Id="5251">K OUT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1257</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5252" z:Size="1">
                    <FBDPortExtSettings z:Id="5253">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5254" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5255" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">20</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5256">Koutput</VariableName>
                </FBDPort>
                <FBDPort z:Id="5257" i:type="InputFBDPort">
                  <Alias z:Id="5258">PERIOD(s)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1258</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5259" z:Size="1">
                    <FBDPortExtSettings z:Id="5260">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5261" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5262" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5263">T</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3911" i:nil="true" />
                <FBDPort z:Id="5264" i:type="InputFBDPort">
                  <Alias z:Id="5265">n Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1260</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5266" z:Size="1">
                    <FBDPortExtSettings z:Id="5267">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5268" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5269" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5270">NP_Test</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3898" i:nil="true" />
                <FBDPort z:Ref="3854" i:nil="true" />
                <FBDPort z:Ref="4157" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5271" z:Size="1">
                <FBDPort z:Id="5272" i:type="InternalFBDPort">
                  <Alias z:Id="5273">Внутренняя 56499</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>1270</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5274" z:Size="4">
                    <FBDPortExtSettings z:Id="5275">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5276">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5277">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5278">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5279">a</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4250</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="5280">AUTO PID</Name>
              <OutputPortsCollection z:Id="5281" z:Size="6">
                <FBDPort z:Id="5282" i:type="OutputFBDPort">
                  <Alias z:Id="5283">K IN * SP</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1264</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5284" z:Size="1">
                    <FBDPortExtSettings z:Id="5285">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5286" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5287" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0.424999982</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5288">refPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="5289" i:type="OutputFBDPort">
                  <Alias z:Id="5290">K OUT * X</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1265</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5291" z:Size="1">
                    <FBDPortExtSettings z:Id="5292">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5293" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5294" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0.4406565</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5295">fbPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="5296" i:type="OutputFBDPort">
                  <Alias z:Id="5297">Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1266</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5298" z:Size="1">
                    <FBDPortExtSettings z:Id="5299">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5300" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5301" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5302">n_Test</VariableName>
                </FBDPort>
                <FBDPort z:Id="5303" i:type="OutputFBDPort">
                  <Alias z:Id="5304">Y1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1267</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5305" z:Size="1">
                    <FBDPortExtSettings z:Id="5306">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5307" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5308" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5309">outPID</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4103" i:nil="true" />
                <FBDPort z:Id="5310" i:type="OutputFBDPort">
                  <Alias z:Id="5311">Выход 35511</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1269</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5312" z:Size="1">
                    <FBDPortExtSettings z:Id="5313">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5314" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5315" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5316">BUFF_ERR</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5317">YART</Prefix>
              <SecondName z:Id="5318">sPID_en_eno_new</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>0167f5df-d619-42ef-b191-4e954aaaff22</SpecificationId>
              <Code z:Id="5319">/*


*	a[0] - counrer


*	a[1] - ti


*	a[2] - tf


*	a[3] - init


*/





if (!a[3]){


	a[0] = NP_Test;


	a[3] = true;


}





if(DER){


	set_float(BUFFER[0] + 40, 0.0);


	return;


}





if(BUFFER[1] &lt; 17 || BUFFER[0] &lt; 1024 || BUFFER[0] &gt; 33791) {


	__eno = false;


	BUFF_ERR = true;


	return;


}





new Float:t;


new ready;


new cmd = get_coil(Test[0]);


new mode = get_coil(Test[0]);


//Переносим коэффициенты из FRAM в буфер  


if (!mode){


	new Float:valF = get_float(KP[0]);


	set_float(BUFFER[0] + 20, valF);





	valF = get_float(KI[0]);


	set_float(BUFFER[0] + 24, valF);





	valF = get_float(KD[0]);


	set_float(BUFFER[0] + 28, valF);


} else n_Test = NP_Test - a[0] + 1;





if (T != 0.0) {


	// Adjust Reference


	t = Reference * Kinput;


	set_float(BUFFER[0], t);


	refPID = t;





	// Adjust Feedback


	t = Feedback * Kinput;


	set_float(BUFFER[0] + 4, t);


	fbPID = t;





	if (a[1] &gt;= floatround(T * 1000, floatround_round))//Был if clock


	{


		a[1] = 0;


		a[2] = 0;


		// Max, Min, T	


		set_float(BUFFER[0] + 8,  PID_Max);


		set_float(BUFFER[0] + 12, PID_Min);


		set_float(BUFFER[0] + 16, T);





		cmd &amp;= 0x01;


		cmd |= (TestCMD &lt;&lt; 1);


		ready = smart_pid(BUFFER[0], cmd, BUFFER[0]+20);





		if (!mode) a[0] = NP_Test;


			else {


				if (a[0] != 0) {


					if (ready) a[0]--;


					if (a[0] == 0){//если тест закончился копируем из  буфера в FRAM


						    set_coil(Test[0], 0);


						


							new Float:valF = get_float(BUFFER[0]+20);


							set_float(KP[0],valF);





							valF = get_float(BUFFER[0]+24);


							set_float(KI[0],valF);





							valF = get_float(BUFFER[0]+28);


							set_float(KD[0],valF);		


									}


								}	 





				}


		}





outPID = get_float(BUFFER[0]+20+3*4);


Y = outPID * Koutput;


YARTAddScanTask(a[1], a[2]);


}</Code>
            </FBDItem>
            <FBDItem z:Id="5320" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="5321">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>2621</Id>
              <InputPortsCollection z:Id="5322" z:Size="1">
                <FBDPort z:Ref="4228" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5323" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4501</d8p1:_x>
                <d8p1:_y>3687</d8p1:_y>
              </Location>
              <Name z:Id="5324">ADD</Name>
              <OutputPortsCollection z:Id="5325" z:Size="1">
                <FBDPort z:Ref="4249" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Ref="5324" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Ref="5105" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5326" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2618</Id>
              <InputPortsCollection z:Id="5327" z:Size="1">
                <FBDPort z:Id="5328" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>2619</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5329" z:Size="4">
                    <FBDPortExtSettings z:Id="5330">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5331">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5332">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5333">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4259" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5334" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="5047" i:nil="true" />
              <OutputPortsCollection z:Id="5335" z:Size="1">
                <FBDPort z:Ref="4200" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Ref="5047" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="297" i:nil="true" />
              <InputFBDPort z:Ref="5328" i:nil="true" />
              <OutputFBDPort z:Ref="4200" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5336" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2615</Id>
              <InputPortsCollection z:Id="5337" z:Size="1">
                <FBDPort z:Id="5338" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>2616</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5339" z:Size="4">
                    <FBDPortExtSettings z:Id="5340">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5341">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5342">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5343">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4259" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5344" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>3610</d8p1:_y>
              </Location>
              <Name z:Ref="5047" i:nil="true" />
              <OutputPortsCollection z:Id="5345" z:Size="1">
                <FBDPort z:Ref="4221" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Ref="5047" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="290" i:nil="true" />
              <InputFBDPort z:Ref="5338" i:nil="true" />
              <OutputFBDPort z:Ref="4221" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5346" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5347">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>2601</Id>
              <InputPortsCollection z:Id="5348" z:Size="3">
                <FBDPort z:Ref="4242" i:nil="true" />
                <FBDPort z:Ref="4208" i:nil="true" />
                <FBDPort z:Ref="4187" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5349" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4780</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Id="5350">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="5351" z:Size="1">
                <FBDPort z:Ref="4260" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="5352">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Ref="5120" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5353" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2625</Id>
              <InputPortsCollection z:Id="5354" z:Size="1">
                <FBDPort z:Ref="4254" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5355" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4930</d8p1:_x>
                <d8p1:_y>3590</d8p1:_y>
              </Location>
              <Name z:Ref="5047" i:nil="true" />
              <OutputPortsCollection z:Id="5356" z:Size="1">
                <FBDPort z:Ref="4284" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Ref="5047" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="407" i:nil="true" />
              <InputFBDPort z:Ref="4254" i:nil="true" />
              <OutputFBDPort z:Ref="4284" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5357" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5358">Чтение значения элемента массива</Description>
              <HelpID>148</HelpID>
              <Id>2629</Id>
              <InputPortsCollection z:Id="5359" z:Size="2">
                <FBDPort z:Ref="4276" i:nil="true" />
                <FBDPort z:Ref="4265" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5360" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5040</d8p1:_x>
                <d8p1:_y>3660</d8p1:_y>
              </Location>
              <Name z:Id="5361">SWITCH FLOAT</Name>
              <OutputPortsCollection z:Id="5362" z:Size="1">
                <FBDPort z:Ref="4303" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4613" i:nil="true" />
              <SecondName z:Id="5363">SWITCHFLOAT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6ac531a6-d4cf-42c0-b2fb-54b61314db2b</SpecificationId>
              <Code z:Ref="4946" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5364" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1521</Id>
              <InputPortsCollection z:Id="5365" z:Size="0" />
              <InternalPortsCollection z:Id="5366" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4420</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5367" z:Size="1">
                <FBDPort z:Ref="3930" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5368">_</Prefix>
              <SecondName z:Id="5369">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3934" i:nil="true" />
              <OutputFBDPort z:Ref="3930" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5370" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5371">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1531</Id>
              <InputPortsCollection z:Id="5372" z:Size="1">
                <FBDPort z:Ref="3950" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5373" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4570</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="5374">I&gt;F</Name>
              <OutputPortsCollection z:Id="5375" z:Size="1">
                <FBDPort z:Ref="3962" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5376">YART</Prefix>
              <SecondName z:Id="5377">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2642" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5378" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="5379">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1527</Id>
              <InputPortsCollection z:Id="5380" z:Size="2">
                <FBDPort z:Ref="3955" i:nil="true" />
                <FBDPort z:Id="5381" i:type="InputFBDPort">
                  <Alias z:Id="5382">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1529</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5383" z:Size="1">
                    <FBDPortExtSettings z:Id="5384">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5385" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5386" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5387">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5388" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4700</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="5389">DIV</Name>
              <OutputPortsCollection z:Id="5390" z:Size="1">
                <FBDPort z:Ref="3945" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5376" i:nil="true" />
              <SecondName z:Ref="5389" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="3427" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5391" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5392">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1482</Id>
              <InputPortsCollection z:Id="5393" z:Size="5">
                <FBDPort z:Ref="4296" i:nil="true" />
                <FBDPort z:Ref="3923" i:nil="true" />
                <FBDPort z:Ref="3938" i:nil="true" />
                <FBDPort z:Id="5394" i:type="InputFBDPort">
                  <Alias z:Id="5395">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1486</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5396" z:Size="1">
                    <FBDPortExtSettings z:Id="5397">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5398" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5399" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5400">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="5401" i:type="InputFBDPort">
                  <Alias z:Id="5402">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1487</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5403" z:Size="1">
                    <FBDPortExtSettings z:Id="5404">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5405" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5406" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5407">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5408" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4880</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="5409">2 PWM</Name>
              <OutputPortsCollection z:Id="5410" z:Size="1">
                <FBDPort z:Ref="4024" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5376" i:nil="true" />
              <SecondName z:Id="5411">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Id="5412">//2 PWM


PWM[0] = PERIOD;





if(STOP) return; 


if(ONCOM){


		PWM[1] = PERIOD;


		return;


		}





if(DUTY &gt;=0) PWM[1] =  floatround((DUTY*KIN), floatround_round);</Code>
            </FBDItem>
            <FBDItem z:Id="5413" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1452</Id>
              <InputPortsCollection z:Id="5414" z:Size="1">
                <FBDPort z:Ref="4016" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5415" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="5416">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5417" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5368" i:nil="true" />
              <SecondName z:Id="5418">_00_A1_DO_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5419">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5420" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5421">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1537</Id>
              <InputPortsCollection z:Id="5422" z:Size="1">
                <FBDPort z:Ref="3975" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5423" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4580</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="5424">I&gt;F</Name>
              <OutputPortsCollection z:Id="5425" z:Size="1">
                <FBDPort z:Ref="3987" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5426">YART</Prefix>
              <SecondName z:Id="5427">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2642" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5428" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="5429">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1540</Id>
              <InputPortsCollection z:Id="5430" z:Size="2">
                <FBDPort z:Ref="3980" i:nil="true" />
                <FBDPort z:Id="5431" i:type="InputFBDPort">
                  <Alias z:Id="5432">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1542</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5433" z:Size="1">
                    <FBDPortExtSettings z:Id="5434">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5435" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5436" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5437">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5438" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Id="5439">DIV</Name>
              <OutputPortsCollection z:Id="5440" z:Size="1">
                <FBDPort z:Ref="3999" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5441">YART</Prefix>
              <SecondName z:Ref="5439" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="3427" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5442" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5443">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1428</Id>
              <InputPortsCollection z:Id="5444" z:Size="5">
                <FBDPort z:Ref="3992" i:nil="true" />
                <FBDPort z:Ref="3967" i:nil="true" />
                <FBDPort z:Id="5445" i:type="InputFBDPort">
                  <Alias z:Id="5446">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1431</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5447" z:Size="1">
                    <FBDPortExtSettings z:Id="5448">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5449" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5450" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5451">KIN</VariableName>
                </FBDPort>
                <FBDPort z:Id="5452" i:type="InputFBDPort">
                  <Alias z:Id="5453">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1432</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5454" z:Size="1">
                    <FBDPortExtSettings z:Id="5455">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5456">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="5457" i:type="InputFBDPort">
                  <Alias z:Id="5458">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1433</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5459" z:Size="1">
                    <FBDPortExtSettings z:Id="5460">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5461">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5462" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4710</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="5463">2 PWM</Name>
              <OutputPortsCollection z:Id="5464" z:Size="1">
                <FBDPort z:Ref="3800" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5465">YART</Prefix>
              <SecondName z:Id="5466">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Ref="5412" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5467" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1446</Id>
              <InputPortsCollection z:Id="5468" z:Size="1">
                <FBDPort z:Ref="3792" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5469" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Ref="5416" i:nil="true" />
              <OutputPortsCollection z:Id="5470" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5368" i:nil="true" />
              <SecondName z:Id="5471">_00_A1_DO_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5472">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5473" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1684</Id>
              <InputPortsCollection z:Id="5474" z:Size="1">
                <FBDPort z:Ref="4098" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5475" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="4741" i:nil="true" />
              <OutputPortsCollection z:Id="5476" z:Size="1">
                <FBDPort z:Id="5477" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1686</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5478" z:Size="1">
                    <FBDPortExtSettings z:Id="5479">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5480" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5481" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4748" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4619" i:nil="true" />
              <SecondName z:Ref="4741" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="403" i:nil="true" />
              <InputFBDPort z:Ref="4098" i:nil="true" />
              <OutputFBDPort z:Ref="5477" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5482" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5483">Упаковка значения периода и скважности в массив совместимый с дискретным выходом который сконфигурирован как аппаратный ШИМ</Description>
              <HelpID>100</HelpID>
              <Id>1905</Id>
              <InputPortsCollection z:Id="5484" z:Size="2">
                <FBDPort z:Id="5485" i:type="InputFBDPort">
                  <Alias z:Id="5486">PERIOD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1906</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5487" z:Size="1">
                    <FBDPortExtSettings z:Id="5488">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5489" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5490" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">50</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5491">period</VariableName>
                </FBDPort>
                <FBDPort z:Id="5492" i:type="InputFBDPort">
                  <Alias z:Id="5493">DUTY</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1907</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5494" z:Size="1">
                    <FBDPortExtSettings z:Id="5495">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5496" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5497" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">25</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5498">duty</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5499" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="5500">PWM</Name>
              <OutputPortsCollection z:Id="5501" z:Size="1">
                <FBDPort z:Ref="4117" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5502">YART</Prefix>
              <SecondName z:Id="5503">PWM2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>8e60f8dc-c7f7-47af-a5f1-f4dbc3563a8f</SpecificationId>
              <Code z:Id="5504">//#2 PWM (Двухпозиционный ШИМ)  


//Упаковка шим в массив для выхода YART 


mass[0] = period;


mass[1] = duty;</Code>
            </FBDItem>
            <FBDItem z:Id="5505" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1909</Id>
              <InputPortsCollection z:Id="5506" z:Size="1">
                <FBDPort z:Ref="4109" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5507" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4960</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="5508">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5509" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="5510">_</Prefix>
              <SecondName z:Id="5511">_00_A1_DO_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5512">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5513" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1497</Id>
              <InputPortsCollection z:Id="5514" z:Size="0" />
              <InternalPortsCollection z:Id="5515" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3253.7555666924063</d8p1:_x>
                <d8p1:_y>4020</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5516" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5368" i:nil="true" />
              <SecondName z:Id="5517">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT5S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName z:Id="5518">Otoplenok_test_PID_Feed_Forward_17.11.2020_ChartData.xlsx</FileName>
              <Height>552.59740003179741</Height>
              <Series z:Id="5519" z:Size="4">
                <TagChartSeriesVisualItem z:Id="5520">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5521">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5522">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1244</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="5523">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5524">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>139</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5525">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1680</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="5526">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5527">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>128</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5528">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1712</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="5529">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5530">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>255</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5531">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>2624</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-12-23T18:33:40.2962287+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-12-23T18:23:40.2962287+03:00</VisualXRangeMin>
              <Width>1281.7019934575014</Width>
            </FBDItem>
            <FBDItem z:Id="5532" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1696</Id>
              <InputPortsCollection z:Id="5533" z:Size="0" />
              <InternalPortsCollection z:Id="5534" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3847</d8p1:_x>
                <d8p1:_y>3390</d8p1:_y>
              </Location>
              <Name z:Id="5535">comment</Name>
              <OutputPortsCollection z:Id="5536" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4619" i:nil="true" />
              <SecondName z:Id="5537">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5538">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</Comment>
              <Height>288.82794090937523</Height>
              <Width>739.55937564483975</Width>
            </FBDItem>
            <FBDItem z:Id="5539" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1711</Id>
              <InputPortsCollection z:Id="5540" z:Size="0" />
              <InternalPortsCollection z:Id="5541" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4550</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Ref="5535" i:nil="true" />
              <OutputPortsCollection z:Id="5542" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4619" i:nil="true" />
              <SecondName z:Id="5543">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5544">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</Comment>
              <Height>323.20423176420718</Height>
              <Width>616.24959060752462</Width>
            </FBDItem>
            <FBDItem z:Id="5545" i:type="SpinEditVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2558</Id>
              <InputPortsCollection z:Id="5546" z:Size="0" />
              <InternalPortsCollection z:Id="5547" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5548" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5126" i:nil="true" />
              <SecondName z:Id="5549">newfun_2779205890</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>c9cd1998-9f6a-4831-b031-f3754cb1f6ab</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="5550">
                <ArrayIndex>0</ArrayIndex>
                <TagId>1244</TagId>
              </Tag>
              <Format z:Id="5551">0.##</Format>
            </FBDItem>
            <FBDItem z:Id="5552" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2628</Id>
              <InputPortsCollection z:Id="5553" z:Size="0" />
              <InternalPortsCollection z:Id="5554" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3320</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Id="5555">comment</Name>
              <OutputPortsCollection z:Id="5556" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Id="5557">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5558">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</Comment>
              <Height>288.72573402440639</Height>
              <Width>223.24848872253051</Width>
            </FBDItem>
            <FBDItem z:Id="5559" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2791</Id>
              <InputPortsCollection z:Id="5560" z:Size="0" />
              <InternalPortsCollection z:Id="5561" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>2947.1831809657679</d8p1:_x>
                <d8p1:_y>3343.8353557969358</d8p1:_y>
              </Location>
              <Name z:Ref="5555" i:nil="true" />
              <OutputPortsCollection z:Id="5562" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4814" i:nil="true" />
              <SecondName z:Id="5563">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5564">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</Comment>
              <Height>312.04824842255675</Height>
              <Width>827.67395391243235</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="5565">PID_control</Name>
          <Parent z:Ref="3787" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>3</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5566">PID</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5567" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5568" z:Size="1">
        <d2p1:anyType z:Id="5569" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5570" z:Size="3">
            <FBDConnector z:Id="5571">
              <EndFBDPort z:Id="5572" i:type="InputFBDPort">
                <Alias z:Id="5573">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1206</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5574" z:Size="1">
                  <FBDPortExtSettings z:Id="5575">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5576" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5577">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5578" i:type="OutputFBDPort">
                <Alias z:Id="5579">AI.02: AIN_2_RoomT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1425</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5580" z:Size="1">
                  <FBDPortExtSettings z:Id="5581">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5576" i:nil="true" />
                <VariableName z:Ref="10" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5582">
              <EndFBDPort z:Id="5583" i:type="InputFBDPort">
                <Alias z:Id="5584">K filter</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1207</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5585" z:Size="1">
                  <FBDPortExtSettings z:Id="5586">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5587" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5588">k</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5589" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2109</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5590" z:Size="1">
                  <FBDPortExtSettings z:Id="5591">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5587" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5592">
              <EndFBDPort z:Id="5593" i:type="InputFBDPort">
                <Alias z:Id="5594">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2315</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5595" z:Size="1">
                  <FBDPortExtSettings z:Id="5596">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5597" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5598">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5599" i:type="OutputFBDPort">
                <Alias z:Id="5600">AI.03: AIN_3_FLOOD</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2248</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5601" z:Size="1">
                  <FBDPortExtSettings z:Id="5602">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5597" i:nil="true" />
                <VariableName z:Ref="13" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5603" z:Size="7">
            <FBDItem z:Id="5604" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2107</Id>
              <InputPortsCollection z:Id="5605" z:Size="1">
                <FBDPort z:Id="5606" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2108</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5607" z:Size="1">
                    <FBDPortExtSettings z:Id="5608">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5609" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3560</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="5610" z:Size="1">
                <FBDPort z:Ref="5589" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="375" i:nil="true" />
              <InputFBDPort z:Ref="5606" i:nil="true" />
              <OutputFBDPort z:Ref="5589" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5611" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1424</Id>
              <InputPortsCollection z:Id="5612" z:Size="0" />
              <InternalPortsCollection z:Id="5613" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="4634" i:nil="true" />
              <OutputPortsCollection z:Id="5614" z:Size="1">
                <FBDPort z:Ref="5578" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4636" i:nil="true" />
              <SecondName z:Id="5615">_00_A1_AI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5616">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5617" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5618">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1205</Id>
              <InputPortsCollection z:Id="5619" z:Size="3">
                <FBDPort z:Ref="5572" i:nil="true" />
                <FBDPort z:Ref="5583" i:nil="true" />
                <FBDPort z:Id="5620" i:type="InputFBDPort">
                  <Alias z:Id="5621">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1208</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5622" z:Size="1">
                    <FBDPortExtSettings z:Id="5623">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5624">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5625" z:Size="1">
                <FBDPort z:Id="5626" i:type="InternalFBDPort">
                  <Alias z:Id="5627">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1213</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5628" z:Size="10">
                    <FBDPortExtSettings z:Id="5629">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5630">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5631">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5632">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5633">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5634">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5635">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5636">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5637">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5638">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5639">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3810</d8p1:_x>
                <d8p1:_y>3600</d8p1:_y>
              </Location>
              <Name z:Id="5640">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="5641" z:Size="4">
                <FBDPort z:Id="5642" i:type="OutputFBDPort">
                  <Alias z:Id="5643">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1209</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5644" z:Size="1">
                    <FBDPortExtSettings z:Id="5645">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5646" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5647">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="5648" i:type="OutputFBDPort">
                  <Alias z:Id="5649">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1210</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5650" z:Size="1">
                    <FBDPortExtSettings z:Id="5651">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5652" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5653">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5654" i:type="OutputFBDPort">
                  <Alias z:Id="5655">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1211</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5656" z:Size="1">
                    <FBDPortExtSettings z:Id="5657">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5658" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5659">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="5660" i:type="OutputFBDPort">
                  <Alias z:Id="5661">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1212</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5662" z:Size="1">
                    <FBDPortExtSettings z:Id="5663">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5664" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5665">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5666">YART</Prefix>
              <SecondName z:Id="5667">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Ref="4687" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5668" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2247</Id>
              <InputPortsCollection z:Id="5669" z:Size="0" />
              <InternalPortsCollection z:Id="5670" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3541</d8p1:_x>
                <d8p1:_y>3846</d8p1:_y>
              </Location>
              <Name z:Id="5671">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5672" z:Size="1">
                <FBDPort z:Ref="5599" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5673">_</Prefix>
              <SecondName z:Id="5674">_00_A1_AI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5675">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5676" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5677">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>862</HelpID>
              <Id>2313</Id>
              <InputPortsCollection z:Id="5678" z:Size="3">
                <FBDPort z:Ref="5593" i:nil="true" />
                <FBDPort z:Id="5679" i:type="InputFBDPort">
                  <Alias z:Id="5680">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2316</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5681" z:Size="1">
                    <FBDPortExtSettings z:Id="5682">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5683" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5684" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5685">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="5686" i:type="InputFBDPort">
                  <Alias z:Id="5687">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2317</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5688" z:Size="1">
                    <FBDPortExtSettings z:Id="5689">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5690">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5691" z:Size="1">
                <FBDPort z:Id="5692" i:type="InternalFBDPort">
                  <Alias z:Id="5693">Внутренняя 54731</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>2314</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5694" z:Size="10">
                    <FBDPortExtSettings z:Id="5695">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5696">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5697">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5698">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5699">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5700">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5701">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5702">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5703">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5704">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5705">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3740</d8p1:_y>
              </Location>
              <Name z:Id="5706">PT 1000 (385)</Name>
              <OutputPortsCollection z:Id="5707" z:Size="4">
                <FBDPort z:Id="5708" i:type="OutputFBDPort">
                  <Alias z:Id="5709">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2318</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5710" z:Size="1">
                    <FBDPortExtSettings z:Id="5711">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5712" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5713">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="5714" i:type="OutputFBDPort">
                  <Alias z:Id="5715">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2319</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5716" z:Size="1">
                    <FBDPortExtSettings z:Id="5717">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5718" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5719">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5720" i:type="OutputFBDPort">
                  <Alias z:Id="5721">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2320</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5722" z:Size="1">
                    <FBDPortExtSettings z:Id="5723">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5724" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5725">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="5726" i:type="OutputFBDPort">
                  <Alias z:Id="5727">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2321</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5728" z:Size="1">
                    <FBDPortExtSettings z:Id="5729">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5730" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5731">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5732">YART</Prefix>
              <SecondName z:Id="5733">PT1000_385</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>287faa38-da5e-478a-9de8-0469f4d3ce63</SpecificationId>
              <Code z:Ref="5035" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5734" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2253</Id>
              <InputPortsCollection z:Id="5735" z:Size="0" />
              <InternalPortsCollection z:Id="5736" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3469</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5737" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5673" i:nil="true" />
              <SecondName z:Id="5738">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName i:nil="true" />
              <Height>300</Height>
              <Series z:Id="5739" z:Size="1">
                <TagChartSeriesVisualItem z:Id="5740">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5741">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5742">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>2249</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-11-13T16:10:36.446792+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-11-13T15:50:36.446792+03:00</VisualXRangeMin>
              <Width>1480</Width>
            </FBDItem>
            <FBDItem z:Id="5743" i:type="MeterVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2255</Id>
              <InputPortsCollection z:Id="5744" z:Size="0" />
              <InternalPortsCollection z:Id="5745" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4240</d8p1:_x>
                <d8p1:_y>3650</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5746" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5673" i:nil="true" />
              <SecondName z:Id="5747">newfun_1350831332</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>30564771-8fd2-4b47-8909-ef003bfbeed2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="5748">
                <ArrayIndex>0</ArrayIndex>
                <TagId>2249</TagId>
              </Tag>
              <Dimension z:Ref="67" i:nil="true" />
              <EndValueScale>90</EndValueScale>
              <FormatLabel z:Id="5749">{0:f0}</FormatLabel>
              <MajorIntervalCount>20</MajorIntervalCount>
              <StartValueScale>0</StartValueScale>
            </FBDItem>
          </FBDItems>
          <Name z:Id="5750">Room_Control</Name>
          <Parent z:Ref="5567" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>4</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5751">ROOM</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5752" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5753" z:Size="1">
        <d2p1:anyType z:Id="5754" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5755" z:Size="3">
            <FBDConnector z:Id="5756">
              <EndFBDPort z:Id="5757" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1973</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5758" z:Size="1">
                  <FBDPortExtSettings z:Id="5759">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5760" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2199" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5761" i:type="OutputFBDPort">
                <Alias z:Id="5762">E1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1962</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5763" z:Size="1">
                  <FBDPortExtSettings z:Id="5764">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5760" i:nil="true" />
                <VariableName z:Id="5765">_e1</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5766">
              <EndFBDPort z:Id="5767" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1976</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5768" z:Size="1">
                  <FBDPortExtSettings z:Id="5769">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5770" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2199" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5771" i:type="OutputFBDPort">
                <Alias z:Id="5772">E2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1963</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5773" z:Size="1">
                  <FBDPortExtSettings z:Id="5774">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5770" i:nil="true" />
                <VariableName z:Id="5775">_e2</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5776">
              <EndFBDPort z:Id="5777" i:type="InputFBDPort">
                <Alias z:Id="5778">Port Par</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1951</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5779" z:Size="1">
                  <FBDPortExtSettings z:Id="5780">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="5781" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5782">pp_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5783" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1980</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5784" z:Size="1">
                  <FBDPortExtSettings z:Id="5785">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="5781" i:nil="true" />
                <VariableName z:Ref="2215" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5786" z:Size="4">
            <FBDItem z:Id="5787" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1978</Id>
              <InputPortsCollection z:Id="5788" z:Size="1">
                <FBDPort z:Id="5789" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1979</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5790" z:Size="1">
                    <FBDPortExtSettings z:Id="5791">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2199" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5792" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3450</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2272" i:nil="true" />
              <OutputPortsCollection z:Id="5793" z:Size="1">
                <FBDPort z:Ref="5783" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2274" i:nil="true" />
              <SecondName z:Ref="2272" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="358" i:nil="true" />
              <InputFBDPort z:Ref="5789" i:nil="true" />
              <OutputFBDPort z:Ref="5783" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5794" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5795">Опрос счетчика Меркурий 203</Description>
              <HelpID>707</HelpID>
              <Id>1927</Id>
              <InputPortsCollection z:Id="5796" z:Size="4">
                <FBDPort z:Id="5797" i:type="InputFBDPort">
                  <Alias z:Id="5798">Enable</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1950</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5799" z:Size="1">
                    <FBDPortExtSettings z:Id="5800">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5801" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5802" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5803">e_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="5777" i:nil="true" />
                <FBDPort z:Id="5804" i:type="InputFBDPort">
                  <Alias z:Id="5805">ADDR</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1952</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5806" z:Size="1">
                    <FBDPortExtSettings z:Id="5807">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5808" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5809" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">42687530</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5810">da_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5811" i:type="InputFBDPort">
                  <Alias z:Id="5812">Timeout</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1953</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5813" z:Size="1">
                    <FBDPortExtSettings z:Id="5814">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5815" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5816" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5817">t_</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5818" z:Size="22">
                <FBDPort z:Id="5819" i:type="InternalFBDPort">
                  <Alias z:Id="5820">Внутренняя 10753</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1928</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5821" z:Size="1">
                    <FBDPortExtSettings z:Id="5822">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5823">_init_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5824" i:type="InternalFBDPort">
                  <Alias z:Id="5825">Внутренняя 10759</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1929</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5826" z:Size="1">
                    <FBDPortExtSettings z:Id="5827">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5828">_blockId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5829" i:type="InternalFBDPort">
                  <Alias z:Id="5830">Внутренняя 10760</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1930</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5831" z:Size="1">
                    <FBDPortExtSettings z:Id="5832">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5833">_stage_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5834" i:type="InternalFBDPort">
                  <Alias z:Id="5835">Внутренняя 13906</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1931</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5836" z:Size="1">
                    <FBDPortExtSettings z:Id="5837">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5838">_timer_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5839" i:type="InternalFBDPort">
                  <Alias z:Id="5840">Внутренняя 14582</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1932</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5841" z:Size="1">
                    <FBDPortExtSettings z:Id="5842">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5843">_timerNA_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5844" i:type="InternalFBDPort">
                  <Alias z:Id="5845">Внутренняя 13878</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1933</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5846" z:Size="1">
                    <FBDPortExtSettings z:Id="5847">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5848">_na_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5849" i:type="InternalFBDPort">
                  <Alias z:Id="5850">Внутренняя 16763</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1934</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5851" z:Size="1">
                    <FBDPortExtSettings z:Id="5852">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5853">_err_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5854" i:type="InternalFBDPort">
                  <Alias z:Id="5855">Внутренняя 16765</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1935</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5856" z:Size="1">
                    <FBDPortExtSettings z:Id="5857">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5858">_msgLen_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5859" i:type="InternalFBDPort">
                  <Alias z:Id="5860">Внутренняя 16767</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1936</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5861" z:Size="1">
                    <FBDPortExtSettings z:Id="5862">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5863">_txloop_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5864" i:type="InternalFBDPort">
                  <Alias z:Id="5865">Внутренняя 17727</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1937</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5866" z:Size="1">
                    <FBDPortExtSettings z:Id="5867">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5868">_lastBi_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5869" i:type="InternalFBDPort">
                  <Alias z:Id="5870">Внутренняя 17965</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1938</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5871" z:Size="1">
                    <FBDPortExtSettings z:Id="5872">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5873">_le_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5874" i:type="InternalFBDPort">
                  <Alias z:Id="5875">Внутренняя 17966</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1939</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5876" z:Size="1">
                    <FBDPortExtSettings z:Id="5877">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5878">_lda_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5879" i:type="InternalFBDPort">
                  <Alias z:Id="5880">Внутренняя 19074</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1940</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5881" z:Size="1">
                    <FBDPortExtSettings z:Id="5882">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5883">_mid_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5884" i:type="InternalFBDPort">
                  <Alias z:Id="5885">Внутренняя 21339</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1941</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5886" z:Size="1">
                    <FBDPortExtSettings z:Id="5887">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5888">_date_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5889" i:type="InternalFBDPort">
                  <Alias z:Id="5890">Внутренняя 21340</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1942</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5891" z:Size="1">
                    <FBDPortExtSettings z:Id="5892">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5893">_time_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5894" i:type="InternalFBDPort">
                  <Alias z:Id="5895">Внутренняя 20951</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1943</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5896" z:Size="1">
                    <FBDPortExtSettings z:Id="5897">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5898">_u_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5899" i:type="InternalFBDPort">
                  <Alias z:Id="5900">Внутренняя 23664</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1944</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5901" z:Size="1">
                    <FBDPortExtSettings z:Id="5902">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5903">_i_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5904" i:type="InternalFBDPort">
                  <Alias z:Id="5905">Внутренняя 23666</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1945</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5906" z:Size="1">
                    <FBDPortExtSettings z:Id="5907">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5908">_p_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5909" i:type="InternalFBDPort">
                  <Alias z:Id="5910">Внутренняя 23676</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1946</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5911" z:Size="1">
                    <FBDPortExtSettings z:Id="5912">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5913">_e1_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5914" i:type="InternalFBDPort">
                  <Alias z:Id="5915">Внутренняя 23678</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1947</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5916" z:Size="1">
                    <FBDPortExtSettings z:Id="5917">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5918">_e2_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5919" i:type="InternalFBDPort">
                  <Alias z:Id="5920">Внутренняя 23680</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1948</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5921" z:Size="1">
                    <FBDPortExtSettings z:Id="5922">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5923">_e3_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5924" i:type="InternalFBDPort">
                  <Alias z:Id="5925">Внутренняя 23682</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1949</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5926" z:Size="1">
                    <FBDPortExtSettings z:Id="5927">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5928">_e4_</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670.5</d8p1:_x>
                <d8p1:_y>3918.5</d8p1:_y>
              </Location>
              <Name z:Id="5929">Merc203</Name>
              <OutputPortsCollection z:Id="5930" z:Size="12">
                <FBDPort z:Id="5931" i:type="OutputFBDPort">
                  <Alias z:Id="5932">Done</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1954</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5933" z:Size="1">
                    <FBDPortExtSettings z:Id="5934">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5935" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5936">_d</VariableName>
                </FBDPort>
                <FBDPort z:Id="5937" i:type="OutputFBDPort">
                  <Alias z:Id="5938">NA</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1955</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5939" z:Size="1">
                    <FBDPortExtSettings z:Id="5940">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5941" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5942">_na</VariableName>
                </FBDPort>
                <FBDPort z:Id="5943" i:type="OutputFBDPort">
                  <Alias z:Id="5944">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1956</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5945" z:Size="1">
                    <FBDPortExtSettings z:Id="5946">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5947" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5948">_err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5949" i:type="OutputFBDPort">
                  <Alias z:Id="5950">Date</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1957</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5951" z:Size="1">
                    <FBDPortExtSettings z:Id="5952">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value z:Id="5953" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5954">_date</VariableName>
                </FBDPort>
                <FBDPort z:Id="5955" i:type="OutputFBDPort">
                  <Alias z:Id="5956">Time</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1958</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5957" z:Size="1">
                    <FBDPortExtSettings z:Id="5958">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="5959" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5960">_time</VariableName>
                </FBDPort>
                <FBDPort z:Id="5961" i:type="OutputFBDPort">
                  <Alias z:Id="5962">U</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1959</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5963" z:Size="1">
                    <FBDPortExtSettings z:Id="5964">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5965" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5966">_u</VariableName>
                </FBDPort>
                <FBDPort z:Id="5967" i:type="OutputFBDPort">
                  <Alias z:Id="5968">I</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1960</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5969" z:Size="1">
                    <FBDPortExtSettings z:Id="5970">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5971" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5972">_i</VariableName>
                </FBDPort>
                <FBDPort z:Id="5973" i:type="OutputFBDPort">
                  <Alias z:Id="5974">P</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1961</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5975" z:Size="1">
                    <FBDPortExtSettings z:Id="5976">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5977" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5978">_p</VariableName>
                </FBDPort>
                <FBDPort z:Ref="5761" i:nil="true" />
                <FBDPort z:Ref="5771" i:nil="true" />
                <FBDPort z:Id="5979" i:type="OutputFBDPort">
                  <Alias z:Id="5980">E3</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1964</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5981" z:Size="1">
                    <FBDPortExtSettings z:Id="5982">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5983" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5984">_e3</VariableName>
                </FBDPort>
                <FBDPort z:Id="5985" i:type="OutputFBDPort">
                  <Alias z:Id="5986">E4</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1965</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5987" z:Size="1">
                    <FBDPortExtSettings z:Id="5988">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5989" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5990">_e4</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5991">YART</Prefix>
              <SecondName z:Id="5992">M203</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>632cf310-223b-4d34-8229-04a971866e4e</SpecificationId>
              <Code z:Id="5993">// Константы


const BL_MIN				= 28;


const TIMEOUT_CYCLE			= 200;


const TX_LOOP_COUNT_MAX		= 3;





const ST_PORT_OPEN			= 0;


const ST_CLEAN				= 1;


const ST_MSG_OUT_CREATE		= 2;


const ST_MSG_OUT_SEND		= 3;


const ST_MSG_IN_RECEIVE		= 4;


const ST_MSG_IN_PROCESS		= 5;


const ST_CYCLE_ABORT		= 253;


const ST_CYCLE_FINISHED		= 254;


const ST_NEXT_BLOCK			= 255;





const MSG_GET_DATETIME		= 0;


const MSG_GET_UIP			= 1;


const MSG_GET_E				= 2;


const MSG_COUNT				= 3;





new PortId, Flags, Baudrate, crc, BA, BL, check, offset, dt[7];





if(t_ &lt;= 0) t_ = TIMEOUT_CYCLE * 2;


if(t_ &lt; TIMEOUT_CYCLE) t_ = TIMEOUT_CYCLE;





// Проверка входящих параметров


YARTReadComSets(pp_, PortId, Flags, Baudrate);





// Первичная инициализация


if(!_init_){


	_blockId_ = getCountPortId(PortId);


	setCountPortId(PortId, _blockId_ + 1);


	togleUpdate(PortId);


	_stage_ = ST_PORT_OPEN;


	_init_ = true;


}





// Ссылки


BA = getPortBufferOffset(PortId);


if(BA &lt; 0) {_err_ = true; _na_ = true; e_ = false;}


BL = getPortBufferSize(PortId);


if(BL &lt; BL_MIN) {_err_ = true; _na_ = true; e_ = false;}





if(e_) if(!_le_) if(_stage_ &gt; ST_CLEAN) _stage_ = ST_CLEAN;


_le_ = e_;





check = false;


if(_lda_ != da_) {check = true; _lda_ = da_;}


if(check){


	_mid_ = 0;


	_u_ = 0.0;


	_i_ = 0.0;


	_p_ = 0.0;


	_e1_ = 0.0;


	_e2_ = 0.0;


	_e3_ = 0.0;


	_e4_ = 0.0;


	_date_ = 0;


	_time_ = 0;


	if(_stage_ &gt; ST_CLEAN) _stage_ = ST_CLEAN;


}





// Отображение значений


_na = _na_;


_err = _err_;


_u = _u_;


_i = _i_;


_p = _p_;


_e1 = _e1_;


_e2 = _e2_;


_e3 = _e3_;


_e4 = _e4_;


_date = _date_;


_time = _time_;








// Переход в другой блок при отмене выполнения текущего


if(!e_) _stage_ = ST_NEXT_BLOCK;





// Пропуск не активного блока


if(getCurrentPortId(PortId) != _blockId_){


	if(!togleIsActive(PortId)){ NextPortId(PortId); togleUpdate(PortId); }


	return;


}else{


	togleUpdate(PortId);


	_timer_ += GetScanDt;


	_timerNA_ += GetScanDt;





	// Остановка по таймауту


	if(_timerNA_ &gt; t_) {_mid_ = 0; _stage_ = ST_NEXT_BLOCK; _na_ = true;}


	else if(check) _stage_ = ST_PORT_OPEN;


	else if(_stage_ &lt; ST_CYCLE_ABORT) if(_timer_ &gt; TIMEOUT_CYCLE) _stage_ = ST_CYCLE_ABORT;


}





// Открытие порта


if(_stage_ == ST_PORT_OPEN){


	port_open(PortId, Baudrate, Flags);


	stop_port_receive(PortId);


	_stage_ = ST_CLEAN;


}





if(_stage_ == ST_CLEAN){


	stop_port_receive(PortId);


	_timer_ = 0;





	// Очистка буфера


	for(new i = BA; i &lt; BA + BL; i++) set_byte(i, 0);





	_txloop_ = TX_LOOP_COUNT_MAX;


	_stage_ = ST_MSG_OUT_CREATE;


}





// Подготовка сообщения


if(_stage_ == ST_MSG_OUT_CREATE){


	offset = BA;


	set_int(offset, YARTRotateInt(da_));


	offset += 4;


	switch(_mid_){


		case MSG_GET_DATETIME:	set_byte(offset++, 0x21);


		case MSG_GET_UIP:		set_byte(offset++, 0x63);


		case MSG_GET_E:			set_byte(offset++, 0x27);


	}


	





	crc = YARTCrc16_modbus_lnk(BA, offset - BA);


	set_byte(offset++, crc &amp; 0xFF);


	set_byte(offset++, (crc &gt;&gt; 8) &amp; 0xFF);


	_msgLen_ = offset - BA;


	_stage_ = ST_MSG_OUT_SEND;


}





// Отправка сообщения


if(_stage_ == ST_MSG_OUT_SEND){


	if(port_transmit_status(PortId) == 0 || --_txloop_ == 0){


		stop_port_receive(PortId);


		port_receive(PortId, BA + _msgLen_, BL - _msgLen_);


		port_send(PortId, BA, _msgLen_);


		_stage_ = ST_MSG_IN_RECEIVE;


	}


}





// Ожидание окончания получения ответа


if(_stage_ == ST_MSG_IN_RECEIVE){


	_lastBi_ = 0;


	for(new i = BA + BL - 1; i &gt;= BA + _msgLen_ + 2; i--) if(get_byte(i) &gt; 0) {_lastBi_ = i - BA; break;}


	if(_lastBi_ &gt; _msgLen_ + 2){


		crc = YARTCrc16_modbus_lnk(BA + _msgLen_, _lastBi_ - _msgLen_ - 1);


		if(get_byte(BA + _lastBi_ - 1) == (crc &amp; 0xFF))


		if(get_byte(BA + _lastBi_) == ((crc &gt;&gt; 8) &amp; 0xFF)) _stage_ = ST_MSG_IN_PROCESS;


	}


}





// Обработка ответа


if(_stage_ == ST_MSG_IN_PROCESS){


	_na_ = false;


	offset = BA + _msgLen_ + 5;


	switch(_mid_){


		case MSG_GET_DATETIME:{


			for(new i = 0; i &lt; 7; i++) dt[i] = YARTHex2Int(get_byte(offset++));


			_date_ = Date(TOBCD(dt[6]),TOBCD(dt[5]),TOBCD(dt[4]),TOBCD(dt[0]));


			_time_ = Time(TOBCD(dt[1]),TOBCD(dt[2]),TOBCD(dt[3]));


		}


		case MSG_GET_UIP:{


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_u_ = check / 10.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_i_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_p_ = check / 1000.0;


		}


		case MSG_GET_E:{


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e1_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e2_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e3_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e4_ = check / 100.0;


		}


	}


	_stage_ = ST_CYCLE_FINISHED;


}





// Прерывание работы цикла


if(_stage_ == ST_CYCLE_ABORT){


	stop_port_receive(PortId);


	if(t_ - _timerNA_ &gt; TIMEOUT_CYCLE){


		_timer_ = 0;


		_stage_ = ST_CLEAN;


	}


}





// Завершение работы цикла


if(_stage_ == ST_CYCLE_FINISHED){


	stop_port_receive(PortId);


	_mid_++;


	if(_mid_ == MSG_COUNT){


		_mid_ = 0;


		_d = true;


		_stage_ = ST_NEXT_BLOCK;


	}else{


		_stage_ = ST_CLEAN;


	}


}





// Завершение работы блока


if(_stage_ == ST_NEXT_BLOCK){


	stop_port_receive(PortId);


	port_close(PortId);


	NextPortId(PortId);


	_timerNA_ = 0;


	_timer_ = 0;


	_stage_ = ST_PORT_OPEN;


}</Code>
            </FBDItem>
            <FBDItem z:Id="5994" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1972</Id>
              <InputPortsCollection z:Id="5995" z:Size="1">
                <FBDPort z:Ref="5757" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5996" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Ref="2272" i:nil="true" />
              <OutputPortsCollection z:Id="5997" z:Size="1">
                <FBDPort z:Id="5998" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1974</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5999" z:Size="1">
                    <FBDPortExtSettings z:Id="6000">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="6001" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2215" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2274" i:nil="true" />
              <SecondName z:Ref="2272" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="86" i:nil="true" />
              <InputFBDPort z:Ref="5757" i:nil="true" />
              <OutputFBDPort z:Ref="5998" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6002" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1975</Id>
              <InputPortsCollection z:Id="6003" z:Size="1">
                <FBDPort z:Ref="5767" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6004" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Ref="2272" i:nil="true" />
              <OutputPortsCollection z:Id="6005" z:Size="1">
                <FBDPort z:Id="6006" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1977</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6007" z:Size="1">
                    <FBDPortExtSettings z:Id="6008">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="6009" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2215" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2274" i:nil="true" />
              <SecondName z:Ref="2272" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="362" i:nil="true" />
              <InputFBDPort z:Ref="5767" i:nil="true" />
              <OutputFBDPort z:Ref="6006" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="6010">Meter_Mecury203</Name>
          <Parent z:Ref="5752" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>6</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="6011">METERS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="6012" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="6013" z:Size="1">
        <d2p1:anyType z:Id="6014" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="6015" z:Size="13">
            <FBDConnector z:Id="6016">
              <EndFBDPort z:Id="6017" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1749</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6018" z:Size="1">
                  <FBDPortExtSettings z:Id="6019">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6020" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2473" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6021" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6022" z:Size="1">
                  <FBDPortExtSettings z:Id="6023">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="6020" i:nil="true" />
                <VariableName z:Id="6024">rez</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6025">
              <EndFBDPort z:Id="6026" i:type="InputFBDPort">
                <Alias z:Id="6027">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1990</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6028" z:Size="1">
                  <FBDPortExtSettings z:Id="6029">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6030" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6031">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6032" i:type="OutputFBDPort">
                <Alias z:Id="6033">DI.02: DIN_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1742</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6034" z:Size="1">
                  <FBDPortExtSettings z:Id="6035">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="6030" i:nil="true" />
                <VariableName z:Ref="32" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6036">
              <EndFBDPort z:Id="6037" i:type="InputFBDPort">
                <Alias z:Id="6038">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1996</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6039" z:Size="1">
                  <FBDPortExtSettings z:Id="6040">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6041" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6042">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6043" i:type="OutputFBDPort">
                <Alias z:Id="6044">DI.03: DIN_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1744</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6045" z:Size="1">
                  <FBDPortExtSettings z:Id="6046">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="6041" i:nil="true" />
                <VariableName z:Ref="34" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6047">
              <EndFBDPort z:Id="6048" i:type="InputFBDPort">
                <Alias z:Id="6049">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2002</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6050" z:Size="1">
                  <FBDPortExtSettings z:Id="6051">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6052" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6053">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6054" i:type="OutputFBDPort">
                <Alias z:Id="6055">DI.04: DIN_4</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1746</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6056" z:Size="1">
                  <FBDPortExtSettings z:Id="6057">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="6052" i:nil="true" />
                <VariableName z:Ref="36" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6058">
              <EndFBDPort z:Id="6059" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>1737</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6060" z:Size="8">
                  <FBDPortExtSettings z:Id="6061">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6062">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6063">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6064">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6065">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6066">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6067">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6068">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6069" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6070">mas</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6071" i:type="OutputFBDPort">
                <Alias z:Id="6072">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1992</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6073" z:Size="1">
                  <FBDPortExtSettings z:Id="6074">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="6069" i:nil="true" />
                <VariableName z:Id="6075">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6076">
              <EndFBDPort z:Ref="6059" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6077" i:type="OutputFBDPort">
                <Alias z:Id="6078">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1998</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6079" z:Size="1">
                  <FBDPortExtSettings z:Id="6080">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6081" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6082">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6083">
              <EndFBDPort z:Ref="6059" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6084" i:type="OutputFBDPort">
                <Alias z:Id="6085">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2004</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6086" z:Size="1">
                  <FBDPortExtSettings z:Id="6087">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6088" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6089">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6090">
              <EndFBDPort z:Id="6091" i:type="InputFBDPort">
                <Alias z:Id="6092">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2020</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6093" z:Size="1">
                  <FBDPortExtSettings z:Id="6094">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6095" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6096">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6097" i:type="OutputFBDPort">
                <Alias z:Id="6098">DI.06: DIN_6</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2014</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6099" z:Size="1">
                  <FBDPortExtSettings z:Id="6100">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="6095" i:nil="true" />
                <VariableName z:Ref="42" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6101">
              <EndFBDPort z:Ref="6059" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6102" i:type="OutputFBDPort">
                <Alias z:Id="6103">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2022</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6104" z:Size="1">
                  <FBDPortExtSettings z:Id="6105">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6106" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6107">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6108">
              <EndFBDPort z:Ref="6059" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6109" i:type="OutputFBDPort">
                <Alias z:Id="6110">DI.07: DIN_7</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2016</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6111" z:Size="1">
                  <FBDPortExtSettings z:Id="6112">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6113" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="44" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6114">
              <EndFBDPort z:Ref="6059" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6115" i:type="OutputFBDPort">
                <Alias z:Id="6116">DI.08: DIN_8</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2018</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6117" z:Size="1">
                  <FBDPortExtSettings z:Id="6118">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6119" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="46" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6120">
              <EndFBDPort z:Id="6121" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2128</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6122" z:Size="1">
                  <FBDPortExtSettings z:Id="6123">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6124" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="4626" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6125" i:type="OutputFBDPort">
                <Alias z:Id="6126">AI.03: AIN_3_FLOOD</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6127" z:Size="1">
                  <FBDPortExtSettings z:Id="6128">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6124" i:nil="true" />
                <VariableName z:Ref="13" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6129">
              <EndFBDPort z:Ref="6059" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6130" i:type="OutputFBDPort">
                <Alias z:Id="6131">DI.01: DIN_1_POWER</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2008</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6132" z:Size="1">
                  <FBDPortExtSettings z:Id="6133">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6134" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="30" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="6135" z:Size="15">
            <FBDItem z:Id="6136" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2013</Id>
              <InputPortsCollection z:Id="6137" z:Size="0" />
              <InternalPortsCollection z:Id="6138" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="6139">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="6140" z:Size="1">
                <FBDPort z:Ref="6097" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Id="6141">_00_A1_DI_06</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6142">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6143" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6144">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>2019</Id>
              <InputPortsCollection z:Id="6145" z:Size="2">
                <FBDPort z:Ref="6091" i:nil="true" />
                <FBDPort z:Id="6146" i:type="InputFBDPort">
                  <Alias z:Id="6147">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2021</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6148" z:Size="1">
                    <FBDPortExtSettings z:Id="6149">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6150" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6151" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6152">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6153" z:Size="1">
                <FBDPort z:Id="6154" i:type="InternalFBDPort">
                  <Alias z:Id="6155">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2024</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6156" z:Size="2">
                    <FBDPortExtSettings z:Id="6157">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="6158">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6159">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="6160">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="6161" z:Size="2">
                <FBDPort z:Ref="6102" i:nil="true" />
                <FBDPort z:Id="6162" i:type="OutputFBDPort">
                  <Alias z:Id="6163">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2023</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6164" z:Size="1">
                    <FBDPortExtSettings z:Id="6165">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6166" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6167">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6168">YART</Prefix>
              <SecondName z:Id="6169">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Id="6170">if(IN != OUT){


	YARTAddScanTask(t[0], t[1]);


	if (t[0] &gt;= TF){


		OUT = IN;


		t[0] = 0; 


		t[1] = 0;


	} 


}else{


	t[0] = 0; 


	t[1] = 0;


}





T = t[0];</Code>
            </FBDItem>
            <FBDItem z:Id="6171" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2017</Id>
              <InputPortsCollection z:Id="6172" z:Size="0" />
              <InternalPortsCollection z:Id="6173" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="6139" i:nil="true" />
              <OutputPortsCollection z:Id="6174" z:Size="1">
                <FBDPort z:Ref="6115" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Id="6175">_00_A1_DI_08</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6176">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6177" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2015</Id>
              <InputPortsCollection z:Id="6178" z:Size="0" />
              <InternalPortsCollection z:Id="6179" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Ref="6139" i:nil="true" />
              <OutputPortsCollection z:Id="6180" z:Size="1">
                <FBDPort z:Ref="6109" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Id="6181">_00_A1_DI_07</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6182">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6183" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2007</Id>
              <InputPortsCollection z:Id="6184" z:Size="0" />
              <InternalPortsCollection z:Id="6185" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3450</d8p1:_x>
                <d8p1:_y>3620</d8p1:_y>
              </Location>
              <Name z:Ref="6139" i:nil="true" />
              <OutputPortsCollection z:Id="6186" z:Size="1">
                <FBDPort z:Ref="6130" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Id="6187">_00_A1_DI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6188">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6189" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1745</Id>
              <InputPortsCollection z:Id="6190" z:Size="0" />
              <InternalPortsCollection z:Id="6191" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="6192">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="6193" z:Size="1">
                <FBDPort z:Ref="6054" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2490" i:nil="true" />
              <SecondName z:Id="6194">_00_A1_DI_04</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6195">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6196" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6197">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>2001</Id>
              <InputPortsCollection z:Id="6198" z:Size="2">
                <FBDPort z:Ref="6048" i:nil="true" />
                <FBDPort z:Id="6199" i:type="InputFBDPort">
                  <Alias z:Id="6200">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2003</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6201" z:Size="1">
                    <FBDPortExtSettings z:Id="6202">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6203" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6204" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6205">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6206" z:Size="1">
                <FBDPort z:Id="6207" i:type="InternalFBDPort">
                  <Alias z:Id="6208">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2006</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6209" z:Size="2">
                    <FBDPortExtSettings z:Id="6210">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="6211">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6212">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="6213">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="6214" z:Size="2">
                <FBDPort z:Ref="6084" i:nil="true" />
                <FBDPort z:Id="6215" i:type="OutputFBDPort">
                  <Alias z:Id="6216">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2005</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6217" z:Size="1">
                    <FBDPortExtSettings z:Id="6218">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6219" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6220">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6221">YART</Prefix>
              <SecondName z:Id="6222">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="6170" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6223" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1743</Id>
              <InputPortsCollection z:Id="6224" z:Size="0" />
              <InternalPortsCollection z:Id="6225" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="6192" i:nil="true" />
              <OutputPortsCollection z:Id="6226" z:Size="1">
                <FBDPort z:Ref="6043" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2490" i:nil="true" />
              <SecondName z:Id="6227">_00_A1_DI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6228">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6229" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6230">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1995</Id>
              <InputPortsCollection z:Id="6231" z:Size="2">
                <FBDPort z:Ref="6037" i:nil="true" />
                <FBDPort z:Id="6232" i:type="InputFBDPort">
                  <Alias z:Id="6233">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1997</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6234" z:Size="1">
                    <FBDPortExtSettings z:Id="6235">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6236" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6237" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6238">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6239" z:Size="1">
                <FBDPort z:Id="6240" i:type="InternalFBDPort">
                  <Alias z:Id="6241">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2000</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6242" z:Size="2">
                    <FBDPortExtSettings z:Id="6243">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="6244">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6245">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="6246">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="6247" z:Size="2">
                <FBDPort z:Ref="6077" i:nil="true" />
                <FBDPort z:Id="6248" i:type="OutputFBDPort">
                  <Alias z:Id="6249">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1999</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6250" z:Size="1">
                    <FBDPortExtSettings z:Id="6251">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6252" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6253">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6254">YART</Prefix>
              <SecondName z:Id="6255">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="6170" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6256" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1741</Id>
              <InputPortsCollection z:Id="6257" z:Size="0" />
              <InternalPortsCollection z:Id="6258" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Ref="6192" i:nil="true" />
              <OutputPortsCollection z:Id="6259" z:Size="1">
                <FBDPort z:Ref="6032" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2490" i:nil="true" />
              <SecondName z:Id="6260">_00_A1_DI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6261">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6262" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6263">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1989</Id>
              <InputPortsCollection z:Id="6264" z:Size="2">
                <FBDPort z:Ref="6026" i:nil="true" />
                <FBDPort z:Id="6265" i:type="InputFBDPort">
                  <Alias z:Id="6266">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1991</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6267" z:Size="1">
                    <FBDPortExtSettings z:Id="6268">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6269" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6270" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6271">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6272" z:Size="1">
                <FBDPort z:Id="6273" i:type="InternalFBDPort">
                  <Alias z:Id="6274">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>1994</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6275" z:Size="2">
                    <FBDPortExtSettings z:Id="6276">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="6277">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6278">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="6279">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="6280" z:Size="2">
                <FBDPort z:Ref="6071" i:nil="true" />
                <FBDPort z:Id="6281" i:type="OutputFBDPort">
                  <Alias z:Id="6282">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1993</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6283" z:Size="1">
                    <FBDPortExtSettings z:Id="6284">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6285" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6286">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6287">YART</Prefix>
              <SecondName z:Id="6288">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="6170" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6289" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6290">Упаковка массива Bool</Description>
              <HelpID>23</HelpID>
              <Id>1736</Id>
              <InputPortsCollection z:Id="6291" z:Size="1">
                <FBDPort z:Ref="6059" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6292" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="6293">CODER</Name>
              <OutputPortsCollection z:Id="6294" z:Size="1">
                <FBDPort z:Ref="6021" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6295">YART</Prefix>
              <SecondName z:Id="6296">coderByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb08a743-74ef-4983-849b-30926f9e4cce</SpecificationId>
              <Code z:Id="6297">//#CODER (Шифратор для Byte)


//Шифратор Byte


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (mas[i]) rez = rez |k;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="6298" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1748</Id>
              <InputPortsCollection z:Id="6299" z:Size="1">
                <FBDPort z:Ref="6017" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6300" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4080</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="2475" i:nil="true" />
              <OutputPortsCollection z:Id="6301" z:Size="1">
                <FBDPort z:Id="6302" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1750</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6303" z:Size="1">
                    <FBDPortExtSettings z:Id="6304">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6305" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2489" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2490" i:nil="true" />
              <SecondName z:Ref="2475" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="342" i:nil="true" />
              <InputFBDPort z:Ref="6017" i:nil="true" />
              <OutputFBDPort z:Ref="6302" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6306" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2124</Id>
              <InputPortsCollection z:Id="6307" z:Size="0" />
              <InternalPortsCollection z:Id="6308" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3488</d8p1:_x>
                <d8p1:_y>3998</d8p1:_y>
              </Location>
              <Name z:Ref="6139" i:nil="true" />
              <OutputPortsCollection z:Id="6309" z:Size="1">
                <FBDPort z:Ref="6125" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Id="6310">_00_A1_AI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="6311">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="6312" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2127</Id>
              <InputPortsCollection z:Id="6313" z:Size="1">
                <FBDPort z:Ref="6121" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6314" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>4000</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="6315" z:Size="1">
                <FBDPort z:Id="6316" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6317" z:Size="1">
                    <FBDPortExtSettings z:Id="6318">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="6319" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4133" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="379" i:nil="true" />
              <InputFBDPort z:Ref="6121" i:nil="true" />
              <OutputFBDPort z:Ref="6316" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="6320">Alarm-1</Name>
          <Parent z:Ref="6012" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>7</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="6321">ALARMS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="6322" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="6323" z:Size="1">
        <d2p1:anyType z:Id="6324" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="6325" z:Size="25">
            <FBDConnector z:Id="6326">
              <EndFBDPort z:Id="6327" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1767</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6328" z:Size="1">
                  <FBDPortExtSettings z:Id="6329">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6330" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6331">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6332" i:type="OutputFBDPort">
                <Alias z:Id="6333">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1762</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6334" z:Size="1">
                  <FBDPortExtSettings z:Id="6335">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6330" i:nil="true" />
                <VariableName z:Id="6336">IPa</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6337">
              <EndFBDPort z:Id="6338" i:type="InputFBDPort">
                <Alias z:Id="6339">Period</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1770</Id>
                <IsArray>false</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6340" z:Size="1">
                  <FBDPortExtSettings z:Id="6341">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6342" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6343">p</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6344" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1776</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6345" z:Size="1">
                  <FBDPortExtSettings z:Id="6346">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6342" i:nil="true" />
                <VariableName z:Id="6347">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6348">
              <EndFBDPort z:Id="6349" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1871</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6350" z:Size="1">
                  <FBDPortExtSettings z:Id="6351">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6352" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6353">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6354" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1851</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6355" z:Size="1">
                  <FBDPortExtSettings z:Id="6356">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6352" i:nil="true" />
                <VariableName z:Ref="6347" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6357">
              <EndFBDPort z:Id="6358" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1875</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6359" z:Size="1">
                  <FBDPortExtSettings z:Id="6360">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6361" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6362">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6363" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1854</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6364" z:Size="1">
                  <FBDPortExtSettings z:Id="6365">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6361" i:nil="true" />
                <VariableName z:Ref="6347" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6366">
              <EndFBDPort z:Id="6367" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1882</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6368" z:Size="1">
                  <FBDPortExtSettings z:Id="6369">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6370" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6371">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6372" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1857</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6373" z:Size="1">
                  <FBDPortExtSettings z:Id="6374">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6370" i:nil="true" />
                <VariableName z:Ref="6347" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6375">
              <EndFBDPort z:Id="6376" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1886</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6377" z:Size="1">
                  <FBDPortExtSettings z:Id="6378">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6379" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6380">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6381" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1860</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6382" z:Size="1">
                  <FBDPortExtSettings z:Id="6383">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6379" i:nil="true" />
                <VariableName z:Ref="6347" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6384">
              <EndFBDPort z:Id="6385" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1902</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6386" z:Size="1">
                  <FBDPortExtSettings z:Id="6387">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6388" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6389">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6390" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1863</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6391" z:Size="1">
                  <FBDPortExtSettings z:Id="6392">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="6388" i:nil="true" />
                <VariableName z:Ref="6347" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6393">
              <EndFBDPort z:Id="6394" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1982</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6395" z:Size="1">
                  <FBDPortExtSettings z:Id="6396">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6397" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6398">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6399" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1987</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6400" z:Size="1">
                  <FBDPortExtSettings z:Id="6401">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6397" i:nil="true" />
                <VariableName z:Id="6402">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6403">
              <EndFBDPort z:Id="6404" i:type="InputFBDPort">
                <Alias z:Id="6405">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2028</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6406" z:Size="1">
                  <FBDPortExtSettings z:Id="6407">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6408" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6409">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6410" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2033</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6411" z:Size="1">
                  <FBDPortExtSettings z:Id="6412">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6408" i:nil="true" />
                <VariableName z:Id="6413">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6414">
              <EndFBDPort z:Id="6415" i:type="InputFBDPort">
                <Alias z:Id="6416">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2040</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6417" z:Size="1">
                  <FBDPortExtSettings z:Id="6418">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6419" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6420">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6421" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2045</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6422" z:Size="1">
                  <FBDPortExtSettings z:Id="6423">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6419" i:nil="true" />
                <VariableName z:Id="6424">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6425">
              <EndFBDPort z:Id="6426" i:type="InputFBDPort">
                <Alias z:Id="6427">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2039</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6428" z:Size="1">
                  <FBDPortExtSettings z:Id="6429">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6430" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6431">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6432" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2048</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6433" z:Size="1">
                  <FBDPortExtSettings z:Id="6434">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6430" i:nil="true" />
                <VariableName z:Id="6435">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6436">
              <EndFBDPort z:Id="6437" i:type="InputFBDPort">
                <Alias z:Id="6438">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2027</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6439" z:Size="1">
                  <FBDPortExtSettings z:Id="6440">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6441" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6442">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6443" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2051</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6444" z:Size="1">
                  <FBDPortExtSettings z:Id="6445">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6441" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6446">
              <EndFBDPort z:Id="6447" i:type="InputFBDPort">
                <Alias z:Id="6448">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2054</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6449" z:Size="1">
                  <FBDPortExtSettings z:Id="6450">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6451" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6452">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6453" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2059</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6454" z:Size="1">
                  <FBDPortExtSettings z:Id="6455">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6451" i:nil="true" />
                <VariableName z:Id="6456">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6457">
              <EndFBDPort z:Id="6458" i:type="InputFBDPort">
                <Alias z:Id="6459">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2053</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6460" z:Size="1">
                  <FBDPortExtSettings z:Id="6461">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6462" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6463">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6464" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2062</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6465" z:Size="1">
                  <FBDPortExtSettings z:Id="6466">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6462" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6467">
              <EndFBDPort z:Id="6468" i:type="InputFBDPort">
                <Alias z:Id="6469">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2065</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6470" z:Size="1">
                  <FBDPortExtSettings z:Id="6471">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6472" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6473">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6474" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2070</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6475" z:Size="1">
                  <FBDPortExtSettings z:Id="6476">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6472" i:nil="true" />
                <VariableName z:Id="6477">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6478">
              <EndFBDPort z:Id="6479" i:type="InputFBDPort">
                <Alias z:Id="6480">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2084</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6481" z:Size="1">
                  <FBDPortExtSettings z:Id="6482">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6483" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6484">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6485" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2089</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6486" z:Size="1">
                  <FBDPortExtSettings z:Id="6487">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6483" i:nil="true" />
                <VariableName z:Id="6488">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6489">
              <EndFBDPort z:Id="6490" i:type="InputFBDPort">
                <Alias z:Id="6491">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2064</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6492" z:Size="1">
                  <FBDPortExtSettings z:Id="6493">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6494" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6495">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6496" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2092</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6497" z:Size="1">
                  <FBDPortExtSettings z:Id="6498">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6494" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6499">
              <EndFBDPort z:Id="6500" i:type="InputFBDPort">
                <Alias z:Id="6501">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2083</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6502" z:Size="1">
                  <FBDPortExtSettings z:Id="6503">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6504" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6505">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6506" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2095</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6507" z:Size="1">
                  <FBDPortExtSettings z:Id="6508">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6504" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6509">
              <EndFBDPort z:Id="6510" i:type="InputFBDPort">
                <Alias z:Id="6511">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6512" z:Size="1">
                  <FBDPortExtSettings z:Id="6513">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6514" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6515">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6516" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6517" z:Size="1">
                  <FBDPortExtSettings z:Id="6518">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6514" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6519">
              <EndFBDPort z:Id="6520" i:type="InputFBDPort">
                <Alias z:Id="6521">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2112</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6522" z:Size="1">
                  <FBDPortExtSettings z:Id="6523">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6524" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6525">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6526" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2117</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6527" z:Size="1">
                  <FBDPortExtSettings z:Id="6528">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6524" i:nil="true" />
                <VariableName z:Id="6529">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6530">
              <EndFBDPort z:Id="6531" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2131</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6532" z:Size="1">
                  <FBDPortExtSettings z:Id="6533">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6534" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6535">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6536" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2136</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6537" z:Size="1">
                  <FBDPortExtSettings z:Id="6538">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6534" i:nil="true" />
                <VariableName z:Ref="4133" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6539">
              <EndFBDPort z:Id="6540" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2875</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6541" z:Size="1">
                  <FBDPortExtSettings z:Id="6542">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6543" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6544">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6545" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2873</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6546" z:Size="1">
                  <FBDPortExtSettings z:Id="6547">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6543" i:nil="true" />
                <VariableName z:Id="6548">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6549">
              <EndFBDPort z:Id="6550" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2879</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6551" z:Size="1">
                  <FBDPortExtSettings z:Id="6552">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6553" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6554">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6555" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2884</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6556" z:Size="1">
                  <FBDPortExtSettings z:Id="6557">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6553" i:nil="true" />
                <VariableName z:Ref="3299" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6558">
              <EndFBDPort z:Id="6559" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2886</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6560" z:Size="1">
                  <FBDPortExtSettings z:Id="6561">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6562" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6563">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6564" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2895</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6565" z:Size="1">
                  <FBDPortExtSettings z:Id="6566">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6562" i:nil="true" />
                <VariableName z:Ref="3299" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6567">
              <EndFBDPort z:Id="6568" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2890</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6569" z:Size="1">
                  <FBDPortExtSettings z:Id="6570">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6571" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6572">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6573" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2898</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6574" z:Size="1">
                  <FBDPortExtSettings z:Id="6575">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6571" i:nil="true" />
                <VariableName z:Ref="3299" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="6576" z:Size="46">
            <FBDItem z:Id="6577" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6578">Упаковка IP-адреса в Int</Description>
              <HelpID>492</HelpID>
              <Id>1757</Id>
              <InputPortsCollection z:Id="6579" z:Size="4">
                <FBDPort z:Id="6580" i:type="InputFBDPort">
                  <Alias z:Id="6581">IP1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1758</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6582" z:Size="1">
                    <FBDPortExtSettings z:Id="6583">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6584" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6585" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">192</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6586">IPa1</VariableName>
                </FBDPort>
                <FBDPort z:Id="6587" i:type="InputFBDPort">
                  <Alias z:Id="6588">IP2</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1759</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6589" z:Size="1">
                    <FBDPortExtSettings z:Id="6590">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6591" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6592" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">168</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6593">IPa2</VariableName>
                </FBDPort>
                <FBDPort z:Id="6594" i:type="InputFBDPort">
                  <Alias z:Id="6595">IP3</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1760</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6596" z:Size="1">
                    <FBDPortExtSettings z:Id="6597">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6598" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6599" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6600">IPa3</VariableName>
                </FBDPort>
                <FBDPort z:Id="6601" i:type="InputFBDPort">
                  <Alias z:Id="6602">IP4</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1761</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6603" z:Size="1">
                    <FBDPortExtSettings z:Id="6604">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6605" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6606" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">253</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6607">IPa4</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6608" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>4080</d8p1:_y>
              </Location>
              <Name z:Id="6609">IP CODER</Name>
              <OutputPortsCollection z:Id="6610" z:Size="1">
                <FBDPort z:Ref="6332" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6611">YART</Prefix>
              <SecondName z:Id="6612">IP_Mux</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3d25eb4f-de3f-4a3e-90b4-fac9892a907c</SpecificationId>
              <Code z:Id="6613">IPa = (IPa4 &lt;&lt; 24) | (IPa3 &lt;&lt; 16) | (IPa2 &lt;&lt; 8) | IPa1;</Code>
            </FBDItem>
            <FBDItem z:Id="6614" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1766</Id>
              <InputPortsCollection z:Id="6615" z:Size="1">
                <FBDPort z:Ref="6327" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6616" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4990</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Id="6617">Tag</Name>
              <OutputPortsCollection z:Id="6618" z:Size="1">
                <FBDPort z:Id="6619" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1768</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6620" z:Size="1">
                    <FBDPortExtSettings z:Id="6621">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6622" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="6347" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6623">_</Prefix>
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6327" i:nil="true" />
              <OutputFBDPort z:Ref="6619" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6624" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1774</Id>
              <InputPortsCollection z:Id="6625" z:Size="1">
                <FBDPort z:Id="6626" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1775</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6627" z:Size="1">
                    <FBDPortExtSettings z:Id="6628">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="6331" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6629" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4200</d8p1:_y>
              </Location>
              <Name z:Ref="6617" i:nil="true" />
              <OutputPortsCollection z:Id="6630" z:Size="1">
                <FBDPort z:Ref="6344" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6623" i:nil="true" />
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="350" i:nil="true" />
              <InputFBDPort z:Ref="6626" i:nil="true" />
              <OutputFBDPort z:Ref="6344" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6631" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6632">Отправка подготовленных переменных с указанной частотой</Description>
              <HelpID>499</HelpID>
              <Id>1769</Id>
              <InputPortsCollection z:Id="6633" z:Size="1">
                <FBDPort z:Ref="6338" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6634" z:Size="2">
                <FBDPort z:Id="6635" i:type="InternalFBDPort">
                  <Alias z:Id="6636">Внутренняя 1148</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1772</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6637" z:Size="1">
                    <FBDPortExtSettings z:Id="6638">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6639">ti</VariableName>
                </FBDPort>
                <FBDPort z:Id="6640" i:type="InternalFBDPort">
                  <Alias z:Id="6641">Внутренняя 53412</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1773</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6642" z:Size="1">
                    <FBDPortExtSettings z:Id="6643">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6644">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4910</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="6645">YL SEND PERIODIC</Name>
              <OutputPortsCollection z:Id="6646" z:Size="1">
                <FBDPort z:Id="6647" i:type="OutputFBDPort">
                  <Alias z:Id="6648">Sending</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1771</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6649" z:Size="1">
                    <FBDPortExtSettings z:Id="6650">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="6651" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6652">sending</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6653">YART</Prefix>
              <SecondName z:Id="6654">Force_YL_Send_P</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1b1a03f4-cda4-4a77-8f8b-e842803f276a</SpecificationId>
              <Code z:Id="6655">// Period &gt;= 100 ms


if(p &lt; 100) p = 100;


YARTAddScanTask(ti, tf);


if(ti &gt;= p){


	ti -= p;


	sending = true;


	set_short(420, 1);


}else set_short(420, 0);


//sent = get_int(422); // sent bytes --


//sstate = get_int(426); // 0 - ОК --</Code>
            </FBDItem>
            <FBDItem z:Id="6656" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1849</Id>
              <InputPortsCollection z:Id="6657" z:Size="1">
                <FBDPort z:Id="6658" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1850</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6659" z:Size="1">
                    <FBDPortExtSettings z:Id="6660">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="6331" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6661" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="6617" i:nil="true" />
              <OutputPortsCollection z:Id="6662" z:Size="1">
                <FBDPort z:Ref="6354" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6623" i:nil="true" />
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="238" i:nil="true" />
              <InputFBDPort z:Ref="6658" i:nil="true" />
              <OutputFBDPort z:Ref="6354" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6663" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6664">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1870</Id>
              <InputPortsCollection z:Id="6665" z:Size="1">
                <FBDPort z:Ref="6349" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6666" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4300</d8p1:_y>
              </Location>
              <Name z:Id="6667">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6668" z:Size="2">
                <FBDPort z:Id="6669" i:type="OutputFBDPort">
                  <Alias z:Id="6670">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1872</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6671" z:Size="1">
                    <FBDPortExtSettings z:Id="6672">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6673" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6674">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6675" i:type="OutputFBDPort">
                  <Alias z:Id="6676">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1873</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6677" z:Size="1">
                    <FBDPortExtSettings z:Id="6678">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6679" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6680">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6681">YART</Prefix>
              <SecondName z:Id="6682">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Id="6683">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);</Code>
            </FBDItem>
            <FBDItem z:Id="6684" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2090</Id>
              <InputPortsCollection z:Id="6685" z:Size="1">
                <FBDPort z:Id="6686" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6687" z:Size="1">
                    <FBDPortExtSettings z:Id="6688">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6689" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="6690" z:Size="1">
                <FBDPort z:Ref="6496" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="367" i:nil="true" />
              <InputFBDPort z:Ref="6686" i:nil="true" />
              <OutputFBDPort z:Ref="6496" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6691" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2068</Id>
              <InputPortsCollection z:Id="6692" z:Size="1">
                <FBDPort z:Id="6693" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6694" z:Size="1">
                    <FBDPortExtSettings z:Id="6695">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6696">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6697" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4340</d8p1:_y>
              </Location>
              <Name z:Id="6698">Tag</Name>
              <OutputPortsCollection z:Id="6699" z:Size="1">
                <FBDPort z:Ref="6474" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6700">_</Prefix>
              <SecondName z:Ref="6698" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6693" i:nil="true" />
              <OutputFBDPort z:Ref="6474" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6701" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6702">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2063</Id>
              <InputPortsCollection z:Id="6703" z:Size="3">
                <FBDPort z:Ref="6490" i:nil="true" />
                <FBDPort z:Ref="6468" i:nil="true" />
                <FBDPort z:Id="6704" i:type="InputFBDPort">
                  <Alias z:Id="6705">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2066</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6706" z:Size="1">
                    <FBDPortExtSettings z:Id="6707">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6708" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6709" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">364</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6710">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6711" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4300</d8p1:_y>
              </Location>
              <Name z:Id="6712">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6713" z:Size="1">
                <FBDPort z:Id="6714" i:type="OutputFBDPort">
                  <Alias z:Id="6715">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6716" z:Size="1">
                    <FBDPortExtSettings z:Id="6717">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6718" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6719">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6720">YART</Prefix>
              <SecondName z:Id="6721">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6722">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6723" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2046</Id>
              <InputPortsCollection z:Id="6724" z:Size="1">
                <FBDPort z:Id="6725" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2047</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6726" z:Size="1">
                    <FBDPortExtSettings z:Id="6727">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6728">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6729" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4320</d8p1:_y>
              </Location>
              <Name z:Id="6730">Tag</Name>
              <OutputPortsCollection z:Id="6731" z:Size="1">
                <FBDPort z:Ref="6432" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6732">_</Prefix>
              <SecondName z:Ref="6730" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="250" i:nil="true" />
              <InputFBDPort z:Ref="6725" i:nil="true" />
              <OutputFBDPort z:Ref="6432" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6733" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2043</Id>
              <InputPortsCollection z:Id="6734" z:Size="1">
                <FBDPort z:Id="6735" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2044</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6736" z:Size="1">
                    <FBDPortExtSettings z:Id="6737">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6738">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6739" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="6740">Tag</Name>
              <OutputPortsCollection z:Id="6741" z:Size="1">
                <FBDPort z:Ref="6421" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6742">_</Prefix>
              <SecondName z:Ref="6740" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6735" i:nil="true" />
              <OutputFBDPort z:Ref="6421" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6743" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6744">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2038</Id>
              <InputPortsCollection z:Id="6745" z:Size="3">
                <FBDPort z:Ref="6426" i:nil="true" />
                <FBDPort z:Ref="6415" i:nil="true" />
                <FBDPort z:Id="6746" i:type="InputFBDPort">
                  <Alias z:Id="6747">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2041</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6748" z:Size="1">
                    <FBDPortExtSettings z:Id="6749">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6750" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6751" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">362</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6752">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6753" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Id="6754">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6755" z:Size="1">
                <FBDPort z:Id="6756" i:type="OutputFBDPort">
                  <Alias z:Id="6757">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2042</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6758" z:Size="1">
                    <FBDPortExtSettings z:Id="6759">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6760" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6761">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6762">YART</Prefix>
              <SecondName z:Id="6763">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6764">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6765" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1852</Id>
              <InputPortsCollection z:Id="6766" z:Size="1">
                <FBDPort z:Id="6767" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1853</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6768" z:Size="1">
                    <FBDPortExtSettings z:Id="6769">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="6331" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6770" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Ref="6617" i:nil="true" />
              <OutputPortsCollection z:Id="6771" z:Size="1">
                <FBDPort z:Ref="6363" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6623" i:nil="true" />
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="242" i:nil="true" />
              <InputFBDPort z:Ref="6767" i:nil="true" />
              <OutputFBDPort z:Ref="6363" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6772" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6773">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1874</Id>
              <InputPortsCollection z:Id="6774" z:Size="1">
                <FBDPort z:Ref="6358" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6775" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="6776">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6777" z:Size="2">
                <FBDPort z:Id="6778" i:type="OutputFBDPort">
                  <Alias z:Id="6779">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1876</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6780" z:Size="1">
                    <FBDPortExtSettings z:Id="6781">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6782" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6783">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6784" i:type="OutputFBDPort">
                  <Alias z:Id="6785">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1877</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6786" z:Size="1">
                    <FBDPortExtSettings z:Id="6787">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6788" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6789">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6790">YART</Prefix>
              <SecondName z:Id="6791">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6792" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2093</Id>
              <InputPortsCollection z:Id="6793" z:Size="1">
                <FBDPort z:Id="6794" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2094</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6795" z:Size="1">
                    <FBDPortExtSettings z:Id="6796">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6797" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="6798" z:Size="1">
                <FBDPort z:Ref="6506" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="371" i:nil="true" />
              <InputFBDPort z:Ref="6794" i:nil="true" />
              <OutputFBDPort z:Ref="6506" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6799" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2087</Id>
              <InputPortsCollection z:Id="6800" z:Size="1">
                <FBDPort z:Id="6801" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6802" z:Size="1">
                    <FBDPortExtSettings z:Id="6803">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6804">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6805" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4430</d8p1:_y>
              </Location>
              <Name z:Id="6806">Tag</Name>
              <OutputPortsCollection z:Id="6807" z:Size="1">
                <FBDPort z:Ref="6485" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6808">_</Prefix>
              <SecondName z:Ref="6806" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6801" i:nil="true" />
              <OutputFBDPort z:Ref="6485" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6809" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6810">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2082</Id>
              <InputPortsCollection z:Id="6811" z:Size="3">
                <FBDPort z:Ref="6500" i:nil="true" />
                <FBDPort z:Ref="6479" i:nil="true" />
                <FBDPort z:Id="6812" i:type="InputFBDPort">
                  <Alias z:Id="6813">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2085</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6814" z:Size="1">
                    <FBDPortExtSettings z:Id="6815">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6816" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6817" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">402</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6818">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6819" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="6820">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6821" z:Size="1">
                <FBDPort z:Id="6822" i:type="OutputFBDPort">
                  <Alias z:Id="6823">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6824" z:Size="1">
                    <FBDPortExtSettings z:Id="6825">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6826" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6827">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6828">YART</Prefix>
              <SecondName z:Id="6829">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6830">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6831" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1855</Id>
              <InputPortsCollection z:Id="6832" z:Size="1">
                <FBDPort z:Id="6833" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1856</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6834" z:Size="1">
                    <FBDPortExtSettings z:Id="6835">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="6331" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6836" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Ref="6617" i:nil="true" />
              <OutputPortsCollection z:Id="6837" z:Size="1">
                <FBDPort z:Ref="6372" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6623" i:nil="true" />
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="246" i:nil="true" />
              <InputFBDPort z:Ref="6833" i:nil="true" />
              <OutputFBDPort z:Ref="6372" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6838" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6839">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1881</Id>
              <InputPortsCollection z:Id="6840" z:Size="1">
                <FBDPort z:Ref="6367" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6841" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="6842">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6843" z:Size="2">
                <FBDPort z:Id="6844" i:type="OutputFBDPort">
                  <Alias z:Id="6845">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1883</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6846" z:Size="1">
                    <FBDPortExtSettings z:Id="6847">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6848" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6849">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6850" i:type="OutputFBDPort">
                  <Alias z:Id="6851">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1884</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6852" z:Size="1">
                    <FBDPortExtSettings z:Id="6853">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6854" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6855">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6856">YART</Prefix>
              <SecondName z:Id="6857">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6858" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2049</Id>
              <InputPortsCollection z:Id="6859" z:Size="1">
                <FBDPort z:Id="6860" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2050</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6861" z:Size="1">
                    <FBDPortExtSettings z:Id="6862">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6863" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="6864" z:Size="1">
                <FBDPort z:Ref="6443" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="254" i:nil="true" />
              <InputFBDPort z:Ref="6860" i:nil="true" />
              <OutputFBDPort z:Ref="6443" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6865" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2031</Id>
              <InputPortsCollection z:Id="6866" z:Size="1">
                <FBDPort z:Id="6867" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2032</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6868" z:Size="1">
                    <FBDPortExtSettings z:Id="6869">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6870">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6871" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Id="6872">Tag</Name>
              <OutputPortsCollection z:Id="6873" z:Size="1">
                <FBDPort z:Ref="6410" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6874">_</Prefix>
              <SecondName z:Ref="6872" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6867" i:nil="true" />
              <OutputFBDPort z:Ref="6410" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6875" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6876">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2026</Id>
              <InputPortsCollection z:Id="6877" z:Size="3">
                <FBDPort z:Ref="6437" i:nil="true" />
                <FBDPort z:Ref="6404" i:nil="true" />
                <FBDPort z:Id="6878" i:type="InputFBDPort">
                  <Alias z:Id="6879">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2029</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6880" z:Size="1">
                    <FBDPortExtSettings z:Id="6881">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6882" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6883" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">361</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6884">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6885" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="6886">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6887" z:Size="1">
                <FBDPort z:Id="6888" i:type="OutputFBDPort">
                  <Alias z:Id="6889">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2030</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6890" z:Size="1">
                    <FBDPortExtSettings z:Id="6891">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6892" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6893">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6894">YART</Prefix>
              <SecondName z:Id="6895">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6896">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6897" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1858</Id>
              <InputPortsCollection z:Id="6898" z:Size="1">
                <FBDPort z:Id="6899" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1859</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6900" z:Size="1">
                    <FBDPortExtSettings z:Id="6901">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="6331" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6902" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Ref="6617" i:nil="true" />
              <OutputPortsCollection z:Id="6903" z:Size="1">
                <FBDPort z:Ref="6381" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6623" i:nil="true" />
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="403" i:nil="true" />
              <InputFBDPort z:Ref="6899" i:nil="true" />
              <OutputFBDPort z:Ref="6381" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6904" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6905">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1885</Id>
              <InputPortsCollection z:Id="6906" z:Size="1">
                <FBDPort z:Ref="6376" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6907" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Id="6908">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6909" z:Size="2">
                <FBDPort z:Id="6910" i:type="OutputFBDPort">
                  <Alias z:Id="6911">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1887</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6912" z:Size="1">
                    <FBDPortExtSettings z:Id="6913">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6914" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6915">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6916" i:type="OutputFBDPort">
                  <Alias z:Id="6917">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1888</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6918" z:Size="1">
                    <FBDPortExtSettings z:Id="6919">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6920" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6921">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6922">YART</Prefix>
              <SecondName z:Id="6923">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6924" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2060</Id>
              <InputPortsCollection z:Id="6925" z:Size="1">
                <FBDPort z:Id="6926" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2061</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6927" z:Size="1">
                    <FBDPortExtSettings z:Id="6928">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6929" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="6930" z:Size="1">
                <FBDPort z:Ref="6464" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="258" i:nil="true" />
              <InputFBDPort z:Ref="6926" i:nil="true" />
              <OutputFBDPort z:Ref="6464" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6931" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2057</Id>
              <InputPortsCollection z:Id="6932" z:Size="1">
                <FBDPort z:Id="6933" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2058</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6934" z:Size="1">
                    <FBDPortExtSettings z:Id="6935">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6936">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6937" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="6938">Tag</Name>
              <OutputPortsCollection z:Id="6939" z:Size="1">
                <FBDPort z:Ref="6453" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6940">_</Prefix>
              <SecondName z:Ref="6938" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6933" i:nil="true" />
              <OutputFBDPort z:Ref="6453" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6941" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6942">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2052</Id>
              <InputPortsCollection z:Id="6943" z:Size="3">
                <FBDPort z:Ref="6458" i:nil="true" />
                <FBDPort z:Ref="6447" i:nil="true" />
                <FBDPort z:Id="6944" i:type="InputFBDPort">
                  <Alias z:Id="6945">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2055</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6946" z:Size="1">
                    <FBDPortExtSettings z:Id="6947">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6948" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6949" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">363</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6950">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6951" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Id="6952">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6953" z:Size="1">
                <FBDPort z:Id="6954" i:type="OutputFBDPort">
                  <Alias z:Id="6955">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2056</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6956" z:Size="1">
                    <FBDPortExtSettings z:Id="6957">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6958" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6959">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6960">YART</Prefix>
              <SecondName z:Id="6961">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6962">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6963" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1861</Id>
              <InputPortsCollection z:Id="6964" z:Size="1">
                <FBDPort z:Id="6965" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1862</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6966" z:Size="1">
                    <FBDPortExtSettings z:Id="6967">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="6331" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6968" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Ref="6617" i:nil="true" />
              <OutputPortsCollection z:Id="6969" z:Size="1">
                <FBDPort z:Ref="6390" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6623" i:nil="true" />
              <SecondName z:Ref="6617" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="342" i:nil="true" />
              <InputFBDPort z:Ref="6965" i:nil="true" />
              <OutputFBDPort z:Ref="6390" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6970" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6971">Подготовки переменной к отправке</Description>
              <HelpID>644</HelpID>
              <Id>1901</Id>
              <InputPortsCollection z:Id="6972" z:Size="1">
                <FBDPort z:Ref="6385" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6973" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Id="6974">YL BYTE</Name>
              <OutputPortsCollection z:Id="6975" z:Size="2">
                <FBDPort z:Id="6976" i:type="OutputFBDPort">
                  <Alias z:Id="6977">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1903</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6978" z:Size="1">
                    <FBDPortExtSettings z:Id="6979">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6980" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6981">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6982" i:type="OutputFBDPort">
                  <Alias z:Id="6983">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1904</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6984" z:Size="1">
                    <FBDPortExtSettings z:Id="6985">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6986" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6987">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6988">YART</Prefix>
              <SecondName z:Id="6989">YLPB</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>50b2378b-da55-4e21-a1dd-5d9f1c2dcf85</SpecificationId>
              <Code z:Id="6990">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);//*sysState 0 - ОК 1 - тэг не найден 2 - тип тега не поддерживается 3 - пакет переполнен</Code>
            </FBDItem>
            <FBDItem z:Id="6991" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2118</Id>
              <InputPortsCollection z:Id="6992" z:Size="1">
                <FBDPort z:Id="6993" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2119</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6994" z:Size="1">
                    <FBDPortExtSettings z:Id="6995">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6996" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="6997" z:Size="1">
                <FBDPort z:Ref="6516" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="375" i:nil="true" />
              <InputFBDPort z:Ref="6993" i:nil="true" />
              <OutputFBDPort z:Ref="6516" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6998" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2115</Id>
              <InputPortsCollection z:Id="6999" z:Size="1">
                <FBDPort z:Id="7000" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2116</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7001" z:Size="1">
                    <FBDPortExtSettings z:Id="7002">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7003">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7004" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4530</d8p1:_y>
              </Location>
              <Name z:Id="7005">Tag</Name>
              <OutputPortsCollection z:Id="7006" z:Size="1">
                <FBDPort z:Ref="6526" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7007">_</Prefix>
              <SecondName z:Ref="7005" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="7000" i:nil="true" />
              <OutputFBDPort z:Ref="6526" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7008" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7009">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2110</Id>
              <InputPortsCollection z:Id="7010" z:Size="3">
                <FBDPort z:Ref="6510" i:nil="true" />
                <FBDPort z:Ref="6520" i:nil="true" />
                <FBDPort z:Id="7011" i:type="InputFBDPort">
                  <Alias z:Id="7012">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2113</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7013" z:Size="1">
                    <FBDPortExtSettings z:Id="7014">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7015" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7016" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">365</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="7017">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7018" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Id="7019">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="7020" z:Size="1">
                <FBDPort z:Id="7021" i:type="OutputFBDPort">
                  <Alias z:Id="7022">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7023" z:Size="1">
                    <FBDPortExtSettings z:Id="7024">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7025" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7026">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7027">YART</Prefix>
              <SecondName z:Id="7028">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="7029">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="7030" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2134</Id>
              <InputPortsCollection z:Id="7031" z:Size="1">
                <FBDPort z:Id="7032" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2135</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7033" z:Size="1">
                    <FBDPortExtSettings z:Id="7034">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4626" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7035" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4540</d8p1:_y>
              </Location>
              <Name z:Ref="4628" i:nil="true" />
              <OutputPortsCollection z:Id="7036" z:Size="1">
                <FBDPort z:Ref="6536" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4630" i:nil="true" />
              <SecondName z:Ref="4628" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="379" i:nil="true" />
              <InputFBDPort z:Ref="7032" i:nil="true" />
              <OutputFBDPort z:Ref="6536" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7037" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7038">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2130</Id>
              <InputPortsCollection z:Id="7039" z:Size="1">
                <FBDPort z:Ref="6531" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7040" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4840</d8p1:_x>
                <d8p1:_y>4540</d8p1:_y>
              </Location>
              <Name z:Id="7041">YL FLOAT</Name>
              <OutputPortsCollection z:Id="7042" z:Size="2">
                <FBDPort z:Id="7043" i:type="OutputFBDPort">
                  <Alias z:Id="7044">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7045" z:Size="1">
                    <FBDPortExtSettings z:Id="7046">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7047" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7048">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="7049" i:type="OutputFBDPort">
                  <Alias z:Id="7050">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7051" z:Size="1">
                    <FBDPortExtSettings z:Id="7052">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7053" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7054">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7055">YART</Prefix>
              <SecondName z:Id="7056">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7057" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1985</Id>
              <InputPortsCollection z:Id="7058" z:Size="1">
                <FBDPort z:Id="7059" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1986</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7060" z:Size="1">
                    <FBDPortExtSettings z:Id="7061">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7062">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7063" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4590</d8p1:_y>
              </Location>
              <Name z:Id="7064">Tag</Name>
              <OutputPortsCollection z:Id="7065" z:Size="1">
                <FBDPort z:Ref="6399" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7066">_</Prefix>
              <SecondName z:Ref="7064" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="86" i:nil="true" />
              <InputFBDPort z:Ref="7059" i:nil="true" />
              <OutputFBDPort z:Ref="6399" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7067" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7068">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1981</Id>
              <InputPortsCollection z:Id="7069" z:Size="1">
                <FBDPort z:Ref="6394" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7070" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4590</d8p1:_y>
              </Location>
              <Name z:Id="7071">YL FLOAT</Name>
              <OutputPortsCollection z:Id="7072" z:Size="2">
                <FBDPort z:Id="7073" i:type="OutputFBDPort">
                  <Alias z:Id="7074">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1983</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7075" z:Size="1">
                    <FBDPortExtSettings z:Id="7076">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7077" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7078">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="7079" i:type="OutputFBDPort">
                  <Alias z:Id="7080">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1984</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7081" z:Size="1">
                    <FBDPortExtSettings z:Id="7082">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7083" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7084">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7085">YART</Prefix>
              <SecondName z:Id="7086">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7087" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2871</Id>
              <InputPortsCollection z:Id="7088" z:Size="1">
                <FBDPort z:Id="7089" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2872</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7090" z:Size="1">
                    <FBDPortExtSettings z:Id="7091">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7092">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7093" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4640</d8p1:_y>
              </Location>
              <Name z:Id="7094">Tag</Name>
              <OutputPortsCollection z:Id="7095" z:Size="1">
                <FBDPort z:Ref="6545" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7096">_</Prefix>
              <SecondName z:Ref="7094" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="362" i:nil="true" />
              <InputFBDPort z:Ref="7089" i:nil="true" />
              <OutputFBDPort z:Ref="6545" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7097" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7098">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2874</Id>
              <InputPortsCollection z:Id="7099" z:Size="1">
                <FBDPort z:Ref="6540" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7100" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4640</d8p1:_y>
              </Location>
              <Name z:Id="7101">YL FLOAT</Name>
              <OutputPortsCollection z:Id="7102" z:Size="2">
                <FBDPort z:Id="7103" i:type="OutputFBDPort">
                  <Alias z:Id="7104">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2876</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7105" z:Size="1">
                    <FBDPortExtSettings z:Id="7106">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7107" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7108">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="7109" i:type="OutputFBDPort">
                  <Alias z:Id="7110">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2877</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7111" z:Size="1">
                    <FBDPortExtSettings z:Id="7112">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7113" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7114">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7115">YART</Prefix>
              <SecondName z:Id="7116">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7117" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2882</Id>
              <InputPortsCollection z:Id="7118" z:Size="1">
                <FBDPort z:Id="7119" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2883</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7120" z:Size="1">
                    <FBDPortExtSettings z:Id="7121">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2927" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7122" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4630</d8p1:_x>
                <d8p1:_y>4690</d8p1:_y>
              </Location>
              <Name z:Ref="3293" i:nil="true" />
              <OutputPortsCollection z:Id="7123" z:Size="1">
                <FBDPort z:Ref="6555" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3300" i:nil="true" />
              <SecondName z:Ref="3293" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="436" i:nil="true" />
              <InputFBDPort z:Ref="7119" i:nil="true" />
              <OutputFBDPort z:Ref="6555" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7124" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7125">Подготовки переменной к отправке</Description>
              <HelpID>646</HelpID>
              <Id>2878</Id>
              <InputPortsCollection z:Id="7126" z:Size="1">
                <FBDPort z:Ref="6550" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7127" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4700</d8p1:_y>
              </Location>
              <Name z:Id="7128">YL INT</Name>
              <OutputPortsCollection z:Id="7129" z:Size="2">
                <FBDPort z:Id="7130" i:type="OutputFBDPort">
                  <Alias z:Id="7131">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2880</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7132" z:Size="1">
                    <FBDPortExtSettings z:Id="7133">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7134" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7135">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="7136" i:type="OutputFBDPort">
                  <Alias z:Id="7137">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2881</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7138" z:Size="1">
                    <FBDPortExtSettings z:Id="7139">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7140" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7141">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3274" i:nil="true" />
              <SecondName z:Id="7142">YLPI</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6241e6fe-1d07-4558-a335-b3285b9cb47e</SpecificationId>
              <Code z:Id="7143">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);</Code>
            </FBDItem>
            <FBDItem z:Id="7144" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2893</Id>
              <InputPortsCollection z:Id="7145" z:Size="1">
                <FBDPort z:Id="7146" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2894</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7147" z:Size="1">
                    <FBDPortExtSettings z:Id="7148">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2927" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7149" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4750</d8p1:_y>
              </Location>
              <Name z:Ref="3293" i:nil="true" />
              <OutputPortsCollection z:Id="7150" z:Size="1">
                <FBDPort z:Ref="6564" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3300" i:nil="true" />
              <SecondName z:Ref="3293" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="403" i:nil="true" />
              <InputFBDPort z:Ref="7146" i:nil="true" />
              <OutputFBDPort z:Ref="6564" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7151" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7152">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2885</Id>
              <InputPortsCollection z:Id="7153" z:Size="1">
                <FBDPort z:Ref="6559" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7154" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4750</d8p1:_y>
              </Location>
              <Name z:Id="7155">YL FLOAT</Name>
              <OutputPortsCollection z:Id="7156" z:Size="2">
                <FBDPort z:Id="7157" i:type="OutputFBDPort">
                  <Alias z:Id="7158">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2887</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7159" z:Size="1">
                    <FBDPortExtSettings z:Id="7160">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7161" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7162">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="7163" i:type="OutputFBDPort">
                  <Alias z:Id="7164">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2888</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7165" z:Size="1">
                    <FBDPortExtSettings z:Id="7166">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7167" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7168">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7169">YART</Prefix>
              <SecondName z:Id="7170">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7171" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2896</Id>
              <InputPortsCollection z:Id="7172" z:Size="1">
                <FBDPort z:Id="7173" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2897</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7174" z:Size="1">
                    <FBDPortExtSettings z:Id="7175">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2927" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7176" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4800</d8p1:_y>
              </Location>
              <Name z:Ref="3293" i:nil="true" />
              <OutputPortsCollection z:Id="7177" z:Size="1">
                <FBDPort z:Ref="6573" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3300" i:nil="true" />
              <SecondName z:Ref="3293" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="407" i:nil="true" />
              <InputFBDPort z:Ref="7173" i:nil="true" />
              <OutputFBDPort z:Ref="6573" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7178" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7179">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2889</Id>
              <InputPortsCollection z:Id="7180" z:Size="1">
                <FBDPort z:Ref="6568" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7181" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4800</d8p1:_y>
              </Location>
              <Name z:Id="7182">YL FLOAT</Name>
              <OutputPortsCollection z:Id="7183" z:Size="2">
                <FBDPort z:Id="7184" i:type="OutputFBDPort">
                  <Alias z:Id="7185">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2891</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7186" z:Size="1">
                    <FBDPortExtSettings z:Id="7187">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="7188" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7189">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="7190" i:type="OutputFBDPort">
                  <Alias z:Id="7191">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2892</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7192" z:Size="1">
                    <FBDPortExtSettings z:Id="7193">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7194" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="7195">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7196">YART</Prefix>
              <SecondName z:Id="7197">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6683" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7198" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2025</Id>
              <InputPortsCollection z:Id="7199" z:Size="0" />
              <InternalPortsCollection z:Id="7200" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4593</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="7201">comment</Name>
              <OutputPortsCollection z:Id="7202" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="7203">_</Prefix>
              <SecondName z:Id="7204">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="7205">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</Comment>
              <Height>610</Height>
              <Width>425</Width>
            </FBDItem>
            <FBDItem z:Id="7206" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2037</Id>
              <InputPortsCollection z:Id="7207" z:Size="0" />
              <InternalPortsCollection z:Id="7208" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5040</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="7209">comment</Name>
              <OutputPortsCollection z:Id="7210" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="7211">_</Prefix>
              <SecondName z:Id="7212">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="7213">UEsDBBQAAgAIAN1rfVEWnXXzMQEAAP4BAAARAAAAZG9jUHJvcHMvY29yZS54bWxtkdFKwzAUhl+l5L5N04oboe0uFK8UBAeKdyE924JrEpJsnXfiK+ijKExUfIXsSXwF286VDXaXP//3H/jP+f38yUarah4swVihZI5IFKMAJFelkNMcLdwkHKJRkXFNuTJwbZQG4wTYoIlJS0ueo5lzmmKsF2YeKTPFJccwhwqks5hEBKOedWAqezTQOXtkJdyjhqPozuzplRU9WNd1VKcdmsQxwXdXlzd8BhULhbSOSQ67FNd9yHaEjZpusjEnylTM2W6IZvyBTaEddoorcKxkjuF2FaHud4GKrOSUG2BOmcK/+i+/3jxvnvzafwT+pXm8+7dGfGd4j8v+97H9gDJoetBt651zm56djy9QkcRkEMbDMI3HJKEnA5qk9+2sg3x3JANL0V6yIBnel506vGDxB1BLAwQUAAIACADda31R9znPlt8BAAAGBAAAEQAAAHdvcmQvZG9jdW1lbnQueG1spVNdbtQwEL5K5PfdZKuFrqLNVggkxANSRcUBHMdJLOIf2U7S5QmoEA8cgitUgkqI1ZYrOCfhCozdJltRCYH6Ys83/ubzN07m1+7n+uScN1FHtWFSZGgxT1BEBZEFE1WGWlvOVuhks+7TQpKWU2Ej4AuT9hmqrVVpHBtSU47NXCoq4KyUmmMLUFdxL3WhtCTUGJDjTXyUJI9jjplAo4wy94Q4I1oaWdo5kTyWZckIDVJQvkj+ED2rsaKjGif/4opj/aZVMxBX2LKcNcxug7PJ1CKB1rVIb0VmkyNflN44Sr2PsaL7G7/jzaHdxfJh/T7TuIftIFg9TO+5lq06qN1/wP9Se4pFhw2KOElfVEJqnDc0Q75r5P+hXBZbvyu/6LCchq3Boor6tMNNhnQ7e/UaAcpZwe5Aio19YhieUvFmHU8KduO+uGu3Gy6GT+7K7d13dxW5b+4Swv3wefgYDe+j4SJkdoGwB/pXdx25HxDshw/DO1/vDyG69NL25oKwBsuGEnt73VbR0bCg5/YUVzQ4AmZ19haOYEBWy8Uj77zO0PLoOIQwWPAgyUR9iTVkG1pamL3EMzSr6glYqcYwl9ZKPqKa4oLqDB0nKw9LKe0dWLU2wGR8pNF4PH6D+DDQm99QSwMEFAACAAgA3Wt9UVbLu1DfAgAAlwoAAA8AAAB3b3JkL3N0eWxlcy54bWzdVsFu3CAQ/RWLe2PvKqqiVZwo2SpKpTRdNVHu2GCbLgYEOE76az30k/oLHTBsdu1tUqnbS33x8IA3w7xh7J/ff5yeP7U8eaTaMClyNDvKUEJFKQkTdY46W707Qednp/3C2GdOTQKrhVn0OWqsVYs0NWVDW2yOpKIC5iqpW2xhqOu0l5ooLUtqDJC1PJ1n2fu0xUwgR0hk+YFWuOPWuKFe6TAMI/+6ksKapF9gUzKWoyXmrNAMAdJcCLONpG59AROPmOcoCwAbAyVWZowZq9majlEhV1rKagw/YsFMM6GVXOoI4s7KSP0tgvN5gLqICCloXNaQiJacYu0O6CkjWb+oGN+lBs3sBWe1iDsLbChnG06ORe2sNGQzHedYjUfutaZU3dInOz6gw2+AfJI8hWt6qSleX1IQf5LFnhHZL0FFLXmcm8VTd0ppqA7He9u1BRThRJo9iZlkIvJcAHT9rBoqpjwKl1CEALsMfek4fcmsQ0Cf48wNCn8KvxGqrrJUB3uYcC4C1/aaMTzUniA+Wm3sjXfh13Na2WBqVjd2u4aEhcx3mN9tot05RMHIpJ6/lhFxxCgIroLg2xKnkyvnrzRst88KolNY41pj1bjQ/NRHkqOVj5QMu5x0/mrgdiP0rbvxPBbDSg+GHow0ME29lQ24KyF1O96Wb3kL4SerGGziOkQUmbbsmhFCxd8FMXXr9EuGEo1awGUjnzd3b5kdOIb5JAaobKqhVtdowzzpPBk8V1fjRuPaL6do1Ax+E4/FhVu7Fcv9n5VAcj/s9L5twYfwwFhSzj/hYSQVbOpD/Q8OyROOHQsqeJieZSf7FhTSWtm+wuBv1CsU6W5A6XagOtauLd/SbE+Oplnx6UjuWKvgNdtfNvfZnnxdwncTWuFLvnZEdN+UHB17A9pEbCumwdBow6DSEEeww2ck889uog/Ou9Hn4MxR2IMTM/iLIPT631E/HJ46nZTJ/3DJomXOfgFQSwMEFAACAAgA3Wt9UQgE5gtzAAAAfwAAABIAAAB3b3JkL251bWJlcmluZy54bWwNi0EOwiAQAL9CuFvQgzGktG9Bum1JuruEpeLfPPgkvyDHmcn8Pt9xfuOhXlAkMXl9HaxWQJGXRJvXZ10vDz1PY3N04hNKt6oPJK55vdeanTESd8AgA2eg3lYuGGrHspnGZcmFI4j0Ew9zs/ZuMCTSykx/UEsDBBQAAgAIAN1rfVG8fuY2VQEAAJQCAAARAAAAd29yZC9zZXR0aW5ncy54bWxlkk1ugzAQha8Sed8QyE8rFBK1q2yiLugFBnsAK8a2bBPK2brokXqFGohFm+xmvvdmxjPyz9f3/vjZiMUVjeVKZiRersgCJVWMyyojrSufXsjxsO9Si855ZhfeL23aZaR2TqdRZGmNDdil0ii9VirTgPOpqaJOGaaNomitL21ElKxWu6gBLsnQknGrBfRvQC+VUa1keQ0aF116BZER/5BodGEJrXAfUORO6aA+J0GH1qlTr2uU4PwO9+V4Rfkq2TtjJwTm97w3UNVocHOUT4t6m4QGMzJRXnDBXX9WDImXWsMfDtBwapRVpVv6kkiVJac4noCEkXEyzoz+DRUmHxrgGbSe5hZVnBHBq9rFQ6nzGQNzGZOiSm5aMmrJpI0JUIpycN+CmSWB/fGtA1vPbBPYZmbbwLYz2wW2G1jdazSCy4s/SQgHXiohVIfsNOsPKBwkfK/DL1BLAwQUAAIACADda31RbVLev58FAAD9GwAAFQAAAHdvcmQvdGhlbWUvdGhlbWUxLnhtbO1ZT2/bNhT/KoTurSxbcp2gbhE7drs1aYPE69AjLdMSa0oUSDqpb0N7HDBgWDfsMmC3HYZtAVpgh2XYh8nWYeuAfIVRtCxRNtUkTVZsWHywRer33u/94Xsi5ZOffrl5+0lEwD5iHNO4bTnXaxZAsU9HOA7a1lSMr7Ws27duwnURoggBCY75OmxboRDJum1zX05Dfp0mKJb3xpRFUMghC+wRgwdSSUTseq3WtCOIYwvEMEJt68F4jH0EBqlKK1feI/IrFjyd8Anb8xWjLqGwo4mT/vAZ7xIG9iFpW5JnRA8G6ImwAIFcyBttq6Y+FrBv3bRzKSIqhDXBvvosBDOJ0aSuBFkwzCWdvrt2Y7NgqM8ZVoG9Xq/bcwqNCgF9X3rrrIDdfsvp5Fo11PxyVXu35tXcJQGNobEisNbpdLy1skCjEHBXBFq1prtRLwu4hYC36kNno9ttlgW8QqC5ItC/sdZ0lwQUKiQ4nqzA08wWKcoxY0ruGvEtiW/la6GA2dpKmyuIRdW6i+BjyvoSoLIMBY6BmCVoDH2J68JoyDBUDHAdQe1WNufz1bmUDnCf4US0rfcTKAukwJwcfXdy9AKcHB0eP315/PTH42fPjp/+YJK8C+NAl3z9zad/ffUR+PPF16+ff14hwHWB377/+NefP6tACh356ovD318evvrykz++fW7CbzA41PEDHCEO7qMDsEuj1D8DBRqyc4oMQohLIjCUUBOyJ8IS8v4MEiOwg8oxfMhkWzAi70wfl+zdC9lUYBPyXhiVkNuUkg5lZp/uKTrNp2kcVPCzqQ7chXDfSN9dynJvmsiVjY1KuyEqmbpDZOJhgGIkQHqPThAyyT3CuBTfbewzyulYgEcYdCA2B2aAh8IsdRdHMkEzo40y66UIbT8EHUqMBJtovwyVFQKJUSkipWjegVMBI7PVMCI6dAuK0Gjo3oz5pcBzIZMeIEJBb4Q4Nwo9YLOSyfegbFHmFbBNZlEZygSeGKFbkFIdukkn3RBGidluHIc6+D0+kSsWgh0qzHbQcs2kY5kQGFdn/iFG4pzF/gEOQvNiSe9MmbFGEC3X6IyMIYoXD4BSK49w/Ka+TrBs7Fd9famvb8iHnbGelrt5JfA/2sM34TTeQWmdXLXwqxZ+1cLfUOH/ROMuerWt79aVnqhy6z7GhOyJGUFbXHV5Ll0c9eWkGiih/KiQhPJywVcCBgyqa8Co+BCLcC+EieRxFEXAM90BBwnl8ohiVSpXJ14svVZzXn5MlXAotuloPt8onV9zRWoUcJ2qkao4K13jxkXpnDnyjHyOV8HnvZnP1mIqywjA9H2E06xnZnIfEjRKoz9XLTBBu8gXmb5Fri49bzyEI5QlzjF75jTOGsnW6YHU+NYaF+U7S+Z0QreK0LuM1NVOS529WrkkLo/AgTTTq3sW8KNE6uRpO4MkiNuWLzKHTi32ZbcrVqxTq3a7RJIwLjYhD+di6lb+7icu7K57bqruAoabutQZyRst592T28sJROOxTHzFTDHM7tGpQGwvHB2AIZmyXSgtd+dLaoS5fHjUFwMmi9PNVlu56LPFv/wuKSsKSJIQZu2pped6jlfXuRFqpNlnVxj/lr40LtEX7//sS7p85Sa4MVKnNbk1YBCk67RtUSZCKttNEmK/z+RmQpFJw4A8Bqr+RNJ34qmxaH/Rr+yFknl3C0KxiwPAsGxxImQI7YjM01O0OYt2mJVHpinrLbnBPJn/DtE+IoO0cptpCCwQ5g0ki4UCLifONtXYMOj/mzdEbtWG6JQdQ0HlnmeD4urtXnsKrF3UinM+besVbte9sz9tE3meAemXbOSY+aTY/g6oesQW+025JK+1slLMJ4fS6pbuX6rrXW6virS0qlbBpe5Ttfg3quJ/CuHbx98zhN87V/Tt1WK2tZOQGi39t7aYufU3UEsDBBQAAgAIAN1rfVE3I0061QAAALwBAAALAAAAX3JlbHMvLnJlbHOVkd9KQzEMh1+l5H4ndYiIrBuMMfBOhi8Q2pxzytY/tJluz+aFj+QrWEVkkwl62fSXL1/I28vrbHEIO/XEpfoUDVx1GhRHm5yPg4G99JNbWMxnG96RtEQdfa6qtcRqYBTJd4jVjhyodilzbD99KoGkPcuAmeyWBsap1jdYThlwzlT3zsBmqZd6fb0C9XjM/Bd+6ntveZXsPnCUC2N+JBqZysBiAJ9Tcei+6l3jgsILTjYV/r/X73tjYCFHQvhBnuTSuot4ridqzeqh1etn5FsNz24wfwdQSwMEFAACAAgA3Wt9UU27gToyAQAAEwQAABMAAABbQ29udGVudF9UeXBlc10ueG1stZNNTsMwEIWvYnlbJW5ZIISadgFsoQsuYJxJaxH/yDMp7dlYcCSuwCRps0ClLaJsIjnz3vueLfvz/WM637harCGhDb6Qk3wsBXgTSuuXhWyoym7kfDZ93kZAwVKPhVwRxVul0KzAacxDBM+TKiSniZdpqaI2r3oJ6mo8vlYmeAJPGbUZcja9h0o3NYmHDf/usQlqlOKuF7asQuoYa2s08VytffmNku0IOTs7Da5sxBELpFAHEd3oR8Le+MQnkWwJYqETPWrHMvUWUqnKYBrH1vx4zoGmoaqsgcHfpsUUDCDyEbs6HyZOWz86WcQ37gUSWy/fZIg+3QJpWwNevkKfewYfiNjxHw12yUc7sH2RQkS+2wl+32F/eVt3xvQIiew52yZ+cdB/J3/eehczMFX3xGdfUEsDBBQAAgAIAN1rfVHM7n/M4gAAALECAAAcAAAAd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsc62SS24CMQyGrxJ538lMF1VVEdiw6aaLwgXS4Hmok4diT1XOxoIjcQVMQTwkhLqYpf84nz852W22k9mv79UPZupiMFAVJSgMLq660BgYuH56hdl08om9Zemgtkuk5EogAy1zetOaXIveUhETBjmpY/aWpcyNTtZ92wb1c1m+6HzNgFumel8ZkGDB6x4rUMt1wv8MiHXdOZxHN3gMfGeOpgORhGhzg2zgWBfCAaXvS3wMflSFMPgvzLLQi8U5eiiyQGbpoXEXcoJereSUPHRZyshxX4YPxIvFX3kMq7OJvvl40z1QSwECFAAUAAIACADda31RFp118zEBAAD+AQAAEQAAAAAAAAAAAAAAAAAAAAAAZG9jUHJvcHMvY29yZS54bWxQSwECFAAUAAIACADda31R9znPlt8BAAAGBAAAEQAAAAAAAAAAAAAAAABgAQAAd29yZC9kb2N1bWVudC54bWxQSwECFAAUAAIACADda31RVsu7UN8CAACXCgAADwAAAAAAAAAAAAAAAABuAwAAd29yZC9zdHlsZXMueG1sUEsBAhQAFAACAAgA3Wt9UQgE5gtzAAAAfwAAABIAAAAAAAAAAAAAAAAAegYAAHdvcmQvbnVtYmVyaW5nLnhtbFBLAQIUABQAAgAIAN1rfVG8fuY2VQEAAJQCAAARAAAAAAAAAAAAAAAAAB0HAAB3b3JkL3NldHRpbmdzLnhtbFBLAQIUABQAAgAIAN1rfVFtUt6/nwUAAP0bAAAVAAAAAAAAAAAAAAAAAKEIAAB3b3JkL3RoZW1lL3RoZW1lMS54bWxQSwECFAAUAAIACADda31RNyNNOtUAAAC8AQAACwAAAAAAAAAAAAAAAABzDgAAX3JlbHMvLnJlbHNQSwECFAAUAAIACADda31RTbuBOjIBAAATBAAAEwAAAAAAAAAAAAAAAABxDwAAW0NvbnRlbnRfVHlwZXNdLnhtbFBLAQIUABQAAgAIAN1rfVHM7n/M4gAAALECAAAcAAAAAAAAAAAAAAAAANQQAAB3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzUEsFBgAAAAAJAAkAQQIAAPARAAAAAA==</Comment>
              <Height>345</Height>
              <Width>621</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="7214">YartLink</Name>
          <Parent z:Ref="6322" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>8</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="7215">YartLink</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="7216" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="7217" z:Size="1">
        <d2p1:anyType z:Id="7218" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="7219" z:Size="91">
            <FBDConnector z:Id="7220">
              <EndFBDPort z:Id="7221" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>2977</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7222" z:Size="16">
                  <FBDPortExtSettings z:Id="7223">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7224">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7225">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7226">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7227">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7228">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7229">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7230">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7231">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7232">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7233">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7234">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7235">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7236">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7237">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7238">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7239" i:type="d2p1:ArrayOfanyType" z:Size="16">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7240">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7241" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>2975</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7242" z:Size="16">
                  <FBDPortExtSettings z:Id="7243">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7244">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7245">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7246">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7247">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7248">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7249">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7250">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7251">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7252">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7253">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7254">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7255">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7256">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7257">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7258">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7239" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7259">
              <EndFBDPort z:Id="7260" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2981</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7261" z:Size="1">
                  <FBDPortExtSettings z:Id="7262">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7263" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7264" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>2978</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7265" z:Size="16">
                  <FBDPortExtSettings z:Id="7266">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7267">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7268">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7269">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7270">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7271">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7272">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7273">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7274">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7275">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7276">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7277">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7278">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7279">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7280">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7281">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7282" i:type="d2p1:ArrayOfanyType" z:Size="16">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7283">ByteOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7284">
              <EndFBDPort z:Id="7285" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3005</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7286" z:Size="1">
                  <FBDPortExtSettings z:Id="7287">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7288" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>7</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7289">
              <EndFBDPort z:Id="7290" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3008</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7291" z:Size="1">
                  <FBDPortExtSettings z:Id="7292">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7293" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>8</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7294">
              <EndFBDPort z:Id="7295" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3011</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7296" z:Size="1">
                  <FBDPortExtSettings z:Id="7297">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7298" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>9</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7299">
              <EndFBDPort z:Id="7300" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3014</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7301" z:Size="1">
                  <FBDPortExtSettings z:Id="7302">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7303" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>10</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7304">
              <EndFBDPort z:Id="7305" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3017</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7306" z:Size="1">
                  <FBDPortExtSettings z:Id="7307">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7308" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>11</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7309">
              <EndFBDPort z:Id="7310" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3020</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7311" z:Size="1">
                  <FBDPortExtSettings z:Id="7312">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7313" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>12</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7314">
              <EndFBDPort z:Id="7315" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3023</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7316" z:Size="1">
                  <FBDPortExtSettings z:Id="7317">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7318" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>13</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7319">
              <EndFBDPort z:Id="7320" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3026</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7321" z:Size="1">
                  <FBDPortExtSettings z:Id="7322">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7323" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>14</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7324">
              <EndFBDPort z:Id="7325" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3029</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7326" z:Size="1">
                  <FBDPortExtSettings z:Id="7327">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7328" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>15</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7329">
              <EndFBDPort z:Id="7330" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3039</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7331" z:Size="1">
                  <FBDPortExtSettings z:Id="7332">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7333" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7334" i:type="OutputFBDPort">
                <Alias z:Id="7335">WDAY</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3036</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7336" z:Size="1">
                  <FBDPortExtSettings z:Id="7337">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7333" i:nil="true" />
                <VariableName z:Id="7338">WDay1</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7339">
              <EndFBDPort z:Id="7340" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3091</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7341" z:Size="1">
                  <FBDPortExtSettings z:Id="7342">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7343" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7344">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7345" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3024</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7346" z:Size="1">
                  <FBDPortExtSettings z:Id="7347">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7343" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7348">
              <EndFBDPort z:Id="7349" i:type="InputFBDPort">
                <Alias z:Id="7350">BOOL</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>3094</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7351" z:Size="8">
                  <FBDPortExtSettings z:Id="7352">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7353">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7354">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7355">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7356">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7357">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7358">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7359">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7360" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7361">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7362" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>3092</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7363" z:Size="7">
                  <FBDPortExtSettings z:Id="7364">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7365">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7366">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7367">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7368">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7369">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7370">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7371" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7372">mas</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7373">
              <EndFBDPort z:Ref="7349" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="7362" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7374">
              <EndFBDPort z:Ref="7349" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="7362" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7375">
              <EndFBDPort z:Ref="7349" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="7362" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7376">
              <EndFBDPort z:Ref="7349" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="7362" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7377">
              <EndFBDPort z:Ref="7349" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>5</IndexStartFBDPort>
              <StartFBDPort z:Ref="7362" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7378">
              <EndFBDPort z:Ref="7349" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="7362" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7379">
              <EndFBDPort z:Id="7380" i:type="InputFBDPort">
                <Alias z:Id="7381">Вход 2967</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3095</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7382" z:Size="1">
                  <FBDPortExtSettings z:Id="7383">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7384" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7385">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7386" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3099</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7387" z:Size="1">
                  <FBDPortExtSettings z:Id="7388">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7384" i:nil="true" />
                <VariableName z:Id="7389">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7390">
              <EndFBDPort z:Id="7391" i:type="InputFBDPort">
                <Alias z:Id="7392">BOOL</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>3104</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7393" z:Size="8">
                  <FBDPortExtSettings z:Id="7394">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7395">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7396">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7397">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7398">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7399">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7400">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7401">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7402" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7403">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7404" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>3102</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7405" z:Size="7">
                  <FBDPortExtSettings z:Id="7406">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7407">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7408">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7409">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7410">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7411">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7412">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7413" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7414">mas</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7415">
              <EndFBDPort z:Ref="7391" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="7404" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7416">
              <EndFBDPort z:Ref="7391" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="7404" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7417">
              <EndFBDPort z:Ref="7391" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="7404" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7418">
              <EndFBDPort z:Ref="7391" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="7404" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7419">
              <EndFBDPort z:Ref="7391" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>5</IndexStartFBDPort>
              <StartFBDPort z:Ref="7404" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7420">
              <EndFBDPort z:Ref="7391" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="7404" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7421">
              <EndFBDPort z:Id="7422" i:type="InputFBDPort">
                <Alias z:Id="7423">Вход 2967</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3105</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7424" z:Size="1">
                  <FBDPortExtSettings z:Id="7425">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7426" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7427">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7428" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3109</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7429" z:Size="1">
                  <FBDPortExtSettings z:Id="7430">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7426" i:nil="true" />
                <VariableName z:Id="7431">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7432">
              <EndFBDPort z:Id="7433" i:type="InputFBDPort">
                <Alias z:Id="7434">BOOL</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>3114</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7435" z:Size="8">
                  <FBDPortExtSettings z:Id="7436">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7437">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7438">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7439">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7440">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7441">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7442">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7443">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7444" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7445">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7446" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>3112</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7447" z:Size="7">
                  <FBDPortExtSettings z:Id="7448">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7449">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7450">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7451">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7452">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7453">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7454">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7455" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7456">mas</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7457">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="7446" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7458">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="7446" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7459">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="7446" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7460">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="7446" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7461">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>5</IndexStartFBDPort>
              <StartFBDPort z:Ref="7446" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7462">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="7446" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7463">
              <EndFBDPort z:Id="7464" i:type="InputFBDPort">
                <Alias z:Id="7465">Вход 2967</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3115</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7466" z:Size="1">
                  <FBDPortExtSettings z:Id="7467">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7468" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7469">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7470" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3119</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7471" z:Size="1">
                  <FBDPortExtSettings z:Id="7472">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7468" i:nil="true" />
                <VariableName z:Id="7473">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7474">
              <EndFBDPort z:Id="7475" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7476" z:Size="1">
                  <FBDPortExtSettings z:Id="7477">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7478" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7479">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7480" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3030</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7481" z:Size="1">
                  <FBDPortExtSettings z:Id="7482">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7478" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7483">
              <EndFBDPort z:Id="7484" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3101</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7485" z:Size="1">
                  <FBDPortExtSettings z:Id="7486">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7487" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7488">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7489" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3027</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7490" z:Size="1">
                  <FBDPortExtSettings z:Id="7491">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7487" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7492">
              <EndFBDPort z:Id="7493" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3128</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7494" z:Size="1">
                  <FBDPortExtSettings z:Id="7495">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7496" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7497" i:type="OutputFBDPort">
                <Alias z:Id="7498">HH</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7499" z:Size="1">
                  <FBDPortExtSettings z:Id="7500">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7496" i:nil="true" />
                <VariableName z:Id="7501">hrs</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7502">
              <EndFBDPort z:Id="7503" i:type="InputFBDPort">
                <Alias z:Id="7504">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3134</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7505" z:Size="1">
                  <FBDPortExtSettings z:Id="7506">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7507" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7508">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7509" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3132</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7510" z:Size="1">
                  <FBDPortExtSettings z:Id="7511">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7507" i:nil="true" />
                <VariableName z:Id="7512">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7513">
              <EndFBDPort z:Id="7514" i:type="InputFBDPort">
                <Alias z:Id="7515">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3138</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7516" z:Size="1">
                  <FBDPortExtSettings z:Id="7517">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7507" i:nil="true" />
                <VariableName z:Id="7518">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="7509" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7519">
              <EndFBDPort z:Id="7520" i:type="InputFBDPort">
                <Alias z:Id="7521">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3135</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7522" z:Size="1">
                  <FBDPortExtSettings z:Id="7523">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7524" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7525">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7526" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3143</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7527" z:Size="1">
                  <FBDPortExtSettings z:Id="7528">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7524" i:nil="true" />
                <VariableName z:Id="7529">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7530">
              <EndFBDPort z:Id="7531" i:type="InputFBDPort">
                <Alias z:Id="7532">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3139</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7533" z:Size="1">
                  <FBDPortExtSettings z:Id="7534">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7535" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7536">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7537" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3149</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7538" z:Size="1">
                  <FBDPortExtSettings z:Id="7539">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7535" i:nil="true" />
                <VariableName z:Id="7540">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7541">
              <EndFBDPort z:Id="7542" i:type="InputFBDPort">
                <Alias z:Id="7543">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3154</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7544" z:Size="1">
                  <FBDPortExtSettings z:Id="7545">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7546" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7547">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7548" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3152</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7549" z:Size="1">
                  <FBDPortExtSettings z:Id="7550">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7546" i:nil="true" />
                <VariableName z:Id="7551">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7552">
              <EndFBDPort z:Id="7553" i:type="InputFBDPort">
                <Alias z:Id="7554">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3158</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7555" z:Size="1">
                  <FBDPortExtSettings z:Id="7556">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7546" i:nil="true" />
                <VariableName z:Id="7557">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="7548" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7558">
              <EndFBDPort z:Id="7559" i:type="InputFBDPort">
                <Alias z:Id="7560">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3155</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7561" z:Size="1">
                  <FBDPortExtSettings z:Id="7562">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7563" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7564">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7565" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3163</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7566" z:Size="1">
                  <FBDPortExtSettings z:Id="7567">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7563" i:nil="true" />
                <VariableName z:Id="7568">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7569">
              <EndFBDPort z:Id="7570" i:type="InputFBDPort">
                <Alias z:Id="7571">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3159</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7572" z:Size="1">
                  <FBDPortExtSettings z:Id="7573">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7574" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7575">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7576" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3166</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7577" z:Size="1">
                  <FBDPortExtSettings z:Id="7578">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7574" i:nil="true" />
                <VariableName z:Id="7579">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7580">
              <EndFBDPort z:Id="7581" i:type="InputFBDPort">
                <Alias z:Id="7582">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3171</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7583" z:Size="1">
                  <FBDPortExtSettings z:Id="7584">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7585" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7586">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7587" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3169</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7588" z:Size="1">
                  <FBDPortExtSettings z:Id="7589">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7585" i:nil="true" />
                <VariableName z:Id="7590">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7591">
              <EndFBDPort z:Id="7592" i:type="InputFBDPort">
                <Alias z:Id="7593">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3175</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7594" z:Size="1">
                  <FBDPortExtSettings z:Id="7595">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7585" i:nil="true" />
                <VariableName z:Id="7596">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="7587" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7597">
              <EndFBDPort z:Id="7598" i:type="InputFBDPort">
                <Alias z:Id="7599">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3172</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7600" z:Size="1">
                  <FBDPortExtSettings z:Id="7601">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7602" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7603">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7604" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3180</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7605" z:Size="1">
                  <FBDPortExtSettings z:Id="7606">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7602" i:nil="true" />
                <VariableName z:Id="7607">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7608">
              <EndFBDPort z:Id="7609" i:type="InputFBDPort">
                <Alias z:Id="7610">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3176</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7611" z:Size="1">
                  <FBDPortExtSettings z:Id="7612">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7613" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7614">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7615" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3183</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7616" z:Size="1">
                  <FBDPortExtSettings z:Id="7617">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7613" i:nil="true" />
                <VariableName z:Id="7618">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7619">
              <EndFBDPort z:Id="7620" i:type="InputFBDPort">
                <Alias z:Id="7621">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3188</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7622" z:Size="3">
                  <FBDPortExtSettings z:Id="7623">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7624">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7625">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7626" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7627">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7628" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3136</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7629" z:Size="1">
                  <FBDPortExtSettings z:Id="7630">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7626" i:nil="true" />
                <VariableName z:Id="7631">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7632">
              <EndFBDPort z:Ref="7620" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7633" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3140</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7634" z:Size="1">
                  <FBDPortExtSettings z:Id="7635">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7636" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7637">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7638">
              <EndFBDPort z:Id="7639" i:type="InputFBDPort">
                <Alias z:Id="7640">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3194</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7641" z:Size="3">
                  <FBDPortExtSettings z:Id="7642">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7643">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7644">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7645" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7646">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7647" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3156</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7648" z:Size="1">
                  <FBDPortExtSettings z:Id="7649">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7645" i:nil="true" />
                <VariableName z:Id="7650">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7651">
              <EndFBDPort z:Ref="7639" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7652" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3160</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7653" z:Size="1">
                  <FBDPortExtSettings z:Id="7654">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7655" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7656">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7657">
              <EndFBDPort z:Id="7658" i:type="InputFBDPort">
                <Alias z:Id="7659">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3200</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7660" z:Size="3">
                  <FBDPortExtSettings z:Id="7661">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7662">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7663">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7664" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7665">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7666" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3173</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7667" z:Size="1">
                  <FBDPortExtSettings z:Id="7668">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7664" i:nil="true" />
                <VariableName z:Id="7669">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7670">
              <EndFBDPort z:Ref="7658" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7671" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3177</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7672" z:Size="1">
                  <FBDPortExtSettings z:Id="7673">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7674" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7675">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7676">
              <EndFBDPort z:Id="7677" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3197</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7678" z:Size="1">
                  <FBDPortExtSettings z:Id="7679">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7680" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7681">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7682" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3106</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7683" z:Size="1">
                  <FBDPortExtSettings z:Id="7684">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7680" i:nil="true" />
                <VariableName z:Id="7685">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7686">
              <EndFBDPort z:Id="7687" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3203</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7688" z:Size="1">
                  <FBDPortExtSettings z:Id="7689">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7690" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7691">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7692" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3116</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7693" z:Size="1">
                  <FBDPortExtSettings z:Id="7694">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7690" i:nil="true" />
                <VariableName z:Id="7695">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7696">
              <EndFBDPort z:Ref="7620" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7697" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3207</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7698" z:Size="1">
                  <FBDPortExtSettings z:Id="7699">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7700" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7701">
              <EndFBDPort z:Ref="7639" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7702" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3210</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7703" z:Size="1">
                  <FBDPortExtSettings z:Id="7704">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7705" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7706">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7707">
              <EndFBDPort z:Ref="7658" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7708" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3213</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7709" z:Size="1">
                  <FBDPortExtSettings z:Id="7710">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7711" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7712">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7713">
              <EndFBDPort z:Id="7714" i:type="InputFBDPort">
                <Alias z:Id="7715">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3215</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7716" z:Size="3">
                  <FBDPortExtSettings z:Id="7717">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7718">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7719">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7720" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7721">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7722" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3189</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7723" z:Size="1">
                  <FBDPortExtSettings z:Id="7724">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7720" i:nil="true" />
                <VariableName z:Id="7725">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7726">
              <EndFBDPort z:Ref="7714" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7727" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3195</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7728" z:Size="1">
                  <FBDPortExtSettings z:Id="7729">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7730" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7731">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7732">
              <EndFBDPort z:Ref="7714" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7733" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3201</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7734" z:Size="1">
                  <FBDPortExtSettings z:Id="7735">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7736" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7737">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7738">
              <EndFBDPort z:Id="7739" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3228</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7740" z:Size="1">
                  <FBDPortExtSettings z:Id="7741">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7742" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7743">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7744" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3216</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7745" z:Size="1">
                  <FBDPortExtSettings z:Id="7746">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7742" i:nil="true" />
                <VariableName z:Id="7747">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7748">
              <EndFBDPort z:Id="7749" i:type="InputFBDPort">
                <Alias z:Id="7750">Вход 2803</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3236</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7751" z:Size="1">
                  <FBDPortExtSettings z:Id="7752">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7753" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7754">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7755" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3229</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7756" z:Size="1">
                  <FBDPortExtSettings z:Id="7757">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7753" i:nil="true" />
                <VariableName z:Id="7758">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7759">
              <EndFBDPort z:Id="7760" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3232</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7761" z:Size="1">
                  <FBDPortExtSettings z:Id="7762">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7763" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7764" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3237</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7765" z:Size="1">
                  <FBDPortExtSettings z:Id="7766">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7763" i:nil="true" />
                <VariableName z:Id="7767">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7768">
              <EndFBDPort z:Id="7769" i:type="InputFBDPort">
                <Alias z:Id="7770">SHORT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3235</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7771" z:Size="2">
                  <FBDPortExtSettings z:Id="7772">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7773">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7774" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7775">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7776" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3226</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7777" z:Size="1">
                  <FBDPortExtSettings z:Id="7778">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7779" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7780">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7781">
              <EndFBDPort z:Ref="7769" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7782" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3223</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7783" z:Size="1">
                  <FBDPortExtSettings z:Id="7784">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7774" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7785">
              <EndFBDPort z:Id="7786" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3242</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7787" z:Size="2">
                  <FBDPortExtSettings z:Id="7788">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7789">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7790" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7791">bb</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7792">
              <EndFBDPort z:Ref="7786" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7793">
              <EndFBDPort z:Id="7794" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2996</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7795" z:Size="1">
                  <FBDPortExtSettings z:Id="7796">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7797" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7798" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3243</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7799" z:Size="1">
                  <FBDPortExtSettings z:Id="7800">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7797" i:nil="true" />
                <VariableName z:Id="7801">s</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7802">
              <EndFBDPort z:Id="7803" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3245</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7804" z:Size="2">
                  <FBDPortExtSettings z:Id="7805">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7806">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7807" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7808">bb</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7809">
              <EndFBDPort z:Ref="7803" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7810">
              <EndFBDPort z:Id="7811" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2999</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7812" z:Size="1">
                  <FBDPortExtSettings z:Id="7813">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7814" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7815" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3246</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7816" z:Size="1">
                  <FBDPortExtSettings z:Id="7817">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7814" i:nil="true" />
                <VariableName z:Id="7818">s</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7819">
              <EndFBDPort z:Id="7820" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3248</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7821" z:Size="1">
                  <FBDPortExtSettings z:Id="7822">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7823" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="7264" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7824">
              <EndFBDPort z:Id="7825" i:type="InputFBDPort">
                <Alias z:Id="7826">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3258</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7827" z:Size="1">
                  <FBDPortExtSettings z:Id="7828">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="7829" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7830">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7831" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3256</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7832" z:Size="1">
                  <FBDPortExtSettings z:Id="7833">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="7829" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7834">
              <EndFBDPort z:Id="7835" i:type="InputFBDPort">
                <Alias z:Id="7836">Вход 2803</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3252</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7837" z:Size="1">
                  <FBDPortExtSettings z:Id="7838">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7839" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7840">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7841" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3263</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7842" z:Size="1">
                  <FBDPortExtSettings z:Id="7843">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7839" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7844">
              <EndFBDPort z:Id="7845" i:type="InputFBDPort">
                <Alias z:Id="7846">SHORT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3251</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7847" z:Size="2">
                  <FBDPortExtSettings z:Id="7848">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7849">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7850" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7851">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7852" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3233</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7853" z:Size="1">
                  <FBDPortExtSettings z:Id="7854">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7850" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7855">
              <EndFBDPort z:Ref="7845" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7856" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3260</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7857" z:Size="1">
                  <FBDPortExtSettings z:Id="7858">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7859" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7860">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7861">
              <EndFBDPort z:Id="7862" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3265</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7863" z:Size="1">
                  <FBDPortExtSettings z:Id="7864">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7865" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7866">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7867" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3253</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7868" z:Size="1">
                  <FBDPortExtSettings z:Id="7869">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7865" i:nil="true" />
                <VariableName z:Id="7870">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7871">
              <EndFBDPort z:Id="7872" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3272</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7873" z:Size="1">
                  <FBDPortExtSettings z:Id="7874">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="7875" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7876" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3266</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7877" z:Size="1">
                  <FBDPortExtSettings z:Id="7878">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="7875" i:nil="true" />
                <VariableName z:Id="7879">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7880">
              <EndFBDPort z:Id="7881" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3278</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7882" z:Size="1">
                  <FBDPortExtSettings z:Id="7883">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7884" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7885">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7886" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3276</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7887" z:Size="1">
                  <FBDPortExtSettings z:Id="7888">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7884" i:nil="true" />
                <VariableName z:Id="7889">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7890">
              <EndFBDPort z:Id="7891" i:type="InputFBDPort">
                <Alias z:Id="7892">E1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3281</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7893" z:Size="1">
                  <FBDPortExtSettings z:Id="7894">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="7895" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7896">e1</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7897" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3279</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7898" z:Size="1">
                  <FBDPortExtSettings z:Id="7899">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="7895" i:nil="true" />
                <VariableName z:Id="7900">yInt</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7901">
              <EndFBDPort z:Id="7902" i:type="InputFBDPort">
                <Alias z:Id="7903">E2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3282</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7904" z:Size="1">
                  <FBDPortExtSettings z:Id="7905">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="7906" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7907">e2</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7908" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3291</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7909" z:Size="1">
                  <FBDPortExtSettings z:Id="7910">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="7906" i:nil="true" />
                <VariableName z:Id="7911">yInt</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7912">
              <EndFBDPort z:Id="7913" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3293</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7914" z:Size="1">
                  <FBDPortExtSettings z:Id="7915">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="7916" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7917">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7918" i:type="OutputFBDPort">
                <Alias z:Id="7919">Y</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3284</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7920" z:Size="1">
                  <FBDPortExtSettings z:Id="7921">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="7916" i:nil="true" />
                <VariableName z:Id="7922">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7923">
              <EndFBDPort z:Id="7924" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3290</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7925" z:Size="1">
                  <FBDPortExtSettings z:Id="7926">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7927" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7928">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7929" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3298</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7930" z:Size="1">
                  <FBDPortExtSettings z:Id="7931">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7927" i:nil="true" />
                <VariableName z:Id="7932">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7933">
              <EndFBDPort z:Id="7934" i:type="InputFBDPort">
                <Alias z:Id="7935">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3296</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7936" z:Size="1">
                  <FBDPortExtSettings z:Id="7937">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7938" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="7939">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7940" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3288</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7941" z:Size="1">
                  <FBDPortExtSettings z:Id="7942">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7938" i:nil="true" />
                <VariableName z:Ref="4556" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7943">
              <EndFBDPort z:Id="7944" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3191</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7945" z:Size="1">
                  <FBDPortExtSettings z:Id="7946">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7947" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="5080" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7948" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3294</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7949" z:Size="1">
                  <FBDPortExtSettings z:Id="7950">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7947" i:nil="true" />
                <VariableName z:Id="7951">yBool</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="7952" z:Size="74">
            <FBDItem z:Id="7953" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2973</Id>
              <InputPortsCollection z:Id="7954" z:Size="1">
                <FBDPort z:Id="7955" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>16</ArrayItemsCount>
                  <Id>2974</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7956" z:Size="16">
                    <FBDPortExtSettings z:Id="7957">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7958">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7959">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7960">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7961">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7962">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7963">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7964">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7965">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7966">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7967">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7968">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7969">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7970">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7971">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7972">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5080" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7973" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="7974" z:Size="1">
                <FBDPort z:Ref="7241" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="471" i:nil="true" />
              <InputFBDPort z:Ref="7955" i:nil="true" />
              <OutputFBDPort z:Ref="7241" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7975" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7976">Упаковка/Распаковка массива</Description>
              <HelpID>92</HelpID>
              <Id>2976</Id>
              <InputPortsCollection z:Id="7977" z:Size="1">
                <FBDPort z:Ref="7221" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7978" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3640</d8p1:_x>
                <d8p1:_y>3780</d8p1:_y>
              </Location>
              <Name z:Id="7979">ARRAY</Name>
              <OutputPortsCollection z:Id="7980" z:Size="1">
                <FBDPort z:Ref="7264" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7981">YART</Prefix>
              <SecondName z:Id="7982">ByteMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>487e1ff3-87f3-4b13-b3dd-4a1be44bd7b7</SpecificationId>
              <Code z:Ref="2747" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7983" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2980</Id>
              <InputPortsCollection z:Id="7984" z:Size="1">
                <FBDPort z:Ref="7260" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7985" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3930</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="7986" z:Size="1">
                <FBDPort z:Id="7987" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2982</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7988" z:Size="1">
                    <FBDPortExtSettings z:Id="7989">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7990" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="491" i:nil="true" />
              <InputFBDPort z:Ref="7260" i:nil="true" />
              <OutputFBDPort z:Ref="7987" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7991" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7992">Массив Byte[] в Short</Description>
              <HelpID>804</HelpID>
              <Id>3241</Id>
              <InputPortsCollection z:Id="7993" z:Size="1">
                <FBDPort z:Ref="7786" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7994" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="7995">BB&gt;S</Name>
              <OutputPortsCollection z:Id="7996" z:Size="1">
                <FBDPort z:Ref="7798" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="7997">bb2s</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6e39a5c9-f4e9-4b97-8d5a-1c309420e3c9</SpecificationId>
              <Code z:Id="7998">if(sizeof_bb == 2) s = (bb[1] &lt;&lt; 8) | bb[0];</Code>
            </FBDItem>
            <FBDItem z:Id="7999" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2995</Id>
              <InputPortsCollection z:Id="8000" z:Size="1">
                <FBDPort z:Ref="7794" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8001" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8002" z:Size="1">
                <FBDPort z:Id="8003" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2997</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8004" z:Size="1">
                    <FBDPortExtSettings z:Id="8005">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="8006" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="496" i:nil="true" />
              <InputFBDPort z:Ref="7794" i:nil="true" />
              <OutputFBDPort z:Ref="8003" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8007" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8008">Массив Byte[] в Short</Description>
              <HelpID>804</HelpID>
              <Id>3244</Id>
              <InputPortsCollection z:Id="8009" z:Size="1">
                <FBDPort z:Ref="7803" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8010" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3920</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Id="8011">BB&gt;S</Name>
              <OutputPortsCollection z:Id="8012" z:Size="1">
                <FBDPort z:Ref="7815" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8013">YART</Prefix>
              <SecondName z:Id="8014">bb2s</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6e39a5c9-f4e9-4b97-8d5a-1c309420e3c9</SpecificationId>
              <Code z:Id="8015">if(sizeof_bb == 2) s = (bb[1] &lt;&lt; 8) | bb[0];</Code>
            </FBDItem>
            <FBDItem z:Id="8016" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2998</Id>
              <InputPortsCollection z:Id="8017" z:Size="1">
                <FBDPort z:Ref="7811" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8018" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4040</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8019" z:Size="1">
                <FBDPort z:Id="8020" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3000</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8021" z:Size="1">
                    <FBDPortExtSettings z:Id="8022">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="8023" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="501" i:nil="true" />
              <InputFBDPort z:Ref="7811" i:nil="true" />
              <OutputFBDPort z:Ref="8020" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8024" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3247</Id>
              <InputPortsCollection z:Id="8025" z:Size="1">
                <FBDPort z:Ref="7820" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8026" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8027" z:Size="1">
                <FBDPort z:Id="8028" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3249</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8029" z:Size="1">
                    <FBDPortExtSettings z:Id="8030">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8031" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="506" i:nil="true" />
              <InputFBDPort z:Ref="7820" i:nil="true" />
              <OutputFBDPort z:Ref="8028" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8032" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3004</Id>
              <InputPortsCollection z:Id="8033" z:Size="1">
                <FBDPort z:Ref="7285" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8034" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3960</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8035" z:Size="1">
                <FBDPort z:Id="8036" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3006</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8037" z:Size="1">
                    <FBDPortExtSettings z:Id="8038">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8039" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="510" i:nil="true" />
              <InputFBDPort z:Ref="7285" i:nil="true" />
              <OutputFBDPort z:Ref="8036" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8040" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3007</Id>
              <InputPortsCollection z:Id="8041" z:Size="1">
                <FBDPort z:Ref="7290" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8042" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8043" z:Size="1">
                <FBDPort z:Id="8044" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3009</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8045" z:Size="1">
                    <FBDPortExtSettings z:Id="8046">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8047" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="514" i:nil="true" />
              <InputFBDPort z:Ref="7290" i:nil="true" />
              <OutputFBDPort z:Ref="8044" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8048" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3010</Id>
              <InputPortsCollection z:Id="8049" z:Size="1">
                <FBDPort z:Ref="7295" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8050" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3900</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8051" z:Size="1">
                <FBDPort z:Id="8052" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3012</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8053" z:Size="1">
                    <FBDPortExtSettings z:Id="8054">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8055" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="518" i:nil="true" />
              <InputFBDPort z:Ref="7295" i:nil="true" />
              <OutputFBDPort z:Ref="8052" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8056" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3013</Id>
              <InputPortsCollection z:Id="8057" z:Size="1">
                <FBDPort z:Ref="7300" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8058" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8059" z:Size="1">
                <FBDPort z:Id="8060" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3015</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8061" z:Size="1">
                    <FBDPortExtSettings z:Id="8062">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8063" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="522" i:nil="true" />
              <InputFBDPort z:Ref="7300" i:nil="true" />
              <OutputFBDPort z:Ref="8060" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8064" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3016</Id>
              <InputPortsCollection z:Id="8065" z:Size="1">
                <FBDPort z:Ref="7305" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8066" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3970</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8067" z:Size="1">
                <FBDPort z:Id="8068" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3018</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8069" z:Size="1">
                    <FBDPortExtSettings z:Id="8070">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8071" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="526" i:nil="true" />
              <InputFBDPort z:Ref="7305" i:nil="true" />
              <OutputFBDPort z:Ref="8068" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8072" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3019</Id>
              <InputPortsCollection z:Id="8073" z:Size="1">
                <FBDPort z:Ref="7310" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8074" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3990</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8075" z:Size="1">
                <FBDPort z:Id="8076" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3021</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8077" z:Size="1">
                    <FBDPortExtSettings z:Id="8078">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8079" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="530" i:nil="true" />
              <InputFBDPort z:Ref="7310" i:nil="true" />
              <OutputFBDPort z:Ref="8076" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8080" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3261</Id>
              <InputPortsCollection z:Id="8081" z:Size="1">
                <FBDPort z:Id="8082" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3262</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8083" z:Size="1">
                    <FBDPortExtSettings z:Id="8084">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5080" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8085" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4920</d8p1:_x>
                <d8p1:_y>4050</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8086" z:Size="1">
                <FBDPort z:Ref="7841" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="491" i:nil="true" />
              <InputFBDPort z:Ref="8082" i:nil="true" />
              <OutputFBDPort z:Ref="7841" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8087" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3254</Id>
              <InputPortsCollection z:Id="8088" z:Size="1">
                <FBDPort z:Id="8089" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3255</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8090" z:Size="1">
                    <FBDPortExtSettings z:Id="8091">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5080" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8092" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4890</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8093" z:Size="1">
                <FBDPort z:Ref="7831" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="246" i:nil="true" />
              <InputFBDPort z:Ref="8089" i:nil="true" />
              <OutputFBDPort z:Ref="7831" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8094" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8095">Преобразование Float в Short</Description>
              <HelpID>111</HelpID>
              <Id>3257</Id>
              <InputPortsCollection z:Id="8096" z:Size="2">
                <FBDPort z:Ref="7825" i:nil="true" />
                <FBDPort z:Id="8097" i:type="InputFBDPort">
                  <Alias z:Id="8098">METHOD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3259</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8099" z:Size="1">
                    <FBDPortExtSettings z:Id="8100">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8101" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8102" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8103">type</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8104" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4930</d8p1:_x>
                <d8p1:_y>3990</d8p1:_y>
              </Location>
              <Name z:Id="8105">F&gt;S</Name>
              <OutputPortsCollection z:Id="8106" z:Size="1">
                <FBDPort z:Ref="7856" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8107">FloatShort</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e14cbd51-2dfe-4ed3-9210-3d315c6ddbec</SpecificationId>
              <Code z:Id="8108">//#F &gt; S (Float в Short)


if(a &lt; 32767)


	if ( a &gt; -32767)


		switch(type){


			case 0:{//если дробная часть меньше 5, аргумент округляется в меньшую сторону.


		 		y = floatround(a, floatround_round);		


	 		}


			case 1:{//отбрасывается дробная часть аргумента


				y = floatround(a, floatround_floor);


			}


			case 2:{//если дробная часть больше 1, аргумент округляется в большую сторону


				y = floatround(a, floatround_ceil);


			}	


			case 3:{// //отбрасывается дробная часть аргумента


		 		y = floatround(a, floatround_tozero);


			}	


			default:{//округляет как case 0


				y = floatround(a, floatround_round);


			}


		}


	else y = -32767;


else y = 32767;</Code>
            </FBDItem>
            <FBDItem z:Id="8109" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3211</Id>
              <InputPortsCollection z:Id="8110" z:Size="1">
                <FBDPort z:Id="8111" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3212</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8112" z:Size="1">
                    <FBDPortExtSettings z:Id="8113">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8114">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8115" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4630</d8p1:_x>
                <d8p1:_y>4160</d8p1:_y>
              </Location>
              <Name z:Id="8116">Tag</Name>
              <OutputPortsCollection z:Id="8117" z:Size="1">
                <FBDPort z:Ref="7708" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8118">_</Prefix>
              <SecondName z:Ref="8116" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="8111" i:nil="true" />
              <OutputFBDPort z:Ref="7708" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8119" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3181</Id>
              <InputPortsCollection z:Id="8120" z:Size="1">
                <FBDPort z:Id="8121" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3182</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8122" z:Size="1">
                    <FBDPortExtSettings z:Id="8123">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8124">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8125" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="8126">Tag</Name>
              <OutputPortsCollection z:Id="8127" z:Size="1">
                <FBDPort z:Ref="7615" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8128">_</Prefix>
              <SecondName z:Ref="8126" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="530" i:nil="true" />
              <InputFBDPort z:Ref="8121" i:nil="true" />
              <OutputFBDPort z:Ref="7615" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8129" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3167</Id>
              <InputPortsCollection z:Id="8130" z:Size="1">
                <FBDPort z:Id="8131" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3168</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8132" z:Size="1">
                    <FBDPortExtSettings z:Id="8133">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8134">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8135" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>4060</d8p1:_y>
              </Location>
              <Name z:Id="8136">Tag</Name>
              <OutputPortsCollection z:Id="8137" z:Size="1">
                <FBDPort z:Ref="7587" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8138">_</Prefix>
              <SecondName z:Ref="8136" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="8131" i:nil="true" />
              <OutputFBDPort z:Ref="7587" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8139" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8140">Сравнение двух значений</Description>
              <HelpID>294</HelpID>
              <Id>3174</Id>
              <InputPortsCollection z:Id="8141" z:Size="2">
                <FBDPort z:Ref="7592" i:nil="true" />
                <FBDPort z:Ref="7609" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8142" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4530</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="8143">A &lt; B</Name>
              <OutputPortsCollection z:Id="8144" z:Size="1">
                <FBDPort z:Ref="7671" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8145">YART</Prefix>
              <SecondName z:Id="8146">aMbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f8932b54-bd6c-4833-8ed0-812fbfee0ffa</SpecificationId>
              <Code z:Id="8147">//#A &lt; B (Меньше byte) 


#inline y = (a &lt; b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="8148" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3178</Id>
              <InputPortsCollection z:Id="8149" z:Size="1">
                <FBDPort z:Id="8150" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3179</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8151" z:Size="1">
                    <FBDPortExtSettings z:Id="8152">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8153">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8154" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>4100</d8p1:_y>
              </Location>
              <Name z:Id="8155">Tag</Name>
              <OutputPortsCollection z:Id="8156" z:Size="1">
                <FBDPort z:Ref="7604" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8157">_</Prefix>
              <SecondName z:Ref="8155" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="526" i:nil="true" />
              <InputFBDPort z:Ref="8150" i:nil="true" />
              <OutputFBDPort z:Ref="7604" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8158" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8159">Сравнение двух значений</Description>
              <HelpID>295</HelpID>
              <Id>3170</Id>
              <InputPortsCollection z:Id="8160" z:Size="2">
                <FBDPort z:Ref="7581" i:nil="true" />
                <FBDPort z:Ref="7598" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8161" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4520</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="8162">A &gt;= B</Name>
              <OutputPortsCollection z:Id="8163" z:Size="1">
                <FBDPort z:Ref="7666" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="8145" i:nil="true" />
              <SecondName z:Id="8164">aBRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f13172eb-63f6-46d4-87f4-a96f56e2a39a</SpecificationId>
              <Code z:Id="8165">//#A &gt;= B (Больше или равно byte) 


#inline y = (a &gt;= b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="8166" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8167">Вычисление логического И</Description>
              <HelpID>6</HelpID>
              <Id>3199</Id>
              <InputPortsCollection z:Id="8168" z:Size="1">
                <FBDPort z:Ref="7658" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8169" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Id="8170">AND</Name>
              <OutputPortsCollection z:Id="8171" z:Size="1">
                <FBDPort z:Ref="7733" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8172">YART</Prefix>
              <SecondName z:Id="8173">and</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a5899894-bce9-41f4-9f39-c425039f966b</SpecificationId>
              <Code z:Id="8174">//#AND ( и )


y = true;


for(new i = 0; i&lt;sizeof_x; i++)	y = y&amp;x[i];</Code>
            </FBDItem>
            <FBDItem z:Id="8175" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3208</Id>
              <InputPortsCollection z:Id="8176" z:Size="1">
                <FBDPort z:Id="8177" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3209</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8178" z:Size="1">
                    <FBDPortExtSettings z:Id="8179">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8180">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8181" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4620</d8p1:_x>
                <d8p1:_y>4000</d8p1:_y>
              </Location>
              <Name z:Id="8182">Tag</Name>
              <OutputPortsCollection z:Id="8183" z:Size="1">
                <FBDPort z:Ref="7702" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8184">_</Prefix>
              <SecondName z:Ref="8182" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="8177" i:nil="true" />
              <OutputFBDPort z:Ref="7702" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8185" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3164</Id>
              <InputPortsCollection z:Id="8186" z:Size="1">
                <FBDPort z:Id="8187" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3165</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8188" z:Size="1">
                    <FBDPortExtSettings z:Id="8189">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8190">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8191" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name z:Id="8192">Tag</Name>
              <OutputPortsCollection z:Id="8193" z:Size="1">
                <FBDPort z:Ref="7576" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8194">_</Prefix>
              <SecondName z:Ref="8192" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="522" i:nil="true" />
              <InputFBDPort z:Ref="8187" i:nil="true" />
              <OutputFBDPort z:Ref="7576" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8195" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3150</Id>
              <InputPortsCollection z:Id="8196" z:Size="1">
                <FBDPort z:Id="8197" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3151</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8198" z:Size="1">
                    <FBDPortExtSettings z:Id="8199">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8200">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8201" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4290</d8p1:_x>
                <d8p1:_y>3910</d8p1:_y>
              </Location>
              <Name z:Id="8202">Tag</Name>
              <OutputPortsCollection z:Id="8203" z:Size="1">
                <FBDPort z:Ref="7548" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8204">_</Prefix>
              <SecondName z:Ref="8202" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="8197" i:nil="true" />
              <OutputFBDPort z:Ref="7548" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8205" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8206">Сравнение двух значений</Description>
              <HelpID>294</HelpID>
              <Id>3157</Id>
              <InputPortsCollection z:Id="8207" z:Size="2">
                <FBDPort z:Ref="7553" i:nil="true" />
                <FBDPort z:Ref="7570" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8208" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4520</d8p1:_x>
                <d8p1:_y>3970</d8p1:_y>
              </Location>
              <Name z:Id="8209">A &lt; B</Name>
              <OutputPortsCollection z:Id="8210" z:Size="1">
                <FBDPort z:Ref="7652" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8211">YART</Prefix>
              <SecondName z:Id="8212">aMbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f8932b54-bd6c-4833-8ed0-812fbfee0ffa</SpecificationId>
              <Code z:Ref="8147" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8213" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3161</Id>
              <InputPortsCollection z:Id="8214" z:Size="1">
                <FBDPort z:Id="8215" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3162</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8216" z:Size="1">
                    <FBDPortExtSettings z:Id="8217">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8218">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8219" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3950</d8p1:_y>
              </Location>
              <Name z:Id="8220">Tag</Name>
              <OutputPortsCollection z:Id="8221" z:Size="1">
                <FBDPort z:Ref="7565" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8222">_</Prefix>
              <SecondName z:Ref="8220" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="518" i:nil="true" />
              <InputFBDPort z:Ref="8215" i:nil="true" />
              <OutputFBDPort z:Ref="7565" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8223" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8224">Сравнение двух значений</Description>
              <HelpID>295</HelpID>
              <Id>3153</Id>
              <InputPortsCollection z:Id="8225" z:Size="2">
                <FBDPort z:Ref="7542" i:nil="true" />
                <FBDPort z:Ref="7559" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8226" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4510</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name z:Id="8227">A &gt;= B</Name>
              <OutputPortsCollection z:Id="8228" z:Size="1">
                <FBDPort z:Ref="7647" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="8211" i:nil="true" />
              <SecondName z:Id="8229">aBRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f13172eb-63f6-46d4-87f4-a96f56e2a39a</SpecificationId>
              <Code z:Ref="8165" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8230" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8231">Вычисление логического И</Description>
              <HelpID>6</HelpID>
              <Id>3193</Id>
              <InputPortsCollection z:Id="8232" z:Size="1">
                <FBDPort z:Ref="7639" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8233" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Id="8234">AND</Name>
              <OutputPortsCollection z:Id="8235" z:Size="1">
                <FBDPort z:Ref="7727" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8236">YART</Prefix>
              <SecondName z:Id="8237">and</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a5899894-bce9-41f4-9f39-c425039f966b</SpecificationId>
              <Code z:Ref="8174" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8238" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3205</Id>
              <InputPortsCollection z:Id="8239" z:Size="1">
                <FBDPort z:Id="8240" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3206</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8241" z:Size="1">
                    <FBDPortExtSettings z:Id="8242">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5080" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8243" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4620</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8244" z:Size="1">
                <FBDPort z:Ref="7697" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="8240" i:nil="true" />
              <OutputFBDPort z:Ref="7697" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8245" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3147</Id>
              <InputPortsCollection z:Id="8246" z:Size="1">
                <FBDPort z:Id="8247" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3148</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8248" z:Size="1">
                    <FBDPortExtSettings z:Id="8249">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8250">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8251" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="8252">Tag</Name>
              <OutputPortsCollection z:Id="8253" z:Size="1">
                <FBDPort z:Ref="7537" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8254">_</Prefix>
              <SecondName z:Ref="8252" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="514" i:nil="true" />
              <InputFBDPort z:Ref="8247" i:nil="true" />
              <OutputFBDPort z:Ref="7537" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8255" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3130</Id>
              <InputPortsCollection z:Id="8256" z:Size="1">
                <FBDPort z:Id="8257" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3131</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8258" z:Size="1">
                    <FBDPortExtSettings z:Id="8259">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8260">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8261" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4290</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="8262">Tag</Name>
              <OutputPortsCollection z:Id="8263" z:Size="1">
                <FBDPort z:Ref="7509" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8264">_</Prefix>
              <SecondName z:Ref="8262" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="8257" i:nil="true" />
              <OutputFBDPort z:Ref="7509" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8265" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8266">Сравнение двух значений</Description>
              <HelpID>294</HelpID>
              <Id>3137</Id>
              <InputPortsCollection z:Id="8267" z:Size="2">
                <FBDPort z:Ref="7514" i:nil="true" />
                <FBDPort z:Ref="7531" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8268" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4520</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="8269">A &lt; B</Name>
              <OutputPortsCollection z:Id="8270" z:Size="1">
                <FBDPort z:Ref="7633" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8271">aMbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f8932b54-bd6c-4833-8ed0-812fbfee0ffa</SpecificationId>
              <Code z:Ref="8147" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8272" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3141</Id>
              <InputPortsCollection z:Id="8273" z:Size="1">
                <FBDPort z:Id="8274" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3142</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8275" z:Size="1">
                    <FBDPortExtSettings z:Id="8276">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8277">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8278" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3800</d8p1:_y>
              </Location>
              <Name z:Id="8279">Tag</Name>
              <OutputPortsCollection z:Id="8280" z:Size="1">
                <FBDPort z:Ref="7526" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8281">_</Prefix>
              <SecondName z:Ref="8279" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="510" i:nil="true" />
              <InputFBDPort z:Ref="8274" i:nil="true" />
              <OutputFBDPort z:Ref="7526" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8282" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8283">Сравнение двух значений</Description>
              <HelpID>295</HelpID>
              <Id>3133</Id>
              <InputPortsCollection z:Id="8284" z:Size="2">
                <FBDPort z:Ref="7503" i:nil="true" />
                <FBDPort z:Ref="7520" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8285" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4510</d8p1:_x>
                <d8p1:_y>3740</d8p1:_y>
              </Location>
              <Name z:Id="8286">A &gt;= B</Name>
              <OutputPortsCollection z:Id="8287" z:Size="1">
                <FBDPort z:Ref="7628" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8288">aBRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f13172eb-63f6-46d4-87f4-a96f56e2a39a</SpecificationId>
              <Code z:Ref="8165" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8289" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8290">Вычисление логического И</Description>
              <HelpID>6</HelpID>
              <Id>3187</Id>
              <InputPortsCollection z:Id="8291" z:Size="1">
                <FBDPort z:Ref="7620" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8292" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4740</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="8293">AND</Name>
              <OutputPortsCollection z:Id="8294" z:Size="1">
                <FBDPort z:Ref="7722" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8295">and</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a5899894-bce9-41f4-9f39-c425039f966b</SpecificationId>
              <Code z:Ref="8174" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8296" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8297">Вычисление логического ИЛИ</Description>
              <HelpID>5</HelpID>
              <Id>3214</Id>
              <InputPortsCollection z:Id="8298" z:Size="1">
                <FBDPort z:Ref="7714" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8299" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4884.0926481533061</d8p1:_x>
                <d8p1:_y>3791.5725633641478</d8p1:_y>
              </Location>
              <Name z:Id="8300">OR</Name>
              <OutputPortsCollection z:Id="8301" z:Size="1">
                <FBDPort z:Ref="7744" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8302">or</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>847d4d91-e424-48a2-a070-61748e5d053a</SpecificationId>
              <Code z:Ref="4874" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8303" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8304">Преобразование Bool в Byte</Description>
              <HelpID>831</HelpID>
              <Id>3227</Id>
              <InputPortsCollection z:Id="8305" z:Size="1">
                <FBDPort z:Ref="7739" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8306" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4998.2578901951656</d8p1:_x>
                <d8p1:_y>3869.5390701244419</d8p1:_y>
              </Location>
              <Name z:Id="8307">b&gt;B</Name>
              <OutputPortsCollection z:Id="8308" z:Size="1">
                <FBDPort z:Ref="7755" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8309">BoolByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d2363784-5f99-402e-b235-0cc3ec6ab4e5</SpecificationId>
              <Code z:Id="8310">//#b &gt; B (Bool в Byte) 


y = (a)? 1:0;</Code>
            </FBDItem>
            <FBDItem z:Id="8311" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3224</Id>
              <InputPortsCollection z:Id="8312" z:Size="1">
                <FBDPort z:Id="8313" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3225</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8314" z:Size="1">
                    <FBDPortExtSettings z:Id="8315">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8316">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8317" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="8318">Tag</Name>
              <OutputPortsCollection z:Id="8319" z:Size="1">
                <FBDPort z:Ref="7776" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8320">_</Prefix>
              <SecondName z:Ref="8318" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="501" i:nil="true" />
              <InputFBDPort z:Ref="8313" i:nil="true" />
              <OutputFBDPort z:Ref="7776" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8321" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3221</Id>
              <InputPortsCollection z:Id="8322" z:Size="1">
                <FBDPort z:Id="8323" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3222</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8324" z:Size="1">
                    <FBDPortExtSettings z:Id="8325">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5080" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8326" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8327" z:Size="1">
                <FBDPort z:Ref="7782" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="496" i:nil="true" />
              <InputFBDPort z:Ref="8323" i:nil="true" />
              <OutputFBDPort z:Ref="7782" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8328" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8329">Чтение значения элемента массива</Description>
              <HelpID>146</HelpID>
              <Id>3234</Id>
              <InputPortsCollection z:Id="8330" z:Size="2">
                <FBDPort z:Ref="7769" i:nil="true" />
                <FBDPort z:Ref="7749" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8331" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5018.3785814224275</d8p1:_x>
                <d8p1:_y>3709.9005531704811</d8p1:_y>
              </Location>
              <Name z:Id="8332">SWITCH SHORT</Name>
              <OutputPortsCollection z:Id="8333" z:Size="1">
                <FBDPort z:Ref="7764" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8334">SWITCSHORT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>18d7c7b6-fd9d-46fc-a8ba-6383ada18c0d</SpecificationId>
              <Code z:Id="8335">//#SWITCH SHORT (Переключатель Short   величин)


//Переключатель SHORT


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="8336" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3231</Id>
              <InputPortsCollection z:Id="8337" z:Size="1">
                <FBDPort z:Ref="7760" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8338" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5080</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8339" z:Size="1">
                <FBDPort z:Ref="7852" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="570" i:nil="true" />
              <InputFBDPort z:Ref="7760" i:nil="true" />
              <OutputFBDPort z:Ref="7852" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8340" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8341">Чтение значения элемента массива</Description>
              <HelpID>146</HelpID>
              <Id>3250</Id>
              <InputPortsCollection z:Id="8342" z:Size="2">
                <FBDPort z:Ref="7845" i:nil="true" />
                <FBDPort z:Ref="7835" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8343" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5130</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name z:Id="8344">SWITCH SHORT</Name>
              <OutputPortsCollection z:Id="8345" z:Size="1">
                <FBDPort z:Ref="7867" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8346">YART</Prefix>
              <SecondName z:Id="8347">SWITCSHORT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>18d7c7b6-fd9d-46fc-a8ba-6383ada18c0d</SpecificationId>
              <Code z:Ref="8335" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8348" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8349">Преобразование Short в Float</Description>
              <HelpID>106</HelpID>
              <Id>3264</Id>
              <InputPortsCollection z:Id="8350" z:Size="1">
                <FBDPort z:Ref="7862" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8351" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5140</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="8352">S&gt;F</Name>
              <OutputPortsCollection z:Id="8353" z:Size="1">
                <FBDPort z:Ref="7876" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8354">ShortFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>06e48c4e-f372-4aee-84a8-6b45e846a795</SpecificationId>
              <Code z:Ref="3413" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8355" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3271</Id>
              <InputPortsCollection z:Id="8356" z:Size="1">
                <FBDPort z:Ref="7872" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8357" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5100</d8p1:_x>
                <d8p1:_y>4190</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8358" z:Size="1">
                <FBDPort z:Id="8359" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3273</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8360" z:Size="1">
                    <FBDPortExtSettings z:Id="8361">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="8362" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="574" i:nil="true" />
              <InputFBDPort z:Ref="7872" i:nil="true" />
              <OutputFBDPort z:Ref="8359" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8363" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8364">Считывание системной даты</Description>
              <HelpID>123</HelpID>
              <Id>3031</Id>
              <InputPortsCollection z:Id="8365" z:Size="0" />
              <InternalPortsCollection z:Id="8366" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Id="8367">GET DATE</Name>
              <OutputPortsCollection z:Id="8368" z:Size="5">
                <FBDPort z:Id="8369" i:type="OutputFBDPort">
                  <Alias z:Id="8370">DATE</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3032</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8371" z:Size="1">
                    <FBDPortExtSettings z:Id="8372">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value z:Id="8373" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8374">Date1</VariableName>
                </FBDPort>
                <FBDPort z:Id="8375" i:type="OutputFBDPort">
                  <Alias z:Id="8376">DAY</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3033</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8377" z:Size="1">
                    <FBDPortExtSettings z:Id="8378">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8379" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8380">Day1</VariableName>
                </FBDPort>
                <FBDPort z:Id="8381" i:type="OutputFBDPort">
                  <Alias z:Id="8382">MONTH</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3034</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8383" z:Size="1">
                    <FBDPortExtSettings z:Id="8384">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8385" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8386">Month1</VariableName>
                </FBDPort>
                <FBDPort z:Id="8387" i:type="OutputFBDPort">
                  <Alias z:Id="8388">YEAR</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3035</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8389" z:Size="1">
                    <FBDPortExtSettings z:Id="8390">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8391" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8392">Year1</VariableName>
                </FBDPort>
                <FBDPort z:Ref="7334" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8393">myGetDate</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ab0a3859-5baf-46fc-b941-74a27be1ca94</SpecificationId>
              <Code z:Id="8394">//#GET DATE (Читать дату)


new ldata = GetDate(SYSTEM_DATE);


Date1  =ldata;


Day1 = (10 * (Day(ldata ) &gt;&gt; 4)) + (Day(ldata ) &amp; 0x0f);


Month1 =(10 * (Month(ldata ) &gt;&gt; 4)) + (Month(ldata ) &amp; 0x0f);


Year1 =(10 * (Year(ldata ) &gt;&gt; 4)) + (Year(ldata ) &amp; 0x0f);


WDay1 =(10 * (WDay(ldata ) &gt;&gt; 4)) + (WDay(ldata ) &amp; 0x0f);</Code>
            </FBDItem>
            <FBDItem z:Id="8395" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3038</Id>
              <InputPortsCollection z:Id="8396" z:Size="1">
                <FBDPort z:Ref="7330" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8397" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3580</d8p1:_x>
                <d8p1:_y>4200</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8398" z:Size="1">
                <FBDPort z:Id="8399" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3040</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8400" z:Size="1">
                    <FBDPortExtSettings z:Id="8401">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8402" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="7330" i:nil="true" />
              <OutputFBDPort z:Ref="8399" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8403" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3097</Id>
              <InputPortsCollection z:Id="8404" z:Size="1">
                <FBDPort z:Id="8405" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3098</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8406" z:Size="1">
                    <FBDPortExtSettings z:Id="8407">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8408">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8409" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4160</d8p1:_y>
              </Location>
              <Name z:Id="8410">Tag</Name>
              <OutputPortsCollection z:Id="8411" z:Size="1">
                <FBDPort z:Ref="7386" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8412">_</Prefix>
              <SecondName z:Ref="8410" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8405" i:nil="true" />
              <OutputFBDPort z:Ref="7386" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8413" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3022</Id>
              <InputPortsCollection z:Id="8414" z:Size="1">
                <FBDPort z:Ref="7315" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8415" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>4020</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8416" z:Size="1">
                <FBDPort z:Ref="7345" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="534" i:nil="true" />
              <InputFBDPort z:Ref="7315" i:nil="true" />
              <OutputFBDPort z:Ref="7345" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8417" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8418">Распаковка массива Bool</Description>
              <HelpID>24</HelpID>
              <Id>3090</Id>
              <InputPortsCollection z:Id="8419" z:Size="1">
                <FBDPort z:Ref="7340" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8420" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="8421">DECODER</Name>
              <OutputPortsCollection z:Id="8422" z:Size="1">
                <FBDPort z:Ref="7362" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8423">DECODERBYTE</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>16762dd4-09af-4c5b-bf4a-d01b9d78165b</SpecificationId>
              <Code z:Id="8424">//#DECODER  (Дешифпатор для Byte)


//Дешифратор Byte


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (ByteIn &amp; k) mas[i] = true;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="8425" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8426">Чтение значения элемента массива</Description>
              <HelpID>144</HelpID>
              <Id>3093</Id>
              <InputPortsCollection z:Id="8427" z:Size="2">
                <FBDPort z:Ref="7349" i:nil="true" />
                <FBDPort z:Ref="7380" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8428" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Id="8429">SWITCH BOOL</Name>
              <OutputPortsCollection z:Id="8430" z:Size="1">
                <FBDPort z:Id="8431" i:type="OutputFBDPort">
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3096</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8432" z:Size="1">
                    <FBDPortExtSettings z:Id="8433">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8434" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8435">OUTSW</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8436">SWITCHBIT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f9b2271a-72b8-444e-95cf-6d3148b3a5ac</SpecificationId>
              <Code z:Id="8437">//#SWITCH BOOL (Переключатель Bool величин)


//Переключатель BOOL


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="8438" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8439">Считывание системного времени</Description>
              <HelpID>122</HelpID>
              <Id>3120</Id>
              <InputPortsCollection z:Id="8440" z:Size="0" />
              <InternalPortsCollection z:Id="8441" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="8442">GET TIME</Name>
              <OutputPortsCollection z:Id="8443" z:Size="5">
                <FBDPort z:Id="8444" i:type="OutputFBDPort">
                  <Alias z:Id="8445">TIME</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3121</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8446" z:Size="1">
                    <FBDPortExtSettings z:Id="8447">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="8448" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8449">time</VariableName>
                </FBDPort>
                <FBDPort z:Id="8450" i:type="OutputFBDPort">
                  <Alias z:Id="8451">SFRACT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3122</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8452" z:Size="1">
                    <FBDPortExtSettings z:Id="8453">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8454" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8455">sfract</VariableName>
                </FBDPort>
                <FBDPort z:Id="8456" i:type="OutputFBDPort">
                  <Alias z:Id="8457">SS</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3123</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8458" z:Size="1">
                    <FBDPortExtSettings z:Id="8459">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8460" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8461">sec</VariableName>
                </FBDPort>
                <FBDPort z:Id="8462" i:type="OutputFBDPort">
                  <Alias z:Id="8463">MM</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3124</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8464" z:Size="1">
                    <FBDPortExtSettings z:Id="8465">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8466" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8467">mins</VariableName>
                </FBDPort>
                <FBDPort z:Ref="7497" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8468">myGetTime</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>91dda9a2-5588-4f94-a53e-c414a211e208</SpecificationId>
              <Code z:Ref="4851" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8469" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3127</Id>
              <InputPortsCollection z:Id="8470" z:Size="1">
                <FBDPort z:Ref="7493" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8471" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3600</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8472" z:Size="1">
                <FBDPort z:Id="8473" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8474" z:Size="1">
                    <FBDPortExtSettings z:Id="8475">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8476" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="7493" i:nil="true" />
              <OutputFBDPort z:Ref="8473" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8477" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3286</Id>
              <InputPortsCollection z:Id="8478" z:Size="1">
                <FBDPort z:Id="8479" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3287</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8480" z:Size="1">
                    <FBDPortExtSettings z:Id="8481">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5080" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8482" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4280</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8483" z:Size="1">
                <FBDPort z:Ref="7940" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8479" i:nil="true" />
              <OutputFBDPort z:Ref="7940" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8484" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8485">Разность A и B</Description>
              <HelpID>532</HelpID>
              <Id>3295</Id>
              <InputPortsCollection z:Id="8486" z:Size="2">
                <FBDPort z:Ref="7934" i:nil="true" />
                <FBDPort z:Id="8487" i:type="InputFBDPort">
                  <Alias z:Id="8488">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3297</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8489" z:Size="1">
                    <FBDPortExtSettings z:Id="8490">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8491" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8492" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8493">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8494" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4450</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="8495">SUB</Name>
              <OutputPortsCollection z:Id="8496" z:Size="1">
                <FBDPort z:Ref="7929" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8497">sub_byte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>edc0104b-758d-4948-8e7e-347d4b43e183</SpecificationId>
              <Code z:Id="8498">#inline y = a - b;</Code>
            </FBDItem>
            <FBDItem z:Id="8499" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8500">Преобразование Byte в Int</Description>
              <HelpID>102</HelpID>
              <Id>3289</Id>
              <InputPortsCollection z:Id="8501" z:Size="1">
                <FBDPort z:Ref="7924" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8502" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4550</d8p1:_x>
                <d8p1:_y>4290</d8p1:_y>
              </Location>
              <Name z:Id="8503">B&gt;I</Name>
              <OutputPortsCollection z:Id="8504" z:Size="1">
                <FBDPort z:Ref="7908" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8505">YART</Prefix>
              <SecondName z:Id="8506">ByteInt</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>eb892a3f-f2fe-4659-8f62-dbdda5e14c69</SpecificationId>
              <Code z:Id="8507">//#B &gt; I  (Byte в Int)


#inline yInt = a;</Code>
            </FBDItem>
            <FBDItem z:Id="8508" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3274</Id>
              <InputPortsCollection z:Id="8509" z:Size="1">
                <FBDPort z:Id="8510" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3275</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8511" z:Size="1">
                    <FBDPortExtSettings z:Id="8512">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8513">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8514" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4420</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="8515">Tag</Name>
              <OutputPortsCollection z:Id="8516" z:Size="1">
                <FBDPort z:Ref="7886" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8517">_</Prefix>
              <SecondName z:Ref="8515" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="534" i:nil="true" />
              <InputFBDPort z:Ref="8510" i:nil="true" />
              <OutputFBDPort z:Ref="7886" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8518" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8519">Преобразование Byte в Int</Description>
              <HelpID>102</HelpID>
              <Id>3277</Id>
              <InputPortsCollection z:Id="8520" z:Size="1">
                <FBDPort z:Ref="7881" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8521" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4576.473549199065</d8p1:_x>
                <d8p1:_y>4246.3920580879776</d8p1:_y>
              </Location>
              <Name z:Id="8522">B&gt;I</Name>
              <OutputPortsCollection z:Id="8523" z:Size="1">
                <FBDPort z:Ref="7897" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8524">ByteInt</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>eb892a3f-f2fe-4659-8f62-dbdda5e14c69</SpecificationId>
              <Code z:Ref="8507" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8525" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8526">Сдвиг вправо логический</Description>
              <HelpID>20</HelpID>
              <Id>3280</Id>
              <InputPortsCollection z:Id="8527" z:Size="3">
                <FBDPort z:Ref="7891" i:nil="true" />
                <FBDPort z:Ref="7902" i:nil="true" />
                <FBDPort z:Id="8528" i:type="InputFBDPort">
                  <Alias z:Id="8529">Вход 1406</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3283</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8530" z:Size="1">
                    <FBDPortExtSettings z:Id="8531">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8532" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8533" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8534">EN</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8535" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="8536">&gt;&gt;&gt;</Name>
              <OutputPortsCollection z:Id="8537" z:Size="2">
                <FBDPort z:Ref="7918" i:nil="true" />
                <FBDPort z:Id="8538" i:type="OutputFBDPort">
                  <Alias z:Id="8539">Выход 1407</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3285</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8540" z:Size="1">
                    <FBDPortExtSettings z:Id="8541">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8542" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8543">ENO</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8544">ShiftLL</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>9fd7fd14-4cfa-4ddf-9d0d-41bb852d26d8</SpecificationId>
              <Code z:Id="8545">//# &gt;&gt;&gt; (Логический сдвиг вправо e1 на  e2 бит без сохранения знака)


//Логический сдвиг вправо e1 на  e2 бит без сохранения знака


if(EN){


	y = e1 &gt;&gt;&gt; e2;


	ENO = true;


}</Code>
            </FBDItem>
            <FBDItem z:Id="8546" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8547">Преобразование Int в Bool</Description>
              <HelpID>836</HelpID>
              <Id>3292</Id>
              <InputPortsCollection z:Id="8548" z:Size="1">
                <FBDPort z:Ref="7913" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8549" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4789.0438039680193</d8p1:_x>
                <d8p1:_y>4250.5806345366273</d8p1:_y>
              </Location>
              <Name z:Id="8550">I&gt;b</Name>
              <OutputPortsCollection z:Id="8551" z:Size="1">
                <FBDPort z:Ref="7948" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7981" i:nil="true" />
              <SecondName z:Id="8552">IntBool</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ce936f5c-9ba0-412c-912b-74d627a22d1e</SpecificationId>
              <Code z:Id="8553">//#I &gt; b (Int в Bool)


yBool = (a==0)? false:true;</Code>
            </FBDItem>
            <FBDItem z:Id="8554" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3190</Id>
              <InputPortsCollection z:Id="8555" z:Size="1">
                <FBDPort z:Ref="7944" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8556" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4760</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8557" z:Size="1">
                <FBDPort z:Id="8558" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3192</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8559" z:Size="1">
                    <FBDPortExtSettings z:Id="8560">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8561" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="4556" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="7944" i:nil="true" />
              <OutputFBDPort z:Ref="8558" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8562" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3107</Id>
              <InputPortsCollection z:Id="8563" z:Size="1">
                <FBDPort z:Id="8564" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3108</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8565" z:Size="1">
                    <FBDPortExtSettings z:Id="8566">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8567">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8568" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4340</d8p1:_y>
              </Location>
              <Name z:Id="8569">Tag</Name>
              <OutputPortsCollection z:Id="8570" z:Size="1">
                <FBDPort z:Ref="7428" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8571">_</Prefix>
              <SecondName z:Ref="8569" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8564" i:nil="true" />
              <OutputFBDPort z:Ref="7428" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8572" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3025</Id>
              <InputPortsCollection z:Id="8573" z:Size="1">
                <FBDPort z:Ref="7320" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8574" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3810</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8575" z:Size="1">
                <FBDPort z:Ref="7489" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="539" i:nil="true" />
              <InputFBDPort z:Ref="7320" i:nil="true" />
              <OutputFBDPort z:Ref="7489" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8576" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8577">Распаковка массива Bool</Description>
              <HelpID>24</HelpID>
              <Id>3100</Id>
              <InputPortsCollection z:Id="8578" z:Size="1">
                <FBDPort z:Ref="7484" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8579" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4220</d8p1:_y>
              </Location>
              <Name z:Id="8580">DECODER</Name>
              <OutputPortsCollection z:Id="8581" z:Size="1">
                <FBDPort z:Ref="7404" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8582">YART</Prefix>
              <SecondName z:Id="8583">DECODERBYTE</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>16762dd4-09af-4c5b-bf4a-d01b9d78165b</SpecificationId>
              <Code z:Ref="8424" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8584" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8585">Чтение значения элемента массива</Description>
              <HelpID>144</HelpID>
              <Id>3103</Id>
              <InputPortsCollection z:Id="8586" z:Size="2">
                <FBDPort z:Ref="7391" i:nil="true" />
                <FBDPort z:Ref="7422" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8587" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>4190</d8p1:_y>
              </Location>
              <Name z:Id="8588">SWITCH BOOL</Name>
              <OutputPortsCollection z:Id="8589" z:Size="1">
                <FBDPort z:Ref="7682" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="8582" i:nil="true" />
              <SecondName z:Id="8590">SWITCHBIT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f9b2271a-72b8-444e-95cf-6d3148b3a5ac</SpecificationId>
              <Code z:Ref="8437" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8591" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3196</Id>
              <InputPortsCollection z:Id="8592" z:Size="1">
                <FBDPort z:Ref="7677" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8593" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4230</d8p1:_x>
                <d8p1:_y>4210</d8p1:_y>
              </Location>
              <Name z:Id="8594">Tag</Name>
              <OutputPortsCollection z:Id="8595" z:Size="1">
                <FBDPort z:Id="8596" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3198</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8597" z:Size="1">
                    <FBDPortExtSettings z:Id="8598">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8599" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8600">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8601">_</Prefix>
              <SecondName z:Ref="8594" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="558" i:nil="true" />
              <InputFBDPort z:Ref="7677" i:nil="true" />
              <OutputFBDPort z:Ref="8596" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8602" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3117</Id>
              <InputPortsCollection z:Id="8603" z:Size="1">
                <FBDPort z:Id="8604" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3118</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8605" z:Size="1">
                    <FBDPortExtSettings z:Id="8606">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8607">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8608" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="8609">Tag</Name>
              <OutputPortsCollection z:Id="8610" z:Size="1">
                <FBDPort z:Ref="7470" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8611">_</Prefix>
              <SecondName z:Ref="8609" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8604" i:nil="true" />
              <OutputFBDPort z:Ref="7470" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8612" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3028</Id>
              <InputPortsCollection z:Id="8613" z:Size="1">
                <FBDPort z:Ref="7325" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8614" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3760</d8p1:_x>
                <d8p1:_y>4270</d8p1:_y>
              </Location>
              <Name z:Ref="5082" i:nil="true" />
              <OutputPortsCollection z:Id="8615" z:Size="1">
                <FBDPort z:Ref="7480" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Ref="5082" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="544" i:nil="true" />
              <InputFBDPort z:Ref="7325" i:nil="true" />
              <OutputFBDPort z:Ref="7480" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8616" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8617">Распаковка массива Bool</Description>
              <HelpID>24</HelpID>
              <Id>3110</Id>
              <InputPortsCollection z:Id="8618" z:Size="1">
                <FBDPort z:Ref="7475" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8619" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="8620">DECODER</Name>
              <OutputPortsCollection z:Id="8621" z:Size="1">
                <FBDPort z:Ref="7446" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8622">YART</Prefix>
              <SecondName z:Id="8623">DECODERBYTE</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>16762dd4-09af-4c5b-bf4a-d01b9d78165b</SpecificationId>
              <Code z:Ref="8424" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8624" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8625">Чтение значения элемента массива</Description>
              <HelpID>144</HelpID>
              <Id>3113</Id>
              <InputPortsCollection z:Id="8626" z:Size="2">
                <FBDPort z:Ref="7433" i:nil="true" />
                <FBDPort z:Ref="7464" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8627" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Id="8628">SWITCH BOOL</Name>
              <OutputPortsCollection z:Id="8629" z:Size="1">
                <FBDPort z:Ref="7692" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="8622" i:nil="true" />
              <SecondName z:Id="8630">SWITCHBIT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f9b2271a-72b8-444e-95cf-6d3148b3a5ac</SpecificationId>
              <Code z:Ref="8437" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8631" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3202</Id>
              <InputPortsCollection z:Id="8632" z:Size="1">
                <FBDPort z:Ref="7687" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8633" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4230</d8p1:_x>
                <d8p1:_y>4390</d8p1:_y>
              </Location>
              <Name z:Id="8634">Tag</Name>
              <OutputPortsCollection z:Id="8635" z:Size="1">
                <FBDPort z:Id="8636" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3204</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8637" z:Size="1">
                    <FBDPortExtSettings z:Id="8638">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8639" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="8640">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8641">_</Prefix>
              <SecondName z:Ref="8634" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="562" i:nil="true" />
              <InputFBDPort z:Ref="7687" i:nil="true" />
              <OutputFBDPort z:Ref="8636" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8642" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3299</Id>
              <InputPortsCollection z:Id="8643" z:Size="0" />
              <InternalPortsCollection z:Id="8644" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4348.739806727</d8p1:_x>
                <d8p1:_y>4210</d8p1:_y>
              </Location>
              <Name z:Id="8645">comment</Name>
              <OutputPortsCollection z:Id="8646" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5084" i:nil="true" />
              <SecondName z:Id="8647">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="8648">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</Comment>
              <Height>206.02447271218807</Height>
              <Width>567.8105007527729</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="8649">TimeTableCalc</Name>
          <Parent z:Ref="7216" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>10</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="8650">TimeTable</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
  </ProgramPartsCollection>
  <ProjectFBDLibrary xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="8651" z:Size="1">
    <d2p1:anyType z:Id="8652" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="8653" z:Size="0" />
      <Name z:Id="8654">Библиотека проекта</Name>
    </d2p1:anyType>
  </ProjectFBDLibrary>
  <RemotePublicCases z:Id="8655" z:Size="2">
    <RemotePublicCase z:Id="8656">
      <EventTagFlag z:Id="8657">
        <Address>0</Address>
        <AllowPublic>false</AllowPublic>
        <ArraySize>1</ArraySize>
        <Bit>0</Bit>
        <Comments z:Ref="67" i:nil="true" />
        <Id>-1</Id>
        <IsArray>false</IsArray>
        <IsAutoMemory>true</IsAutoMemory>
        <KeepingValue>false</KeepingValue>
        <LocalAddress>0</LocalAddress>
        <MemoryType>RamBit</MemoryType>
        <ModbusAddress>0</ModbusAddress>
        <Name z:Id="8658">Новый параметр -1</Name>
        <ParentId>0</ParentId>
        <ReadOnly>true</ReadOnly>
        <Type>Bool</Type>
        <Value z:Id="8659" xmlns:d5p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d5p1:ArrayOfanyType" z:Size="1">
          <d5p1:anyType z:Id="8660" xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:boolean">false</d5p1:anyType>
        </Value>
      </EventTagFlag>
      <IsOnlyPublic>true</IsOnlyPublic>
      <PublicTags z:Id="8661" z:Size="0" />
    </RemotePublicCase>
    <RemotePublicCase z:Id="8662">
      <EventTagFlag z:Ref="308" i:nil="true" />
      <IsOnlyPublic>false</IsOnlyPublic>
      <PublicTags z:Id="8663" z:Size="11">
        <CustomTag z:Ref="238" i:nil="true" />
        <CustomTag z:Ref="242" i:nil="true" />
        <CustomTag z:Ref="246" i:nil="true" />
        <CustomTag z:Ref="342" i:nil="true" />
        <CustomTag z:Ref="86" i:nil="true" />
        <CustomTag z:Ref="362" i:nil="true" />
        <CustomTag z:Ref="436" i:nil="true" />
        <CustomTag z:Ref="441" i:nil="true" />
        <CustomTag z:Ref="452" i:nil="true" />
        <CustomTag z:Ref="457" i:nil="true" />
        <CustomTag z:Ref="471" i:nil="true" />
      </PublicTags>
    </RemotePublicCase>
  </RemotePublicCases>
  <SafeExtModuleWork>true</SafeExtModuleWork>
  <SerialInterfaces z:Id="8664">
    <SerialPorts z:Id="8665" z:Size="3">
      <SerialPort z:Id="8666">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>1</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
      <SerialPort z:Id="8667">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>2</PortID>
        <PortModeID>0</PortModeID>
      </SerialPort>
      <SerialPort z:Id="8668">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>3</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
    </SerialPorts>
  </SerialInterfaces>
  <Telemetry z:Id="8669">
    <GPRSProperty z:Id="8670">
      <GPRS_Modem_APN z:Id="8671">
        <Constant z:Id="8672">internet</Constant>
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_APN>
      <GPRS_Modem_Password z:Id="8673">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Password>
      <GPRS_Modem_Username z:Id="8674">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Username>
    </GPRSProperty>
    <TelemetryInterface>Ethernet</TelemetryInterface>
    <TelemetryServers z:Id="8675" z:Size="1">
      <TelemetryServer z:Id="8676">
        <Password z:Id="8677">
          <Constant z:Id="8678">82435RS98</Constant>
          <IsLink>true</IsLink>
          <Link z:Ref="330" i:nil="true" />
        </Password>
        <Port z:Id="8679">
          <Constant z:Id="8680">1883</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Port>
        <TelemetryServerName z:Id="8681">Сервер телеметрии</TelemetryServerName>
        <Timeout z:Id="8682">
          <Constant z:Id="8683">3000</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Timeout>
        <URL z:Id="8684">
          <Constant z:Id="8685">192.168.1.38</Constant>
          <IsLink>true</IsLink>
          <Link z:Ref="312" i:nil="true" />
        </URL>
        <Username z:Id="8686">
          <Constant z:Id="8687">empty</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Username>
      </TelemetryServer>
    </TelemetryServers>
  </Telemetry>
  <Version xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="8688">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>2</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </Version>
</Program></Project>
</Root>