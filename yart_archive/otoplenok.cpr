<?xml version="1.0" encoding="utf-8"?>
<Root>
  <Header>
    <Version Value="4.0" />
    <ProjectName Value="Отопленок" />
    <ProjectVersion Value="1.0.0" />
    <ProjectDescription>Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</ProjectDescription>
  </Header>
  <Project>﻿<?xml version="1.0" encoding="utf-8"?>
<Program xmlns:i="http://www.w3.org/2001/XMLSchema-instance" z:Id="1" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" xmlns="http://Cerebrum.ru/Project">
  <BaseDevise z:Id="2">
    <DevName z:Id="3">YART 1.8</DevName>
    <IODeviceCollection z:Id="4" z:Size="26">
      <IODevice z:Id="5" i:type="AIODevice">
        <Alias z:Id="6">AIN_1_WaterT</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="7">AIN_1</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="8" i:type="AIODevice">
        <Alias z:Id="9">AIN_2_RoomT</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Id="10">AIN_2</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="11" i:type="AIODevice">
        <Alias z:Id="12">AIN_3</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Ref="12" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="13" i:type="AIODevice">
        <Alias z:Id="14">AIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="14" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="15" i:type="AIODevice">
        <Alias z:Id="16">AIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Ref="16" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="17" i:type="AIODevice">
        <Alias z:Id="18">AIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Ref="18" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="19" i:type="AIODevice">
        <Alias z:Id="20">AIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="20" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="21" i:type="AIODevice">
        <Alias z:Id="22">AIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="22" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="23" i:type="AIODevice">
        <Alias z:Id="24">AOUT_1</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Ref="24" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="25" i:type="AIODevice">
        <Alias z:Id="26">AOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="26" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="27" i:type="DIODevice">
        <Alias z:Id="28">DIN_1</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Ref="28" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="29" i:type="DIODevice">
        <Alias z:Id="30">DIN_2</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Ref="30" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="31" i:type="DIODevice">
        <Alias z:Id="32">DIN_3</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Ref="32" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="33" i:type="DIODevice">
        <Alias z:Id="34">DIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="34" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="35" i:type="DIODevice">
        <Alias z:Id="36">DIN_5_Alarm1</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Id="37">DIN_5</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="38" i:type="DIODevice">
        <Alias z:Id="39">DIN_6_Counter1</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Id="40">DIN_6</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="41" i:type="DIODevice">
        <Alias z:Id="42">DIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="42" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="43" i:type="DIODevice">
        <Alias z:Id="44">DIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="44" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="45" i:type="DIODevice">
        <Alias z:Id="46">DOUT_1_WaterPWM</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Id="47">DOUT_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="48" i:type="DIODevice">
        <Alias z:Id="49">DOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="49" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="50" i:type="DIODevice">
        <Alias z:Id="51">DOUT_3</Alias>
        <Direction>Output</Direction>
        <Index>3</Index>
        <Name z:Id="52">DOUT_3</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="53" i:type="DIODevice">
        <Alias z:Id="54">DOUT_4</Alias>
        <Direction>Output</Direction>
        <Index>4</Index>
        <Name z:Ref="54" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="55" i:type="DIODevice">
        <Alias z:Id="56">DOUT_5</Alias>
        <Direction>Output</Direction>
        <Index>5</Index>
        <Name z:Ref="56" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="57" i:type="DIODevice">
        <Alias z:Id="58">DOUT_6</Alias>
        <Direction>Output</Direction>
        <Index>6</Index>
        <Name z:Ref="58" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="59" i:type="DIODevice">
        <Alias z:Id="60">DOUT_7</Alias>
        <Direction>Output</Direction>
        <Index>7</Index>
        <Name z:Ref="60" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="61" i:type="DIODevice">
        <Alias z:Id="62">DOUT_8</Alias>
        <Direction>Output</Direction>
        <Index>8</Index>
        <Name z:Ref="62" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
    </IODeviceCollection>
    <PLCId>52737</PLCId>
  </BaseDevise>
  <Build>0</Build>
  <CustomListsCollection z:Id="63" z:Size="7">
    <CustomList z:Id="64">
      <Comments z:Id="65"></Comments>
      <Description i:nil="true" />
      <Id>99</Id>
      <Name z:Id="66">Otoplenok</Name>
      <ParentID>0</ParentID>
    </CustomList>
    <CustomList z:Id="67">
      <Comments z:Ref="65" i:nil="true" />
      <Description i:nil="true" />
      <Id>684</Id>
      <Name z:Id="68">MODBUS_Read</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="69">
      <Comments z:Ref="65" i:nil="true" />
      <Description i:nil="true" />
      <Id>1242</Id>
      <Name z:Id="70">Serial</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="71">
      <Comments z:Ref="65" i:nil="true" />
      <Description i:nil="true" />
      <Id>1243</Id>
      <Name z:Id="72">TemperaturesControl</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="73">
      <Comments z:Ref="65" i:nil="true" />
      <Description i:nil="true" />
      <Id>1322</Id>
      <Name z:Id="74">Alarms</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="75">
      <Comments z:Ref="65" i:nil="true" />
      <Description i:nil="true" />
      <Id>1326</Id>
      <Name z:Id="76">Counters</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="77">
      <Comments z:Ref="65" i:nil="true" />
      <Description i:nil="true" />
      <Id>1725</Id>
      <Name z:Id="78">Connection</Name>
      <ParentID>99</ParentID>
    </CustomList>
  </CustomListsCollection>
  <CustomTagsCollection z:Id="79" z:Size="40">
    <CustomTag z:Id="80">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>135</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="81">Начать чтение</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="82" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="83" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">true</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="84">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>136</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="85">Адрес первого IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="86" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="87" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="88">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>260</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="89">Адрес первого HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="90" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="91" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">65</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="92">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>347</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="93">Адрес первого CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="94" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="95" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="96">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>416</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="97">Адрес первого DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="98" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="99" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="100">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>123</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="101">Чтение одного IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="102" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="103" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="104">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>261</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="105">Чтение одного HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="106" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="107" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="108">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>348</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="109">Чтение одного CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="110" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="111" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="112">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>417</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="113">Чтение одного DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="114" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="115" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="116">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>124</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="117">Чтение десяти IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="118" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="119" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="120" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="121" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="122" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="123" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="124" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="125" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="126" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="127" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="128" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="129">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>262</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="130">Чтение десяти HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="131" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="132" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="133" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="134" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="135" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="136" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="137" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="138" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="139" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="140" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="141" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="142">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>349</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="143">Чтение десяти CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="144" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="145" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="146" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="147" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="148" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="149" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="150" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="151" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="152" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="153" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="154" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="155">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>418</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="156">Чтение десяти DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="157" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="158" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="159" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="160" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="161" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="162" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="163" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="164" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="165" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="166" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="167" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="168">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1043</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="169">Repeat IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="170" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="171" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="172">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1049</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="173">Timeout IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="174" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="175" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="176">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1053</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="177">RegCnt</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="178" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="179" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="180">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>20</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1095</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="181">Read 20 IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="182" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="20">
        <d4p1:anyType z:Id="183" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="184" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="185" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="186" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="187" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="188" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="189" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="190" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="191" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="192" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="193" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="194" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="195" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="196" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="197" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="198" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="199" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="200" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="201" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="202" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="203">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>767</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="204">Timeout</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="205" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="206" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="207">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>109</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="208">Параметры COM</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="209" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="210" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="211">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>134</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="212">Сетевой адрес устройства</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="213" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="214" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="215">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>100</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="216">COM порт</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="217" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="218" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">3</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="219">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>101</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="220">Baudrate</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="221" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="222" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="223">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>768</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="224">Retries</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="225" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="226" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="227">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1216</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="228">RoomT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="229" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="230" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="231">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1244</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="232">WaterT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="233" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="234" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="235">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1271</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="236">TargetT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="237" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="238" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">25</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="239">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1276</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="240">Kp_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="241" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="242" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.25</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="243">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1282</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="244">Ki_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="245" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="246" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.01</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="247">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1283</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="248">Kd_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="249" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="250" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="251">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>17</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1298</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="252">Buffer_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="253" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="17">
        <d4p1:anyType z:Id="254" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="255" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="256" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="257" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="258" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="259" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="260" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="261" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="262" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="263" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="264" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="265" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="266" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="267" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="268" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="269" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="270" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="271">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1302</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="272">TestAuto_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="273" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="274" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="275">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1323</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="276">Alarm1</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="277" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="278" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="279">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1327</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="280">Counter1</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="281" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="282" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="283">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1601</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="284">X_Curve_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="285" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="286" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="287" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">33</d4p1:anyType>
        <d4p1:anyType z:Id="288" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">66</d4p1:anyType>
        <d4p1:anyType z:Id="289" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="290">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1602</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="291">Y_Curve_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="292" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="293" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="294" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">66</d4p1:anyType>
        <d4p1:anyType z:Id="295" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">33</d4p1:anyType>
        <d4p1:anyType z:Id="296" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="297">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1680</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="298">PWM_value</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="299" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="300" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="301">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1712</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="302">TargetT_shifted</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="303" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="304" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="305">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1195</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>false</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="306">публикатор_1195</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="307" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="308" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="309">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>9</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1727</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="310">CloudPassword</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="311" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="9">
        <d4p1:anyType z:Id="312" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="313" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="314" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="315" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="316" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="317" i:type="z:char">82</d4p1:anyType>
        <d4p1:anyType z:Id="318" i:type="z:char">83</d4p1:anyType>
        <d4p1:anyType z:Id="319" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="320" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="321">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="65" i:nil="true" />
      <Id>1747</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="322">Alarm_B</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="323" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="324" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
  </CustomTagsCollection>
  <Description z:Id="325">Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</Description>
  <DeviceSpecificationId>52737</DeviceSpecificationId>
  <Devices xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="326" z:Size="1">
    <d2p1:anyType z:Ref="2" i:nil="true" />
  </Devices>
  <GlobalIdCounter>1756</GlobalIdCounter>
  <Id>f71354af-7d88-42bb-a1ac-f5413ff0a57c</Id>
  <LastBuildTimestamp>2020-09-23T16:56:51.3023131+03:00</LastBuildTimestamp>
  <LocalArchive z:Id="327" z:Size="0" />
  <MemoryInfo z:Id="328">
    <AlgMem z:Id="329">
      <AMX>33972</AMX>
      <CRC>4</CRC>
      <Capacity>655360</Capacity>
      <DefaultValues>144</DefaultValues>
      <ExtModules>8</ExtModules>
      <Header>72</Header>
      <LocalArchive>0</LocalArchive>
      <MapMemory>2172</MapMemory>
      <ProjectDesc>44</ProjectDesc>
      <PublicTags>32</PublicTags>
      <Var>1380</Var>
    </AlgMem>
    <BRam z:Id="330">
      <Capacity>4080</Capacity>
      <Used>0</Used>
    </BRam>
    <BitFRam z:Id="331">
      <Capacity>2048</Capacity>
      <Used>0</Used>
    </BitFRam>
    <BitRam z:Id="332">
      <Capacity>2048</Capacity>
      <Used>53</Used>
    </BitRam>
    <FRam z:Id="333">
      <Capacity>15104</Capacity>
      <Used>22</Used>
    </FRam>
    <Ram z:Id="334">
      <Capacity>32012</Capacity>
      <Used>696</Used>
    </Ram>
    <Statistics z:Id="335">Статистика программы:
Блоков переменных: 31
Блоков кода: 40
Блоков констант: 7
Общее кол-во блоков: 86

Переменные: 40
Списков публикации: 2
Переменных в списках публикации: 6
Связей блоков: 74
Входы как константа: 39
</Statistics>
  </MemoryInfo>
  <MemoryMapStore z:Id="336">
    <Items xmlns:d3p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="337" z:Size="181">
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>135</d3p1:Key>
        <d3p1:Value z:Id="338">
          <Address z:Id="339">
            <ArrayCount>1</ArrayCount>
            <Location>11</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="340" z:Size="1">
            <d3p1:anyType z:Ref="83" i:nil="true" />
          </DefaultValues>
          <Id>135</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>136</d3p1:Key>
        <d3p1:Value z:Id="341">
          <Address z:Id="342">
            <ArrayCount>1</ArrayCount>
            <Location>4838</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="343" z:Size="1">
            <d3p1:anyType z:Ref="87" i:nil="true" />
          </DefaultValues>
          <Id>136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>260</d3p1:Key>
        <d3p1:Value z:Id="344">
          <Address z:Id="345">
            <ArrayCount>1</ArrayCount>
            <Location>4842</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="346" z:Size="1">
            <d3p1:anyType z:Ref="91" i:nil="true" />
          </DefaultValues>
          <Id>260</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>347</d3p1:Key>
        <d3p1:Value z:Id="347">
          <Address z:Id="348">
            <ArrayCount>1</ArrayCount>
            <Location>4844</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="349" z:Size="1">
            <d3p1:anyType z:Ref="95" i:nil="true" />
          </DefaultValues>
          <Id>347</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>416</d3p1:Key>
        <d3p1:Value z:Id="350">
          <Address z:Id="351">
            <ArrayCount>1</ArrayCount>
            <Location>4846</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="352" z:Size="1">
            <d3p1:anyType z:Ref="99" i:nil="true" />
          </DefaultValues>
          <Id>416</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>123</d3p1:Key>
        <d3p1:Value z:Id="353">
          <Address z:Id="354">
            <ArrayCount>1</ArrayCount>
            <Location>4848</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="355" z:Size="1">
            <d3p1:anyType z:Ref="103" i:nil="true" />
          </DefaultValues>
          <Id>123</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>261</d3p1:Key>
        <d3p1:Value z:Id="356">
          <Address z:Id="357">
            <ArrayCount>1</ArrayCount>
            <Location>4850</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="358" z:Size="1">
            <d3p1:anyType z:Ref="107" i:nil="true" />
          </DefaultValues>
          <Id>261</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>348</d3p1:Key>
        <d3p1:Value z:Id="359">
          <Address z:Id="360">
            <ArrayCount>1</ArrayCount>
            <Location>4852</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="361" z:Size="1">
            <d3p1:anyType z:Ref="111" i:nil="true" />
          </DefaultValues>
          <Id>348</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>417</d3p1:Key>
        <d3p1:Value z:Id="362">
          <Address z:Id="363">
            <ArrayCount>1</ArrayCount>
            <Location>4854</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="364" z:Size="1">
            <d3p1:anyType z:Ref="115" i:nil="true" />
          </DefaultValues>
          <Id>417</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>124</d3p1:Key>
        <d3p1:Value z:Id="365">
          <Address z:Id="366">
            <ArrayCount>10</ArrayCount>
            <Location>4856</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="367" z:Size="10">
            <d3p1:anyType z:Ref="119" i:nil="true" />
            <d3p1:anyType z:Ref="120" i:nil="true" />
            <d3p1:anyType z:Ref="121" i:nil="true" />
            <d3p1:anyType z:Ref="122" i:nil="true" />
            <d3p1:anyType z:Ref="123" i:nil="true" />
            <d3p1:anyType z:Ref="124" i:nil="true" />
            <d3p1:anyType z:Ref="125" i:nil="true" />
            <d3p1:anyType z:Ref="126" i:nil="true" />
            <d3p1:anyType z:Ref="127" i:nil="true" />
            <d3p1:anyType z:Ref="128" i:nil="true" />
          </DefaultValues>
          <Id>124</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>262</d3p1:Key>
        <d3p1:Value z:Id="368">
          <Address z:Id="369">
            <ArrayCount>10</ArrayCount>
            <Location>4876</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="370" z:Size="10">
            <d3p1:anyType z:Ref="132" i:nil="true" />
            <d3p1:anyType z:Ref="133" i:nil="true" />
            <d3p1:anyType z:Ref="134" i:nil="true" />
            <d3p1:anyType z:Ref="135" i:nil="true" />
            <d3p1:anyType z:Ref="136" i:nil="true" />
            <d3p1:anyType z:Ref="137" i:nil="true" />
            <d3p1:anyType z:Ref="138" i:nil="true" />
            <d3p1:anyType z:Ref="139" i:nil="true" />
            <d3p1:anyType z:Ref="140" i:nil="true" />
            <d3p1:anyType z:Ref="141" i:nil="true" />
          </DefaultValues>
          <Id>262</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>349</d3p1:Key>
        <d3p1:Value z:Id="371">
          <Address z:Id="372">
            <ArrayCount>10</ArrayCount>
            <Location>4896</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="373" z:Size="10">
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
            <d3p1:anyType z:Ref="151" i:nil="true" />
            <d3p1:anyType z:Ref="152" i:nil="true" />
            <d3p1:anyType z:Ref="153" i:nil="true" />
            <d3p1:anyType z:Ref="154" i:nil="true" />
          </DefaultValues>
          <Id>349</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>418</d3p1:Key>
        <d3p1:Value z:Id="374">
          <Address z:Id="375">
            <ArrayCount>10</ArrayCount>
            <Location>4916</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="376" z:Size="10">
            <d3p1:anyType z:Ref="158" i:nil="true" />
            <d3p1:anyType z:Ref="159" i:nil="true" />
            <d3p1:anyType z:Ref="160" i:nil="true" />
            <d3p1:anyType z:Ref="161" i:nil="true" />
            <d3p1:anyType z:Ref="162" i:nil="true" />
            <d3p1:anyType z:Ref="163" i:nil="true" />
            <d3p1:anyType z:Ref="164" i:nil="true" />
            <d3p1:anyType z:Ref="165" i:nil="true" />
            <d3p1:anyType z:Ref="166" i:nil="true" />
            <d3p1:anyType z:Ref="167" i:nil="true" />
          </DefaultValues>
          <Id>418</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1043</d3p1:Key>
        <d3p1:Value z:Id="377">
          <Address z:Id="378">
            <ArrayCount>1</ArrayCount>
            <Location>4936</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="379" z:Size="1">
            <d3p1:anyType z:Ref="171" i:nil="true" />
          </DefaultValues>
          <Id>1043</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1049</d3p1:Key>
        <d3p1:Value z:Id="380">
          <Address z:Id="381">
            <ArrayCount>1</ArrayCount>
            <Location>4938</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="382" z:Size="1">
            <d3p1:anyType z:Ref="175" i:nil="true" />
          </DefaultValues>
          <Id>1049</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1053</d3p1:Key>
        <d3p1:Value z:Id="383">
          <Address z:Id="384">
            <ArrayCount>1</ArrayCount>
            <Location>4942</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="385" z:Size="1">
            <d3p1:anyType z:Ref="179" i:nil="true" />
          </DefaultValues>
          <Id>1053</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1095</d3p1:Key>
        <d3p1:Value z:Id="386">
          <Address z:Id="387">
            <ArrayCount>20</ArrayCount>
            <Location>4944</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="388" z:Size="20">
            <d3p1:anyType z:Ref="183" i:nil="true" />
            <d3p1:anyType z:Ref="184" i:nil="true" />
            <d3p1:anyType z:Ref="185" i:nil="true" />
            <d3p1:anyType z:Ref="186" i:nil="true" />
            <d3p1:anyType z:Ref="187" i:nil="true" />
            <d3p1:anyType z:Ref="188" i:nil="true" />
            <d3p1:anyType z:Ref="189" i:nil="true" />
            <d3p1:anyType z:Ref="190" i:nil="true" />
            <d3p1:anyType z:Ref="191" i:nil="true" />
            <d3p1:anyType z:Ref="192" i:nil="true" />
            <d3p1:anyType z:Ref="193" i:nil="true" />
            <d3p1:anyType z:Ref="194" i:nil="true" />
            <d3p1:anyType z:Ref="195" i:nil="true" />
            <d3p1:anyType z:Ref="196" i:nil="true" />
            <d3p1:anyType z:Ref="197" i:nil="true" />
            <d3p1:anyType z:Ref="198" i:nil="true" />
            <d3p1:anyType z:Ref="199" i:nil="true" />
            <d3p1:anyType z:Ref="200" i:nil="true" />
            <d3p1:anyType z:Ref="201" i:nil="true" />
            <d3p1:anyType z:Ref="202" i:nil="true" />
          </DefaultValues>
          <Id>1095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>767</d3p1:Key>
        <d3p1:Value z:Id="389">
          <Address z:Id="390">
            <ArrayCount>1</ArrayCount>
            <Location>4984</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="391" z:Size="1">
            <d3p1:anyType z:Ref="206" i:nil="true" />
          </DefaultValues>
          <Id>767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>109</d3p1:Key>
        <d3p1:Value z:Id="392">
          <Address z:Id="393">
            <ArrayCount>1</ArrayCount>
            <Location>4986</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="394" z:Size="1">
            <d3p1:anyType z:Ref="210" i:nil="true" />
          </DefaultValues>
          <Id>109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>134</d3p1:Key>
        <d3p1:Value z:Id="395">
          <Address z:Id="396">
            <ArrayCount>1</ArrayCount>
            <Location>4988</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="397" z:Size="1">
            <d3p1:anyType z:Ref="214" i:nil="true" />
          </DefaultValues>
          <Id>134</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>100</d3p1:Key>
        <d3p1:Value z:Id="398">
          <Address z:Id="399">
            <ArrayCount>1</ArrayCount>
            <Location>4990</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="400" z:Size="1">
            <d3p1:anyType z:Ref="218" i:nil="true" />
          </DefaultValues>
          <Id>100</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>101</d3p1:Key>
        <d3p1:Value z:Id="401">
          <Address z:Id="402">
            <ArrayCount>1</ArrayCount>
            <Location>4992</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="403" z:Size="1">
            <d3p1:anyType z:Ref="222" i:nil="true" />
          </DefaultValues>
          <Id>101</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>768</d3p1:Key>
        <d3p1:Value z:Id="404">
          <Address z:Id="405">
            <ArrayCount>1</ArrayCount>
            <Location>4994</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="406" z:Size="1">
            <d3p1:anyType z:Ref="226" i:nil="true" />
          </DefaultValues>
          <Id>768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1216</d3p1:Key>
        <d3p1:Value z:Id="407">
          <Address z:Id="408">
            <ArrayCount>1</ArrayCount>
            <Location>4996</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="409" z:Size="1">
            <d3p1:anyType z:Ref="230" i:nil="true" />
          </DefaultValues>
          <Id>1216</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1244</d3p1:Key>
        <d3p1:Value z:Id="410">
          <Address z:Id="411">
            <ArrayCount>1</ArrayCount>
            <Location>5000</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="412" z:Size="1">
            <d3p1:anyType z:Ref="234" i:nil="true" />
          </DefaultValues>
          <Id>1244</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1271</d3p1:Key>
        <d3p1:Value z:Id="413">
          <Address z:Id="414">
            <ArrayCount>1</ArrayCount>
            <Location>5004</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="415" z:Size="1">
            <d3p1:anyType z:Ref="238" i:nil="true" />
          </DefaultValues>
          <Id>1271</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1276</d3p1:Key>
        <d3p1:Value z:Id="416">
          <Address z:Id="417">
            <ArrayCount>1</ArrayCount>
            <Location>45312</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="418" z:Size="1">
            <d3p1:anyType z:Ref="242" i:nil="true" />
          </DefaultValues>
          <Id>1276</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1282</d3p1:Key>
        <d3p1:Value z:Id="419">
          <Address z:Id="420">
            <ArrayCount>1</ArrayCount>
            <Location>45316</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="421" z:Size="1">
            <d3p1:anyType z:Ref="246" i:nil="true" />
          </DefaultValues>
          <Id>1282</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1283</d3p1:Key>
        <d3p1:Value z:Id="422">
          <Address z:Id="423">
            <ArrayCount>1</ArrayCount>
            <Location>45320</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="424" z:Size="1">
            <d3p1:anyType z:Ref="250" i:nil="true" />
          </DefaultValues>
          <Id>1283</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1298</d3p1:Key>
        <d3p1:Value z:Id="425">
          <Address z:Id="426">
            <ArrayCount>17</ArrayCount>
            <Location>5008</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="427" z:Size="17">
            <d3p1:anyType z:Ref="254" i:nil="true" />
            <d3p1:anyType z:Ref="255" i:nil="true" />
            <d3p1:anyType z:Ref="256" i:nil="true" />
            <d3p1:anyType z:Ref="257" i:nil="true" />
            <d3p1:anyType z:Ref="258" i:nil="true" />
            <d3p1:anyType z:Ref="259" i:nil="true" />
            <d3p1:anyType z:Ref="260" i:nil="true" />
            <d3p1:anyType z:Ref="261" i:nil="true" />
            <d3p1:anyType z:Ref="262" i:nil="true" />
            <d3p1:anyType z:Ref="263" i:nil="true" />
            <d3p1:anyType z:Ref="264" i:nil="true" />
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
          </DefaultValues>
          <Id>1298</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1302</d3p1:Key>
        <d3p1:Value z:Id="428">
          <Address z:Id="429">
            <ArrayCount>1</ArrayCount>
            <Location>12</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="430" z:Size="1">
            <d3p1:anyType z:Ref="274" i:nil="true" />
          </DefaultValues>
          <Id>1302</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1323</d3p1:Key>
        <d3p1:Value z:Id="431">
          <Address z:Id="432">
            <ArrayCount>1</ArrayCount>
            <Location>13</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="433" z:Size="1">
            <d3p1:anyType z:Ref="278" i:nil="true" />
          </DefaultValues>
          <Id>1323</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1327</d3p1:Key>
        <d3p1:Value z:Id="434">
          <Address z:Id="435">
            <ArrayCount>1</ArrayCount>
            <Location>5076</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="436" z:Size="1">
            <d3p1:anyType z:Ref="282" i:nil="true" />
          </DefaultValues>
          <Id>1327</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1601</d3p1:Key>
        <d3p1:Value z:Id="437">
          <Address z:Id="438">
            <ArrayCount>4</ArrayCount>
            <Location>5080</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="439" z:Size="4">
            <d3p1:anyType z:Ref="286" i:nil="true" />
            <d3p1:anyType z:Ref="287" i:nil="true" />
            <d3p1:anyType z:Ref="288" i:nil="true" />
            <d3p1:anyType z:Ref="289" i:nil="true" />
          </DefaultValues>
          <Id>1601</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1602</d3p1:Key>
        <d3p1:Value z:Id="440">
          <Address z:Id="441">
            <ArrayCount>4</ArrayCount>
            <Location>5096</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="442" z:Size="4">
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
            <d3p1:anyType z:Ref="295" i:nil="true" />
            <d3p1:anyType z:Ref="296" i:nil="true" />
          </DefaultValues>
          <Id>1602</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1680</d3p1:Key>
        <d3p1:Value z:Id="443">
          <Address z:Id="444">
            <ArrayCount>1</ArrayCount>
            <Location>5112</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="445" z:Size="1">
            <d3p1:anyType z:Ref="300" i:nil="true" />
          </DefaultValues>
          <Id>1680</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1712</d3p1:Key>
        <d3p1:Value z:Id="446">
          <Address z:Id="447">
            <ArrayCount>1</ArrayCount>
            <Location>5116</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="448" z:Size="1">
            <d3p1:anyType z:Ref="304" i:nil="true" />
          </DefaultValues>
          <Id>1712</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1195</d3p1:Key>
        <d3p1:Value z:Id="449">
          <Address z:Id="450">
            <ArrayCount>1</ArrayCount>
            <Location>0</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="451" z:Size="1">
            <d3p1:anyType z:Ref="308" i:nil="true" />
          </DefaultValues>
          <Id>1195</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1727</d3p1:Key>
        <d3p1:Value z:Id="452">
          <Address z:Id="453">
            <ArrayCount>9</ArrayCount>
            <Location>45324</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="454" z:Size="9">
            <d3p1:anyType z:Ref="312" i:nil="true" />
            <d3p1:anyType z:Ref="313" i:nil="true" />
            <d3p1:anyType z:Ref="314" i:nil="true" />
            <d3p1:anyType z:Ref="315" i:nil="true" />
            <d3p1:anyType z:Ref="316" i:nil="true" />
            <d3p1:anyType z:Ref="317" i:nil="true" />
            <d3p1:anyType z:Ref="318" i:nil="true" />
            <d3p1:anyType z:Ref="319" i:nil="true" />
            <d3p1:anyType z:Ref="320" i:nil="true" />
          </DefaultValues>
          <Id>1727</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1747</d3p1:Key>
        <d3p1:Value z:Id="455">
          <Address z:Id="456">
            <ArrayCount>1</ArrayCount>
            <Location>5120</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="457" z:Size="1">
            <d3p1:anyType z:Ref="324" i:nil="true" />
          </DefaultValues>
          <Id>1747</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>118</d3p1:Key>
        <d3p1:Value z:Id="458">
          <Address z:Ref="402" i:nil="true" />
          <DefaultValues z:Id="459" z:Size="1">
            <d3p1:anyType z:Ref="222" i:nil="true" />
          </DefaultValues>
          <Id>118</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>115</d3p1:Key>
        <d3p1:Value z:Id="460">
          <Address z:Ref="399" i:nil="true" />
          <DefaultValues z:Id="461" z:Size="1">
            <d3p1:anyType z:Ref="218" i:nil="true" />
          </DefaultValues>
          <Id>115</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>108</d3p1:Key>
        <d3p1:Value z:Id="462">
          <Address z:Id="463">
            <ArrayCount>1</ArrayCount>
            <Location>5122</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="464" z:Size="1">
            <d3p1:anyType z:Id="465" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>108</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>112</d3p1:Key>
        <d3p1:Value z:Id="466">
          <Address z:Ref="393" i:nil="true" />
          <DefaultValues z:Id="467" z:Size="1">
            <d3p1:anyType z:Ref="210" i:nil="true" />
          </DefaultValues>
          <Id>112</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1181</d3p1:Key>
        <d3p1:Value z:Id="468">
          <Address z:Id="469">
            <ArrayCount>1</ArrayCount>
            <Location>14</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="470" z:Size="1">
            <d3p1:anyType z:Id="471" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1181</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1182</d3p1:Key>
        <d3p1:Value z:Id="472">
          <Address z:Id="473">
            <ArrayCount>1</ArrayCount>
            <Location>15</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="474" z:Size="1">
            <d3p1:anyType z:Id="475" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1182</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1183</d3p1:Key>
        <d3p1:Value z:Id="476">
          <Address z:Id="477">
            <ArrayCount>1</ArrayCount>
            <Location>16</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="478" z:Size="1">
            <d3p1:anyType z:Id="479" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1183</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1184</d3p1:Key>
        <d3p1:Value z:Id="480">
          <Address z:Id="481">
            <ArrayCount>1</ArrayCount>
            <Location>5124</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="482" z:Size="1">
            <d3p1:anyType z:Id="483" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1184</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1185</d3p1:Key>
        <d3p1:Value z:Id="484">
          <Address z:Id="485">
            <ArrayCount>1</ArrayCount>
            <Location>5126</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="486" z:Size="1">
            <d3p1:anyType z:Id="487" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1185</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1191</d3p1:Key>
        <d3p1:Value z:Id="488">
          <Address z:Id="489">
            <ArrayCount>1</ArrayCount>
            <Location>17</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="490" z:Size="1">
            <d3p1:anyType z:Id="491" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1191</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1192</d3p1:Key>
        <d3p1:Value z:Id="492">
          <Address z:Id="493">
            <ArrayCount>1</ArrayCount>
            <Location>5128</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="494" z:Size="1">
            <d3p1:anyType z:Id="495" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1192</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1193</d3p1:Key>
        <d3p1:Value z:Id="496">
          <Address z:Id="497">
            <ArrayCount>1</ArrayCount>
            <Location>18</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="498" z:Size="1">
            <d3p1:anyType z:Id="499" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1193</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1194</d3p1:Key>
        <d3p1:Value z:Id="500">
          <Address z:Id="501">
            <ArrayCount>1</ArrayCount>
            <Location>5132</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="502" z:Size="1">
            <d3p1:anyType z:Id="503" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1194</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1199</d3p1:Key>
        <d3p1:Value z:Id="504">
          <Address z:Ref="450" i:nil="true" />
          <DefaultValues z:Id="505" z:Size="1">
            <d3p1:anyType z:Ref="308" i:nil="true" />
          </DefaultValues>
          <Id>1199</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1200</d3p1:Key>
        <d3p1:Value z:Id="506">
          <Address z:Id="507">
            <ArrayCount>1</ArrayCount>
            <Location>19</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="508" z:Size="1">
            <d3p1:anyType z:Id="509" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1200</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1730</d3p1:Key>
        <d3p1:Value z:Id="510">
          <Address z:Ref="453" i:nil="true" />
          <DefaultValues z:Id="511" z:Size="9">
            <d3p1:anyType z:Ref="312" i:nil="true" />
            <d3p1:anyType z:Ref="313" i:nil="true" />
            <d3p1:anyType z:Ref="314" i:nil="true" />
            <d3p1:anyType z:Ref="315" i:nil="true" />
            <d3p1:anyType z:Ref="316" i:nil="true" />
            <d3p1:anyType z:Ref="317" i:nil="true" />
            <d3p1:anyType z:Ref="318" i:nil="true" />
            <d3p1:anyType z:Ref="319" i:nil="true" />
            <d3p1:anyType z:Ref="320" i:nil="true" />
          </DefaultValues>
          <Id>1730</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>434</d3p1:Key>
        <d3p1:Value z:Id="512">
          <Address z:Ref="393" i:nil="true" />
          <DefaultValues z:Id="513" z:Size="1">
            <d3p1:anyType z:Ref="210" i:nil="true" />
          </DefaultValues>
          <Id>434</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>428</d3p1:Key>
        <d3p1:Value z:Id="514">
          <Address z:Ref="342" i:nil="true" />
          <DefaultValues z:Id="515" z:Size="1">
            <d3p1:anyType z:Ref="87" i:nil="true" />
          </DefaultValues>
          <Id>428</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1034</d3p1:Key>
        <d3p1:Value z:Id="516">
          <Address z:Id="517">
            <ArrayCount>1</ArrayCount>
            <Location>20</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="518" z:Size="1">
            <d3p1:anyType z:Id="519" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1034</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1035</d3p1:Key>
        <d3p1:Value z:Id="520">
          <Address z:Id="521">
            <ArrayCount>1</ArrayCount>
            <Location>21</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="522" z:Size="1">
            <d3p1:anyType z:Id="523" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1035</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1036</d3p1:Key>
        <d3p1:Value z:Id="524">
          <Address z:Id="525">
            <ArrayCount>1</ArrayCount>
            <Location>22</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="526" z:Size="1">
            <d3p1:anyType z:Id="527" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1036</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1037</d3p1:Key>
        <d3p1:Value z:Id="528">
          <Address z:Id="529">
            <ArrayCount>1</ArrayCount>
            <Location>5134</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="530" z:Size="1">
            <d3p1:anyType z:Id="531" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1037</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1038</d3p1:Key>
        <d3p1:Value z:Id="532">
          <Address z:Id="533">
            <ArrayCount>2</ArrayCount>
            <Location>5136</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="534" z:Size="2">
            <d3p1:anyType z:Id="535" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="535" i:nil="true" />
          </DefaultValues>
          <Id>1038</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1012</d3p1:Key>
        <d3p1:Value z:Id="536">
          <Address z:Id="537">
            <ArrayCount>1</ArrayCount>
            <Location>23</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="538" z:Size="1">
            <d3p1:anyType z:Id="539" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1012</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1013</d3p1:Key>
        <d3p1:Value z:Id="540">
          <Address z:Id="541">
            <ArrayCount>1</ArrayCount>
            <Location>5138</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="542" z:Size="1">
            <d3p1:anyType z:Id="543" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1013</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1014</d3p1:Key>
        <d3p1:Value z:Id="544">
          <Address z:Id="545">
            <ArrayCount>1</ArrayCount>
            <Location>24</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="546" z:Size="1">
            <d3p1:anyType z:Id="547" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1014</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1015</d3p1:Key>
        <d3p1:Value z:Id="548">
          <Address z:Id="549">
            <ArrayCount>1</ArrayCount>
            <Location>25</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="550" z:Size="1">
            <d3p1:anyType z:Id="551" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1015</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1016</d3p1:Key>
        <d3p1:Value z:Id="552">
          <Address z:Id="553">
            <ArrayCount>1</ArrayCount>
            <Location>26</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="554" z:Size="1">
            <d3p1:anyType z:Id="555" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1016</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1017</d3p1:Key>
        <d3p1:Value z:Id="556">
          <Address z:Id="557">
            <ArrayCount>1</ArrayCount>
            <Location>5140</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="558" z:Size="1">
            <d3p1:anyType z:Id="559" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1017</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1018</d3p1:Key>
        <d3p1:Value z:Id="560">
          <Address z:Id="561">
            <ArrayCount>1</ArrayCount>
            <Location>5144</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="562" z:Size="1">
            <d3p1:anyType z:Id="563" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1018</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1019</d3p1:Key>
        <d3p1:Value z:Id="564">
          <Address z:Id="565">
            <ArrayCount>1</ArrayCount>
            <Location>5146</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="566" z:Size="1">
            <d3p1:anyType z:Id="567" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1019</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1020</d3p1:Key>
        <d3p1:Value z:Id="568">
          <Address z:Id="569">
            <ArrayCount>1</ArrayCount>
            <Location>5148</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="570" z:Size="1">
            <d3p1:anyType z:Id="571" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1020</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1021</d3p1:Key>
        <d3p1:Value z:Id="572">
          <Address z:Id="573">
            <ArrayCount>1</ArrayCount>
            <Location>5150</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="574" z:Size="1">
            <d3p1:anyType z:Id="575" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1021</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1022</d3p1:Key>
        <d3p1:Value z:Id="576">
          <Address z:Id="577">
            <ArrayCount>1</ArrayCount>
            <Location>5152</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="578" z:Size="1">
            <d3p1:anyType z:Id="579" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1022</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1023</d3p1:Key>
        <d3p1:Value z:Id="580">
          <Address z:Id="581">
            <ArrayCount>1</ArrayCount>
            <Location>5156</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="582" z:Size="1">
            <d3p1:anyType z:Id="583" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1023</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1024</d3p1:Key>
        <d3p1:Value z:Id="584">
          <Address z:Id="585">
            <ArrayCount>64</ArrayCount>
            <Location>5160</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="586" z:Size="64">
            <d3p1:anyType z:Id="587" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
            <d3p1:anyType z:Ref="587" i:nil="true" />
          </DefaultValues>
          <Id>1024</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1025</d3p1:Key>
        <d3p1:Value z:Id="588">
          <Address z:Id="589">
            <ArrayCount>1</ArrayCount>
            <Location>5224</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="590" z:Size="1">
            <d3p1:anyType z:Id="591" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1025</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1175</d3p1:Key>
        <d3p1:Value z:Id="592">
          <Address z:Ref="342" i:nil="true" />
          <DefaultValues z:Id="593" z:Size="1">
            <d3p1:anyType z:Ref="87" i:nil="true" />
          </DefaultValues>
          <Id>1175</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1172</d3p1:Key>
        <d3p1:Value z:Id="594">
          <Address z:Ref="393" i:nil="true" />
          <DefaultValues z:Id="595" z:Size="1">
            <d3p1:anyType z:Ref="210" i:nil="true" />
          </DefaultValues>
          <Id>1172</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1165</d3p1:Key>
        <d3p1:Value z:Id="596">
          <Address z:Id="597">
            <ArrayCount>1</ArrayCount>
            <Location>27</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="598" z:Size="1">
            <d3p1:anyType z:Id="599" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1165</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1166</d3p1:Key>
        <d3p1:Value z:Id="600">
          <Address z:Id="601">
            <ArrayCount>1</ArrayCount>
            <Location>28</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="602" z:Size="1">
            <d3p1:anyType z:Id="603" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1166</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1167</d3p1:Key>
        <d3p1:Value z:Id="604">
          <Address z:Id="605">
            <ArrayCount>1</ArrayCount>
            <Location>29</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="606" z:Size="1">
            <d3p1:anyType z:Id="607" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1167</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1168</d3p1:Key>
        <d3p1:Value z:Id="608">
          <Address z:Id="609">
            <ArrayCount>1</ArrayCount>
            <Location>5226</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="610" z:Size="1">
            <d3p1:anyType z:Id="611" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1168</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1169</d3p1:Key>
        <d3p1:Value z:Id="612">
          <Address z:Id="613">
            <ArrayCount>2</ArrayCount>
            <Location>5228</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="614" z:Size="2">
            <d3p1:anyType z:Id="615" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="615" i:nil="true" />
          </DefaultValues>
          <Id>1169</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1143</d3p1:Key>
        <d3p1:Value z:Id="616">
          <Address z:Id="617">
            <ArrayCount>1</ArrayCount>
            <Location>30</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="618" z:Size="1">
            <d3p1:anyType z:Id="619" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1143</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1144</d3p1:Key>
        <d3p1:Value z:Id="620">
          <Address z:Id="621">
            <ArrayCount>1</ArrayCount>
            <Location>5232</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="622" z:Size="1">
            <d3p1:anyType z:Id="623" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1144</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1145</d3p1:Key>
        <d3p1:Value z:Id="624">
          <Address z:Id="625">
            <ArrayCount>1</ArrayCount>
            <Location>31</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="626" z:Size="1">
            <d3p1:anyType z:Id="627" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1145</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1146</d3p1:Key>
        <d3p1:Value z:Id="628">
          <Address z:Id="629">
            <ArrayCount>1</ArrayCount>
            <Location>32</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="630" z:Size="1">
            <d3p1:anyType z:Id="631" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1146</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1147</d3p1:Key>
        <d3p1:Value z:Id="632">
          <Address z:Id="633">
            <ArrayCount>1</ArrayCount>
            <Location>33</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="634" z:Size="1">
            <d3p1:anyType z:Id="635" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1147</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1148</d3p1:Key>
        <d3p1:Value z:Id="636">
          <Address z:Id="637">
            <ArrayCount>1</ArrayCount>
            <Location>5234</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="638" z:Size="1">
            <d3p1:anyType z:Id="639" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1148</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1149</d3p1:Key>
        <d3p1:Value z:Id="640">
          <Address z:Id="641">
            <ArrayCount>1</ArrayCount>
            <Location>5238</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="642" z:Size="1">
            <d3p1:anyType z:Id="643" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1149</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1150</d3p1:Key>
        <d3p1:Value z:Id="644">
          <Address z:Id="645">
            <ArrayCount>1</ArrayCount>
            <Location>5240</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="646" z:Size="1">
            <d3p1:anyType z:Id="647" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1150</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1151</d3p1:Key>
        <d3p1:Value z:Id="648">
          <Address z:Id="649">
            <ArrayCount>1</ArrayCount>
            <Location>5242</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="650" z:Size="1">
            <d3p1:anyType z:Id="651" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1151</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1152</d3p1:Key>
        <d3p1:Value z:Id="652">
          <Address z:Id="653">
            <ArrayCount>1</ArrayCount>
            <Location>5244</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="654" z:Size="1">
            <d3p1:anyType z:Id="655" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1152</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1153</d3p1:Key>
        <d3p1:Value z:Id="656">
          <Address z:Id="657">
            <ArrayCount>1</ArrayCount>
            <Location>5246</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="658" z:Size="1">
            <d3p1:anyType z:Id="659" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1153</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1154</d3p1:Key>
        <d3p1:Value z:Id="660">
          <Address z:Id="661">
            <ArrayCount>1</ArrayCount>
            <Location>5250</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="662" z:Size="1">
            <d3p1:anyType z:Id="663" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1154</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1155</d3p1:Key>
        <d3p1:Value z:Id="664">
          <Address z:Id="665">
            <ArrayCount>64</ArrayCount>
            <Location>5254</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="666" z:Size="64">
            <d3p1:anyType z:Id="667" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
            <d3p1:anyType z:Ref="667" i:nil="true" />
          </DefaultValues>
          <Id>1155</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1156</d3p1:Key>
        <d3p1:Value z:Id="668">
          <Address z:Id="669">
            <ArrayCount>1</ArrayCount>
            <Location>5318</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="670" z:Size="1">
            <d3p1:anyType z:Id="671" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1156</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1094</d3p1:Key>
        <d3p1:Value z:Id="672">
          <Address z:Ref="354" i:nil="true" />
          <DefaultValues z:Id="673" z:Size="1">
            <d3p1:anyType z:Ref="103" i:nil="true" />
          </DefaultValues>
          <Id>1094</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1080</d3p1:Key>
        <d3p1:Value z:Id="674">
          <Address z:Ref="393" i:nil="true" />
          <DefaultValues z:Id="675" z:Size="1">
            <d3p1:anyType z:Ref="210" i:nil="true" />
          </DefaultValues>
          <Id>1080</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1074</d3p1:Key>
        <d3p1:Value z:Id="676">
          <Address z:Id="677">
            <ArrayCount>1</ArrayCount>
            <Location>5320</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="678" z:Size="1">
            <d3p1:anyType z:Id="679" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1086</d3p1:Key>
        <d3p1:Value z:Id="680">
          <Address z:Id="681">
            <ArrayCount>1</ArrayCount>
            <Location>34</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="682" z:Size="1">
            <d3p1:anyType z:Id="683" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1087</d3p1:Key>
        <d3p1:Value z:Id="684">
          <Address z:Id="685">
            <ArrayCount>1</ArrayCount>
            <Location>35</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="686" z:Size="1">
            <d3p1:anyType z:Id="687" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1087</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1088</d3p1:Key>
        <d3p1:Value z:Id="688">
          <Address z:Id="689">
            <ArrayCount>1</ArrayCount>
            <Location>36</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="690" z:Size="1">
            <d3p1:anyType z:Id="691" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1088</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1089</d3p1:Key>
        <d3p1:Value z:Id="692">
          <Address z:Id="693">
            <ArrayCount>1</ArrayCount>
            <Location>37</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="694" z:Size="1">
            <d3p1:anyType z:Id="695" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1090</d3p1:Key>
        <d3p1:Value z:Id="696">
          <Address z:Id="697">
            <ArrayCount>1</ArrayCount>
            <Location>38</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="698" z:Size="1">
            <d3p1:anyType z:Id="699" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1090</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1091</d3p1:Key>
        <d3p1:Value z:Id="700">
          <Address z:Id="701">
            <ArrayCount>1</ArrayCount>
            <Location>39</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="702" z:Size="1">
            <d3p1:anyType z:Id="703" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1091</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1136</d3p1:Key>
        <d3p1:Value z:Id="704">
          <Address z:Ref="369" i:nil="true" />
          <DefaultValues z:Id="705" z:Size="10">
            <d3p1:anyType z:Ref="132" i:nil="true" />
            <d3p1:anyType z:Ref="133" i:nil="true" />
            <d3p1:anyType z:Ref="134" i:nil="true" />
            <d3p1:anyType z:Ref="135" i:nil="true" />
            <d3p1:anyType z:Ref="136" i:nil="true" />
            <d3p1:anyType z:Ref="137" i:nil="true" />
            <d3p1:anyType z:Ref="138" i:nil="true" />
            <d3p1:anyType z:Ref="139" i:nil="true" />
            <d3p1:anyType z:Ref="140" i:nil="true" />
            <d3p1:anyType z:Ref="141" i:nil="true" />
          </DefaultValues>
          <Id>1136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1113</d3p1:Key>
        <d3p1:Value z:Id="706">
          <Address z:Ref="345" i:nil="true" />
          <DefaultValues z:Id="707" z:Size="1">
            <d3p1:anyType z:Ref="91" i:nil="true" />
          </DefaultValues>
          <Id>1113</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1110</d3p1:Key>
        <d3p1:Value z:Id="708">
          <Address z:Ref="396" i:nil="true" />
          <DefaultValues z:Id="709" z:Size="1">
            <d3p1:anyType z:Ref="214" i:nil="true" />
          </DefaultValues>
          <Id>1110</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1107</d3p1:Key>
        <d3p1:Value z:Id="710">
          <Address z:Ref="393" i:nil="true" />
          <DefaultValues z:Id="711" z:Size="1">
            <d3p1:anyType z:Ref="210" i:nil="true" />
          </DefaultValues>
          <Id>1107</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1125</d3p1:Key>
        <d3p1:Value z:Id="712">
          <Address z:Id="713">
            <ArrayCount>1</ArrayCount>
            <Location>5322</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="714" z:Size="1">
            <d3p1:anyType z:Id="715" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1128</d3p1:Key>
        <d3p1:Value z:Id="716">
          <Address z:Id="717">
            <ArrayCount>1</ArrayCount>
            <Location>40</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="718" z:Size="1">
            <d3p1:anyType z:Id="719" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1128</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1129</d3p1:Key>
        <d3p1:Value z:Id="720">
          <Address z:Id="721">
            <ArrayCount>1</ArrayCount>
            <Location>41</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="722" z:Size="1">
            <d3p1:anyType z:Id="723" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1130</d3p1:Key>
        <d3p1:Value z:Id="724">
          <Address z:Id="725">
            <ArrayCount>1</ArrayCount>
            <Location>42</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="726" z:Size="1">
            <d3p1:anyType z:Id="727" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1130</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1131</d3p1:Key>
        <d3p1:Value z:Id="728">
          <Address z:Id="729">
            <ArrayCount>1</ArrayCount>
            <Location>43</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="730" z:Size="1">
            <d3p1:anyType z:Id="731" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1131</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1132</d3p1:Key>
        <d3p1:Value z:Id="732">
          <Address z:Id="733">
            <ArrayCount>1</ArrayCount>
            <Location>44</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="734" z:Size="1">
            <d3p1:anyType z:Id="735" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1133</d3p1:Key>
        <d3p1:Value z:Id="736">
          <Address z:Id="737">
            <ArrayCount>1</ArrayCount>
            <Location>45</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="738" z:Size="1">
            <d3p1:anyType z:Id="739" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1600</d3p1:Key>
        <d3p1:Value z:Id="740">
          <Address z:Ref="414" i:nil="true" />
          <DefaultValues z:Id="741" z:Size="1">
            <d3p1:anyType z:Ref="238" i:nil="true" />
          </DefaultValues>
          <Id>1600</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1719</d3p1:Key>
        <d3p1:Value z:Id="742">
          <Address z:Id="743">
            <ArrayCount>1</ArrayCount>
            <Location>5324</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="744" z:Size="1">
            <d3p1:anyType z:Id="745" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1719</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1693</d3p1:Key>
        <d3p1:Value z:Id="746">
          <Address z:Id="747">
            <ArrayCount>1</ArrayCount>
            <Location>5328</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="748" z:Size="1">
            <d3p1:anyType z:Id="749" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1715</d3p1:Key>
        <d3p1:Value z:Id="750">
          <Address z:Ref="447" i:nil="true" />
          <DefaultValues z:Id="751" z:Size="1">
            <d3p1:anyType z:Ref="304" i:nil="true" />
          </DefaultValues>
          <Id>1715</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1423</d3p1:Key>
        <d3p1:Value z:Id="752">
          <Address z:Id="753">
            <ArrayCount>1</ArrayCount>
            <Location>5332</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="754" z:Size="1">
            <d3p1:anyType z:Id="755" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1423</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1224</d3p1:Key>
        <d3p1:Value z:Id="756">
          <Address z:Id="757">
            <ArrayCount>1</ArrayCount>
            <Location>5336</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="758" z:Size="1">
            <d3p1:anyType z:Id="759" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1224</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1225</d3p1:Key>
        <d3p1:Value z:Id="760">
          <Address z:Id="761">
            <ArrayCount>1</ArrayCount>
            <Location>46</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="762" z:Size="1">
            <d3p1:anyType z:Id="763" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1225</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1226</d3p1:Key>
        <d3p1:Value z:Id="764">
          <Address z:Id="765">
            <ArrayCount>1</ArrayCount>
            <Location>47</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="766" z:Size="1">
            <d3p1:anyType z:Id="767" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1226</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1227</d3p1:Key>
        <d3p1:Value z:Id="768">
          <Address z:Id="769">
            <ArrayCount>1</ArrayCount>
            <Location>48</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="770" z:Size="1">
            <d3p1:anyType z:Id="771" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1227</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1228</d3p1:Key>
        <d3p1:Value z:Id="772">
          <Address z:Id="773">
            <ArrayCount>10</ArrayCount>
            <Location>5340</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="774" z:Size="10">
            <d3p1:anyType z:Id="775" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
            <d3p1:anyType z:Ref="775" i:nil="true" />
          </DefaultValues>
          <Id>1228</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1700</d3p1:Key>
        <d3p1:Value z:Id="776">
          <Address z:Id="777">
            <ArrayCount>1</ArrayCount>
            <Location>5380</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="778" z:Size="1">
            <d3p1:anyType z:Id="779" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1700</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1710</d3p1:Key>
        <d3p1:Value z:Id="780">
          <Address z:Id="781">
            <ArrayCount>1</ArrayCount>
            <Location>5384</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="782" z:Size="1">
            <d3p1:anyType z:Id="783" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1710</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1703</d3p1:Key>
        <d3p1:Value z:Id="784">
          <Address z:Ref="408" i:nil="true" />
          <DefaultValues z:Id="785" z:Size="1">
            <d3p1:anyType z:Ref="230" i:nil="true" />
          </DefaultValues>
          <Id>1703</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1608</d3p1:Key>
        <d3p1:Value z:Id="786">
          <Address z:Ref="441" i:nil="true" />
          <DefaultValues z:Id="787" z:Size="4">
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
            <d3p1:anyType z:Ref="295" i:nil="true" />
            <d3p1:anyType z:Ref="296" i:nil="true" />
          </DefaultValues>
          <Id>1608</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1605</d3p1:Key>
        <d3p1:Value z:Id="788">
          <Address z:Ref="438" i:nil="true" />
          <DefaultValues z:Id="789" z:Size="4">
            <d3p1:anyType z:Ref="286" i:nil="true" />
            <d3p1:anyType z:Ref="287" i:nil="true" />
            <d3p1:anyType z:Ref="288" i:nil="true" />
            <d3p1:anyType z:Ref="289" i:nil="true" />
          </DefaultValues>
          <Id>1605</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1305</d3p1:Key>
        <d3p1:Value z:Id="790">
          <Address z:Ref="429" i:nil="true" />
          <DefaultValues z:Id="791" z:Size="1">
            <d3p1:anyType z:Ref="274" i:nil="true" />
          </DefaultValues>
          <Id>1305</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1301</d3p1:Key>
        <d3p1:Value z:Id="792">
          <Address z:Ref="426" i:nil="true" />
          <DefaultValues z:Id="793" z:Size="17">
            <d3p1:anyType z:Ref="254" i:nil="true" />
            <d3p1:anyType z:Ref="255" i:nil="true" />
            <d3p1:anyType z:Ref="256" i:nil="true" />
            <d3p1:anyType z:Ref="257" i:nil="true" />
            <d3p1:anyType z:Ref="258" i:nil="true" />
            <d3p1:anyType z:Ref="259" i:nil="true" />
            <d3p1:anyType z:Ref="260" i:nil="true" />
            <d3p1:anyType z:Ref="261" i:nil="true" />
            <d3p1:anyType z:Ref="262" i:nil="true" />
            <d3p1:anyType z:Ref="263" i:nil="true" />
            <d3p1:anyType z:Ref="264" i:nil="true" />
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
          </DefaultValues>
          <Id>1301</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1297</d3p1:Key>
        <d3p1:Value z:Id="794">
          <Address z:Id="795">
            <ArrayCount>1</ArrayCount>
            <Location>5388</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="796" z:Size="1">
            <d3p1:anyType z:Id="797" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1297</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1289</d3p1:Key>
        <d3p1:Value z:Id="798">
          <Address z:Ref="423" i:nil="true" />
          <DefaultValues z:Id="799" z:Size="1">
            <d3p1:anyType z:Ref="250" i:nil="true" />
          </DefaultValues>
          <Id>1289</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1286</d3p1:Key>
        <d3p1:Value z:Id="800">
          <Address z:Ref="420" i:nil="true" />
          <DefaultValues z:Id="801" z:Size="1">
            <d3p1:anyType z:Ref="246" i:nil="true" />
          </DefaultValues>
          <Id>1286</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1279</d3p1:Key>
        <d3p1:Value z:Id="802">
          <Address z:Ref="417" i:nil="true" />
          <DefaultValues z:Id="803" z:Size="1">
            <d3p1:anyType z:Ref="242" i:nil="true" />
          </DefaultValues>
          <Id>1279</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1247</d3p1:Key>
        <d3p1:Value z:Id="804">
          <Address z:Ref="411" i:nil="true" />
          <DefaultValues z:Id="805" z:Size="1">
            <d3p1:anyType z:Ref="234" i:nil="true" />
          </DefaultValues>
          <Id>1247</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1264</d3p1:Key>
        <d3p1:Value z:Id="806">
          <Address z:Id="807">
            <ArrayCount>1</ArrayCount>
            <Location>5390</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="808" z:Size="1">
            <d3p1:anyType z:Id="809" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1264</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1265</d3p1:Key>
        <d3p1:Value z:Id="810">
          <Address z:Id="811">
            <ArrayCount>1</ArrayCount>
            <Location>5394</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="812" z:Size="1">
            <d3p1:anyType z:Id="813" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1265</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1266</d3p1:Key>
        <d3p1:Value z:Id="814">
          <Address z:Id="815">
            <ArrayCount>1</ArrayCount>
            <Location>5398</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="816" z:Size="1">
            <d3p1:anyType z:Id="817" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1266</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1267</d3p1:Key>
        <d3p1:Value z:Id="818">
          <Address z:Id="819">
            <ArrayCount>1</ArrayCount>
            <Location>5400</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="820" z:Size="1">
            <d3p1:anyType z:Id="821" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1267</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1268</d3p1:Key>
        <d3p1:Value z:Id="822">
          <Address z:Id="823">
            <ArrayCount>1</ArrayCount>
            <Location>5404</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="824" z:Size="1">
            <d3p1:anyType z:Id="825" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1268</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1269</d3p1:Key>
        <d3p1:Value z:Id="826">
          <Address z:Id="827">
            <ArrayCount>1</ArrayCount>
            <Location>49</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="828" z:Size="1">
            <d3p1:anyType z:Id="829" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1269</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1270</d3p1:Key>
        <d3p1:Value z:Id="830">
          <Address z:Id="831">
            <ArrayCount>4</ArrayCount>
            <Location>5408</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="832" z:Size="4">
            <d3p1:anyType z:Id="833" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="833" i:nil="true" />
            <d3p1:anyType z:Ref="833" i:nil="true" />
            <d3p1:anyType z:Ref="833" i:nil="true" />
          </DefaultValues>
          <Id>1270</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1597</d3p1:Key>
        <d3p1:Value z:Id="834">
          <Address z:Id="835">
            <ArrayCount>1</ArrayCount>
            <Location>5424</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="836" z:Size="1">
            <d3p1:anyType z:Id="837" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1597</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1686</d3p1:Key>
        <d3p1:Value z:Id="838">
          <Address z:Ref="444" i:nil="true" />
          <DefaultValues z:Id="839" z:Size="1">
            <d3p1:anyType z:Ref="300" i:nil="true" />
          </DefaultValues>
          <Id>1686</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1667</d3p1:Key>
        <d3p1:Value z:Id="840">
          <Address z:Ref="411" i:nil="true" />
          <DefaultValues z:Id="841" z:Size="1">
            <d3p1:anyType z:Ref="234" i:nil="true" />
          </DefaultValues>
          <Id>1667</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1642</d3p1:Key>
        <d3p1:Value z:Id="842">
          <Address z:Id="843">
            <ArrayCount>1</ArrayCount>
            <Location>5428</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="844" z:Size="1">
            <d3p1:anyType z:Id="845" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1642</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1679</d3p1:Key>
        <d3p1:Value z:Id="846">
          <Address z:Id="847">
            <ArrayCount>1</ArrayCount>
            <Location>50</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="848" z:Size="1">
            <d3p1:anyType z:Id="849" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1679</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1638</d3p1:Key>
        <d3p1:Value z:Id="850">
          <Address z:Id="851">
            <ArrayCount>1</ArrayCount>
            <Location>5432</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="852" z:Size="1">
            <d3p1:anyType z:Id="853" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1638</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1671</d3p1:Key>
        <d3p1:Value z:Id="854">
          <Address z:Id="855">
            <ArrayCount>1</ArrayCount>
            <Location>51</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="856" z:Size="1">
            <d3p1:anyType z:Id="857" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1671</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1533</d3p1:Key>
        <d3p1:Value z:Id="858">
          <Address z:Id="859">
            <ArrayCount>1</ArrayCount>
            <Location>5436</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="860" z:Size="1">
            <d3p1:anyType z:Id="861" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1533</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1530</d3p1:Key>
        <d3p1:Value z:Id="862">
          <Address z:Id="863">
            <ArrayCount>1</ArrayCount>
            <Location>5440</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="864" z:Size="1">
            <d3p1:anyType z:Id="865" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1530</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1488</d3p1:Key>
        <d3p1:Value z:Id="866">
          <Address z:Id="867">
            <ArrayCount>2</ArrayCount>
            <Location>5444</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="868" z:Size="2">
            <d3p1:anyType z:Id="869" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="869" i:nil="true" />
          </DefaultValues>
          <Id>1488</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1539</d3p1:Key>
        <d3p1:Value z:Id="870">
          <Address z:Id="871">
            <ArrayCount>1</ArrayCount>
            <Location>5452</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="872" z:Size="1">
            <d3p1:anyType z:Id="873" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1539</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1543</d3p1:Key>
        <d3p1:Value z:Id="874">
          <Address z:Id="875">
            <ArrayCount>1</ArrayCount>
            <Location>5456</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="876" z:Size="1">
            <d3p1:anyType z:Id="877" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1543</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1434</d3p1:Key>
        <d3p1:Value z:Id="878">
          <Address z:Id="879">
            <ArrayCount>2</ArrayCount>
            <Location>5460</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="880" z:Size="2">
            <d3p1:anyType z:Id="881" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="881" i:nil="true" />
          </DefaultValues>
          <Id>1434</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1425</d3p1:Key>
        <d3p1:Value z:Id="882">
          <Address z:Id="883">
            <ArrayCount>1</ArrayCount>
            <Location>5468</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="884" z:Size="1">
            <d3p1:anyType z:Id="885" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1425</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1209</d3p1:Key>
        <d3p1:Value z:Id="886">
          <Address z:Id="887">
            <ArrayCount>1</ArrayCount>
            <Location>5472</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="888" z:Size="1">
            <d3p1:anyType z:Id="889" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1209</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1210</d3p1:Key>
        <d3p1:Value z:Id="890">
          <Address z:Id="891">
            <ArrayCount>1</ArrayCount>
            <Location>52</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="892" z:Size="1">
            <d3p1:anyType z:Id="893" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1210</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1211</d3p1:Key>
        <d3p1:Value z:Id="894">
          <Address z:Id="895">
            <ArrayCount>1</ArrayCount>
            <Location>53</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="896" z:Size="1">
            <d3p1:anyType z:Id="897" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1211</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1212</d3p1:Key>
        <d3p1:Value z:Id="898">
          <Address z:Id="899">
            <ArrayCount>1</ArrayCount>
            <Location>54</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="900" z:Size="1">
            <d3p1:anyType z:Id="901" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1212</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1213</d3p1:Key>
        <d3p1:Value z:Id="902">
          <Address z:Id="903">
            <ArrayCount>10</ArrayCount>
            <Location>5476</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="904" z:Size="10">
            <d3p1:anyType z:Id="905" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
            <d3p1:anyType z:Ref="905" i:nil="true" />
          </DefaultValues>
          <Id>1213</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1325</d3p1:Key>
        <d3p1:Value z:Id="906">
          <Address z:Id="907">
            <ArrayCount>1</ArrayCount>
            <Location>55</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="908" z:Size="1">
            <d3p1:anyType z:Id="909" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1325</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1347</d3p1:Key>
        <d3p1:Value z:Id="910">
          <Address z:Id="911">
            <ArrayCount>1</ArrayCount>
            <Location>56</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="912" z:Size="1">
            <d3p1:anyType z:Id="913" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1347</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1348</d3p1:Key>
        <d3p1:Value z:Id="914">
          <Address z:Id="915">
            <ArrayCount>1</ArrayCount>
            <Location>5516</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="916" z:Size="1">
            <d3p1:anyType z:Id="917" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1348</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1343</d3p1:Key>
        <d3p1:Value z:Id="918">
          <Address z:Id="919">
            <ArrayCount>1</ArrayCount>
            <Location>57</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="920" z:Size="1">
            <d3p1:anyType z:Id="921" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1343</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1330</d3p1:Key>
        <d3p1:Value z:Id="922">
          <Address z:Ref="435" i:nil="true" />
          <DefaultValues z:Id="923" z:Size="1">
            <d3p1:anyType z:Ref="282" i:nil="true" />
          </DefaultValues>
          <Id>1330</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1318</d3p1:Key>
        <d3p1:Value z:Id="924">
          <Address z:Id="925">
            <ArrayCount>1</ArrayCount>
            <Location>58</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="926" z:Size="1">
            <d3p1:anyType z:Id="927" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1318</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1321</d3p1:Key>
        <d3p1:Value z:Id="928">
          <Address z:Ref="432" i:nil="true" />
          <DefaultValues z:Id="929" z:Size="1">
            <d3p1:anyType z:Ref="278" i:nil="true" />
          </DefaultValues>
          <Id>1321</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1755</d3p1:Key>
        <d3p1:Value z:Id="930">
          <Address z:Id="931">
            <ArrayCount>1</ArrayCount>
            <Location>59</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="932" z:Size="1">
            <d3p1:anyType z:Id="933" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1755</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1756</d3p1:Key>
        <d3p1:Value z:Id="934">
          <Address z:Id="935">
            <ArrayCount>1</ArrayCount>
            <Location>5520</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="936" z:Size="1">
            <d3p1:anyType z:Id="937" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1756</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1752</d3p1:Key>
        <d3p1:Value z:Id="938">
          <Address z:Id="939">
            <ArrayCount>2</ArrayCount>
            <Location>5524</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="940" z:Size="2">
            <d3p1:anyType z:Id="941" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="941" i:nil="true" />
          </DefaultValues>
          <Id>1752</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1746</d3p1:Key>
        <d3p1:Value z:Id="942">
          <Address z:Id="943">
            <ArrayCount>1</ArrayCount>
            <Location>60</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="944" z:Size="1">
            <d3p1:anyType z:Id="945" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1746</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1744</d3p1:Key>
        <d3p1:Value z:Id="946">
          <Address z:Id="947">
            <ArrayCount>1</ArrayCount>
            <Location>61</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="948" z:Size="1">
            <d3p1:anyType z:Id="949" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1744</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1742</d3p1:Key>
        <d3p1:Value z:Id="950">
          <Address z:Id="951">
            <ArrayCount>1</ArrayCount>
            <Location>62</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="952" z:Size="1">
            <d3p1:anyType z:Id="953" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1742</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1738</d3p1:Key>
        <d3p1:Value z:Id="954">
          <Address z:Id="955">
            <ArrayCount>1</ArrayCount>
            <Location>5532</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="956" z:Size="1">
            <d3p1:anyType z:Id="957" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1738</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1750</d3p1:Key>
        <d3p1:Value z:Id="958">
          <Address z:Ref="456" i:nil="true" />
          <DefaultValues z:Id="959" z:Size="1">
            <d3p1:anyType z:Ref="324" i:nil="true" />
          </DefaultValues>
          <Id>1750</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
    </Items>
  </MemoryMapStore>
  <MinimalIdeVersionForSharedLibrary xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="960">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>0</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </MinimalIdeVersionForSharedLibrary>
  <Name z:Id="961">Отопленок</Name>
  <PawnConfig z:Id="962">
    <CompilerVersion>Version2</CompilerVersion>
    <MaxExecTime>500</MaxExecTime>
    <Mode>FreeRun</Mode>
    <Periodic>300</Periodic>
    <StackSize>1024</StackSize>
  </PawnConfig>
  <ProgramPartsCollection xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="963" z:Size="6">
    <d2p1:anyType z:Id="964" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="965" z:Size="2">
        <d2p1:anyType z:Id="966" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="967" z:Size="3">
            <FBDConnector z:Id="968">
              <EndFBDPort z:Id="969" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="970" z:Size="1">
                  <FBDPortExtSettings z:Id="971">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="972" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="973">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="974" i:type="OutputFBDPort">
                <Alias z:Id="975">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>108</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="976" z:Size="1">
                  <FBDPortExtSettings z:Id="977">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="972" i:nil="true" />
                <VariableName z:Id="978">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="979">
              <EndFBDPort z:Id="980" i:type="InputFBDPort">
                <Alias z:Id="981">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>103</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="982" z:Size="1">
                  <FBDPortExtSettings z:Id="983">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="984" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="985">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="986" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>115</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="987" z:Size="1">
                  <FBDPortExtSettings z:Id="988">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="984" i:nil="true" />
                <VariableName z:Id="989">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="990">
              <EndFBDPort z:Id="991" i:type="InputFBDPort">
                <Alias z:Id="992">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="993" z:Size="1">
                  <FBDPortExtSettings z:Id="994">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="995" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="996">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="997" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>118</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="998" z:Size="1">
                  <FBDPortExtSettings z:Id="999">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="995" i:nil="true" />
                <VariableName z:Ref="989" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="1000" z:Size="5">
            <FBDItem z:Id="1001" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>116</Id>
              <InputPortsCollection z:Id="1002" z:Size="1">
                <FBDPort z:Id="1003" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>117</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1004" z:Size="1">
                    <FBDPortExtSettings z:Id="1005">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="973" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1006" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="1007">Tag</Name>
              <OutputPortsCollection z:Id="1008" z:Size="1">
                <FBDPort z:Ref="997" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1009">_</Prefix>
              <SecondName z:Ref="1007" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="219" i:nil="true" />
              <InputFBDPort z:Ref="1003" i:nil="true" />
              <OutputFBDPort z:Ref="997" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1010" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>113</Id>
              <InputPortsCollection z:Id="1011" z:Size="1">
                <FBDPort z:Id="1012" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1013" z:Size="1">
                    <FBDPortExtSettings z:Id="1014">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="973" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1015" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="1007" i:nil="true" />
              <OutputPortsCollection z:Id="1016" z:Size="1">
                <FBDPort z:Ref="986" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1009" i:nil="true" />
              <SecondName z:Ref="1007" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="215" i:nil="true" />
              <InputFBDPort z:Ref="1012" i:nil="true" />
              <OutputFBDPort z:Ref="986" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1017" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="1018">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>102</Id>
              <InputPortsCollection z:Id="1019" z:Size="5">
                <FBDPort z:Ref="980" i:nil="true" />
                <FBDPort z:Id="1020" i:type="InputFBDPort">
                  <Alias z:Id="1021">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>104</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1022" z:Size="1">
                    <FBDPortExtSettings z:Id="1023">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1024">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="1025" i:type="InputFBDPort">
                  <Alias z:Id="1026">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1027" z:Size="1">
                    <FBDPortExtSettings z:Id="1028">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1029">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="1030" i:type="InputFBDPort">
                  <Alias z:Id="1031">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1032" z:Size="1">
                    <FBDPortExtSettings z:Id="1033">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1034">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="991" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1035" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3690</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Id="1036">SerialPortParam</Name>
              <OutputPortsCollection z:Id="1037" z:Size="1">
                <FBDPort z:Ref="974" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1038">YART</Prefix>
              <SecondName z:Ref="1036" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Id="1039">// Ограничение на входящие значение с применением значения по умолчанию, если это необходимо


if(Port &lt; 1 || Port &gt; 3) Port = 2;					// значение по умолчанию: 2


//if(DataBits &lt; 0 || DataBits &gt; 3) DataBits = 0;	// параметр временно не используется; значение по умолчанию: 0 


DataBits = 0;										// принудительная установка в 0


if(Parity &lt; 0 || Parity &gt; 2) Parity = 0;			// значение по умолчанию: 0


if(StopBits &lt; 0 || StopBits &gt; 2) StopBits = 0;		// значение по умолчанию: 0


if(Baudrate &lt; 1) Baudrate = 4;


if(Baudrate &gt; 8) Baudrate = 8;						// принудительная установка при превышении допустимой скорости





// Допустимые значения DataBits:


// 0 = 8


// 1 = 7


// 2 = 6


// 3 = 5





// Допустимые значения Parity:


// 0 = N


// 1 = O


// 2 = E


// 3 = M


// 4 = S





// Допустимые значения StopBits:


// 0 = 1


// 1 = 2


// 2 = 1.5





// Допустимые значения Baudrate:


// 1 =   1200


// 2 =   2400


// 3 =   4800


// 4 =   9600


// 5 =  19200


// 6 =  38400


// 7 =  57600


// 8 = 115200





// Формирование результата


PortPar = (Baudrate &lt;&lt; 12) | (StopBits &lt;&lt; 10) | (Parity &lt;&lt; 7) | (DataBits &lt;&lt; 4) | Port;</Code>
            </FBDItem>
            <FBDItem z:Id="1040" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>110</Id>
              <InputPortsCollection z:Id="1041" z:Size="1">
                <FBDPort z:Ref="969" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1042" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3850</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="1007" i:nil="true" />
              <OutputPortsCollection z:Id="1043" z:Size="1">
                <FBDPort z:Id="1044" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1045" z:Size="1">
                    <FBDPortExtSettings z:Id="1046">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1047" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="989" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1009" i:nil="true" />
              <SecondName z:Ref="1007" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="207" i:nil="true" />
              <InputFBDPort z:Ref="969" i:nil="true" />
              <OutputFBDPort z:Ref="1044" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1048" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>119</Id>
              <InputPortsCollection z:Id="1049" z:Size="0" />
              <InternalPortsCollection z:Id="1050" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="1051">comment</Name>
              <OutputPortsCollection z:Id="1052" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="1009" i:nil="true" />
              <SecondName z:Id="1053">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="1054">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</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="1055">RS485_Setup</Name>
          <Parent z:Ref="964" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>1</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="1056" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="1057" z:Size="4">
            <FBDConnector z:Id="1058">
              <EndFBDPort z:Id="1059" i:type="InputFBDPort">
                <Alias z:Id="1060">Write</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1198</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1061" z:Size="1">
                  <FBDPortExtSettings z:Id="1062">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="1063" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1064">write</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1065" i:type="OutputFBDPort">
                <Alias z:Id="1066">Выход 5254</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1191</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1067" z:Size="1">
                  <FBDPortExtSettings z:Id="1068">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="1063" i:nil="true" />
                <VariableName z:Id="1069">PULSE</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1070">
              <EndFBDPort z:Id="1071" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1197</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1072" z:Size="1">
                  <FBDPortExtSettings z:Id="1073">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value i:nil="true" />
                <VariableName z:Id="1074">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1075" i:type="OutputFBDPort">
                <Alias z:Id="1076"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1202</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1077" z:Size="1">
                  <FBDPortExtSettings z:Id="1078">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="1079" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="1080" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="1081">out_180</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1082">
              <EndFBDPort z:Id="1083" i:type="InputFBDPort">
                <Alias z:Id="1084">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1189</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1085" z:Size="1">
                  <FBDPortExtSettings z:Id="1086">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="1087">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1088" i:type="OutputFBDPort">
                <Alias z:Id="1089"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1187</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1090" z:Size="1">
                  <FBDPortExtSettings z:Id="1091">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="1092" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="1093" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1000</d2p1:anyType>
                </Value>
                <VariableName z:Id="1094">out_161</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1095">
              <EndFBDPort z:Id="1096" i:type="InputFBDPort">
                <Alias z:Id="1097">Вход 5252</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1190</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1098" z:Size="1">
                  <FBDPortExtSettings z:Id="1099">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="1100" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1101">EN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1102" i:type="OutputFBDPort">
                <Alias z:Id="1103">Выход 117</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1182</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1104" z:Size="1">
                  <FBDPortExtSettings z:Id="1105">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="1100" i:nil="true" />
                <VariableName z:Id="1106">Ok</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="1107" z:Size="6">
            <FBDItem z:Id="1108" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1201</Id>
              <InputPortsCollection z:Id="1109" z:Size="0" />
              <InternalPortsCollection z:Id="1110" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3820</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="1111" z:Size="1">
                <FBDPort z:Ref="1075" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1112">_</Prefix>
              <SecondName z:Id="1113">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="1079" i:nil="true" />
              <OutputFBDPort z:Ref="1075" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1114" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1186</Id>
              <InputPortsCollection z:Id="1115" z:Size="0" />
              <InternalPortsCollection z:Id="1116" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="1117" z:Size="1">
                <FBDPort z:Ref="1088" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1118">_</Prefix>
              <SecondName z:Id="1119">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="1092" i:nil="true" />
              <OutputFBDPort z:Ref="1088" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1120" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="1121">Статус подключения к серверу телеметрии</Description>
              <HelpID>714</HelpID>
              <Id>1180</Id>
              <InputPortsCollection z:Id="1122" z:Size="0" />
              <InternalPortsCollection z:Id="1123" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="1124">Telemetry State</Name>
              <OutputPortsCollection z:Id="1125" z:Size="5">
                <FBDPort z:Id="1126" i:type="OutputFBDPort">
                  <Alias z:Id="1127">Выход 112</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1181</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1128" z:Size="1">
                    <FBDPortExtSettings z:Id="1129">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1130" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1131">Init</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1102" i:nil="true" />
                <FBDPort z:Id="1132" i:type="OutputFBDPort">
                  <Alias z:Id="1133">Выход 113</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1183</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1134" z:Size="1">
                    <FBDPortExtSettings z:Id="1135">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1136" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1137">Error</VariableName>
                </FBDPort>
                <FBDPort z:Id="1138" i:type="OutputFBDPort">
                  <Alias z:Id="1139">Выход 15051</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1184</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1140" z:Size="1">
                    <FBDPortExtSettings z:Id="1141">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1142" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1143">LastErr</VariableName>
                </FBDPort>
                <FBDPort z:Id="1144" i:type="OutputFBDPort">
                  <Alias z:Id="1145">Выход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1185</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1146" z:Size="1">
                    <FBDPortExtSettings z:Id="1147">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1148" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1149">State</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1150">YART</Prefix>
              <SecondName z:Id="1151">TeleState</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ad2295d-eb4d-4b18-9a03-4145c7b12a45</SpecificationId>
              <Code z:Id="1152">new state_tmp = get_short(MQTT_STATE);


State = state_tmp;


Init = state_tmp == 0;


Error= state_tmp != 0 &amp;&amp; state_tmp!=6;


Ok = state_tmp == 6;





/*


Last state (addr 366)


enum {


  MQTT_LST_INIT=0,


  MQTT_LST_WRONG_MODE_PTR,


  MQTT_LST_WRONG_MODE_CONTENTS,


  MQTT_LST_INCORRECT_MODE,


  MQTT_LST_CANT_CONNECT_IP,


  MQTT_LST_CANT_AUTHORIZE,


  MQTT_LST_CANT_SUBSCRIBE,


  MQTT_LST_DESCRIPTION_ERROR,


  MQTT_LST_RUN_TIME_ERROR,


  MQTT_LST_USER_RESET,


  MQTT_LST_PUBLISH_ERROR


};


*/





LastErr = get_short(MQTT_LAST_ERR);</Code>
            </FBDItem>
            <FBDItem z:Id="1153" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="1154">Генерация импульсов с заданной периодичностью</Description>
              <HelpID>16</HelpID>
              <Id>1188</Id>
              <InputPortsCollection z:Id="1155" z:Size="2">
                <FBDPort z:Ref="1083" i:nil="true" />
                <FBDPort z:Ref="1096" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1156" z:Size="1">
                <FBDPort z:Id="1157" i:type="InternalFBDPort">
                  <Alias z:Id="1158">Внутренняя 5256</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1194</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1159" z:Size="1">
                    <FBDPortExtSettings z:Id="1160">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1161">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="1162">PULSE GENERATOR</Name>
              <OutputPortsCollection z:Id="1163" z:Size="3">
                <FBDPort z:Ref="1065" i:nil="true" />
                <FBDPort z:Id="1164" i:type="OutputFBDPort">
                  <Alias z:Id="1165">ELAPSED</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1192</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1166" z:Size="1">
                    <FBDPortExtSettings z:Id="1167">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="1168" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1169">COUNTER</VariableName>
                </FBDPort>
                <FBDPort z:Id="1170" i:type="OutputFBDPort">
                  <Alias z:Id="1171">Выход 5255</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1193</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1172" z:Size="1">
                    <FBDPortExtSettings z:Id="1173">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1174" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1175">ENO</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1176">YART</Prefix>
              <SecondName z:Id="1177">PULSEGENERATOR</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3c324fa4-d4d4-48e7-95af-5ff85ab56d15</SpecificationId>
              <Code z:Id="1178">//#PULSE GENERATOR (Генератор импульсов)


if(!EN){


	COUNTER = 0; 


	tf = 0;


}else{


	if(COUNTER &gt;= PERIOD){


		PULSE = true;


		COUNTER -= PERIOD;


	}else{


		PULSE = false;


	}


	YARTAddScanTask(COUNTER, tf);


}


ENO = EN;</Code>
            </FBDItem>
            <FBDItem z:Id="1179" i:type="SetpointFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1196</Id>
              <InputPortsCollection z:Id="1180" z:Size="2">
                <FBDPort z:Ref="1071" i:nil="true" />
                <FBDPort z:Ref="1059" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1181" z:Size="1">
                <FBDPort z:Id="1182" i:type="InternalFBDPort">
                  <Alias z:Id="1183">writeStatus</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1200</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1184" z:Size="1">
                    <FBDPortExtSettings z:Id="1185">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1183" i:nil="true" />
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="1186">Tag</Name>
              <OutputPortsCollection z:Id="1187" z:Size="1">
                <FBDPort z:Id="1188" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1199</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1189" z:Size="1">
                    <FBDPortExtSettings z:Id="1190">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1191" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1192">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1193">_</Prefix>
              <SecondName z:Id="1194">__00__WriteSetpoint</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>59d31f4d-66d3-4778-a3c2-9315c0b02c9b</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="305" i:nil="true" />
              <InputFBDPort z:Ref="1071" i:nil="true" />
              <OutputFBDPort z:Ref="1188" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
              <InputWriteFBDPort z:Ref="1059" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1195" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1728</Id>
              <InputPortsCollection z:Id="1196" z:Size="1">
                <FBDPort z:Id="1197" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1729</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1198" z:Size="9">
                    <FBDPortExtSettings z:Id="1199">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1200">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1201">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1202">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1203">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1204">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1205">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1206">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1207">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1208">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1209" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name z:Id="1210">Tag</Name>
              <OutputPortsCollection z:Id="1211" z:Size="1">
                <FBDPort z:Id="1212" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1730</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1213" z:Size="9">
                    <FBDPortExtSettings z:Id="1214">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1215">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1216">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1217">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1218">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1219">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1220">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1221">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1222">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value z:Id="1223" i:type="d2p1:ArrayOfanyType" z:Size="9">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1224">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1225">_</Prefix>
              <SecondName z:Ref="1210" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="309" i:nil="true" />
              <InputFBDPort z:Ref="1197" i:nil="true" />
              <OutputFBDPort z:Ref="1212" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="1226">Publicator</Name>
          <Parent z:Ref="964" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>5</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="1227">Connection</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="1228" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="1229" z:Size="1">
        <d2p1:anyType z:Id="1230" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="1231" z:Size="12">
            <FBDConnector z:Id="1232">
              <EndFBDPort z:Id="1233" i:type="InputFBDPort">
                <Alias z:Id="1234">PortPar</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1027</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1235" z:Size="1">
                  <FBDPortExtSettings z:Id="1236">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1237" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1238">pp_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1239" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>434</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1240" z:Size="1">
                  <FBDPortExtSettings z:Id="1241">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1237" i:nil="true" />
                <VariableName z:Id="1242">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1243">
              <EndFBDPort z:Id="1244" i:type="InputFBDPort">
                <Alias z:Id="1245">RegAdr</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1030</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1246" z:Size="1">
                  <FBDPortExtSettings z:Id="1247">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="1248" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1249">radr_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1250" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>428</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1251" z:Size="1">
                  <FBDPortExtSettings z:Id="1252">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="1248" i:nil="true" />
                <VariableName z:Ref="1242" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1253">
              <EndFBDPort z:Id="1254" i:type="InputFBDPort">
                <Alias z:Id="1255">Вход 279</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1068</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1256" z:Size="1">
                  <FBDPortExtSettings z:Id="1257">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1258" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1259">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1260" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1080</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1261" z:Size="1">
                  <FBDPortExtSettings z:Id="1262">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1258" i:nil="true" />
                <VariableName z:Id="1263">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1264">
              <EndFBDPort z:Id="1265" i:type="InputFBDPort">
                <Alias z:Id="1266">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1085</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1267" z:Size="1">
                  <FBDPortExtSettings z:Id="1268">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1269" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1270">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1271" i:type="OutputFBDPort">
                <Alias z:Id="1272">Выход 315</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1074</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1273" z:Size="1">
                  <FBDPortExtSettings z:Id="1274">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1269" i:nil="true" />
                <VariableName z:Id="1275">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1276">
              <EndFBDPort z:Id="1277" i:type="InputFBDPort">
                <Alias z:Id="1278">Вход 282</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1071</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1279" z:Size="1">
                  <FBDPortExtSettings z:Id="1280">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1281" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1282">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1283" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1094</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1284" z:Size="1">
                  <FBDPortExtSettings z:Id="1285">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1281" i:nil="true" />
                <VariableName z:Id="1286">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1287">
              <EndFBDPort z:Id="1288" i:type="InputFBDPort">
                <Alias z:Id="1289">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1127</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1290" z:Size="1">
                  <FBDPortExtSettings z:Id="1291">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1292" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1293">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1294" i:type="OutputFBDPort">
                <Alias z:Id="1295">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1296" z:Size="1">
                  <FBDPortExtSettings z:Id="1297">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1292" i:nil="true" />
                <VariableName z:Id="1298">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1299">
              <EndFBDPort z:Id="1300" i:type="InputFBDPort">
                <Alias z:Id="1301">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1119</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1302" z:Size="1">
                  <FBDPortExtSettings z:Id="1303">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1304" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1305">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1306" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1307" z:Size="1">
                  <FBDPortExtSettings z:Id="1308">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1304" i:nil="true" />
                <VariableName z:Id="1309">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1310">
              <EndFBDPort z:Id="1311" i:type="InputFBDPort">
                <Alias z:Id="1312">Вход 124</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1313" z:Size="1">
                  <FBDPortExtSettings z:Id="1314">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="1315" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1316">NodeId</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1317" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1110</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1318" z:Size="1">
                  <FBDPortExtSettings z:Id="1319">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="1315" i:nil="true" />
                <VariableName z:Ref="1309" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1320">
              <EndFBDPort z:Id="1321" i:type="InputFBDPort">
                <Alias z:Id="1322">Вход 127</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1121</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1323" z:Size="1">
                  <FBDPortExtSettings z:Id="1324">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1325" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1326">NodeAddress</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1327" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1113</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1328" z:Size="1">
                  <FBDPortExtSettings z:Id="1329">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1325" i:nil="true" />
                <VariableName z:Ref="1309" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1330">
              <EndFBDPort z:Id="1331" i:type="InputFBDPort">
                <Alias z:Id="1332">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1122</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1333" z:Size="1">
                  <FBDPortExtSettings z:Id="1334">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1335" i:type="d2p1:ArrayOfanyType" z:Size="10">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1336">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1337" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>10</ArrayItemsCount>
                <Id>1136</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1338" z:Size="10">
                  <FBDPortExtSettings z:Id="1339">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1340">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1341">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1342">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1343">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1344">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1345">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1346">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1347">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="1348">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1335" i:nil="true" />
                <VariableName z:Ref="1309" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1349">
              <EndFBDPort z:Id="1350" i:type="InputFBDPort">
                <Alias z:Id="1351">PortPar</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1158</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1352" z:Size="1">
                  <FBDPortExtSettings z:Id="1353">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="1354" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1355">pp_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1356" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1172</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1357" z:Size="1">
                  <FBDPortExtSettings z:Id="1358">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="1354" i:nil="true" />
                <VariableName z:Ref="1286" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="1359">
              <EndFBDPort z:Id="1360" i:type="InputFBDPort">
                <Alias z:Id="1361">RegAdr</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1161</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="1362" z:Size="1">
                  <FBDPortExtSettings z:Id="1363">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="1364" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="1365">radr_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="1366" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1175</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="1367" z:Size="1">
                  <FBDPortExtSettings z:Id="1368">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="1364" i:nil="true" />
                <VariableName z:Ref="1286" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="1369" z:Size="20">
            <FBDItem z:Id="1370" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>432</Id>
              <InputPortsCollection z:Id="1371" z:Size="1">
                <FBDPort z:Id="1372" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>433</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1373" z:Size="1">
                    <FBDPortExtSettings z:Id="1374">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1375">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1376" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Id="1377">Tag</Name>
              <OutputPortsCollection z:Id="1378" z:Size="1">
                <FBDPort z:Ref="1239" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1379">_</Prefix>
              <SecondName z:Ref="1377" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="207" i:nil="true" />
              <InputFBDPort z:Ref="1372" i:nil="true" />
              <OutputFBDPort z:Ref="1239" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1380" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>426</Id>
              <InputPortsCollection z:Id="1381" z:Size="1">
                <FBDPort z:Id="1382" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>427</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1383" z:Size="1">
                    <FBDPortExtSettings z:Id="1384">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1375" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1385" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3470</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Ref="1377" i:nil="true" />
              <OutputPortsCollection z:Id="1386" z:Size="1">
                <FBDPort z:Ref="1250" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1379" i:nil="true" />
              <SecondName z:Ref="1377" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="67" i:nil="true" />
              <CustomTag z:Ref="84" i:nil="true" />
              <InputFBDPort z:Ref="1382" i:nil="true" />
              <OutputFBDPort z:Ref="1250" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1387" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="1388">Чтение устройства сети MODBUS (до 32 регистров за раз)</Description>
              <HelpID>796</HelpID>
              <Id>1011</Id>
              <InputPortsCollection z:Id="1389" z:Size="8">
                <FBDPort z:Id="1390" i:type="InputFBDPort">
                  <Alias z:Id="1391">Enable</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1026</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1392" z:Size="1">
                    <FBDPortExtSettings z:Id="1393">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1394" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1395" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1396">e_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1233" i:nil="true" />
                <FBDPort z:Id="1397" i:type="InputFBDPort">
                  <Alias z:Id="1398">FuncNum</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1028</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1399" z:Size="1">
                    <FBDPortExtSettings z:Id="1400">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1401" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1402" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">4</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1403">fn_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1404" i:type="InputFBDPort">
                  <Alias z:Id="1405">DevAdr</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1029</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1406" z:Size="1">
                    <FBDPortExtSettings z:Id="1407">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1408" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1409" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1410">dadr_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1244" i:nil="true" />
                <FBDPort z:Id="1411" i:type="InputFBDPort">
                  <Alias z:Id="1412">RegCnt</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1031</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1413" z:Size="1">
                    <FBDPortExtSettings z:Id="1414">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1415" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1416" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1417">rcnt_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1418" i:type="InputFBDPort">
                  <Alias z:Id="1419">Timeout</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1032</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1420" z:Size="1">
                    <FBDPortExtSettings z:Id="1421">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="1422" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1423" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1424">to_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1425" i:type="InputFBDPort">
                  <Alias z:Id="1426">Repeat</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1033</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1427" z:Size="1">
                    <FBDPortExtSettings z:Id="1428">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1429" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1430" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1431">r_</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1432" z:Size="14">
                <FBDPort z:Id="1433" i:type="InternalFBDPort">
                  <Alias z:Id="1434">Внутренняя 10753</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1012</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1435" z:Size="1">
                    <FBDPortExtSettings z:Id="1436">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1437">_init_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1438" i:type="InternalFBDPort">
                  <Alias z:Id="1439">Внутренняя 10759</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1013</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1440" z:Size="1">
                    <FBDPortExtSettings z:Id="1441">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1442">_blockId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1443" i:type="InternalFBDPort">
                  <Alias z:Id="1444">Внутренняя 17965</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1014</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1445" z:Size="1">
                    <FBDPortExtSettings z:Id="1446">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1447">_le_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1448" i:type="InternalFBDPort">
                  <Alias z:Id="1449">Внутренняя 16763</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1015</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1450" z:Size="1">
                    <FBDPortExtSettings z:Id="1451">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1452">_err_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1453" i:type="InternalFBDPort">
                  <Alias z:Id="1454">Внутренняя 38936</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1016</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1455" z:Size="1">
                    <FBDPortExtSettings z:Id="1456">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1457">_na_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1458" i:type="InternalFBDPort">
                  <Alias z:Id="1459">Внутренняя 13906</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1017</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1460" z:Size="1">
                    <FBDPortExtSettings z:Id="1461">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1462">_timer_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1463" i:type="InternalFBDPort">
                  <Alias z:Id="1464">Внутренняя 28486</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1018</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1465" z:Size="1">
                    <FBDPortExtSettings z:Id="1466">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1467">_msgId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1468" i:type="InternalFBDPort">
                  <Alias z:Id="1469">Внутренняя 10760</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1019</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1470" z:Size="1">
                    <FBDPortExtSettings z:Id="1471">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1472">_stage_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1473" i:type="InternalFBDPort">
                  <Alias z:Id="1474">Внутренняя 16765</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1020</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1475" z:Size="1">
                    <FBDPortExtSettings z:Id="1476">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1477">_msgLen_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1478" i:type="InternalFBDPort">
                  <Alias z:Id="1479">Внутренняя 16767</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1021</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1480" z:Size="1">
                    <FBDPortExtSettings z:Id="1481">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1482">_txloop_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1483" i:type="InternalFBDPort">
                  <Alias z:Id="1484">Внутренняя 29097</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1022</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1485" z:Size="1">
                    <FBDPortExtSettings z:Id="1486">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1487">_lbi_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1488" i:type="InternalFBDPort">
                  <Alias z:Id="1489">Внутренняя 29099</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1023</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1490" z:Size="1">
                    <FBDPortExtSettings z:Id="1491">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1492">_time_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1493" i:type="InternalFBDPort">
                  <Alias z:Id="1494">Внутренняя 35496</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>64</ArrayItemsCount>
                  <Id>1024</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1495" z:Size="64">
                    <FBDPortExtSettings z:Id="1496">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1497">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1498">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1499">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1500">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1501">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1502">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1503">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1504">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1505">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1506">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1507">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1508">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1509">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1510">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1511">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1512">
                      <Index>16</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1513">
                      <Index>17</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1514">
                      <Index>18</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1515">
                      <Index>19</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1516">
                      <Index>20</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1517">
                      <Index>21</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1518">
                      <Index>22</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1519">
                      <Index>23</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1520">
                      <Index>24</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1521">
                      <Index>25</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1522">
                      <Index>26</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1523">
                      <Index>27</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1524">
                      <Index>28</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1525">
                      <Index>29</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1526">
                      <Index>30</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1527">
                      <Index>31</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1528">
                      <Index>32</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1529">
                      <Index>33</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1530">
                      <Index>34</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1531">
                      <Index>35</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1532">
                      <Index>36</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1533">
                      <Index>37</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1534">
                      <Index>38</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1535">
                      <Index>39</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1536">
                      <Index>40</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1537">
                      <Index>41</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1538">
                      <Index>42</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1539">
                      <Index>43</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1540">
                      <Index>44</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1541">
                      <Index>45</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1542">
                      <Index>46</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1543">
                      <Index>47</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1544">
                      <Index>48</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1545">
                      <Index>49</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1546">
                      <Index>50</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1547">
                      <Index>51</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1548">
                      <Index>52</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1549">
                      <Index>53</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1550">
                      <Index>54</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1551">
                      <Index>55</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1552">
                      <Index>56</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1553">
                      <Index>57</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1554">
                      <Index>58</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1555">
                      <Index>59</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1556">
                      <Index>60</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1557">
                      <Index>61</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1558">
                      <Index>62</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1559">
                      <Index>63</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1560">_data_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1561" i:type="InternalFBDPort">
                  <Alias z:Id="1562">Внутренняя 35772</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1025</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1563" z:Size="1">
                    <FBDPortExtSettings z:Id="1564">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1565">_l_</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3690</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="1566">CMB READ BYTES</Name>
              <OutputPortsCollection z:Id="1567" z:Size="5">
                <FBDPort z:Id="1568" i:type="OutputFBDPort">
                  <Alias z:Id="1569">Done</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1034</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1570" z:Size="1">
                    <FBDPortExtSettings z:Id="1571">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1572" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1573">_d</VariableName>
                </FBDPort>
                <FBDPort z:Id="1574" i:type="OutputFBDPort">
                  <Alias z:Id="1575">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1035</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1576" z:Size="1">
                    <FBDPortExtSettings z:Id="1577">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1578" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1579">_e</VariableName>
                </FBDPort>
                <FBDPort z:Id="1580" i:type="OutputFBDPort">
                  <Alias z:Id="1581">NA</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1036</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1582" z:Size="1">
                    <FBDPortExtSettings z:Id="1583">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1584" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1585">_na</VariableName>
                </FBDPort>
                <FBDPort z:Id="1586" i:type="OutputFBDPort">
                  <Alias z:Id="1587">Length</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1037</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1588" z:Size="1">
                    <FBDPortExtSettings z:Id="1589">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1590" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1591">_l</VariableName>
                </FBDPort>
                <FBDPort z:Id="1592" i:type="OutputFBDPort">
                  <Alias z:Id="1593">Data</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>1038</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>true</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1594" z:Size="2">
                    <FBDPortExtSettings z:Id="1595">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1596">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1597" i:type="d2p1:ArrayOfanyType" z:Size="2">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1598">_data</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1599">YART</Prefix>
              <SecondName z:Id="1600">cmbhrread2_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>b34acda4-b96f-4458-920b-243423822d0b</SpecificationId>
              <Code z:Id="1601">// Константы


const TIMEOUT_MIN		= 100;


const RCNT_MAX			= 32;


const BL_MIN				= RCNT_MAX * 2 + 16;


const DEF_REPEAT			= 3;


const DEF_FN				= 3;





const MSG_READ			= 0;


const ST_NEXT_BLOCK		= 255;








new BA, BL, check, result, offset, crc;


new port, flags, baudrate;


YARTReadComSets(pp_, port, flags, baudrate);








// Первичная инициализация


if(!_init_){


	_blockId_ = getCountPortId(port);


	setCountPortId(port, _blockId_ + 1);


	togleUpdate(port);


	_msgId_ = 0;


	_init_ = true;


}





// Ссылки


BA = getPortBufferOffset(port);


BL = getPortBufferSize(port);





check = false;


if(BA &lt; 0) check = true;


if(BL &lt; BL_MIN) check = true;


if(fn_ &lt; 0) check = true; // fn == 0 &gt; DEF_FN


if(fn_ &gt; 4) check = true;


if(check) {_err_ = true; e_ = false;}


if(to_ &lt; TIMEOUT_MIN) to_ = TIMEOUT_MIN;


if(r_ &lt; 1) r_ = DEF_REPEAT;


if(rcnt_ &lt; 1) rcnt_ = 1;


if(RCNT_MAX &lt; rcnt_) rcnt_ = RCNT_MAX;


if(fn_ == 0) fn_ = DEF_FN;


if(e_) if(!_le_) {_msgId_ = 0; _stage_ = 0; _timer_ = 0;}


_le_ = e_;





// Отображение значений


_e = _err_;


_na = _na_;


_l = _l_;


for(new i = 0; i &lt; sizeof__data; i++){


	if(i == sizeof(_data_)) break;


	if(i == _l_) break;


	_data[i] = _data_[i];


}





// Пропуск не активного блока


if(!e_) _msgId_ = ST_NEXT_BLOCK;


if(getCurrentPortId(port) != _blockId_){


	if(!togleIsActive(port)){ NextPortId(port); togleUpdate(port); }


	return;


}else{


	togleUpdate(port);


	_timer_ += GetScanDt;





	// Остановка по таймауту


	if(_timer_ &gt; (to_ * r_ + GetScanDt * 10 * r_)) {_msgId_ = ST_NEXT_BLOCK; _na_ = true;}


}





new data[8];





if(_msgId_ == MSG_READ){


	offset = 0;


	data[offset++] = dadr_;


	data[offset++] = fn_;


	data[offset++] = (radr_ &gt;&gt; 8) &amp; 0xFF;


	data[offset++] = radr_ &amp; 0xFF;


	offset++;


	data[offset++] = rcnt_;


	crc = YARTCrc16_modbus_arr(data, offset);


	data[offset++] = crc &amp; 0xFF;


	data[offset++] = (crc &gt;&gt; 8) &amp; 0xFF;


	result = YARTSSARF(port, baudrate, flags, BA, BL, data, to_, _stage_, _msgLen_, _txloop_, _lbi_, _time_, offset);


	if(_lbi_ &gt; _msgLen_) if(get_byte(BA + offset) == dadr_) _na_ = false;


	if(result){


/*


		crc = YARTCrc16_modbus_lnk(BA + offset, _lbi_ - offset - 1);


		if(get_byte(BA + _lbi_ - 1) == (crc &amp; 0xFF))


		if(get_byte(BA + _lbi_) == ((crc &gt;&gt; 8) &amp; 0xFF))


*/


		if(get_byte(BA + offset + 1) &amp; 0x80 == 0){


			_d = true;


			


			for(new i = 0; i &lt; sizeof(_data_); i++) _data_[i] = 0;





			_l_ = get_byte(BA + offset + 2)





			for(new i = 0; i &lt; _l_; i++){


				if(i == sizeof(_data_)) break;


				if(i == _lbi_ - offset - 2) break;


				_data_[i] = get_byte(BA + offset + 2 + i + 1)


			}





			_err_ = false;


			_msgId_	= ST_NEXT_BLOCK;


		} else _err_ = true;


	}


}





	// Завершение работы блока


if(_msgId_ == ST_NEXT_BLOCK){


	NextPortId(port);


	_timer_ = 0;


	_msgId_ = 0;


	_stage_ = 0;


}





// Отображение значений


_e = _err_;


_na = _na_;


_l = _l_;


for(new i = 0; i &lt; sizeof__data; i++){


	if(i == sizeof(_data_)) break;


	if(i == _l_) break;


	_data[i] = _data_[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="1602" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1173</Id>
              <InputPortsCollection z:Id="1603" z:Size="1">
                <FBDPort z:Id="1604" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1174</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1605" z:Size="1">
                    <FBDPortExtSettings z:Id="1606">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1607">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1608" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Id="1609">Tag</Name>
              <OutputPortsCollection z:Id="1610" z:Size="1">
                <FBDPort z:Ref="1366" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1611">_</Prefix>
              <SecondName z:Ref="1609" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="67" i:nil="true" />
              <CustomTag z:Ref="84" i:nil="true" />
              <InputFBDPort z:Ref="1604" i:nil="true" />
              <OutputFBDPort z:Ref="1366" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1612" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1170</Id>
              <InputPortsCollection z:Id="1613" z:Size="1">
                <FBDPort z:Id="1614" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1171</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1615" z:Size="1">
                    <FBDPortExtSettings z:Id="1616">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1607" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1617" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Ref="1609" i:nil="true" />
              <OutputPortsCollection z:Id="1618" z:Size="1">
                <FBDPort z:Ref="1356" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1611" i:nil="true" />
              <SecondName z:Ref="1609" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="207" i:nil="true" />
              <InputFBDPort z:Ref="1614" i:nil="true" />
              <OutputFBDPort z:Ref="1356" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1619" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="1620">Чтение устройства сети MODBUS (до 32 регистров за раз)</Description>
              <HelpID>795</HelpID>
              <Id>1142</Id>
              <InputPortsCollection z:Id="1621" z:Size="8">
                <FBDPort z:Id="1622" i:type="InputFBDPort">
                  <Alias z:Id="1623">Enable</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1157</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1624" z:Size="1">
                    <FBDPortExtSettings z:Id="1625">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1626" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1627" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1628">e_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1350" i:nil="true" />
                <FBDPort z:Id="1629" i:type="InputFBDPort">
                  <Alias z:Id="1630">FuncNum</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1159</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1631" z:Size="1">
                    <FBDPortExtSettings z:Id="1632">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1633" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1634" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">4</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1635">fn_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1636" i:type="InputFBDPort">
                  <Alias z:Id="1637">DevAdr</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1160</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1638" z:Size="1">
                    <FBDPortExtSettings z:Id="1639">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1640" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1641" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1642">dadr_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1360" i:nil="true" />
                <FBDPort z:Id="1643" i:type="InputFBDPort">
                  <Alias z:Id="1644">RegCnt</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1162</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1645" z:Size="1">
                    <FBDPortExtSettings z:Id="1646">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1647" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1648" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1649">rcnt_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1650" i:type="InputFBDPort">
                  <Alias z:Id="1651">Timeout</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1163</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1652" z:Size="1">
                    <FBDPortExtSettings z:Id="1653">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="1654" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1655" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">500</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1656">to_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1657" i:type="InputFBDPort">
                  <Alias z:Id="1658">Repeat</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1164</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1659" z:Size="1">
                    <FBDPortExtSettings z:Id="1660">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1661" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1662" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1663">r_</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1664" z:Size="14">
                <FBDPort z:Id="1665" i:type="InternalFBDPort">
                  <Alias z:Id="1666">Внутренняя 10753</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1143</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1667" z:Size="1">
                    <FBDPortExtSettings z:Id="1668">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1669">_init_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1670" i:type="InternalFBDPort">
                  <Alias z:Id="1671">Внутренняя 10759</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1144</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1672" z:Size="1">
                    <FBDPortExtSettings z:Id="1673">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1674">_blockId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1675" i:type="InternalFBDPort">
                  <Alias z:Id="1676">Внутренняя 17965</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1145</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1677" z:Size="1">
                    <FBDPortExtSettings z:Id="1678">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1679">_le_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1680" i:type="InternalFBDPort">
                  <Alias z:Id="1681">Внутренняя 16763</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1146</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1682" z:Size="1">
                    <FBDPortExtSettings z:Id="1683">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1684">_err_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1685" i:type="InternalFBDPort">
                  <Alias z:Id="1686">Внутренняя 38937</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1147</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1687" z:Size="1">
                    <FBDPortExtSettings z:Id="1688">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1689">_na_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1690" i:type="InternalFBDPort">
                  <Alias z:Id="1691">Внутренняя 13906</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1148</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1692" z:Size="1">
                    <FBDPortExtSettings z:Id="1693">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1694">_timer_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1695" i:type="InternalFBDPort">
                  <Alias z:Id="1696">Внутренняя 28486</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1149</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1697" z:Size="1">
                    <FBDPortExtSettings z:Id="1698">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1699">_msgId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1700" i:type="InternalFBDPort">
                  <Alias z:Id="1701">Внутренняя 10760</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1150</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1702" z:Size="1">
                    <FBDPortExtSettings z:Id="1703">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1704">_stage_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1705" i:type="InternalFBDPort">
                  <Alias z:Id="1706">Внутренняя 16765</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1151</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1707" z:Size="1">
                    <FBDPortExtSettings z:Id="1708">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1709">_msgLen_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1710" i:type="InternalFBDPort">
                  <Alias z:Id="1711">Внутренняя 16767</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1152</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1712" z:Size="1">
                    <FBDPortExtSettings z:Id="1713">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1714">_txloop_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1715" i:type="InternalFBDPort">
                  <Alias z:Id="1716">Внутренняя 29097</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1153</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1717" z:Size="1">
                    <FBDPortExtSettings z:Id="1718">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1719">_lbi_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1720" i:type="InternalFBDPort">
                  <Alias z:Id="1721">Внутренняя 29099</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1154</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1722" z:Size="1">
                    <FBDPortExtSettings z:Id="1723">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1724">_time_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1725" i:type="InternalFBDPort">
                  <Alias z:Id="1726">Внутренняя 35496</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>64</ArrayItemsCount>
                  <Id>1155</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1727" z:Size="64">
                    <FBDPortExtSettings z:Id="1728">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1729">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1730">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1731">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1732">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1733">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1734">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1735">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1736">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1737">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1738">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1739">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1740">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1741">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1742">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1743">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1744">
                      <Index>16</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1745">
                      <Index>17</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1746">
                      <Index>18</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1747">
                      <Index>19</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1748">
                      <Index>20</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1749">
                      <Index>21</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1750">
                      <Index>22</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1751">
                      <Index>23</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1752">
                      <Index>24</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1753">
                      <Index>25</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1754">
                      <Index>26</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1755">
                      <Index>27</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1756">
                      <Index>28</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1757">
                      <Index>29</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1758">
                      <Index>30</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1759">
                      <Index>31</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1760">
                      <Index>32</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1761">
                      <Index>33</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1762">
                      <Index>34</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1763">
                      <Index>35</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1764">
                      <Index>36</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1765">
                      <Index>37</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1766">
                      <Index>38</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1767">
                      <Index>39</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1768">
                      <Index>40</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1769">
                      <Index>41</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1770">
                      <Index>42</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1771">
                      <Index>43</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1772">
                      <Index>44</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1773">
                      <Index>45</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1774">
                      <Index>46</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1775">
                      <Index>47</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1776">
                      <Index>48</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1777">
                      <Index>49</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1778">
                      <Index>50</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1779">
                      <Index>51</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1780">
                      <Index>52</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1781">
                      <Index>53</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1782">
                      <Index>54</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1783">
                      <Index>55</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1784">
                      <Index>56</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1785">
                      <Index>57</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1786">
                      <Index>58</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1787">
                      <Index>59</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1788">
                      <Index>60</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1789">
                      <Index>61</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1790">
                      <Index>62</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1791">
                      <Index>63</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1792">_data_</VariableName>
                </FBDPort>
                <FBDPort z:Id="1793" i:type="InternalFBDPort">
                  <Alias z:Id="1794">Внутренняя 35772</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1156</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="1795" z:Size="1">
                    <FBDPortExtSettings z:Id="1796">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1797">_l_</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4040</d8p1:_x>
                <d8p1:_y>3800</d8p1:_y>
              </Location>
              <Name z:Id="1798">CMB READ</Name>
              <OutputPortsCollection z:Id="1799" z:Size="5">
                <FBDPort z:Id="1800" i:type="OutputFBDPort">
                  <Alias z:Id="1801">Done</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1165</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1802" z:Size="1">
                    <FBDPortExtSettings z:Id="1803">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1804" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1805">_d</VariableName>
                </FBDPort>
                <FBDPort z:Id="1806" i:type="OutputFBDPort">
                  <Alias z:Id="1807">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1166</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1808" z:Size="1">
                    <FBDPortExtSettings z:Id="1809">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1810" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1811">_e</VariableName>
                </FBDPort>
                <FBDPort z:Id="1812" i:type="OutputFBDPort">
                  <Alias z:Id="1813">NA</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1167</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1814" z:Size="1">
                    <FBDPortExtSettings z:Id="1815">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1816" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1817">_na</VariableName>
                </FBDPort>
                <FBDPort z:Id="1818" i:type="OutputFBDPort">
                  <Alias z:Id="1819">Length</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1168</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1820" z:Size="1">
                    <FBDPortExtSettings z:Id="1821">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1822" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1823">_l</VariableName>
                </FBDPort>
                <FBDPort z:Id="1824" i:type="OutputFBDPort">
                  <Alias z:Id="1825">Data</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>1169</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>true</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1826" z:Size="2">
                    <FBDPortExtSettings z:Id="1827">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1828">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1829" i:type="d2p1:ArrayOfanyType" z:Size="2">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1830">_data</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1831">YART</Prefix>
              <SecondName z:Id="1832">cmbhrread2shorts_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1fc064da-1bf0-4695-81d8-a8177ec68686</SpecificationId>
              <Code z:Id="1833">// Константы


const TIMEOUT_MIN			= 100;


const RCNT_MAX				= 32;


const BL_MIN				= RCNT_MAX * 2 + 16;


const DEF_REPEAT			= 3;


const DEF_FN				= 3;





const MSG_READ				= 0;


const ST_NEXT_BLOCK			= 255;








new BA, BL, check, result, offset, crc;


new port, flags, baudrate;


YARTReadComSets(pp_, port, flags, baudrate);








// Первичная инициализация


if(!_init_){


	_blockId_ = getCountPortId(port);


	setCountPortId(port, _blockId_ + 1);


	togleUpdate(port);


	_msgId_ = 0;


	_init_ = true;


}





// Ссылки


BA = getPortBufferOffset(port);


BL = getPortBufferSize(port);





check = false;


if(BA &lt; 0) check = true;


if(BL &lt; BL_MIN) check = true;


if(fn_ &lt; 0) check = true; // fn == 0 &gt; DEF_FN


if(fn_ &gt; 4) check = true;


if(check) {_err_ = true; e_ = false;}


if(to_ &lt; TIMEOUT_MIN) to_ = TIMEOUT_MIN;


if(r_ &lt; 1) r_ = DEF_REPEAT;


if(rcnt_ &lt; 1) rcnt_ = 1;


if(RCNT_MAX &lt; rcnt_) rcnt_ = RCNT_MAX;


if(fn_ == 0) fn_ = DEF_FN;


if(e_) if(!_le_) {_msgId_ = 0; _stage_ = 0; _timer_ = 0;}


_le_ = e_;





// Отображение значений


_e = _err_;


_na = _na_;


_l = _l_;


for(new i = 0; i &lt; sizeof__data; i++){


	if(i == sizeof(_data_) / 2) break;


	if(i == _l_) break;


	_data[i] = (_data_[i * 2] &lt;&lt; 8) | _data_[i * 2 + 1];


}





// Пропуск не активного блока


if(!e_) _msgId_ = ST_NEXT_BLOCK;


if(getCurrentPortId(port) != _blockId_){


	if(!togleIsActive(port)){ NextPortId(port); togleUpdate(port); }


	return;


}else{


	togleUpdate(port);


	_timer_ += GetScanDt;





	// Остановка по таймауту


	if(_timer_ &gt; (to_ * r_ + GetScanDt * 10 * r_)) {_msgId_ = ST_NEXT_BLOCK; _na_ = true;}


}





new data[8];





if(_msgId_ == MSG_READ){


	offset = 0;


	data[offset++] = dadr_;


	data[offset++] = fn_;


	data[offset++] = (radr_ &gt;&gt; 8) &amp; 0xFF;


	data[offset++] = radr_ &amp; 0xFF;


	offset++;


	data[offset++] = rcnt_;


	crc = YARTCrc16_modbus_arr(data, offset);


	data[offset++] = crc &amp; 0xFF;


	data[offset++] = (crc &gt;&gt; 8) &amp; 0xFF;


	result = YARTSSARF(port, baudrate, flags, BA, BL, data, to_, _stage_, _msgLen_, _txloop_, _lbi_, _time_, offset);


	if(_lbi_ &gt; _msgLen_) if(get_byte(BA + offset) == dadr_) _na_ = false;


	if(result){


/*


		crc = YARTCrc16_modbus_lnk(BA + offset, _lbi_ - offset - 1);


		if(get_byte(BA + _lbi_ - 1) == (crc &amp; 0xFF))


		if(get_byte(BA + _lbi_) == ((crc &gt;&gt; 8) &amp; 0xFF))


*/


		if(get_byte(BA + offset + 1) &amp; 0x80 == 0){





			_l_ = get_byte(BA + offset + 2);


			if(_l_ % 2 == 0){


				_d = true;


				


				for(new i = 0; i &lt; sizeof(_data_); i++) _data_[i] = 0;





				for(new i = 0; i &lt; _l_; i++){


					if(i == sizeof(_data_)) break;


					if(i == _lbi_ - offset - 2) break;


					_data_[i] = get_byte(BA + offset + 2 + i + 1)


				}


				_err_ = false;


				_l_ = _l_ / 2;


			} else _err_ = true;


			_msgId_	= ST_NEXT_BLOCK;


		} else _err_ = true;


	}


}





	// Завершение работы блока


if(_msgId_ == ST_NEXT_BLOCK){


	NextPortId(port);


	_timer_ = 0;


	_msgId_ = 0;


	_stage_ = 0;


}








// Отображение значений


_e = _err_;


_na = _na_;


_l = _l_;


for(new i = 0; i &lt; sizeof__data; i++){


	if(i == sizeof(_data_) / 2) break;


	if(i == _l_) break;


	_data[i] = (_data_[i * 2] &lt;&lt; 8) | _data_[i * 2 + 1];


}</Code>
            </FBDItem>
            <FBDItem z:Id="1834" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1092</Id>
              <InputPortsCollection z:Id="1835" z:Size="1">
                <FBDPort z:Id="1836" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1093</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1837" z:Size="1">
                    <FBDPortExtSettings z:Id="1838">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1607" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1839" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3510</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Ref="1609" i:nil="true" />
              <OutputPortsCollection z:Id="1840" z:Size="1">
                <FBDPort z:Ref="1283" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1611" i:nil="true" />
              <SecondName z:Ref="1609" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="67" i:nil="true" />
              <CustomTag z:Ref="100" i:nil="true" />
              <InputFBDPort z:Ref="1836" i:nil="true" />
              <OutputFBDPort z:Ref="1283" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1841" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1078</Id>
              <InputPortsCollection z:Id="1842" z:Size="1">
                <FBDPort z:Id="1843" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1079</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1844" z:Size="1">
                    <FBDPortExtSettings z:Id="1845">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1846">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1847" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="1848">Tag</Name>
              <OutputPortsCollection z:Id="1849" z:Size="1">
                <FBDPort z:Ref="1260" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1850">_</Prefix>
              <SecondName z:Ref="1848" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="207" i:nil="true" />
              <InputFBDPort z:Ref="1843" i:nil="true" />
              <OutputFBDPort z:Ref="1260" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1851" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="1852">Read input registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>271</HelpID>
              <Id>1066</Id>
              <InputPortsCollection z:Id="1853" z:Size="7">
                <FBDPort z:Id="1854" i:type="InputFBDPort">
                  <Alias z:Id="1855">Вход 278</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1856" z:Size="1">
                    <FBDPortExtSettings z:Id="1857">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1858" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1859" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1860">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1254" i:nil="true" />
                <FBDPort z:Id="1861" i:type="InputFBDPort">
                  <Alias z:Id="1862">Вход 280</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1863" z:Size="1">
                    <FBDPortExtSettings z:Id="1864">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="1865" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1866" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1867">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="1868" i:type="InputFBDPort">
                  <Alias z:Id="1869">Вход 281</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1070</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1870" z:Size="1">
                    <FBDPortExtSettings z:Id="1871">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1872" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1873" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1874">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1277" i:nil="true" />
                <FBDPort z:Id="1875" i:type="InputFBDPort">
                  <Alias z:Id="1876">Вход 283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1072</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1877" z:Size="1">
                    <FBDPortExtSettings z:Id="1878">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1879" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1880" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1881">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="1882" i:type="InputFBDPort">
                  <Alias z:Id="1883">Вход 284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1073</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1884" z:Size="1">
                    <FBDPortExtSettings z:Id="1885">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1886" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1887" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1888">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1889" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3740</d8p1:_x>
                <d8p1:_y>4110</d8p1:_y>
              </Location>
              <Name z:Id="1890">MBRTUMIRRead</Name>
              <OutputPortsCollection z:Id="1891" z:Size="1">
                <FBDPort z:Ref="1271" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1599" i:nil="true" />
              <SecondName z:Ref="1890" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>19be49cb-7d11-4952-942b-1f42f10cdde5</SpecificationId>
              <Code z:Id="1892">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 4 &lt;&lt; 24; //функция MODBUS (read input registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="1893" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="1894">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1084</Id>
              <InputPortsCollection z:Id="1895" z:Size="1">
                <FBDPort z:Ref="1265" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1896" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3920</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="1897">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="1898" z:Size="6">
                <FBDPort z:Id="1899" i:type="OutputFBDPort">
                  <Alias z:Id="1900">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1901" z:Size="1">
                    <FBDPortExtSettings z:Id="1902">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1903" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1904">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="1905" i:type="OutputFBDPort">
                  <Alias z:Id="1906">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1087</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1907" z:Size="1">
                    <FBDPortExtSettings z:Id="1908">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1909" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1910">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="1911" i:type="OutputFBDPort">
                  <Alias z:Id="1912">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1913" z:Size="1">
                    <FBDPortExtSettings z:Id="1914">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1915" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1916">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="1917" i:type="OutputFBDPort">
                  <Alias z:Id="1918">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1089</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1919" z:Size="1">
                    <FBDPortExtSettings z:Id="1920">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1921" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1922">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="1923" i:type="OutputFBDPort">
                  <Alias z:Id="1924">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1090</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1925" z:Size="1">
                    <FBDPortExtSettings z:Id="1926">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1927" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1928">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="1929" i:type="OutputFBDPort">
                  <Alias z:Id="1930">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="1931" z:Size="1">
                    <FBDPortExtSettings z:Id="1932">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1933" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="1934">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1599" i:nil="true" />
              <SecondName z:Ref="1897" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Id="1935">if (Status == -1)


{


	Failed = 1;


	return;


}


Connected = Status &amp; 0x0080 != 0;


Free = Status &amp; 0x007f == 0;


Sending = Status &amp; 0x007f == 1;


WaitRespond = Status &amp; 0x007f == 2;


Failed = Status &amp; 0x007f == 3;


Disconnected = Status &amp; 0x007f == 4;</Code>
            </FBDItem>
            <FBDItem z:Id="1936" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1134</Id>
              <InputPortsCollection z:Id="1937" z:Size="1">
                <FBDPort z:Id="1938" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1135</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1939" z:Size="10">
                    <FBDPortExtSettings z:Id="1940">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1941">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1942">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1943">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1944">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1945">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1946">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1947">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1948">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="1949">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="1950">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1951" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3510</d8p1:_x>
                <d8p1:_y>4440</d8p1:_y>
              </Location>
              <Name z:Id="1952">Tag</Name>
              <OutputPortsCollection z:Id="1953" z:Size="1">
                <FBDPort z:Ref="1337" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="1954">_</Prefix>
              <SecondName z:Ref="1952" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="67" i:nil="true" />
              <CustomTag z:Ref="129" i:nil="true" />
              <InputFBDPort z:Ref="1938" i:nil="true" />
              <OutputFBDPort z:Ref="1337" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1955" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1111</Id>
              <InputPortsCollection z:Id="1956" z:Size="1">
                <FBDPort z:Id="1957" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1958" z:Size="1">
                    <FBDPortExtSettings z:Id="1959">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1950" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1960" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Ref="1952" i:nil="true" />
              <OutputPortsCollection z:Id="1961" z:Size="1">
                <FBDPort z:Ref="1327" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1954" i:nil="true" />
              <SecondName z:Ref="1952" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="67" i:nil="true" />
              <CustomTag z:Ref="88" i:nil="true" />
              <InputFBDPort z:Ref="1957" i:nil="true" />
              <OutputFBDPort z:Ref="1327" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1962" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1108</Id>
              <InputPortsCollection z:Id="1963" z:Size="1">
                <FBDPort z:Id="1964" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1109</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1965" z:Size="1">
                    <FBDPortExtSettings z:Id="1966">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1950" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1967" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Ref="1952" i:nil="true" />
              <OutputPortsCollection z:Id="1968" z:Size="1">
                <FBDPort z:Ref="1317" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1954" i:nil="true" />
              <SecondName z:Ref="1952" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="67" i:nil="true" />
              <CustomTag z:Ref="211" i:nil="true" />
              <InputFBDPort z:Ref="1964" i:nil="true" />
              <OutputFBDPort z:Ref="1317" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1969" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1105</Id>
              <InputPortsCollection z:Id="1970" z:Size="1">
                <FBDPort z:Id="1971" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1972" z:Size="1">
                    <FBDPortExtSettings z:Id="1973">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="1950" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="1974" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="1952" i:nil="true" />
              <OutputPortsCollection z:Id="1975" z:Size="1">
                <FBDPort z:Ref="1306" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1954" i:nil="true" />
              <SecondName z:Ref="1952" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="207" i:nil="true" />
              <InputFBDPort z:Ref="1971" i:nil="true" />
              <OutputFBDPort z:Ref="1306" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="1976" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="1977">Read holding registers

Внимание: Нельзя использовать более 20 блоков MODBUS RTU MASTER</Description>
              <HelpID>272</HelpID>
              <Id>1117</Id>
              <InputPortsCollection z:Id="1978" z:Size="7">
                <FBDPort z:Id="1979" i:type="InputFBDPort">
                  <Alias z:Id="1980">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1118</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1981" z:Size="1">
                    <FBDPortExtSettings z:Id="1982">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="1983" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1984" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1985">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="1300" i:nil="true" />
                <FBDPort z:Ref="1311" i:nil="true" />
                <FBDPort z:Ref="1321" i:nil="true" />
                <FBDPort z:Ref="1331" i:nil="true" />
                <FBDPort z:Id="1986" i:type="InputFBDPort">
                  <Alias z:Id="1987">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1123</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1988" z:Size="1">
                    <FBDPortExtSettings z:Id="1989">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1990" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1991" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1300</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1992">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="1993" i:type="InputFBDPort">
                  <Alias z:Id="1994">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1124</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="1995" z:Size="1">
                    <FBDPortExtSettings z:Id="1996">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="1997" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="1998" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="1999">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2000" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3820</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="2001">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="2002" z:Size="1">
                <FBDPort z:Ref="1294" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2003">YART</Prefix>
              <SecondName z:Ref="2001" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Id="2004">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 3 &lt;&lt; 24; //функция MODBUS (read holding registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="2005" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2006">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1126</Id>
              <InputPortsCollection z:Id="2007" z:Size="1">
                <FBDPort z:Ref="1288" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2008" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4000</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="2009">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="2010" z:Size="6">
                <FBDPort z:Id="2011" i:type="OutputFBDPort">
                  <Alias z:Id="2012">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1128</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2013" z:Size="1">
                    <FBDPortExtSettings z:Id="2014">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2015" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2016">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="2017" i:type="OutputFBDPort">
                  <Alias z:Id="2018">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2019" z:Size="1">
                    <FBDPortExtSettings z:Id="2020">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2021" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2022">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="2023" i:type="OutputFBDPort">
                  <Alias z:Id="2024">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1130</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2025" z:Size="1">
                    <FBDPortExtSettings z:Id="2026">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2027" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2028">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="2029" i:type="OutputFBDPort">
                  <Alias z:Id="2030">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1131</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2031" z:Size="1">
                    <FBDPortExtSettings z:Id="2032">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2033" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2034">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="2035" i:type="OutputFBDPort">
                  <Alias z:Id="2036">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2037" z:Size="1">
                    <FBDPortExtSettings z:Id="2038">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2039" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2040">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="2041" i:type="OutputFBDPort">
                  <Alias z:Id="2042">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2043" z:Size="1">
                    <FBDPortExtSettings z:Id="2044">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2045" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2046">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2047">YART</Prefix>
              <SecondName z:Ref="2009" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="1935" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2048" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1137</Id>
              <InputPortsCollection z:Id="2049" z:Size="0" />
              <InternalPortsCollection z:Id="2050" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="2051">comment</Name>
              <OutputPortsCollection z:Id="2052" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2053">_</Prefix>
              <SecondName z:Id="2054">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2055">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</Comment>
              <Height>256.99871895158185</Height>
              <Width>677.28701152943631</Width>
            </FBDItem>
            <FBDItem z:Id="2056" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1140</Id>
              <InputPortsCollection z:Id="2057" z:Size="0" />
              <InternalPortsCollection z:Id="2058" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>4019.5070208571174</d8p1:_y>
              </Location>
              <Name z:Id="2059">comment</Name>
              <OutputPortsCollection z:Id="2060" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2061">_</Prefix>
              <SecondName z:Id="2062">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2063">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</Comment>
              <Height>244.23943374694227</Height>
              <Width>677.28701152943631</Width>
            </FBDItem>
            <FBDItem z:Id="2064" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1141</Id>
              <InputPortsCollection z:Id="2065" z:Size="0" />
              <InternalPortsCollection z:Id="2066" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="2067">comment</Name>
              <OutputPortsCollection z:Id="2068" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2069">_</Prefix>
              <SecondName z:Id="2070">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2071">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</Comment>
              <Height>211.43217139633589</Height>
              <Width>762.8518984708835</Width>
            </FBDItem>
            <FBDItem z:Id="2072" i:type="DisplayVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1177</Id>
              <InputPortsCollection z:Id="2073" z:Size="0" />
              <InternalPortsCollection z:Id="2074" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2075" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="1611" i:nil="true" />
              <SecondName z:Id="2076">newfun_266497545</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>17fe287e-341c-4631-bf6b-2c3c220f2e46</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="2077">
                <ArrayIndex>0</ArrayIndex>
                <TagId>123</TagId>
              </Tag>
              <FontSize>14</FontSize>
              <Format z:Id="2078">0.####</Format>
            </FBDItem>
          </FBDItems>
          <Name z:Id="2079">Read IR HR</Name>
          <Parent z:Ref="1228" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>2</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="2080">Read_MODBUS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="2081" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2082" z:Size="1">
        <d2p1:anyType z:Id="2083" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2084" z:Size="45">
            <FBDConnector z:Id="2085">
              <EndFBDPort z:Id="2086" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1246</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2087" z:Size="1">
                  <FBDPortExtSettings z:Id="2088">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2089" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2090" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">43.5089149</d2p1:anyType>
                </Value>
                <VariableName z:Id="2091">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2092" i:type="OutputFBDPort">
                <Alias z:Id="2093">T (°C)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1224</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2094" z:Size="1">
                  <FBDPortExtSettings z:Id="2095">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2089" i:nil="true" />
                <VariableName z:Id="2096">t</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2097">
              <EndFBDPort z:Id="2098" i:type="InputFBDPort">
                <Alias z:Id="2099">DO.02: DOUT_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1447</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2100" z:Size="2">
                  <FBDPortExtSettings z:Id="2101">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2102">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2103" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="2104" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                  <d2p1:anyType z:Id="2105" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">4000</d2p1:anyType>
                </Value>
                <VariableName z:Ref="49" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2106" i:type="OutputFBDPort">
                <Alias z:Id="2107">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1434</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2108" z:Size="2">
                  <FBDPortExtSettings z:Id="2109">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2110">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2103" i:nil="true" />
                <VariableName z:Id="2111">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2112">
              <EndFBDPort z:Id="2113" i:type="InputFBDPort">
                <Alias z:Id="2114">X[t)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1250</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2115" z:Size="1">
                  <FBDPortExtSettings z:Id="2116">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2117" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2118" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">43.4760056</d2p1:anyType>
                </Value>
                <VariableName z:Id="2119">Feedback</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2120" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1247</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2121" z:Size="1">
                  <FBDPortExtSettings z:Id="2122">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2117" i:nil="true" />
                <VariableName z:Id="2123">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2124">
              <EndFBDPort z:Id="2125" i:type="InputFBDPort">
                <Alias z:Id="2126">Вход 1619</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1251</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2127" z:Size="1">
                  <FBDPortExtSettings z:Id="2128">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2129" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2130" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.25</d2p1:anyType>
                </Value>
                <VariableName z:Id="2131">KP</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2132" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1279</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2133" z:Size="1">
                  <FBDPortExtSettings z:Id="2134">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2129" i:nil="true" />
                <VariableName z:Id="2135">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2136">
              <EndFBDPort z:Id="2137" i:type="InputFBDPort">
                <Alias z:Id="2138">Вход 1623</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1253</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2139" z:Size="1">
                  <FBDPortExtSettings z:Id="2140">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2141" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2142" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="2143">KD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2144" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1289</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2145" z:Size="1">
                  <FBDPortExtSettings z:Id="2146">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2141" i:nil="true" />
                <VariableName z:Id="2147">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2148">
              <EndFBDPort z:Id="2149" i:type="InputFBDPort">
                <Alias z:Id="2150">Вход 1621</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1252</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2151" z:Size="1">
                  <FBDPortExtSettings z:Id="2152">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2153" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2154" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.01</d2p1:anyType>
                </Value>
                <VariableName z:Id="2155">KI</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2156" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1286</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2157" z:Size="1">
                  <FBDPortExtSettings z:Id="2158">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2153" i:nil="true" />
                <VariableName z:Ref="2147" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2159">
              <EndFBDPort z:Id="2160" i:type="InputFBDPort">
                <Alias z:Id="2161">Вход 1629</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1262</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2162" z:Size="1">
                  <FBDPortExtSettings z:Id="2163">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2164" i:type="d2p1:ArrayOfanyType" z:Size="17">
                  <d2p1:anyType z:Id="2165" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">42</d2p1:anyType>
                  <d2p1:anyType z:Id="2166" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">43.4877434</d2p1:anyType>
                  <d2p1:anyType z:Id="2167" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="2168" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2169" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                  <d2p1:anyType z:Id="2170" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.25</d2p1:anyType>
                  <d2p1:anyType z:Id="2171" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.01</d2p1:anyType>
                  <d2p1:anyType z:Id="2172" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2173" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">7.4211483</d2p1:anyType>
                  <d2p1:anyType z:Id="2174" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">-1.501976</d2p1:anyType>
                  <d2p1:anyType z:Id="2175" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">7.7966423</d2p1:anyType>
                  <d2p1:anyType z:Id="2176" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2177" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2178" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2179" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2180" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2181" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="2182">BUFFER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2183" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>17</ArrayItemsCount>
                <Id>1301</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2184" z:Size="17">
                  <FBDPortExtSettings z:Id="2185">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2186">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2187">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2188">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2189">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2190">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2191">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2192">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2193">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2194">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2195">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2196">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2197">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2198">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2199">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2200">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2201">
                    <Index>16</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2164" i:nil="true" />
                <VariableName z:Id="2202">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2203">
              <EndFBDPort z:Id="2204" i:type="InputFBDPort">
                <Alias z:Id="2205">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1261</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2206" z:Size="1">
                  <FBDPortExtSettings z:Id="2207">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2208" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2209" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">10</d2p1:anyType>
                </Value>
                <VariableName z:Id="2210">TestCMD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2211" i:type="OutputFBDPort">
                <Alias z:Id="2212">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1297</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2213" z:Size="1">
                  <FBDPortExtSettings z:Id="2214">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2208" i:nil="true" />
                <VariableName z:Id="2215">Testconfig</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2216">
              <EndFBDPort z:Id="2217" i:type="InputFBDPort">
                <Alias z:Id="2218">Test RUN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1259</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2219" z:Size="1">
                  <FBDPortExtSettings z:Id="2220">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2221" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2222" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="2223">Test</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2224" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1305</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2225" z:Size="1">
                  <FBDPortExtSettings z:Id="2226">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2221" i:nil="true" />
                <VariableName z:Id="2227">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2228">
              <EndFBDPort z:Id="2229" i:type="InputFBDPort">
                <Alias z:Id="2230">MAX</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1254</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2231" z:Size="1">
                  <FBDPortExtSettings z:Id="2232">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2233" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2234" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="2235">PID_Max</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2236" i:type="OutputFBDPort">
                <Alias z:Id="2237"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1506</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2238" z:Size="1">
                  <FBDPortExtSettings z:Id="2239">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2240" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2241" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="2242">out_1506</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2243">
              <EndFBDPort z:Id="2244" i:type="InputFBDPort">
                <Alias z:Id="2245">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1484</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2246" z:Size="1">
                  <FBDPortExtSettings z:Id="2247">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2248" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2249" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2250">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2251" i:type="OutputFBDPort">
                <Alias z:Ref="2237" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1522</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2252" z:Size="1">
                  <FBDPortExtSettings z:Id="2253">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2254" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2255" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2256">out_1522</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2257">
              <EndFBDPort z:Id="2258" i:type="InputFBDPort">
                <Alias z:Id="2259">K IN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1485</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2260" z:Size="1">
                  <FBDPortExtSettings z:Id="2261">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2262" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2263" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">80</d2p1:anyType>
                </Value>
                <VariableName z:Id="2264">KIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2265" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1530</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2266" z:Size="1">
                  <FBDPortExtSettings z:Id="2267">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2262" i:nil="true" />
                <VariableName z:Id="2268">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2269">
              <EndFBDPort z:Id="2270" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1532</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2271" z:Size="1">
                  <FBDPortExtSettings z:Id="2272">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2273">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2251" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2274">
              <EndFBDPort z:Id="2275" i:type="InputFBDPort">
                <Alias z:Id="2276">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1528</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2277" z:Size="1">
                  <FBDPortExtSettings z:Id="2278">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2279" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2280" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2281">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2282" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1533</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2283" z:Size="1">
                  <FBDPortExtSettings z:Id="2284">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2279" i:nil="true" />
                <VariableName z:Id="2285">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2286">
              <EndFBDPort z:Id="2287" i:type="InputFBDPort">
                <Alias z:Id="2288">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1529</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2289" z:Size="1">
                  <FBDPortExtSettings z:Id="2290">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2291">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2236" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2292">
              <EndFBDPort z:Id="2293" i:type="InputFBDPort">
                <Alias z:Id="2294">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1430</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2295" z:Size="1">
                  <FBDPortExtSettings z:Id="2296">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2297" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2298" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2299">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2251" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2300">
              <EndFBDPort z:Id="2301" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1538</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2302" z:Size="1">
                  <FBDPortExtSettings z:Id="2303">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2304">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2251" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2305">
              <EndFBDPort z:Id="2306" i:type="InputFBDPort">
                <Alias z:Id="2307">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1541</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2308" z:Size="1">
                  <FBDPortExtSettings z:Id="2309">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2310" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2311" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2312">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2313" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1539</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2314" z:Size="1">
                  <FBDPortExtSettings z:Id="2315">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2310" i:nil="true" />
                <VariableName z:Id="2316">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2317">
              <EndFBDPort z:Id="2318" i:type="InputFBDPort">
                <Alias z:Id="2319">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1429</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2320" z:Size="1">
                  <FBDPortExtSettings z:Id="2321">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2322" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2323" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">4000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2324">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2325" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1543</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2326" z:Size="1">
                  <FBDPortExtSettings z:Id="2327">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2322" i:nil="true" />
                <VariableName z:Id="2328">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2329">
              <EndFBDPort z:Id="2330" i:type="InputFBDPort">
                <Alias z:Id="2331">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1221</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2332" z:Size="1">
                  <FBDPortExtSettings z:Id="2333">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2334" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2335" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1169.93</d2p1:anyType>
                </Value>
                <VariableName z:Id="2336">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2337" i:type="OutputFBDPort">
                <Alias z:Id="2338">AI.01: AIN_1_WaterT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1423</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2339" z:Size="1">
                  <FBDPortExtSettings z:Id="2340">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2334" i:nil="true" />
                <VariableName z:Ref="7" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2341">
              <EndFBDPort z:Id="2342" i:type="InputFBDPort">
                <Alias z:Id="2343">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1594</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2344" z:Size="1">
                  <FBDPortExtSettings z:Id="2345">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2346" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2347" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">7.4211483</d2p1:anyType>
                </Value>
                <VariableName z:Id="2348">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2349" i:type="OutputFBDPort">
                <Alias z:Id="2350">Выход 1257</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1268</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2351" z:Size="1">
                  <FBDPortExtSettings z:Id="2352">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2346" i:nil="true" />
                <VariableName z:Id="2353">Y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2354">
              <EndFBDPort z:Id="2355" i:type="InputFBDPort">
                <Alias z:Id="2356">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>1595</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2357" z:Size="4">
                  <FBDPortExtSettings z:Id="2358">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2359">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2360">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2361">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2362" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType z:Id="2363" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="2364" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">33</d2p1:anyType>
                  <d2p1:anyType z:Id="2365" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">66</d2p1:anyType>
                  <d2p1:anyType z:Id="2366" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="2367">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2368" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>1605</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2369" z:Size="4">
                  <FBDPortExtSettings z:Id="2370">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2371">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2372">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2373">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2362" i:nil="true" />
                <VariableName z:Id="2374">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2375">
              <EndFBDPort z:Id="2376" i:type="InputFBDPort">
                <Alias z:Id="2377">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>1596</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2378" z:Size="4">
                  <FBDPortExtSettings z:Id="2379">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2380">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2381">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2382">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2383" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType z:Id="2384" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="2385" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">66</d2p1:anyType>
                  <d2p1:anyType z:Id="2386" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">33</d2p1:anyType>
                  <d2p1:anyType z:Id="2387" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="2388">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2389" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>1608</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2390" z:Size="4">
                  <FBDPortExtSettings z:Id="2391">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2392">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2393">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2394">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2383" i:nil="true" />
                <VariableName z:Ref="2374" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2395">
              <EndFBDPort z:Id="2396" i:type="InputFBDPort">
                <Alias z:Id="2397">DO.01: DOUT_1_WaterPWM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1453</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2398" z:Size="2">
                  <FBDPortExtSettings z:Id="2399">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2400">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2401" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="2402" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                  <d2p1:anyType z:Id="2403" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">7388</d2p1:anyType>
                </Value>
                <VariableName z:Ref="47" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2404" i:type="OutputFBDPort">
                <Alias z:Id="2405">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1488</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2406" z:Size="2">
                  <FBDPortExtSettings z:Id="2407">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2408">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2401" i:nil="true" />
                <VariableName z:Id="2409">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2410">
              <EndFBDPort z:Id="2411" i:type="InputFBDPort">
                <Alias z:Id="2412">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1669</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2413" z:Size="1">
                  <FBDPortExtSettings z:Id="2414">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2415" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2416" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">43.42777</d2p1:anyType>
                </Value>
                <VariableName z:Id="2417">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2418" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1667</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2419" z:Size="1">
                  <FBDPortExtSettings z:Id="2420">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2415" i:nil="true" />
                <VariableName z:Ref="2374" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2421">
              <EndFBDPort z:Id="2422" i:type="InputFBDPort">
                <Alias z:Id="2423">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1670</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2424" z:Size="1">
                  <FBDPortExtSettings z:Id="2425">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2426" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2427" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">45</d2p1:anyType>
                </Value>
                <VariableName z:Id="2428">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2429" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1638</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2430" z:Size="1">
                  <FBDPortExtSettings z:Id="2431">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2426" i:nil="true" />
                <VariableName z:Id="2432">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2433">
              <EndFBDPort z:Id="2434" i:type="InputFBDPort">
                <Alias z:Id="2435">PWM 100%</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1487</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2436" z:Size="1">
                  <FBDPortExtSettings z:Id="2437">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2438" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2439" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="2440">ONCOM</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2441" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1671</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2442" z:Size="1">
                  <FBDPortExtSettings z:Id="2443">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2438" i:nil="true" />
                <VariableName z:Id="2444">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2445">
              <EndFBDPort z:Id="2446" i:type="InputFBDPort">
                <Alias z:Id="2447">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1677</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2448" z:Size="1">
                  <FBDPortExtSettings z:Id="2449">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2415" i:nil="true" />
                <VariableName z:Id="2450">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2418" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2451">
              <EndFBDPort z:Id="2452" i:type="InputFBDPort">
                <Alias z:Id="2453">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1678</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2454" z:Size="1">
                  <FBDPortExtSettings z:Id="2455">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2456" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2457" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">36</d2p1:anyType>
                </Value>
                <VariableName z:Id="2458">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2459" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1642</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2460" z:Size="1">
                  <FBDPortExtSettings z:Id="2461">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2456" i:nil="true" />
                <VariableName z:Id="2462">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2463">
              <EndFBDPort z:Id="2464" i:type="InputFBDPort">
                <Alias z:Id="2465">Вход 1832</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1486</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2466" z:Size="1">
                  <FBDPortExtSettings z:Id="2467">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2468" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2469" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="2470">STOP</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2471" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1679</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2472" z:Size="1">
                  <FBDPortExtSettings z:Id="2473">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2468" i:nil="true" />
                <VariableName z:Id="2474">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2475">
              <EndFBDPort z:Id="2476" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1685</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2477" z:Size="1">
                  <FBDPortExtSettings z:Id="2478">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2479" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2480" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">92.3539658</d2p1:anyType>
                </Value>
                <VariableName z:Id="2481">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2482" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1597</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2483" z:Size="1">
                  <FBDPortExtSettings z:Id="2484">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2479" i:nil="true" />
                <VariableName z:Id="2485">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2486">
              <EndFBDPort z:Id="2487" i:type="InputFBDPort">
                <Alias z:Id="2488">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1483</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2489" z:Size="1">
                  <FBDPortExtSettings z:Id="2490">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2491" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2492" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">92.3539658</d2p1:anyType>
                </Value>
                <VariableName z:Id="2493">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2494" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1686</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2495" z:Size="1">
                  <FBDPortExtSettings z:Id="2496">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2491" i:nil="true" />
                <VariableName z:Ref="2374" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2497">
              <EndFBDPort z:Id="2498" i:type="InputFBDPort">
                <Alias z:Id="2499">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1637</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2500" z:Size="2">
                  <FBDPortExtSettings z:Id="2501">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2502">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2503" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2504" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">42</d2p1:anyType>
                </Value>
                <VariableName z:Id="2505">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2506" i:type="OutputFBDPort">
                <Alias z:Id="2507"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1688</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2508" z:Size="1">
                  <FBDPortExtSettings z:Id="2509">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2510" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2511" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">3</d2p1:anyType>
                </Value>
                <VariableName z:Id="2512">out_1688</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2513">
              <EndFBDPort z:Id="2514" i:type="InputFBDPort">
                <Alias z:Id="2515">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1641</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2516" z:Size="1">
                  <FBDPortExtSettings z:Id="2517">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2518">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2519" i:type="OutputFBDPort">
                <Alias z:Ref="2507" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1690</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2520" z:Size="1">
                  <FBDPortExtSettings z:Id="2521">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2522" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2523" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">6</d2p1:anyType>
                </Value>
                <VariableName z:Id="2524">out_1690</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2525">
              <EndFBDPort z:Id="2526" i:type="InputFBDPort">
                <Alias z:Id="2527">SP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1249</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2528" z:Size="1">
                  <FBDPortExtSettings z:Id="2529">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2503" i:nil="true" />
                <VariableName z:Id="2530">Reference</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2531" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1693</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2532" z:Size="1">
                  <FBDPortExtSettings z:Id="2533">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2503" i:nil="true" />
                <VariableName z:Ref="2432" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2534">
              <EndFBDPort z:Id="2535" i:type="InputFBDPort">
                <Alias z:Ref="2499" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1692</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2536" z:Size="2">
                  <FBDPortExtSettings z:Id="2537">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2538">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2539" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2540" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">17</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2505" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2541" i:type="OutputFBDPort">
                <Alias z:Ref="2507" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1695</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2542" z:Size="1">
                  <FBDPortExtSettings z:Id="2543">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2544" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2545" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">25</d2p1:anyType>
                </Value>
                <VariableName z:Id="2546">out_1695</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2547">
              <EndFBDPort z:Id="2548" i:type="InputFBDPort">
                <Alias z:Id="2549">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1640</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2550" z:Size="1">
                  <FBDPortExtSettings z:Id="2551">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2503" i:nil="true" />
                <VariableName z:Id="2552">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2531" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2553">
              <EndFBDPort z:Ref="2498" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2531" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2554">
              <EndFBDPort z:Id="2555" i:type="InputFBDPort">
                <Alias z:Ref="2549" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2556" z:Size="1">
                  <FBDPortExtSettings z:Id="2557">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2089" i:nil="true" />
                <VariableName z:Ref="2552" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2092" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2558">
              <EndFBDPort z:Id="2559" i:type="InputFBDPort">
                <Alias z:Ref="2515" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1699</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2560" z:Size="1">
                  <FBDPortExtSettings z:Id="2561">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Ref="2518" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2541" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2562">
              <EndFBDPort z:Id="2563" i:type="InputFBDPort">
                <Alias z:Id="2564">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1705</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2565" z:Size="1">
                  <FBDPortExtSettings z:Id="2566">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2567" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2568" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">18.5047112</d2p1:anyType>
                </Value>
                <VariableName z:Id="2569">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2570" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1700</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2571" z:Size="1">
                  <FBDPortExtSettings z:Id="2572">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2567" i:nil="true" />
                <VariableName z:Ref="2462" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2573">
              <EndFBDPort z:Id="2574" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1702</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2575" z:Size="1">
                  <FBDPortExtSettings z:Id="2576">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2577" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2578" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">18.5047112</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2481" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2579" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1710</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2580" z:Size="1">
                  <FBDPortExtSettings z:Id="2581">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2577" i:nil="true" />
                <VariableName z:Id="2582">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2583">
              <EndFBDPort z:Id="2584" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1714</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2585" z:Size="1">
                  <FBDPortExtSettings z:Id="2586">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2503" i:nil="true" />
                <VariableName z:Id="2587">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2531" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2588">
              <EndFBDPort z:Id="2589" i:type="InputFBDPort">
                <Alias z:Id="2590">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1717</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2591" z:Size="1">
                  <FBDPortExtSettings z:Id="2592">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2593" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2594" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">170</d2p1:anyType>
                </Value>
                <VariableName z:Id="2595">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2596" i:type="OutputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1600</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2597" z:Size="1">
                  <FBDPortExtSettings z:Id="2598">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2593" i:nil="true" />
                <VariableName z:Ref="2374" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2599">
              <EndFBDPort z:Ref="2535" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2600" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1719</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2601" z:Size="1">
                  <FBDPortExtSettings z:Id="2602">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2539" i:nil="true" />
                <VariableName z:Id="2603">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2604" z:Size="42">
            <FBDItem z:Id="2605" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1598</Id>
              <InputPortsCollection z:Id="2606" z:Size="1">
                <FBDPort z:Id="2607" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1599</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2608" z:Size="1">
                    <FBDPortExtSettings z:Id="2609">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2481" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2610" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3800</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="2611">Tag</Name>
              <OutputPortsCollection z:Id="2612" z:Size="1">
                <FBDPort z:Ref="2596" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2613">_</Prefix>
              <SecondName z:Ref="2611" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="235" i:nil="true" />
              <InputFBDPort z:Ref="2607" i:nil="true" />
              <OutputFBDPort z:Ref="2596" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2614" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2615">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1716</Id>
              <InputPortsCollection z:Id="2616" z:Size="2">
                <FBDPort z:Ref="2589" i:nil="true" />
                <FBDPort z:Id="2617" i:type="InputFBDPort">
                  <Alias z:Id="2618">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1718</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2619" z:Size="1">
                    <FBDPortExtSettings z:Id="2620">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2621" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2622" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2623">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2624" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3960</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="2625">DIV</Name>
              <OutputPortsCollection z:Id="2626" z:Size="1">
                <FBDPort z:Ref="2600" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2627">YART</Prefix>
              <SecondName z:Ref="2625" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Id="2628">if(b != 0.0){


	y = a / b;


} else __eno = false;</Code>
            </FBDItem>
            <FBDItem z:Id="2629" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1694</Id>
              <InputPortsCollection z:Id="2630" z:Size="0" />
              <InternalPortsCollection z:Id="2631" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2632" z:Size="1">
                <FBDPort z:Ref="2541" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Id="2633">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2544" i:nil="true" />
              <OutputFBDPort z:Ref="2541" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2634" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2635">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>1691</Id>
              <InputPortsCollection z:Id="2636" z:Size="1">
                <FBDPort z:Ref="2535" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2637" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4080</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="2638">ADD</Name>
              <OutputPortsCollection z:Id="2639" z:Size="1">
                <FBDPort z:Ref="2531" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2640">YART</Prefix>
              <SecondName z:Ref="2638" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Id="2641">//# ADD (сумма Float)  


for(new i = 0; i&lt;sizeof_x; i++)


{


		y = y + x[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2642" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1713</Id>
              <InputPortsCollection z:Id="2643" z:Size="1">
                <FBDPort z:Ref="2584" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2644" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4340</d8p1:_x>
                <d8p1:_y>3410</d8p1:_y>
              </Location>
              <Name z:Id="2645">Tag</Name>
              <OutputPortsCollection z:Id="2646" z:Size="1">
                <FBDPort z:Id="2647" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1715</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2648" z:Size="1">
                    <FBDPortExtSettings z:Id="2649">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2650" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2651" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">42</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2652">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2653">_</Prefix>
              <SecondName z:Ref="2645" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="301" i:nil="true" />
              <InputFBDPort z:Ref="2584" i:nil="true" />
              <OutputFBDPort z:Ref="2647" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2654" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1422</Id>
              <InputPortsCollection z:Id="2655" z:Size="0" />
              <InternalPortsCollection z:Id="2656" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3640</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="2657">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="2658" z:Size="1">
                <FBDPort z:Ref="2337" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2659">_</Prefix>
              <SecondName z:Id="2660">_00_A1_AI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="2661">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="2662" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2663">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1220</Id>
              <InputPortsCollection z:Id="2664" z:Size="3">
                <FBDPort z:Ref="2330" i:nil="true" />
                <FBDPort z:Id="2665" i:type="InputFBDPort">
                  <Alias z:Id="2666">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1222</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2667" z:Size="1">
                    <FBDPortExtSettings z:Id="2668">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2669" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2670" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.01</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2671">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="2672" i:type="InputFBDPort">
                  <Alias z:Id="2673">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1223</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2674" z:Size="1">
                    <FBDPortExtSettings z:Id="2675">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2676">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2677" z:Size="1">
                <FBDPort z:Id="2678" i:type="InternalFBDPort">
                  <Alias z:Id="2679">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1228</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="2680" z:Size="10">
                    <FBDPortExtSettings z:Id="2681">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2682">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2683">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2684">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2685">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2686">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2687">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2688">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2689">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2690">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2691">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="2692">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="2693" z:Size="4">
                <FBDPort z:Ref="2092" i:nil="true" />
                <FBDPort z:Id="2694" i:type="OutputFBDPort">
                  <Alias z:Id="2695">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1225</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2696" z:Size="1">
                    <FBDPortExtSettings z:Id="2697">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2698" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2699" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2700">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="2701" i:type="OutputFBDPort">
                  <Alias z:Id="2702">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2703" z:Size="1">
                    <FBDPortExtSettings z:Id="2704">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2705" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2706" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2707">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="2708" i:type="OutputFBDPort">
                  <Alias z:Id="2709">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1227</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2710" z:Size="1">
                    <FBDPortExtSettings z:Id="2711">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2712" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2713" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2714">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2715">YART</Prefix>
              <SecondName z:Id="2716">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Id="2717">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 0;





YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="2718" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2719">Разность A и B</Description>
              <HelpID>44</HelpID>
              <Id>1697</Id>
              <InputPortsCollection z:Id="2720" z:Size="2">
                <FBDPort z:Ref="2555" i:nil="true" />
                <FBDPort z:Ref="2559" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2721" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3990</d8p1:_x>
                <d8p1:_y>3590</d8p1:_y>
              </Location>
              <Name z:Id="2722">SUB</Name>
              <OutputPortsCollection z:Id="2723" z:Size="1">
                <FBDPort z:Ref="2570" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Ref="2722" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>68db83f5-d55f-435e-9a28-1607ee207726</SpecificationId>
              <Code z:Id="2724">//#SUB (разность Float)


#inline y = a - b;</Code>
            </FBDItem>
            <FBDItem z:Id="2725" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2726">Поиск значения по линейной функции с ограничением минимального и максимального значений</Description>
              <HelpID>114</HelpID>
              <Id>1704</Id>
              <InputPortsCollection z:Id="2727" z:Size="5">
                <FBDPort z:Ref="2563" i:nil="true" />
                <FBDPort z:Id="2728" i:type="InputFBDPort">
                  <Alias z:Id="2729">Xmin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1706</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2730" z:Size="1">
                    <FBDPortExtSettings z:Id="2731">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2732" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2733" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2734">Xmin</VariableName>
                </FBDPort>
                <FBDPort z:Id="2735" i:type="InputFBDPort">
                  <Alias z:Id="2736">Ymin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1707</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2737" z:Size="1">
                    <FBDPortExtSettings z:Id="2738">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2739" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2740" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2741">Ymin</VariableName>
                </FBDPort>
                <FBDPort z:Id="2742" i:type="InputFBDPort">
                  <Alias z:Id="2743">Xmax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1708</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2744" z:Size="1">
                    <FBDPortExtSettings z:Id="2745">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2746" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2747" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2748">Xmax</VariableName>
                </FBDPort>
                <FBDPort z:Id="2749" i:type="InputFBDPort">
                  <Alias z:Id="2750">Ymax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1709</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2751" z:Size="1">
                    <FBDPortExtSettings z:Id="2752">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2753" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2754" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2755">Ymax</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2756" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4250</d8p1:_x>
                <d8p1:_y>3560</d8p1:_y>
              </Location>
              <Name z:Id="2757">PHIS.LIM</Name>
              <OutputPortsCollection z:Id="2758" z:Size="1">
                <FBDPort z:Ref="2579" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Id="2759">myFizValiml</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>fe2f4ea4-aeb0-4475-979d-b0c351f312ba</SpecificationId>
              <Code z:Id="2760">//#PHIS . LIM (Преобразование в физическую величину с ограничением выхода)


//Преобразование физ. величины с ограничением


if(x &gt; Xmin &amp;&amp; x &lt; Xmax) y = Ymin + (x - Xmin)*((Ymax - Ymin)/(Xmax - Xmin));


else if(x &lt;= Xmin) y = Ymin;


else if(x &gt;= Xmax) y = Ymax;</Code>
            </FBDItem>
            <FBDItem z:Id="2761" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1701</Id>
              <InputPortsCollection z:Id="2762" z:Size="1">
                <FBDPort z:Ref="2574" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2763" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4360</d8p1:_x>
                <d8p1:_y>3540</d8p1:_y>
              </Location>
              <Name z:Ref="2611" i:nil="true" />
              <OutputPortsCollection z:Id="2764" z:Size="1">
                <FBDPort z:Id="2765" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1703</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2766" z:Size="1">
                    <FBDPortExtSettings z:Id="2767">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2768" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2769" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">18.50055</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="2374" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Ref="2611" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="227" i:nil="true" />
              <InputFBDPort z:Ref="2574" i:nil="true" />
              <OutputFBDPort z:Ref="2765" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2770" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1606</Id>
              <InputPortsCollection z:Id="2771" z:Size="1">
                <FBDPort z:Id="2772" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>1607</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2773" z:Size="4">
                    <FBDPortExtSettings z:Id="2774">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2775">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2776">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2777">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2481" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2778" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4490</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="2611" i:nil="true" />
              <OutputPortsCollection z:Id="2779" z:Size="1">
                <FBDPort z:Ref="2389" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Ref="2611" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="290" i:nil="true" />
              <InputFBDPort z:Ref="2772" i:nil="true" />
              <OutputFBDPort z:Ref="2389" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2780" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1603</Id>
              <InputPortsCollection z:Id="2781" z:Size="1">
                <FBDPort z:Id="2782" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>1604</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2783" z:Size="4">
                    <FBDPortExtSettings z:Id="2784">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2785">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2786">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2787">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2481" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2788" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4470</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name z:Ref="2611" i:nil="true" />
              <OutputPortsCollection z:Id="2789" z:Size="1">
                <FBDPort z:Ref="2368" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Ref="2611" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="283" i:nil="true" />
              <InputFBDPort z:Ref="2782" i:nil="true" />
              <OutputFBDPort z:Ref="2368" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2790" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1505</Id>
              <InputPortsCollection z:Id="2791" z:Size="0" />
              <InternalPortsCollection z:Id="2792" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4090</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2793" z:Size="1">
                <FBDPort z:Ref="2236" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2794">_</Prefix>
              <SecondName z:Id="2795">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2240" i:nil="true" />
              <OutputFBDPort z:Ref="2236" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2796" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1303</Id>
              <InputPortsCollection z:Id="2797" z:Size="1">
                <FBDPort z:Id="2798" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1304</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2799" z:Size="1">
                    <FBDPortExtSettings z:Id="2800">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2801">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2802" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3810</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Id="2803">Tag</Name>
              <OutputPortsCollection z:Id="2804" z:Size="1">
                <FBDPort z:Ref="2224" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2805">_</Prefix>
              <SecondName z:Ref="2803" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="271" i:nil="true" />
              <InputFBDPort z:Ref="2798" i:nil="true" />
              <OutputFBDPort z:Ref="2224" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2806" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1299</Id>
              <InputPortsCollection z:Id="2807" z:Size="1">
                <FBDPort z:Id="2808" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>17</ArrayItemsCount>
                  <Id>1300</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2809" z:Size="17">
                    <FBDPortExtSettings z:Id="2810">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2811">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2812">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2813">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2814">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2815">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2816">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2817">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2818">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2819">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2820">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2821">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2822">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2823">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2824">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2825">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2826">
                      <Index>16</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2827">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2828" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3970</d8p1:_x>
                <d8p1:_y>3970</d8p1:_y>
              </Location>
              <Name z:Id="2829">Tag</Name>
              <OutputPortsCollection z:Id="2830" z:Size="1">
                <FBDPort z:Ref="2183" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2831">_</Prefix>
              <SecondName z:Ref="2829" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="251" i:nil="true" />
              <InputFBDPort z:Ref="2808" i:nil="true" />
              <OutputFBDPort z:Ref="2183" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2832" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>877</HelpID>
              <Id>1294</Id>
              <InputPortsCollection z:Id="2833" z:Size="2">
                <FBDPort z:Id="2834" i:type="InputFBDPort">
                  <Alias z:Id="2835">Hysteresis</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1295</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2836" z:Size="1">
                    <FBDPortExtSettings z:Id="2837">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2838" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2839" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2840">Hysteresis</VariableName>
                </FBDPort>
                <FBDPort z:Id="2841" i:type="InputFBDPort">
                  <Alias z:Id="2842">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1296</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2843" z:Size="1">
                    <FBDPortExtSettings z:Id="2844">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2845" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2846" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2847">Error</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2848" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="2849">Test config</Name>
              <OutputPortsCollection z:Id="2850" z:Size="1">
                <FBDPort z:Ref="2211" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2851">YART</Prefix>
              <SecondName z:Id="2852">Test_config</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>2bebd07f-c4fe-4658-8c7d-514556245970</SpecificationId>
              <Code z:Id="2853">//Задание конфигурации автонастройки


Testconfig = Hysteresis + Error * 4;</Code>
            </FBDItem>
            <FBDItem z:Id="2854" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1287</Id>
              <InputPortsCollection z:Id="2855" z:Size="1">
                <FBDPort z:Id="2856" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1288</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2857" z:Size="1">
                    <FBDPortExtSettings z:Id="2858">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2859">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2860" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="2861">Tag</Name>
              <OutputPortsCollection z:Id="2862" z:Size="1">
                <FBDPort z:Ref="2144" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2863">_</Prefix>
              <SecondName z:Ref="2861" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="247" i:nil="true" />
              <InputFBDPort z:Ref="2856" i:nil="true" />
              <OutputFBDPort z:Ref="2144" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2864" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1284</Id>
              <InputPortsCollection z:Id="2865" z:Size="1">
                <FBDPort z:Id="2866" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1285</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2867" z:Size="1">
                    <FBDPortExtSettings z:Id="2868">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2859" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2869" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3800</d8p1:_y>
              </Location>
              <Name z:Ref="2861" i:nil="true" />
              <OutputPortsCollection z:Id="2870" z:Size="1">
                <FBDPort z:Ref="2156" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2863" i:nil="true" />
              <SecondName z:Ref="2861" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="243" i:nil="true" />
              <InputFBDPort z:Ref="2866" i:nil="true" />
              <OutputFBDPort z:Ref="2156" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2871" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1277</Id>
              <InputPortsCollection z:Id="2872" z:Size="1">
                <FBDPort z:Id="2873" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1278</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2874" z:Size="1">
                    <FBDPortExtSettings z:Id="2875">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2876">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2877" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3780</d8p1:_y>
              </Location>
              <Name z:Id="2878">Tag</Name>
              <OutputPortsCollection z:Id="2879" z:Size="1">
                <FBDPort z:Ref="2132" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2880">_</Prefix>
              <SecondName z:Ref="2878" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="239" i:nil="true" />
              <InputFBDPort z:Ref="2873" i:nil="true" />
              <OutputFBDPort z:Ref="2132" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2881" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1245</Id>
              <InputPortsCollection z:Id="2882" z:Size="1">
                <FBDPort z:Ref="2086" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2883" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4020</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Id="2884">Tag</Name>
              <OutputPortsCollection z:Id="2885" z:Size="1">
                <FBDPort z:Ref="2120" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2886">_</Prefix>
              <SecondName z:Ref="2884" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="231" i:nil="true" />
              <InputFBDPort z:Ref="2086" i:nil="true" />
              <OutputFBDPort z:Ref="2120" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2887" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2888">Встроенный ПИД регулятор с возможностью автоматической настройки</Description>
              <HelpID>782</HelpID>
              <Id>1248</Id>
              <InputPortsCollection z:Id="2889" z:Size="15">
                <FBDPort z:Ref="2526" i:nil="true" />
                <FBDPort z:Ref="2113" i:nil="true" />
                <FBDPort z:Ref="2125" i:nil="true" />
                <FBDPort z:Ref="2149" i:nil="true" />
                <FBDPort z:Ref="2137" i:nil="true" />
                <FBDPort z:Ref="2229" i:nil="true" />
                <FBDPort z:Id="2890" i:type="InputFBDPort">
                  <Alias z:Id="2891">MIN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1255</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2892" z:Size="1">
                    <FBDPortExtSettings z:Id="2893">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2894" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2895" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2896">PID_Min</VariableName>
                </FBDPort>
                <FBDPort z:Id="2897" i:type="InputFBDPort">
                  <Alias z:Id="2898">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1256</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2899" z:Size="1">
                    <FBDPortExtSettings z:Id="2900">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2901" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2902" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2903">Kinput</VariableName>
                </FBDPort>
                <FBDPort z:Id="2904" i:type="InputFBDPort">
                  <Alias z:Id="2905">K OUT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1257</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2906" z:Size="1">
                    <FBDPortExtSettings z:Id="2907">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2908" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2909" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2910">Koutput</VariableName>
                </FBDPort>
                <FBDPort z:Id="2911" i:type="InputFBDPort">
                  <Alias z:Id="2912">PERIOD(s)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1258</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2913" z:Size="1">
                    <FBDPortExtSettings z:Id="2914">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2915" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2916" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2917">T</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2217" i:nil="true" />
                <FBDPort z:Id="2918" i:type="InputFBDPort">
                  <Alias z:Id="2919">n Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1260</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2920" z:Size="1">
                    <FBDPortExtSettings z:Id="2921">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2922" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2923" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2924">NP_Test</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2204" i:nil="true" />
                <FBDPort z:Ref="2160" i:nil="true" />
                <FBDPort z:Id="2925" i:type="InputFBDPort">
                  <Alias z:Id="2926">DifErrReset</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1263</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2927" z:Size="1">
                    <FBDPortExtSettings z:Id="2928">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2929">DER</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2930" z:Size="1">
                <FBDPort z:Id="2931" i:type="InternalFBDPort">
                  <Alias z:Id="2932">Внутренняя 56499</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>1270</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="2933" z:Size="4">
                    <FBDPortExtSettings z:Id="2934">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2935">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2936">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2937">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2938">a</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4250</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="2939">AUTO PID</Name>
              <OutputPortsCollection z:Id="2940" z:Size="6">
                <FBDPort z:Id="2941" i:type="OutputFBDPort">
                  <Alias z:Id="2942">K IN * SP</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1264</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2943" z:Size="1">
                    <FBDPortExtSettings z:Id="2944">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2945" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2946" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">42</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2947">refPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="2948" i:type="OutputFBDPort">
                  <Alias z:Id="2949">K OUT * X</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1265</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2950" z:Size="1">
                    <FBDPortExtSettings z:Id="2951">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2952" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2953" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">43.4591</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2954">fbPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="2955" i:type="OutputFBDPort">
                  <Alias z:Id="2956">Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1266</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2957" z:Size="1">
                    <FBDPortExtSettings z:Id="2958">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2959" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2960" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2961">n_Test</VariableName>
                </FBDPort>
                <FBDPort z:Id="2962" i:type="OutputFBDPort">
                  <Alias z:Id="2963">Y1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1267</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2964" z:Size="1">
                    <FBDPortExtSettings z:Id="2965">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2966" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2967" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">7.4211483</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2968">outPID</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2349" i:nil="true" />
                <FBDPort z:Id="2969" i:type="OutputFBDPort">
                  <Alias z:Id="2970">Выход 35511</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1269</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2971" z:Size="1">
                    <FBDPortExtSettings z:Id="2972">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2973" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2974" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2975">BUFF_ERR</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2976">YART</Prefix>
              <SecondName z:Id="2977">sPID_en_eno_new</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>0167f5df-d619-42ef-b191-4e954aaaff22</SpecificationId>
              <Code z:Id="2978">/*


*	a[0] - counrer


*	a[1] - ti


*	a[2] - tf


*	a[3] - init


*/





if (!a[3]){


	a[0] = NP_Test;


	a[3] = true;


}





if(DER){


	set_float(BUFFER[0] + 40, 0.0);


	return;


}





if(BUFFER[1] &lt; 17 || BUFFER[0] &lt; 1024 || BUFFER[0] &gt; 33791) {


	__eno = false;


	BUFF_ERR = true;


	return;


}





new Float:t;


new ready;


new cmd = get_coil(Test[0]);


new mode = get_coil(Test[0]);


//Переносим коэффициенты из FRAM в буфер  


if (!mode){


	new Float:valF = get_float(KP[0]);


	set_float(BUFFER[0] + 20, valF);





	valF = get_float(KI[0]);


	set_float(BUFFER[0] + 24, valF);





	valF = get_float(KD[0]);


	set_float(BUFFER[0] + 28, valF);


} else n_Test = NP_Test - a[0] + 1;





if (T != 0.0) {


	// Adjust Reference


	t = Reference * Kinput;


	set_float(BUFFER[0], t);


	refPID = t;





	// Adjust Feedback


	t = Feedback * Kinput;


	set_float(BUFFER[0] + 4, t);


	fbPID = t;





	if (a[1] &gt;= floatround(T * 1000, floatround_round))//Был if clock


	{


		a[1] = 0;


		a[2] = 0;


		// Max, Min, T	


		set_float(BUFFER[0] + 8,  PID_Max);


		set_float(BUFFER[0] + 12, PID_Min);


		set_float(BUFFER[0] + 16, T);





		cmd &amp;= 0x01;


		cmd |= (TestCMD &lt;&lt; 1);


		ready = smart_pid(BUFFER[0], cmd, BUFFER[0]+20);





		if (!mode) a[0] = NP_Test;


			else {


				if (a[0] != 0) {


					if (ready) a[0]--;


					if (a[0] == 0){//если тест закончился копируем из  буфера в FRAM


						    set_coil(Test[0], 0);


						


							new Float:valF = get_float(BUFFER[0]+20);


							set_float(KP[0],valF);





							valF = get_float(BUFFER[0]+24);


							set_float(KI[0],valF);





							valF = get_float(BUFFER[0]+28);


							set_float(KD[0],valF);		


									}


								}	 





				}


		}





outPID = get_float(BUFFER[0]+20+3*4);


Y = outPID * Koutput;


YARTAddScanTask(a[1], a[2]);


}</Code>
            </FBDItem>
            <FBDItem z:Id="2979" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2980">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>1593</Id>
              <InputPortsCollection z:Id="2981" z:Size="3">
                <FBDPort z:Ref="2342" i:nil="true" />
                <FBDPort z:Ref="2355" i:nil="true" />
                <FBDPort z:Ref="2376" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2982" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4640</d8p1:_x>
                <d8p1:_y>3650</d8p1:_y>
              </Location>
              <Name z:Id="2983">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="2984" z:Size="1">
                <FBDPort z:Ref="2482" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Id="2985">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Id="2986">//#PIECEWISE LINEAR (Кусочно-линейное преобразование Float)


if(sizeof_X != sizeof_Y) return;


for(new i = 0; i &lt; sizeof_X - 1; i++){


	if(X[i] &lt;= INX &amp;&amp; INX &lt;= X[i+1]){


		OUTY = Y[i] + (INX - X[i])*((Y[i+1] - Y[i])/(X[i+1] - X[i]));


		return; 	


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="2987" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1684</Id>
              <InputPortsCollection z:Id="2988" z:Size="1">
                <FBDPort z:Ref="2476" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2989" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4790</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="2611" i:nil="true" />
              <OutputPortsCollection z:Id="2990" z:Size="1">
                <FBDPort z:Ref="2494" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Ref="2611" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="297" i:nil="true" />
              <InputFBDPort z:Ref="2476" i:nil="true" />
              <OutputFBDPort z:Ref="2494" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2991" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1665</Id>
              <InputPortsCollection z:Id="2992" z:Size="1">
                <FBDPort z:Id="2993" i:type="InputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1666</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2994" z:Size="1">
                    <FBDPortExtSettings z:Id="2995">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2481" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2996" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Ref="2611" i:nil="true" />
              <OutputPortsCollection z:Id="2997" z:Size="1">
                <FBDPort z:Ref="2418" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Ref="2611" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="231" i:nil="true" />
              <InputFBDPort z:Ref="2993" i:nil="true" />
              <OutputFBDPort z:Ref="2418" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2998" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1689</Id>
              <InputPortsCollection z:Id="2999" z:Size="0" />
              <InternalPortsCollection z:Id="3000" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>3570</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3001" z:Size="1">
                <FBDPort z:Ref="2519" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Id="3002">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2522" i:nil="true" />
              <OutputFBDPort z:Ref="2519" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3003" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Ref="2719" i:nil="true" />
              <HelpID>44</HelpID>
              <Id>1639</Id>
              <InputPortsCollection z:Id="3004" z:Size="2">
                <FBDPort z:Ref="2548" i:nil="true" />
                <FBDPort z:Ref="2514" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3005" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4880</d8p1:_x>
                <d8p1:_y>3510</d8p1:_y>
              </Location>
              <Name z:Ref="2722" i:nil="true" />
              <OutputPortsCollection z:Id="3006" z:Size="1">
                <FBDPort z:Ref="2459" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Ref="2722" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>68db83f5-d55f-435e-9a28-1607ee207726</SpecificationId>
              <Code z:Ref="2724" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3007" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3008">Сравнение двух значений</Description>
              <HelpID>32</HelpID>
              <Id>1676</Id>
              <InputPortsCollection z:Id="3009" z:Size="2">
                <FBDPort z:Ref="2446" i:nil="true" />
                <FBDPort z:Ref="2452" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3010" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5065.8084308364432</d8p1:_x>
                <d8p1:_y>3538.9148114037557</d8p1:_y>
              </Location>
              <Name z:Id="3011">A&lt;=B</Name>
              <OutputPortsCollection z:Id="3012" z:Size="1">
                <FBDPort z:Ref="2471" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Id="3013">AMRB</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>caa35564-4c86-4338-b415-30f35c0ea774</SpecificationId>
              <Code z:Id="3014">//#A =&lt; B (Меньше или равно Float)


#inline y = (a &lt;= b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="3015" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1687</Id>
              <InputPortsCollection z:Id="3016" z:Size="0" />
              <InternalPortsCollection z:Id="3017" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>3650</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3018" z:Size="1">
                <FBDPort z:Ref="2506" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Id="3019">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2510" i:nil="true" />
              <OutputFBDPort z:Ref="2506" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3020" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Ref="2635" i:nil="true" />
              <HelpID>43</HelpID>
              <Id>1636</Id>
              <InputPortsCollection z:Id="3021" z:Size="1">
                <FBDPort z:Ref="2498" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3022" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4880</d8p1:_x>
                <d8p1:_y>3620</d8p1:_y>
              </Location>
              <Name z:Ref="2638" i:nil="true" />
              <OutputPortsCollection z:Id="3023" z:Size="1">
                <FBDPort z:Ref="2429" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Ref="2638" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Ref="2641" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3024" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3025">Сравнение двух значений</Description>
              <HelpID>31</HelpID>
              <Id>1668</Id>
              <InputPortsCollection z:Id="3026" z:Size="2">
                <FBDPort z:Ref="2411" i:nil="true" />
                <FBDPort z:Ref="2422" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3027" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5050</d8p1:_x>
                <d8p1:_y>3620</d8p1:_y>
              </Location>
              <Name z:Id="3028">A &gt;= B</Name>
              <OutputPortsCollection z:Id="3029" z:Size="1">
                <FBDPort z:Ref="2441" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2640" i:nil="true" />
              <SecondName z:Id="3030">aBRb</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>668b0ab2-bb9e-4989-bcb1-4b72a06fd1ed</SpecificationId>
              <Code z:Id="3031">//#A &gt;= B (Больше или равно Float)


#inline y = (a &gt;= b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="3032" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1521</Id>
              <InputPortsCollection z:Id="3033" z:Size="0" />
              <InternalPortsCollection z:Id="3034" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4420</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3035" z:Size="1">
                <FBDPort z:Ref="2251" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2794" i:nil="true" />
              <SecondName z:Id="3036">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2254" i:nil="true" />
              <OutputFBDPort z:Ref="2251" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3037" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3038">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1531</Id>
              <InputPortsCollection z:Id="3039" z:Size="1">
                <FBDPort z:Ref="2270" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3040" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4570</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="3041">I&gt;F</Name>
              <OutputPortsCollection z:Id="3042" z:Size="1">
                <FBDPort z:Ref="2282" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3043">YART</Prefix>
              <SecondName z:Id="3044">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Id="3045">//#I  &gt; F (Int в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="3046" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3047">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1527</Id>
              <InputPortsCollection z:Id="3048" z:Size="2">
                <FBDPort z:Ref="2275" i:nil="true" />
                <FBDPort z:Ref="2287" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3049" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4700</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="3050">DIV</Name>
              <OutputPortsCollection z:Id="3051" z:Size="1">
                <FBDPort z:Ref="2265" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3043" i:nil="true" />
              <SecondName z:Ref="3050" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="2628" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3052" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3053">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1482</Id>
              <InputPortsCollection z:Id="3054" z:Size="5">
                <FBDPort z:Ref="2487" i:nil="true" />
                <FBDPort z:Ref="2244" i:nil="true" />
                <FBDPort z:Ref="2258" i:nil="true" />
                <FBDPort z:Ref="2464" i:nil="true" />
                <FBDPort z:Ref="2434" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3055" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4970</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="3056">2 PWM</Name>
              <OutputPortsCollection z:Id="3057" z:Size="1">
                <FBDPort z:Ref="2404" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3043" i:nil="true" />
              <SecondName z:Id="3058">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Id="3059">//2 PWM


PWM[0] = PERIOD;





if(STOP) return; 


if(ONCOM){


		PWM[1] = PERIOD;


		return;


		}





if(DUTY &gt;=0) PWM[1] =  floatround((DUTY*KIN), floatround_round);</Code>
            </FBDItem>
            <FBDItem z:Id="3060" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1452</Id>
              <InputPortsCollection z:Id="3061" z:Size="1">
                <FBDPort z:Ref="2396" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3062" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5090</d8p1:_x>
                <d8p1:_y>3950</d8p1:_y>
              </Location>
              <Name z:Id="3063">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="3064" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2794" i:nil="true" />
              <SecondName z:Id="3065">_00_A1_DO_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3066">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3067" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3068">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1537</Id>
              <InputPortsCollection z:Id="3069" z:Size="1">
                <FBDPort z:Ref="2301" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3070" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4580</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="3071">I&gt;F</Name>
              <OutputPortsCollection z:Id="3072" z:Size="1">
                <FBDPort z:Ref="2313" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3073">YART</Prefix>
              <SecondName z:Id="3074">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="3045" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3075" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3076">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1540</Id>
              <InputPortsCollection z:Id="3077" z:Size="2">
                <FBDPort z:Ref="2306" i:nil="true" />
                <FBDPort z:Id="3078" i:type="InputFBDPort">
                  <Alias z:Id="3079">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1542</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3080" z:Size="1">
                    <FBDPortExtSettings z:Id="3081">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3082" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3083" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3084">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3085" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Id="3086">DIV</Name>
              <OutputPortsCollection z:Id="3087" z:Size="1">
                <FBDPort z:Ref="2325" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3088">YART</Prefix>
              <SecondName z:Ref="3086" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="2628" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3089" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3090">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1428</Id>
              <InputPortsCollection z:Id="3091" z:Size="5">
                <FBDPort z:Ref="2318" i:nil="true" />
                <FBDPort z:Ref="2293" i:nil="true" />
                <FBDPort z:Id="3092" i:type="InputFBDPort">
                  <Alias z:Id="3093">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1431</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3094" z:Size="1">
                    <FBDPortExtSettings z:Id="3095">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3096" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3097" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3098">KIN</VariableName>
                </FBDPort>
                <FBDPort z:Id="3099" i:type="InputFBDPort">
                  <Alias z:Id="3100">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1432</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3101" z:Size="1">
                    <FBDPortExtSettings z:Id="3102">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3103">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="3104" i:type="InputFBDPort">
                  <Alias z:Id="3105">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1433</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3106" z:Size="1">
                    <FBDPortExtSettings z:Id="3107">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3108">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3109" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4710</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="3110">2 PWM</Name>
              <OutputPortsCollection z:Id="3111" z:Size="1">
                <FBDPort z:Ref="2106" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3112">YART</Prefix>
              <SecondName z:Id="3113">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Ref="3059" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3114" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1446</Id>
              <InputPortsCollection z:Id="3115" z:Size="1">
                <FBDPort z:Ref="2098" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3116" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Ref="3063" i:nil="true" />
              <OutputPortsCollection z:Id="3117" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2794" i:nil="true" />
              <SecondName z:Id="3118">_00_A1_DO_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3119">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3120" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1497</Id>
              <InputPortsCollection z:Id="3121" z:Size="0" />
              <InternalPortsCollection z:Id="3122" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3580</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3123" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2794" i:nil="true" />
              <SecondName z:Id="3124">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName i:nil="true" />
              <Height>434.59535801379025</Height>
              <Series z:Id="3125" z:Size="3">
                <TagChartSeriesVisualItem z:Id="3126">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="3127">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="3128">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1244</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="3129">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="3130">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>139</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="3131">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1680</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="3132">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="3133">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>128</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="3134">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1712</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-09-23T16:54:48.2813158+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-09-23T16:34:48.2813158+03:00</VisualXRangeMin>
              <Width>926.75084695024179</Width>
            </FBDItem>
            <FBDItem z:Id="3135" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1696</Id>
              <InputPortsCollection z:Id="3136" z:Size="0" />
              <InternalPortsCollection z:Id="3137" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3390</d8p1:_y>
              </Location>
              <Name z:Id="3138">comment</Name>
              <OutputPortsCollection z:Id="3139" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Id="3140">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3141">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</Comment>
              <Height>288.82794090937523</Height>
              <Width>743.38456557223526</Width>
            </FBDItem>
            <FBDItem z:Id="3142" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1711</Id>
              <InputPortsCollection z:Id="3143" z:Size="0" />
              <InternalPortsCollection z:Id="3144" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4550</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name z:Ref="3138" i:nil="true" />
              <OutputPortsCollection z:Id="3145" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2613" i:nil="true" />
              <SecondName z:Id="3146">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3147">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</Comment>
              <Height>322.20423176420718</Height>
              <Width>505.24959060752462</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="3148">PID_control</Name>
          <Parent z:Ref="2081" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>3</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="3149">PID</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="3150" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="3151" z:Size="1">
        <d2p1:anyType z:Id="3152" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="3153" z:Size="1">
            <FBDConnector z:Id="3154">
              <EndFBDPort z:Id="3155" i:type="InputFBDPort">
                <Alias z:Id="3156">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1206</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3157" z:Size="1">
                  <FBDPortExtSettings z:Id="3158">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3159" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3160">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3161" i:type="OutputFBDPort">
                <Alias z:Id="3162">AI.02: AIN_2_RoomT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1425</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3163" z:Size="1">
                  <FBDPortExtSettings z:Id="3164">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3159" i:nil="true" />
                <VariableName z:Ref="10" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="3165" z:Size="2">
            <FBDItem z:Id="3166" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1424</Id>
              <InputPortsCollection z:Id="3167" z:Size="0" />
              <InternalPortsCollection z:Id="3168" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Ref="2657" i:nil="true" />
              <OutputPortsCollection z:Id="3169" z:Size="1">
                <FBDPort z:Ref="3161" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2659" i:nil="true" />
              <SecondName z:Id="3170">_00_A1_AI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3171">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3172" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3173">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1205</Id>
              <InputPortsCollection z:Id="3174" z:Size="3">
                <FBDPort z:Ref="3155" i:nil="true" />
                <FBDPort z:Id="3175" i:type="InputFBDPort">
                  <Alias z:Id="3176">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1207</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3177" z:Size="1">
                    <FBDPortExtSettings z:Id="3178">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3179" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3180" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3181">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="3182" i:type="InputFBDPort">
                  <Alias z:Id="3183">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1208</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3184" z:Size="1">
                    <FBDPortExtSettings z:Id="3185">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3186">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3187" z:Size="1">
                <FBDPort z:Id="3188" i:type="InternalFBDPort">
                  <Alias z:Id="3189">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1213</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3190" z:Size="10">
                    <FBDPortExtSettings z:Id="3191">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3192">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3193">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3194">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3195">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3196">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3197">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3198">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3199">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3200">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3201">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name z:Id="3202">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="3203" z:Size="4">
                <FBDPort z:Id="3204" i:type="OutputFBDPort">
                  <Alias z:Id="3205">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1209</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3206" z:Size="1">
                    <FBDPortExtSettings z:Id="3207">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3208" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3209">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="3210" i:type="OutputFBDPort">
                  <Alias z:Id="3211">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1210</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3212" z:Size="1">
                    <FBDPortExtSettings z:Id="3213">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3214" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3215">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="3216" i:type="OutputFBDPort">
                  <Alias z:Id="3217">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1211</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3218" z:Size="1">
                    <FBDPortExtSettings z:Id="3219">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3220" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3221">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="3222" i:type="OutputFBDPort">
                  <Alias z:Id="3223">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1212</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3224" z:Size="1">
                    <FBDPortExtSettings z:Id="3225">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3226" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3227">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3228">YART</Prefix>
              <SecondName z:Id="3229">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Ref="2717" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="3230">Room_Control</Name>
          <Parent z:Ref="3150" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>4</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="3231">Room</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="3232" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="3233" z:Size="1">
        <d2p1:anyType z:Id="3234" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="3235" z:Size="2">
            <FBDConnector z:Id="3236">
              <EndFBDPort z:Id="3237" i:type="InputFBDPort">
                <Alias z:Id="3238">CU</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1344</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3239" z:Size="1">
                  <FBDPortExtSettings z:Id="3240">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3241" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="3242">CU</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3243" i:type="OutputFBDPort">
                <Alias z:Id="3244">DI.06: DIN_6_Counter1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1325</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3245" z:Size="1">
                  <FBDPortExtSettings z:Id="3246">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3241" i:nil="true" />
                <VariableName z:Ref="40" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3247">
              <EndFBDPort z:Id="3248" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1329</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3249" z:Size="1">
                  <FBDPortExtSettings z:Id="3250">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3251" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2091" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3252" i:type="OutputFBDPort">
                <Alias z:Id="3253">CV</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1348</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3254" z:Size="1">
                  <FBDPortExtSettings z:Id="3255">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3251" i:nil="true" />
                <VariableName z:Id="3256">CV</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="3257" z:Size="3">
            <FBDItem z:Id="3258" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1324</Id>
              <InputPortsCollection z:Id="3259" z:Size="0" />
              <InternalPortsCollection z:Id="3260" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3481.5</d8p1:_x>
                <d8p1:_y>3757.5</d8p1:_y>
              </Location>
              <Name z:Id="3261">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="3262" z:Size="1">
                <FBDPort z:Ref="3243" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2886" i:nil="true" />
              <SecondName z:Id="3263">_00_A1_DI_06</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3264">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3265" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3266">Подсчет количества переходов CU из false в true. При достижении значения PV выход Q устанавливается в true. При включении Reset счетчик CV обнуляется</Description>
              <HelpID>15</HelpID>
              <Id>1342</Id>
              <InputPortsCollection z:Id="3267" z:Size="3">
                <FBDPort z:Ref="3237" i:nil="true" />
                <FBDPort z:Id="3268" i:type="InputFBDPort">
                  <Alias z:Id="3269">Вход 1570</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1345</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3270" z:Size="1">
                    <FBDPortExtSettings z:Id="3271">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3272" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3273" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">32000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3274">PV</VariableName>
                </FBDPort>
                <FBDPort z:Id="3275" i:type="InputFBDPort">
                  <Alias z:Id="3276">RESET</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1346</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3277" z:Size="1">
                    <FBDPortExtSettings z:Id="3278">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3279" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3280" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3281">Reset</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3282" z:Size="1">
                <FBDPort z:Id="3283" i:type="InternalFBDPort">
                  <Alias z:Id="3284">Отладка 2689</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1343</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3285" z:Size="1">
                    <FBDPortExtSettings z:Id="3286">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3287">lastIn</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="3288">CTU</Name>
              <OutputPortsCollection z:Id="3289" z:Size="2">
                <FBDPort z:Id="3290" i:type="OutputFBDPort">
                  <Alias z:Id="3291">Выход 1571</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1347</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3292" z:Size="1">
                    <FBDPortExtSettings z:Id="3293">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3294" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3295">Q</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3252" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3296">YART</Prefix>
              <SecondName z:Id="3297">CTU</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>56d44bca-6ca4-425b-bab2-36a857a3f483</SpecificationId>
              <Code z:Id="3298">//CTU  (Счетчик импульсов по переднему фронту)


if(CU &amp;&amp; !lastIn) CV++;


if(Reset) CV = 0;


if(CV &gt;= PV) Q = true;


lastIn = CU;</Code>
            </FBDItem>
            <FBDItem z:Id="3299" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1328</Id>
              <InputPortsCollection z:Id="3300" z:Size="1">
                <FBDPort z:Ref="3248" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3301" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3930</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Ref="2884" i:nil="true" />
              <OutputPortsCollection z:Id="3302" z:Size="1">
                <FBDPort z:Id="3303" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1330</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3304" z:Size="1">
                    <FBDPortExtSettings z:Id="3305">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3306" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2123" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2886" i:nil="true" />
              <SecondName z:Ref="2884" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="279" i:nil="true" />
              <InputFBDPort z:Ref="3248" i:nil="true" />
              <OutputFBDPort z:Ref="3303" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="3307">Counter-1</Name>
          <Parent z:Ref="3232" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>6</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="3308">Counters</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="3309" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="3310" z:Size="1">
        <d2p1:anyType z:Id="3311" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="3312" z:Size="7">
            <FBDConnector z:Id="3313">
              <EndFBDPort z:Id="3314" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1320</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3315" z:Size="1">
                  <FBDPortExtSettings z:Id="3316">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3317" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3318" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Ref="2091" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3319" i:type="OutputFBDPort">
                <Alias z:Id="3320">DI.05: DIN_5_Alarm1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1318</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3321" z:Size="1">
                  <FBDPortExtSettings z:Id="3322">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3317" i:nil="true" />
                <VariableName z:Ref="37" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3323">
              <EndFBDPort z:Id="3324" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>1737</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3325" z:Size="4">
                  <FBDPortExtSettings z:Id="3326">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3327">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3328">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3329">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3330" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3331" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3332">mas</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3333" i:type="OutputFBDPort">
                <Alias z:Id="3334">DI.02: DIN_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1742</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3335" z:Size="1">
                  <FBDPortExtSettings z:Id="3336">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3330" i:nil="true" />
                <VariableName z:Ref="30" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3337">
              <EndFBDPort z:Ref="3324" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3338" i:type="OutputFBDPort">
                <Alias z:Id="3339">DI.03: DIN_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1744</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3340" z:Size="1">
                  <FBDPortExtSettings z:Id="3341">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3342" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3343" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Ref="32" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3344">
              <EndFBDPort z:Ref="3324" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3345" i:type="OutputFBDPort">
                <Alias z:Id="3346">DI.04: DIN_4</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1746</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3347" z:Size="1">
                  <FBDPortExtSettings z:Id="3348">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3349" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3350" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Ref="34" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3351">
              <EndFBDPort z:Id="3352" i:type="InputFBDPort">
                <Alias z:Ref="65" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1749</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3353" z:Size="1">
                  <FBDPortExtSettings z:Id="3354">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3355" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3356" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">1</d2p1:anyType>
                </Value>
                <VariableName z:Ref="1208" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3357" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3358" z:Size="1">
                  <FBDPortExtSettings z:Id="3359">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3355" i:nil="true" />
                <VariableName z:Id="3360">rez</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3361">
              <EndFBDPort z:Ref="3324" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3362" i:type="OutputFBDPort">
                <Alias z:Id="3363">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1755</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3364" z:Size="1">
                  <FBDPortExtSettings z:Id="3365">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3366">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3367">
              <EndFBDPort z:Id="3368" i:type="InputFBDPort">
                <Alias z:Id="3369">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1753</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3370" z:Size="1">
                  <FBDPortExtSettings z:Id="3371">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3372">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3319" i:nil="true" />
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="3373" z:Size="8">
            <FBDItem z:Id="3374" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1317</Id>
              <InputPortsCollection z:Id="3375" z:Size="0" />
              <InternalPortsCollection z:Id="3376" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3380</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Ref="3261" i:nil="true" />
              <OutputPortsCollection z:Id="3377" z:Size="1">
                <FBDPort z:Ref="3319" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2886" i:nil="true" />
              <SecondName z:Id="3378">_00_A1_DI_05</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3379">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3380" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1319</Id>
              <InputPortsCollection z:Id="3381" z:Size="1">
                <FBDPort z:Ref="3314" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3382" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3760</d8p1:_x>
                <d8p1:_y>3660</d8p1:_y>
              </Location>
              <Name z:Ref="2884" i:nil="true" />
              <OutputPortsCollection z:Id="3383" z:Size="1">
                <FBDPort z:Id="3384" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1321</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3385" z:Size="1">
                    <FBDPortExtSettings z:Id="3386">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3387" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3388" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="2123" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2886" i:nil="true" />
              <SecondName z:Ref="2884" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="275" i:nil="true" />
              <InputFBDPort z:Ref="3314" i:nil="true" />
              <OutputFBDPort z:Ref="3384" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3389" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3390">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1751</Id>
              <InputPortsCollection z:Id="3391" z:Size="2">
                <FBDPort z:Ref="3368" i:nil="true" />
                <FBDPort z:Id="3392" i:type="InputFBDPort">
                  <Alias z:Id="3393">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1754</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3394" z:Size="1">
                    <FBDPortExtSettings z:Id="3395">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3396" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3397" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3398">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3399" z:Size="1">
                <FBDPort z:Id="3400" i:type="InternalFBDPort">
                  <Alias z:Id="3401">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>1752</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="3402" z:Size="2">
                    <FBDPortExtSettings z:Id="3403">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3404">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3405">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3600</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="3406">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="3407" z:Size="2">
                <FBDPort z:Ref="3362" i:nil="true" />
                <FBDPort z:Id="3408" i:type="OutputFBDPort">
                  <Alias z:Id="3409">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1756</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3410" z:Size="1">
                    <FBDPortExtSettings z:Id="3411">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3412">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3413">YART</Prefix>
              <SecondName z:Id="3414">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Id="3415">if(IN != OUT){


	YARTAddScanTask(t[0], t[1]);


	if (t[0] &gt;= TF){


		OUT = IN;


		t[0] = 0; 


		t[1] = 0;


	} 


}else{


	t[0] = 0; 


	t[1] = 0;


}





T = t[0];</Code>
            </FBDItem>
            <FBDItem z:Id="3416" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1745</Id>
              <InputPortsCollection z:Id="3417" z:Size="0" />
              <InternalPortsCollection z:Id="3418" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3850</d8p1:_y>
              </Location>
              <Name z:Id="3419">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="3420" z:Size="1">
                <FBDPort z:Ref="3345" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1225" i:nil="true" />
              <SecondName z:Id="3421">_00_A1_DI_04</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3422">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3423" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1743</Id>
              <InputPortsCollection z:Id="3424" z:Size="0" />
              <InternalPortsCollection z:Id="3425" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Ref="3419" i:nil="true" />
              <OutputPortsCollection z:Id="3426" z:Size="1">
                <FBDPort z:Ref="3338" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1225" i:nil="true" />
              <SecondName z:Id="3427">_00_A1_DI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3428">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3429" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1741</Id>
              <InputPortsCollection z:Id="3430" z:Size="0" />
              <InternalPortsCollection z:Id="3431" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Ref="3419" i:nil="true" />
              <OutputPortsCollection z:Id="3432" z:Size="1">
                <FBDPort z:Ref="3333" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1225" i:nil="true" />
              <SecondName z:Id="3433">_00_A1_DI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="3434">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="3435" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3436">Упаковка массива Bool</Description>
              <HelpID>23</HelpID>
              <Id>1736</Id>
              <InputPortsCollection z:Id="3437" z:Size="1">
                <FBDPort z:Ref="3324" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3438" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3800</d8p1:_x>
                <d8p1:_y>3800</d8p1:_y>
              </Location>
              <Name z:Id="3439">CODER</Name>
              <OutputPortsCollection z:Id="3440" z:Size="1">
                <FBDPort z:Ref="3357" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3441">YART</Prefix>
              <SecondName z:Id="3442">coderByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb08a743-74ef-4983-849b-30926f9e4cce</SpecificationId>
              <Code z:Id="3443">//#CODER (Шифратор для Byte)


//Шифратор Byte


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (mas[i]) rez = rez |k;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="3444" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1748</Id>
              <InputPortsCollection z:Id="3445" z:Size="1">
                <FBDPort z:Ref="3352" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3446" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4060</d8p1:_x>
                <d8p1:_y>3800</d8p1:_y>
              </Location>
              <Name z:Ref="1210" i:nil="true" />
              <OutputPortsCollection z:Id="3447" z:Size="1">
                <FBDPort z:Id="3448" i:type="OutputFBDPort">
                  <Alias z:Ref="65" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1750</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3449" z:Size="1">
                    <FBDPortExtSettings z:Id="3450">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3451" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3452" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="1224" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="1225" i:nil="true" />
              <SecondName z:Ref="1210" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="321" i:nil="true" />
              <InputFBDPort z:Ref="3352" i:nil="true" />
              <OutputFBDPort z:Ref="3448" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="3453">Alarm-1</Name>
          <Parent z:Ref="3309" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>7</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="3454">Alarms</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
  </ProgramPartsCollection>
  <ProjectFBDLibrary xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="3455" z:Size="1">
    <d2p1:anyType z:Id="3456" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="3457" z:Size="0" />
      <Name z:Id="3458">Библиотека проекта</Name>
    </d2p1:anyType>
  </ProjectFBDLibrary>
  <RemotePublicCases z:Id="3459" z:Size="2">
    <RemotePublicCase z:Id="3460">
      <EventTagFlag z:Id="3461">
        <Address>0</Address>
        <AllowPublic>false</AllowPublic>
        <ArraySize>1</ArraySize>
        <Bit>0</Bit>
        <Comments z:Ref="65" i:nil="true" />
        <Id>-1</Id>
        <IsArray>false</IsArray>
        <IsAutoMemory>true</IsAutoMemory>
        <KeepingValue>false</KeepingValue>
        <LocalAddress>0</LocalAddress>
        <MemoryType>RamBit</MemoryType>
        <ModbusAddress>0</ModbusAddress>
        <Name z:Id="3462">Новый параметр -1</Name>
        <ParentId>0</ParentId>
        <ReadOnly>true</ReadOnly>
        <Type>Bool</Type>
        <Value z:Id="3463" xmlns:d5p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d5p1:ArrayOfanyType" z:Size="1">
          <d5p1:anyType z:Id="3464" xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:boolean">false</d5p1:anyType>
        </Value>
      </EventTagFlag>
      <IsOnlyPublic>true</IsOnlyPublic>
      <PublicTags z:Id="3465" z:Size="0" />
    </RemotePublicCase>
    <RemotePublicCase z:Id="3466">
      <EventTagFlag z:Ref="305" i:nil="true" />
      <IsOnlyPublic>false</IsOnlyPublic>
      <PublicTags z:Id="3467" z:Size="6">
        <CustomTag z:Ref="275" i:nil="true" />
        <CustomTag z:Ref="279" i:nil="true" />
        <CustomTag z:Ref="231" i:nil="true" />
        <CustomTag z:Ref="227" i:nil="true" />
        <CustomTag z:Ref="235" i:nil="true" />
        <CustomTag z:Ref="321" i:nil="true" />
      </PublicTags>
    </RemotePublicCase>
  </RemotePublicCases>
  <SafeExtModuleWork>true</SafeExtModuleWork>
  <SerialInterfaces z:Id="3468">
    <SerialPorts z:Id="3469" z:Size="3">
      <SerialPort z:Id="3470">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>1</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
      <SerialPort z:Id="3471">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>2</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
      <SerialPort z:Id="3472">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>3</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
    </SerialPorts>
  </SerialInterfaces>
  <Telemetry z:Id="3473">
    <GPRSProperty z:Id="3474">
      <GPRS_Modem_APN z:Id="3475">
        <Constant z:Id="3476">internet</Constant>
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_APN>
      <GPRS_Modem_Password z:Id="3477">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Password>
      <GPRS_Modem_Username z:Id="3478">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Username>
    </GPRSProperty>
    <TelemetryInterface>Ethernet</TelemetryInterface>
    <TelemetryServers z:Id="3479" z:Size="1">
      <TelemetryServer z:Id="3480">
        <Password z:Id="3481">
          <Constant z:Id="3482">82435RS98</Constant>
          <IsLink>false</IsLink>
          <Link z:Ref="309" i:nil="true" />
        </Password>
        <Port z:Id="3483">
          <Constant z:Id="3484">1883</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Port>
        <TelemetryServerName z:Id="3485">Сервер телеметрии</TelemetryServerName>
        <Timeout z:Id="3486">
          <Constant z:Id="3487">3000</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Timeout>
        <URL z:Id="3488">
          <Constant z:Id="3489">192.168.1.38</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </URL>
        <Username z:Id="3490">
          <Constant z:Id="3491">empty</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Username>
      </TelemetryServer>
    </TelemetryServers>
  </Telemetry>
  <Version xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="3492">
    <d2p1:_Build>0</d2p1:_Build>
    <d2p1:_Major>1</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </Version>
</Program></Project>
</Root>