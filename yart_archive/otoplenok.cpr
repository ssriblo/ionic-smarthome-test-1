<?xml version="1.0" encoding="utf-8"?>
<Root>
  <Header>
    <Version Value="4.0" />
    <ProjectName Value="Отопленок" />
    <ProjectVersion Value="2.0" />
    <ProjectDescription>Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</ProjectDescription>
  </Header>
  <Project>﻿<?xml version="1.0" encoding="utf-8"?>
<Program xmlns:i="http://www.w3.org/2001/XMLSchema-instance" z:Id="1" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" xmlns="http://Cerebrum.ru/Project">
  <BaseDevise z:Id="2">
    <DevName z:Id="3">YART 1.8</DevName>
    <IODeviceCollection z:Id="4" z:Size="26">
      <IODevice z:Id="5" i:type="AIODevice">
        <Alias z:Id="6">AIN_1_WaterT</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="7">AIN_1</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="8" i:type="AIODevice">
        <Alias z:Id="9">AIN_2_RoomT</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Id="10">AIN_2</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="11" i:type="AIODevice">
        <Alias z:Id="12">AIN_3_FLOOD</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Id="13">AIN_3</Name>
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="14" i:type="AIODevice">
        <Alias z:Id="15">AIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="15" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="16" i:type="AIODevice">
        <Alias z:Id="17">AIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Ref="17" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="18" i:type="AIODevice">
        <Alias z:Id="19">AIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Ref="19" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="20" i:type="AIODevice">
        <Alias z:Id="21">AIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="21" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="22" i:type="AIODevice">
        <Alias z:Id="23">AIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="23" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>R</SignalType>
      </IODevice>
      <IODevice z:Id="24" i:type="AIODevice">
        <Alias z:Id="25">AOUT_1</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Ref="25" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="26" i:type="AIODevice">
        <Alias z:Id="27">AOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="27" i:nil="true" />
        <Type>Analog</Type>
        <Diff>false</Diff>
        <Gain>1</Gain>
        <SignalType>U</SignalType>
      </IODevice>
      <IODevice z:Id="28" i:type="DIODevice">
        <Alias z:Id="29">DIN_1_POWER</Alias>
        <Direction>Input</Direction>
        <Index>1</Index>
        <Name z:Id="30">DIN_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="31" i:type="DIODevice">
        <Alias z:Id="32">DIN_2</Alias>
        <Direction>Input</Direction>
        <Index>2</Index>
        <Name z:Ref="32" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="33" i:type="DIODevice">
        <Alias z:Id="34">DIN_3</Alias>
        <Direction>Input</Direction>
        <Index>3</Index>
        <Name z:Ref="34" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="35" i:type="DIODevice">
        <Alias z:Id="36">DIN_4</Alias>
        <Direction>Input</Direction>
        <Index>4</Index>
        <Name z:Ref="36" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="37" i:type="DIODevice">
        <Alias z:Id="38">DIN_5</Alias>
        <Direction>Input</Direction>
        <Index>5</Index>
        <Name z:Id="39">DIN_5</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="40" i:type="DIODevice">
        <Alias z:Id="41">DIN_6</Alias>
        <Direction>Input</Direction>
        <Index>6</Index>
        <Name z:Id="42">DIN_6</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="43" i:type="DIODevice">
        <Alias z:Id="44">DIN_7</Alias>
        <Direction>Input</Direction>
        <Index>7</Index>
        <Name z:Ref="44" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="45" i:type="DIODevice">
        <Alias z:Id="46">DIN_8</Alias>
        <Direction>Input</Direction>
        <Index>8</Index>
        <Name z:Ref="46" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="47" i:type="DIODevice">
        <Alias z:Id="48">DOUT_1_WaterPWM</Alias>
        <Direction>Output</Direction>
        <Index>1</Index>
        <Name z:Id="49">DOUT_1</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="50" i:type="DIODevice">
        <Alias z:Id="51">DOUT_2</Alias>
        <Direction>Output</Direction>
        <Index>2</Index>
        <Name z:Ref="51" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="52" i:type="DIODevice">
        <Alias z:Id="53">DOUT_3</Alias>
        <Direction>Output</Direction>
        <Index>3</Index>
        <Name z:Id="54">DOUT_3</Name>
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
        <SignalType>Pwm</SignalType>
      </IODevice>
      <IODevice z:Id="55" i:type="DIODevice">
        <Alias z:Id="56">DOUT_4</Alias>
        <Direction>Output</Direction>
        <Index>4</Index>
        <Name z:Ref="56" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="57" i:type="DIODevice">
        <Alias z:Id="58">DOUT_5</Alias>
        <Direction>Output</Direction>
        <Index>5</Index>
        <Name z:Ref="58" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="59" i:type="DIODevice">
        <Alias z:Id="60">DOUT_6</Alias>
        <Direction>Output</Direction>
        <Index>6</Index>
        <Name z:Ref="60" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="61" i:type="DIODevice">
        <Alias z:Id="62">DOUT_7</Alias>
        <Direction>Output</Direction>
        <Index>7</Index>
        <Name z:Ref="62" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
      <IODevice z:Id="63" i:type="DIODevice">
        <Alias z:Id="64">DOUT_8</Alias>
        <Direction>Output</Direction>
        <Index>8</Index>
        <Name z:Ref="64" i:nil="true" />
        <Type>Discrete</Type>
        <Base>3</Base>
        <Filter>15</Filter>
        <HPWMPeriod>65535</HPWMPeriod>
      </IODevice>
    </IODeviceCollection>
    <PLCId>52737</PLCId>
  </BaseDevise>
  <Build>0</Build>
  <CustomListsCollection z:Id="65" z:Size="9">
    <CustomList z:Id="66">
      <Comments z:Id="67"></Comments>
      <Description i:nil="true" />
      <Id>99</Id>
      <Name z:Id="68">Otoplenok</Name>
      <ParentID>0</ParentID>
    </CustomList>
    <CustomList z:Id="69">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>684</Id>
      <Name z:Id="70">MODBUS_Read</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="71">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1242</Id>
      <Name z:Id="72">Serial</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="73">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1243</Id>
      <Name z:Id="74">TemperaturesControl</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="75">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1322</Id>
      <Name z:Id="76">Alarms</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="77">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1326</Id>
      <Name z:Id="78">Meters</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="79">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1725</Id>
      <Name z:Id="80">Connection</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="81">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>1763</Id>
      <Name z:Id="82">YartLink</Name>
      <ParentID>99</ParentID>
    </CustomList>
    <CustomList z:Id="83">
      <Comments z:Ref="67" i:nil="true" />
      <Description i:nil="true" />
      <Id>2971</Id>
      <Name z:Id="84">TimeTable</Name>
      <ParentID>99</ParentID>
    </CustomList>
  </CustomListsCollection>
  <CustomTagsCollection z:Id="85" z:Size="85">
    <CustomTag z:Id="86">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="87">MERCURY 206</Comments>
      <Id>1970</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="88">ElectroMeterT1</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="89" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="90" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="91">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>135</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="92">Начать чтение</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="93" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="94" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">true</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="95">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>136</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="96">Адрес первого IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="97" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="98" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="99">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>260</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="100">Адрес первого HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="101" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="102" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">65</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="103">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>347</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="104">Адрес первого CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="105" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="106" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="107">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>416</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="108">Адрес первого DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="109" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="110" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="111">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>123</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="112">MB1TD_IR_Temperature_x10</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="113" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="114" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="115">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>261</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="116">Чтение одного HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="117" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="118" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="119">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>348</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="120">Чтение одного CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="121" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="122" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="123">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>417</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="124">Чтение одного DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="125" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="126" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="127">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>124</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="128">Чтение десяти IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="129" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="130" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="131" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="132" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="133" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="134" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="135" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="136" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="137" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="138" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="139" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="140">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>262</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="141">Чтение десяти HR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="142" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="143" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="144" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="145" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="146" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="147" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="148" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="149" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="150" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="151" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="152" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="153">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>349</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="154">Чтение десяти CS</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="155" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="156" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="157" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="158" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="159" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="160" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="161" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="162" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="163" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="164" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="165" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="166">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>10</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>418</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="167">Чтение десяти DI</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="168" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="10">
        <d4p1:anyType z:Id="169" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="170" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="171" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="172" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="173" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="174" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="175" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="176" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="177" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="178" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="179">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1043</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="180">Repeat IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="181" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="182" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="183">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1049</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="184">Timeout IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="185" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="186" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="187">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1053</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="188">RegCnt</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="189" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="190" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="191">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>20</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1095</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="192">Read 20 IR</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="193" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="20">
        <d4p1:anyType z:Id="194" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="195" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="196" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="197" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="198" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="199" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="200" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="201" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="202" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="203" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="204" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="205" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="206" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="207" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="208" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="209" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="210" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="211" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="212" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="213" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="214">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>767</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="215">Timeout</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="216" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="217" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1300</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="218">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>109</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="219">Параметры COM3 485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="220" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="221" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="222">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>134</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="223">Сетевой адрес устройства</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="224" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="225" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="226">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>100</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="227">COM3 порт 485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="228" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="229" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">3</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="230">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>101</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="231">Baudrate</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="232" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="233" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">4</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="234">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>768</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="235">Retries</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="236" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="237" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="238">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1216</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="239">RoomT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="240" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="241" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="242">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1244</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="243">WaterT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="244" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="245" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="246">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1271</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="247">TargetT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="248" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="249" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">250</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="250">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1276</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="251">Kp_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="252" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="253" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">10</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="254">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1282</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="255">Ki_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="256" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="257" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.03</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="258">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1283</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="259">Kd_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="260" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="261" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="262">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>17</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1298</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="263">Buffer_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="264" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="17">
        <d4p1:anyType z:Id="265" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="266" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="267" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="268" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="269" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="270" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="271" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="272" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="273" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="274" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="275" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="276" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="277" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="278" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="279" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="280" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="281" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="282">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1302</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="283">TestAuto_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="284" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="285" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="286">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1323</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="287">Alarm1</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="288" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="289" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="290">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1601</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="291">X_PWM_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="292" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="293" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">-100</d4p1:anyType>
        <d4p1:anyType z:Id="294" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="295" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">100</d4p1:anyType>
        <d4p1:anyType z:Id="296" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">200</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="297">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>4</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1602</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="298">Y_PWM_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="299" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="4">
        <d4p1:anyType z:Id="300" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="301" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="302" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
        <d4p1:anyType z:Id="303" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="304">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1712</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="305">TargetT_shifted</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="306" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="307" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="308">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1195</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>false</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="309">публикатор_1195</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="310" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="311" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="312">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>14</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="313">193.124.56.188</Comments>
      <Id>1988</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="314">IP GW</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="315" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="14">
        <d4p1:anyType z:Id="316" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="317" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="318" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="319" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="320" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="321" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="322" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="323" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="324" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="325" i:type="z:char">54</d4p1:anyType>
        <d4p1:anyType z:Id="326" i:type="z:char">46</d4p1:anyType>
        <d4p1:anyType z:Id="327" i:type="z:char">49</d4p1:anyType>
        <d4p1:anyType z:Id="328" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="329" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="330">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>9</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1727</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="331">CloudPassword</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Char</Type>
      <Value z:Id="332" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="9">
        <d4p1:anyType z:Id="333" i:type="z:char">56</d4p1:anyType>
        <d4p1:anyType z:Id="334" i:type="z:char">50</d4p1:anyType>
        <d4p1:anyType z:Id="335" i:type="z:char">52</d4p1:anyType>
        <d4p1:anyType z:Id="336" i:type="z:char">51</d4p1:anyType>
        <d4p1:anyType z:Id="337" i:type="z:char">53</d4p1:anyType>
        <d4p1:anyType z:Id="338" i:type="z:char">82</d4p1:anyType>
        <d4p1:anyType z:Id="339" i:type="z:char">83</d4p1:anyType>
        <d4p1:anyType z:Id="340" i:type="z:char">57</d4p1:anyType>
        <d4p1:anyType z:Id="341" i:type="z:char">56</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="342">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1747</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="343">Alarm_B</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="344" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="345" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="346">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1764</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="347">IP источника</Name>
      <ParentId>1763</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="348" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="349" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="350">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1765</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="351">Период отправки</Name>
      <ParentId>1763</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="352" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="353" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1000</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="354">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1919</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="355">COM2 port i485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="356" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="357" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">2</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="358">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1923</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="359">Параметры COM2 i485</Name>
      <ParentId>1242</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="360" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="361" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="362">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="363">MERCURY 206</Comments>
      <Id>1971</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="364">ElectroMeterT2</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="365" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="366" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="367">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2074</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="368">max_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="369" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="370" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="371">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2075</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="372">min_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="373" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="374" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">-1</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="375">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2096</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="376">Pt_K</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="377" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="378" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0.0001</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="379">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2126</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="380">AIN_3_FLOOD_U</Name>
      <ParentId>1322</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="381" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="382" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="383">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>5</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2157</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="384">Protey15_IR_array_1</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="385" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="5">
        <d4p1:anyType z:Id="386" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="387" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="388" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="389" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="390" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="391">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2309</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="392">DiffErrReset</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="393" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="394" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="395">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2325</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="396">PZA_SETUP</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="397" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="398" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">29</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="399">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2554</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="400">Button</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="401" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="402" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="403">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>1680</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="404">PWM_value</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="405" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="406" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="407">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2624</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="408">PWM_Val_0_100</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="409" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="410" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="411">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>7</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2643</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="412">X_PZA_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="413" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="7">
        <d4p1:anyType z:Id="414" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">25</d4p1:anyType>
        <d4p1:anyType z:Id="415" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">30</d4p1:anyType>
        <d4p1:anyType z:Id="416" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">35</d4p1:anyType>
        <d4p1:anyType z:Id="417" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">50</d4p1:anyType>
        <d4p1:anyType z:Id="418" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">60</d4p1:anyType>
        <d4p1:anyType z:Id="419" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">70</d4p1:anyType>
        <d4p1:anyType z:Id="420" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">100</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="421">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>7</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2644</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="422">Y_PZA_array</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="423" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="7">
        <d4p1:anyType z:Id="424" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">10</d4p1:anyType>
        <d4p1:anyType z:Id="425" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">15</d4p1:anyType>
        <d4p1:anyType z:Id="426" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">18</d4p1:anyType>
        <d4p1:anyType z:Id="427" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">28</d4p1:anyType>
        <d4p1:anyType z:Id="428" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">35</d4p1:anyType>
        <d4p1:anyType z:Id="429" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">53</d4p1:anyType>
        <d4p1:anyType z:Id="430" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">75</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="431">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="432">градусы Цельсия
</Comments>
      <Id>2817</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="433">MB1TD_Temperature</Name>
      <ParentId>684</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="434" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="435" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="436">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="437">PROTEY </Comments>
      <Id>2835</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="438">WaterColdMeter_lit_x1000</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="439" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="440" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="441">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>8</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2942</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="442">Array_F8_2Server</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="443" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="8">
        <d4p1:anyType z:Id="444" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="445" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="446" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="447" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="448" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="449" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="450" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
        <d4p1:anyType z:Id="451" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="452">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>2</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2946</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="453">Array_B2_2Server</Name>
      <ParentId>1725</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="454" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="2">
        <d4p1:anyType z:Id="455" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="456" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="457">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2956</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>45312</LocalAddress>
      <MemoryType>Fram</MemoryType>
      <ModbusAddress>22655</ModbusAddress>
      <Name z:Id="458">WeatherT</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="459" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="460" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="461">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="462">Meter (PROTEY) is not installed at the stend</Comments>
      <Id>2960</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="463">WaterHotMeter_lit_x1000</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Int</Type>
      <Value z:Id="464" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="465" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="466">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="467">WarmMeter is not installed yet at the stend</Comments>
      <Id>2967</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="468">WarmMeter</Name>
      <ParentId>1326</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="469" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="470" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="471">
      <Address>0</Address>
      <AllowPublic>true</AllowPublic>
      <ArraySize>16</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="472">0 - MODE [0 - User; 1 - TimeTable]
1 - ComfortT byte0 (x10 градусов)
2 - ComfortT byte1 (x10 градусов)
3 - EconomT byte 0 (x10 градусов)
4 - EconomT byte1 (x10 градусов)
5 - Status [TBD]
6 - Reserve
7 - Start 0
8 - End 0
9 - Start 1
10 - End 1
11 - Start 2
12 - End 2
13 - tt_days[0] [false, false, false, false, false, false, false],
14 - tt_days[1] [false, false, false, false, false, false, false],
15 - tt_days[2] [false, false, false, false, false, false, false],

</Comments>
      <Id>2972</Id>
      <IsArray>true</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="473">TimeTableArray</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="474" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="16">
        <d4p1:anyType z:Id="475" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">0</d4p1:anyType>
        <d4p1:anyType z:Id="476" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">240</d4p1:anyType>
        <d4p1:anyType z:Id="477" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="478" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:decimal">180</d4p1:anyType>
        <d4p1:anyType z:Id="479" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="480" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="481" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="482" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="483" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">24</d4p1:anyType>
        <d4p1:anyType z:Id="484" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="485" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">24</d4p1:anyType>
        <d4p1:anyType z:Id="486" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
        <d4p1:anyType z:Id="487" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">24</d4p1:anyType>
        <d4p1:anyType z:Id="488" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">16</d4p1:anyType>
        <d4p1:anyType z:Id="489" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">16</d4p1:anyType>
        <d4p1:anyType z:Id="490" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">16</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="491">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="492">0-USER;  1-TIMETABLE</Comments>
      <Id>2979</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="493">MODE</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="494" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="495" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="496">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="497">x10 градусов</Comments>
      <Id>2983</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="498">ComfortT</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="499" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="500" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="501">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="502">x10 градусов</Comments>
      <Id>2984</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="503">EconomT</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="504" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="505" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="506">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2985</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="507">Status</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="508" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="509" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="510">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2986</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="511">start_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="512" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="513" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="514">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2987</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="515">end_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="516" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="517" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="518">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2988</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="519">start_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="520" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="521" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="522">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2989</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="523">end_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="524" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="525" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="526">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2990</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="527">start_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="528" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="529" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="530">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>2991</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="531">end_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="532" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="533" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="534">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="535">биты [0:6] - [Пн Вт Ср Чт Пт Сб Вс]</Comments>
      <Id>2992</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="536">tt_days_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="537" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="538" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="539">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="540">биты [0:6] - [Пн Вт Ср Чт Пт Сб Вс]</Comments>
      <Id>2993</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="541">tt_days_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="542" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="543" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="544">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="545">биты [0:6] - [Пн Вт Ср Чт Пт Сб Вс]</Comments>
      <Id>2994</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="546">tt_days_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="547" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="548" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="549">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Id="550">1 - Пн; 7 - Вс</Comments>
      <Id>3037</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="551">WeekDay</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="552" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="553" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="554">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3126</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="555">hour</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Byte</Type>
      <Value z:Id="556" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="557" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="558">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3184</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="559">isInterval_1</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="560" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="561" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="562">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3185</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="563">isInterval_2</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="564" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="565" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="566">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3186</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>0</LocalAddress>
      <MemoryType>RamBit</MemoryType>
      <ModbusAddress>0</ModbusAddress>
      <Name z:Id="567">isInterval_0</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Bool</Type>
      <Value z:Id="568" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="569" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:boolean">false</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="570">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3230</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="571">TT_TargetT</Name>
      <ParentId>2971</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Short</Type>
      <Value z:Id="572" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="573" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:int">0</d4p1:anyType>
      </Value>
    </CustomTag>
    <CustomTag z:Id="574">
      <Address>0</Address>
      <AllowPublic>false</AllowPublic>
      <ArraySize>1</ArraySize>
      <Bit>0</Bit>
      <Comments z:Ref="67" i:nil="true" />
      <Id>3267</Id>
      <IsArray>false</IsArray>
      <IsAutoMemory>true</IsAutoMemory>
      <KeepingValue>false</KeepingValue>
      <LocalAddress>4596</LocalAddress>
      <MemoryType>Ram</MemoryType>
      <ModbusAddress>2297</ModbusAddress>
      <Name z:Id="575">Target_PID</Name>
      <ParentId>1243</ParentId>
      <ReadOnly>true</ReadOnly>
      <Type>Float</Type>
      <Value z:Id="576" xmlns:d4p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d4p1:ArrayOfanyType" z:Size="1">
        <d4p1:anyType z:Id="577" xmlns:d5p1="http://www.w3.org/2001/XMLSchema" i:type="d5p1:double">0</d4p1:anyType>
      </Value>
    </CustomTag>
  </CustomTagsCollection>
  <Description z:Id="578">Стенд демонстрации возможности системы управления отоплением, контроля протечки и сбором данных со счетчиков квартиры</Description>
  <DeviceSpecificationId>52737</DeviceSpecificationId>
  <Devices xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="579" z:Size="1">
    <d2p1:anyType z:Ref="2" i:nil="true" />
  </Devices>
  <GlobalIdCounter>3299</GlobalIdCounter>
  <Id>f71354af-7d88-42bb-a1ac-f5413ff0a57c</Id>
  <LastBuildTimestamp>2020-12-11T17:49:32.0930941+03:00</LastBuildTimestamp>
  <LocalArchive z:Id="580" z:Size="0" />
  <MemoryInfo z:Id="581">
    <AlgMem z:Id="582">
      <AMX>56492</AMX>
      <CRC>4</CRC>
      <Capacity>655360</Capacity>
      <DefaultValues>288</DefaultValues>
      <ExtModules>8</ExtModules>
      <Header>72</Header>
      <LocalArchive>0</LocalArchive>
      <MapMemory>5376</MapMemory>
      <ProjectDesc>40</ProjectDesc>
      <PublicTags>48</PublicTags>
      <Var>2736</Var>
    </AlgMem>
    <BRam z:Id="583">
      <Capacity>4080</Capacity>
      <Used>0</Used>
    </BRam>
    <BitFRam z:Id="584">
      <Capacity>2048</Capacity>
      <Used>0</Used>
    </BitFRam>
    <BitRam z:Id="585">
      <Capacity>2048</Capacity>
      <Used>113</Used>
    </BitRam>
    <FRam z:Id="586">
      <Capacity>15104</Capacity>
      <Used>56</Used>
    </FRam>
    <Ram z:Id="587">
      <Capacity>32012</Capacity>
      <Used>1730</Used>
    </Ram>
    <Statistics z:Id="588">Статистика программы:
Блоков переменных: 122
Блоков кода: 120
Блоков констант: 11
Общее кол-во блоков: 270

Переменные: 85
Списков публикации: 2
Переменных в списках публикации: 10
Связей блоков: 244
Входы как константа: 60
</Statistics>
  </MemoryInfo>
  <MemoryMapStore z:Id="589">
    <Items xmlns:d3p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="590" z:Size="448">
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1970</d3p1:Key>
        <d3p1:Value z:Id="591">
          <Address z:Id="592">
            <ArrayCount>1</ArrayCount>
            <Location>4776</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="593" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>1970</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>135</d3p1:Key>
        <d3p1:Value z:Id="594">
          <Address z:Id="595">
            <ArrayCount>1</ArrayCount>
            <Location>9</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="596" z:Size="1">
            <d3p1:anyType z:Ref="94" i:nil="true" />
          </DefaultValues>
          <Id>135</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>136</d3p1:Key>
        <d3p1:Value z:Id="597">
          <Address z:Id="598">
            <ArrayCount>1</ArrayCount>
            <Location>4780</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="599" z:Size="1">
            <d3p1:anyType z:Ref="98" i:nil="true" />
          </DefaultValues>
          <Id>136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>260</d3p1:Key>
        <d3p1:Value z:Id="600">
          <Address z:Id="601">
            <ArrayCount>1</ArrayCount>
            <Location>4784</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="602" z:Size="1">
            <d3p1:anyType z:Ref="102" i:nil="true" />
          </DefaultValues>
          <Id>260</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>347</d3p1:Key>
        <d3p1:Value z:Id="603">
          <Address z:Id="604">
            <ArrayCount>1</ArrayCount>
            <Location>4786</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="605" z:Size="1">
            <d3p1:anyType z:Ref="106" i:nil="true" />
          </DefaultValues>
          <Id>347</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>416</d3p1:Key>
        <d3p1:Value z:Id="606">
          <Address z:Id="607">
            <ArrayCount>1</ArrayCount>
            <Location>4788</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="608" z:Size="1">
            <d3p1:anyType z:Ref="110" i:nil="true" />
          </DefaultValues>
          <Id>416</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>123</d3p1:Key>
        <d3p1:Value z:Id="609">
          <Address z:Id="610">
            <ArrayCount>1</ArrayCount>
            <Location>4790</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="611" z:Size="1">
            <d3p1:anyType z:Ref="114" i:nil="true" />
          </DefaultValues>
          <Id>123</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>261</d3p1:Key>
        <d3p1:Value z:Id="612">
          <Address z:Id="613">
            <ArrayCount>1</ArrayCount>
            <Location>4792</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="614" z:Size="1">
            <d3p1:anyType z:Ref="118" i:nil="true" />
          </DefaultValues>
          <Id>261</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>348</d3p1:Key>
        <d3p1:Value z:Id="615">
          <Address z:Id="616">
            <ArrayCount>1</ArrayCount>
            <Location>4794</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="617" z:Size="1">
            <d3p1:anyType z:Ref="122" i:nil="true" />
          </DefaultValues>
          <Id>348</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>417</d3p1:Key>
        <d3p1:Value z:Id="618">
          <Address z:Id="619">
            <ArrayCount>1</ArrayCount>
            <Location>4796</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="620" z:Size="1">
            <d3p1:anyType z:Ref="126" i:nil="true" />
          </DefaultValues>
          <Id>417</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>124</d3p1:Key>
        <d3p1:Value z:Id="621">
          <Address z:Id="622">
            <ArrayCount>10</ArrayCount>
            <Location>4798</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="623" z:Size="10">
            <d3p1:anyType z:Ref="130" i:nil="true" />
            <d3p1:anyType z:Ref="131" i:nil="true" />
            <d3p1:anyType z:Ref="132" i:nil="true" />
            <d3p1:anyType z:Ref="133" i:nil="true" />
            <d3p1:anyType z:Ref="134" i:nil="true" />
            <d3p1:anyType z:Ref="135" i:nil="true" />
            <d3p1:anyType z:Ref="136" i:nil="true" />
            <d3p1:anyType z:Ref="137" i:nil="true" />
            <d3p1:anyType z:Ref="138" i:nil="true" />
            <d3p1:anyType z:Ref="139" i:nil="true" />
          </DefaultValues>
          <Id>124</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>262</d3p1:Key>
        <d3p1:Value z:Id="624">
          <Address z:Id="625">
            <ArrayCount>10</ArrayCount>
            <Location>4818</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="626" z:Size="10">
            <d3p1:anyType z:Ref="143" i:nil="true" />
            <d3p1:anyType z:Ref="144" i:nil="true" />
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
            <d3p1:anyType z:Ref="151" i:nil="true" />
            <d3p1:anyType z:Ref="152" i:nil="true" />
          </DefaultValues>
          <Id>262</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>349</d3p1:Key>
        <d3p1:Value z:Id="627">
          <Address z:Id="628">
            <ArrayCount>10</ArrayCount>
            <Location>4838</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="629" z:Size="10">
            <d3p1:anyType z:Ref="156" i:nil="true" />
            <d3p1:anyType z:Ref="157" i:nil="true" />
            <d3p1:anyType z:Ref="158" i:nil="true" />
            <d3p1:anyType z:Ref="159" i:nil="true" />
            <d3p1:anyType z:Ref="160" i:nil="true" />
            <d3p1:anyType z:Ref="161" i:nil="true" />
            <d3p1:anyType z:Ref="162" i:nil="true" />
            <d3p1:anyType z:Ref="163" i:nil="true" />
            <d3p1:anyType z:Ref="164" i:nil="true" />
            <d3p1:anyType z:Ref="165" i:nil="true" />
          </DefaultValues>
          <Id>349</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>418</d3p1:Key>
        <d3p1:Value z:Id="630">
          <Address z:Id="631">
            <ArrayCount>10</ArrayCount>
            <Location>4858</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="632" z:Size="10">
            <d3p1:anyType z:Ref="169" i:nil="true" />
            <d3p1:anyType z:Ref="170" i:nil="true" />
            <d3p1:anyType z:Ref="171" i:nil="true" />
            <d3p1:anyType z:Ref="172" i:nil="true" />
            <d3p1:anyType z:Ref="173" i:nil="true" />
            <d3p1:anyType z:Ref="174" i:nil="true" />
            <d3p1:anyType z:Ref="175" i:nil="true" />
            <d3p1:anyType z:Ref="176" i:nil="true" />
            <d3p1:anyType z:Ref="177" i:nil="true" />
            <d3p1:anyType z:Ref="178" i:nil="true" />
          </DefaultValues>
          <Id>418</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1043</d3p1:Key>
        <d3p1:Value z:Id="633">
          <Address z:Id="634">
            <ArrayCount>1</ArrayCount>
            <Location>4878</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="635" z:Size="1">
            <d3p1:anyType z:Ref="182" i:nil="true" />
          </DefaultValues>
          <Id>1043</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1049</d3p1:Key>
        <d3p1:Value z:Id="636">
          <Address z:Id="637">
            <ArrayCount>1</ArrayCount>
            <Location>4880</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="638" z:Size="1">
            <d3p1:anyType z:Ref="186" i:nil="true" />
          </DefaultValues>
          <Id>1049</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1053</d3p1:Key>
        <d3p1:Value z:Id="639">
          <Address z:Id="640">
            <ArrayCount>1</ArrayCount>
            <Location>4884</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="641" z:Size="1">
            <d3p1:anyType z:Ref="190" i:nil="true" />
          </DefaultValues>
          <Id>1053</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1095</d3p1:Key>
        <d3p1:Value z:Id="642">
          <Address z:Id="643">
            <ArrayCount>20</ArrayCount>
            <Location>4886</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="644" z:Size="20">
            <d3p1:anyType z:Ref="194" i:nil="true" />
            <d3p1:anyType z:Ref="195" i:nil="true" />
            <d3p1:anyType z:Ref="196" i:nil="true" />
            <d3p1:anyType z:Ref="197" i:nil="true" />
            <d3p1:anyType z:Ref="198" i:nil="true" />
            <d3p1:anyType z:Ref="199" i:nil="true" />
            <d3p1:anyType z:Ref="200" i:nil="true" />
            <d3p1:anyType z:Ref="201" i:nil="true" />
            <d3p1:anyType z:Ref="202" i:nil="true" />
            <d3p1:anyType z:Ref="203" i:nil="true" />
            <d3p1:anyType z:Ref="204" i:nil="true" />
            <d3p1:anyType z:Ref="205" i:nil="true" />
            <d3p1:anyType z:Ref="206" i:nil="true" />
            <d3p1:anyType z:Ref="207" i:nil="true" />
            <d3p1:anyType z:Ref="208" i:nil="true" />
            <d3p1:anyType z:Ref="209" i:nil="true" />
            <d3p1:anyType z:Ref="210" i:nil="true" />
            <d3p1:anyType z:Ref="211" i:nil="true" />
            <d3p1:anyType z:Ref="212" i:nil="true" />
            <d3p1:anyType z:Ref="213" i:nil="true" />
          </DefaultValues>
          <Id>1095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>767</d3p1:Key>
        <d3p1:Value z:Id="645">
          <Address z:Id="646">
            <ArrayCount>1</ArrayCount>
            <Location>4926</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="647" z:Size="1">
            <d3p1:anyType z:Ref="217" i:nil="true" />
          </DefaultValues>
          <Id>767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>109</d3p1:Key>
        <d3p1:Value z:Id="648">
          <Address z:Id="649">
            <ArrayCount>1</ArrayCount>
            <Location>4928</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="650" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>134</d3p1:Key>
        <d3p1:Value z:Id="651">
          <Address z:Id="652">
            <ArrayCount>1</ArrayCount>
            <Location>4930</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="653" z:Size="1">
            <d3p1:anyType z:Ref="225" i:nil="true" />
          </DefaultValues>
          <Id>134</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>100</d3p1:Key>
        <d3p1:Value z:Id="654">
          <Address z:Id="655">
            <ArrayCount>1</ArrayCount>
            <Location>4932</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="656" z:Size="1">
            <d3p1:anyType z:Ref="229" i:nil="true" />
          </DefaultValues>
          <Id>100</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>101</d3p1:Key>
        <d3p1:Value z:Id="657">
          <Address z:Id="658">
            <ArrayCount>1</ArrayCount>
            <Location>4934</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="659" z:Size="1">
            <d3p1:anyType z:Ref="233" i:nil="true" />
          </DefaultValues>
          <Id>101</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>768</d3p1:Key>
        <d3p1:Value z:Id="660">
          <Address z:Id="661">
            <ArrayCount>1</ArrayCount>
            <Location>4936</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="662" z:Size="1">
            <d3p1:anyType z:Ref="237" i:nil="true" />
          </DefaultValues>
          <Id>768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1216</d3p1:Key>
        <d3p1:Value z:Id="663">
          <Address z:Id="664">
            <ArrayCount>1</ArrayCount>
            <Location>4938</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="665" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>1216</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1244</d3p1:Key>
        <d3p1:Value z:Id="666">
          <Address z:Id="667">
            <ArrayCount>1</ArrayCount>
            <Location>4942</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="668" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>1244</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1271</d3p1:Key>
        <d3p1:Value z:Id="669">
          <Address z:Id="670">
            <ArrayCount>1</ArrayCount>
            <Location>45312</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="671" z:Size="1">
            <d3p1:anyType z:Ref="249" i:nil="true" />
          </DefaultValues>
          <Id>1271</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1276</d3p1:Key>
        <d3p1:Value z:Id="672">
          <Address z:Id="673">
            <ArrayCount>1</ArrayCount>
            <Location>45316</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="674" z:Size="1">
            <d3p1:anyType z:Ref="253" i:nil="true" />
          </DefaultValues>
          <Id>1276</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1282</d3p1:Key>
        <d3p1:Value z:Id="675">
          <Address z:Id="676">
            <ArrayCount>1</ArrayCount>
            <Location>45320</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="677" z:Size="1">
            <d3p1:anyType z:Ref="257" i:nil="true" />
          </DefaultValues>
          <Id>1282</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1283</d3p1:Key>
        <d3p1:Value z:Id="678">
          <Address z:Id="679">
            <ArrayCount>1</ArrayCount>
            <Location>45324</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="680" z:Size="1">
            <d3p1:anyType z:Ref="261" i:nil="true" />
          </DefaultValues>
          <Id>1283</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1298</d3p1:Key>
        <d3p1:Value z:Id="681">
          <Address z:Id="682">
            <ArrayCount>17</ArrayCount>
            <Location>4946</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="683" z:Size="17">
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
            <d3p1:anyType z:Ref="271" i:nil="true" />
            <d3p1:anyType z:Ref="272" i:nil="true" />
            <d3p1:anyType z:Ref="273" i:nil="true" />
            <d3p1:anyType z:Ref="274" i:nil="true" />
            <d3p1:anyType z:Ref="275" i:nil="true" />
            <d3p1:anyType z:Ref="276" i:nil="true" />
            <d3p1:anyType z:Ref="277" i:nil="true" />
            <d3p1:anyType z:Ref="278" i:nil="true" />
            <d3p1:anyType z:Ref="279" i:nil="true" />
            <d3p1:anyType z:Ref="280" i:nil="true" />
            <d3p1:anyType z:Ref="281" i:nil="true" />
          </DefaultValues>
          <Id>1298</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1302</d3p1:Key>
        <d3p1:Value z:Id="684">
          <Address z:Id="685">
            <ArrayCount>1</ArrayCount>
            <Location>10</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="686" z:Size="1">
            <d3p1:anyType z:Ref="285" i:nil="true" />
          </DefaultValues>
          <Id>1302</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1323</d3p1:Key>
        <d3p1:Value z:Id="687">
          <Address z:Id="688">
            <ArrayCount>1</ArrayCount>
            <Location>11</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="689" z:Size="1">
            <d3p1:anyType z:Ref="289" i:nil="true" />
          </DefaultValues>
          <Id>1323</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1601</d3p1:Key>
        <d3p1:Value z:Id="690">
          <Address z:Id="691">
            <ArrayCount>4</ArrayCount>
            <Location>5014</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="692" z:Size="4">
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
            <d3p1:anyType z:Ref="295" i:nil="true" />
            <d3p1:anyType z:Ref="296" i:nil="true" />
          </DefaultValues>
          <Id>1601</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1602</d3p1:Key>
        <d3p1:Value z:Id="693">
          <Address z:Id="694">
            <ArrayCount>4</ArrayCount>
            <Location>5030</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="695" z:Size="4">
            <d3p1:anyType z:Ref="300" i:nil="true" />
            <d3p1:anyType z:Ref="301" i:nil="true" />
            <d3p1:anyType z:Ref="302" i:nil="true" />
            <d3p1:anyType z:Ref="303" i:nil="true" />
          </DefaultValues>
          <Id>1602</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1712</d3p1:Key>
        <d3p1:Value z:Id="696">
          <Address z:Id="697">
            <ArrayCount>1</ArrayCount>
            <Location>5046</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="698" z:Size="1">
            <d3p1:anyType z:Ref="307" i:nil="true" />
          </DefaultValues>
          <Id>1712</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1195</d3p1:Key>
        <d3p1:Value z:Id="699">
          <Address z:Id="700">
            <ArrayCount>1</ArrayCount>
            <Location>0</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="701" z:Size="1">
            <d3p1:anyType z:Ref="311" i:nil="true" />
          </DefaultValues>
          <Id>1195</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1988</d3p1:Key>
        <d3p1:Value z:Id="702">
          <Address z:Id="703">
            <ArrayCount>14</ArrayCount>
            <Location>45328</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="704" z:Size="14">
            <d3p1:anyType z:Ref="316" i:nil="true" />
            <d3p1:anyType z:Ref="317" i:nil="true" />
            <d3p1:anyType z:Ref="318" i:nil="true" />
            <d3p1:anyType z:Ref="319" i:nil="true" />
            <d3p1:anyType z:Ref="320" i:nil="true" />
            <d3p1:anyType z:Ref="321" i:nil="true" />
            <d3p1:anyType z:Ref="322" i:nil="true" />
            <d3p1:anyType z:Ref="323" i:nil="true" />
            <d3p1:anyType z:Ref="324" i:nil="true" />
            <d3p1:anyType z:Ref="325" i:nil="true" />
            <d3p1:anyType z:Ref="326" i:nil="true" />
            <d3p1:anyType z:Ref="327" i:nil="true" />
            <d3p1:anyType z:Ref="328" i:nil="true" />
            <d3p1:anyType z:Ref="329" i:nil="true" />
          </DefaultValues>
          <Id>1988</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1727</d3p1:Key>
        <d3p1:Value z:Id="705">
          <Address z:Id="706">
            <ArrayCount>9</ArrayCount>
            <Location>45342</Location>
            <MemType>Fram</MemType>
            <ValueType>Char</ValueType>
          </Address>
          <DefaultValues z:Id="707" z:Size="9">
            <d3p1:anyType z:Ref="333" i:nil="true" />
            <d3p1:anyType z:Ref="334" i:nil="true" />
            <d3p1:anyType z:Ref="335" i:nil="true" />
            <d3p1:anyType z:Ref="336" i:nil="true" />
            <d3p1:anyType z:Ref="337" i:nil="true" />
            <d3p1:anyType z:Ref="338" i:nil="true" />
            <d3p1:anyType z:Ref="339" i:nil="true" />
            <d3p1:anyType z:Ref="340" i:nil="true" />
            <d3p1:anyType z:Ref="341" i:nil="true" />
          </DefaultValues>
          <Id>1727</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1747</d3p1:Key>
        <d3p1:Value z:Id="708">
          <Address z:Id="709">
            <ArrayCount>1</ArrayCount>
            <Location>5050</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="710" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>1747</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1764</d3p1:Key>
        <d3p1:Value z:Id="711">
          <Address z:Id="712">
            <ArrayCount>1</ArrayCount>
            <Location>5052</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="713" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>1764</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1765</d3p1:Key>
        <d3p1:Value z:Id="714">
          <Address z:Id="715">
            <ArrayCount>1</ArrayCount>
            <Location>5056</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="716" z:Size="1">
            <d3p1:anyType z:Ref="353" i:nil="true" />
          </DefaultValues>
          <Id>1765</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1919</d3p1:Key>
        <d3p1:Value z:Id="717">
          <Address z:Id="718">
            <ArrayCount>1</ArrayCount>
            <Location>5060</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="719" z:Size="1">
            <d3p1:anyType z:Ref="357" i:nil="true" />
          </DefaultValues>
          <Id>1919</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1923</d3p1:Key>
        <d3p1:Value z:Id="720">
          <Address z:Id="721">
            <ArrayCount>1</ArrayCount>
            <Location>5062</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="722" z:Size="1">
            <d3p1:anyType z:Ref="361" i:nil="true" />
          </DefaultValues>
          <Id>1923</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1971</d3p1:Key>
        <d3p1:Value z:Id="723">
          <Address z:Id="724">
            <ArrayCount>1</ArrayCount>
            <Location>5064</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="725" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>1971</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2074</d3p1:Key>
        <d3p1:Value z:Id="726">
          <Address z:Id="727">
            <ArrayCount>1</ArrayCount>
            <Location>45352</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="728" z:Size="1">
            <d3p1:anyType z:Ref="370" i:nil="true" />
          </DefaultValues>
          <Id>2074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2075</d3p1:Key>
        <d3p1:Value z:Id="729">
          <Address z:Id="730">
            <ArrayCount>1</ArrayCount>
            <Location>45356</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="731" z:Size="1">
            <d3p1:anyType z:Ref="374" i:nil="true" />
          </DefaultValues>
          <Id>2075</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2096</d3p1:Key>
        <d3p1:Value z:Id="732">
          <Address z:Id="733">
            <ArrayCount>1</ArrayCount>
            <Location>45360</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="734" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2096</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2126</d3p1:Key>
        <d3p1:Value z:Id="735">
          <Address z:Id="736">
            <ArrayCount>1</ArrayCount>
            <Location>5068</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="737" z:Size="1">
            <d3p1:anyType z:Ref="382" i:nil="true" />
          </DefaultValues>
          <Id>2126</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2157</d3p1:Key>
        <d3p1:Value z:Id="738">
          <Address z:Id="739">
            <ArrayCount>5</ArrayCount>
            <Location>5072</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="740" z:Size="5">
            <d3p1:anyType z:Ref="386" i:nil="true" />
            <d3p1:anyType z:Ref="387" i:nil="true" />
            <d3p1:anyType z:Ref="388" i:nil="true" />
            <d3p1:anyType z:Ref="389" i:nil="true" />
            <d3p1:anyType z:Ref="390" i:nil="true" />
          </DefaultValues>
          <Id>2157</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2309</d3p1:Key>
        <d3p1:Value z:Id="741">
          <Address z:Id="742">
            <ArrayCount>1</ArrayCount>
            <Location>12</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="743" z:Size="1">
            <d3p1:anyType z:Ref="394" i:nil="true" />
          </DefaultValues>
          <Id>2309</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2325</d3p1:Key>
        <d3p1:Value z:Id="744">
          <Address z:Id="745">
            <ArrayCount>1</ArrayCount>
            <Location>5082</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="746" z:Size="1">
            <d3p1:anyType z:Ref="398" i:nil="true" />
          </DefaultValues>
          <Id>2325</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2554</d3p1:Key>
        <d3p1:Value z:Id="747">
          <Address z:Id="748">
            <ArrayCount>1</ArrayCount>
            <Location>5086</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="749" z:Size="1">
            <d3p1:anyType z:Ref="402" i:nil="true" />
          </DefaultValues>
          <Id>2554</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1680</d3p1:Key>
        <d3p1:Value z:Id="750">
          <Address z:Id="751">
            <ArrayCount>1</ArrayCount>
            <Location>5088</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="752" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>1680</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2624</d3p1:Key>
        <d3p1:Value z:Id="753">
          <Address z:Id="754">
            <ArrayCount>1</ArrayCount>
            <Location>5092</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="755" z:Size="1">
            <d3p1:anyType z:Ref="410" i:nil="true" />
          </DefaultValues>
          <Id>2624</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2643</d3p1:Key>
        <d3p1:Value z:Id="756">
          <Address z:Id="757">
            <ArrayCount>7</ArrayCount>
            <Location>5096</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="758" z:Size="7">
            <d3p1:anyType z:Ref="414" i:nil="true" />
            <d3p1:anyType z:Ref="415" i:nil="true" />
            <d3p1:anyType z:Ref="416" i:nil="true" />
            <d3p1:anyType z:Ref="417" i:nil="true" />
            <d3p1:anyType z:Ref="418" i:nil="true" />
            <d3p1:anyType z:Ref="419" i:nil="true" />
            <d3p1:anyType z:Ref="420" i:nil="true" />
          </DefaultValues>
          <Id>2643</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2644</d3p1:Key>
        <d3p1:Value z:Id="759">
          <Address z:Id="760">
            <ArrayCount>7</ArrayCount>
            <Location>5124</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="761" z:Size="7">
            <d3p1:anyType z:Ref="424" i:nil="true" />
            <d3p1:anyType z:Ref="425" i:nil="true" />
            <d3p1:anyType z:Ref="426" i:nil="true" />
            <d3p1:anyType z:Ref="427" i:nil="true" />
            <d3p1:anyType z:Ref="428" i:nil="true" />
            <d3p1:anyType z:Ref="429" i:nil="true" />
            <d3p1:anyType z:Ref="430" i:nil="true" />
          </DefaultValues>
          <Id>2644</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2817</d3p1:Key>
        <d3p1:Value z:Id="762">
          <Address z:Id="763">
            <ArrayCount>1</ArrayCount>
            <Location>5152</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="764" z:Size="1">
            <d3p1:anyType z:Ref="435" i:nil="true" />
          </DefaultValues>
          <Id>2817</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2835</d3p1:Key>
        <d3p1:Value z:Id="765">
          <Address z:Id="766">
            <ArrayCount>1</ArrayCount>
            <Location>5156</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="767" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2835</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2942</d3p1:Key>
        <d3p1:Value z:Id="768">
          <Address z:Id="769">
            <ArrayCount>8</ArrayCount>
            <Location>5160</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="770" z:Size="8">
            <d3p1:anyType z:Ref="444" i:nil="true" />
            <d3p1:anyType z:Ref="445" i:nil="true" />
            <d3p1:anyType z:Ref="446" i:nil="true" />
            <d3p1:anyType z:Ref="447" i:nil="true" />
            <d3p1:anyType z:Ref="448" i:nil="true" />
            <d3p1:anyType z:Ref="449" i:nil="true" />
            <d3p1:anyType z:Ref="450" i:nil="true" />
            <d3p1:anyType z:Ref="451" i:nil="true" />
          </DefaultValues>
          <Id>2942</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2946</d3p1:Key>
        <d3p1:Value z:Id="771">
          <Address z:Id="772">
            <ArrayCount>2</ArrayCount>
            <Location>5192</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="773" z:Size="2">
            <d3p1:anyType z:Ref="455" i:nil="true" />
            <d3p1:anyType z:Ref="456" i:nil="true" />
          </DefaultValues>
          <Id>2946</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2956</d3p1:Key>
        <d3p1:Value z:Id="774">
          <Address z:Id="775">
            <ArrayCount>1</ArrayCount>
            <Location>45364</Location>
            <MemType>Fram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="776" z:Size="1">
            <d3p1:anyType z:Ref="460" i:nil="true" />
          </DefaultValues>
          <Id>2956</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2960</d3p1:Key>
        <d3p1:Value z:Id="777">
          <Address z:Id="778">
            <ArrayCount>1</ArrayCount>
            <Location>5194</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="779" z:Size="1">
            <d3p1:anyType z:Ref="465" i:nil="true" />
          </DefaultValues>
          <Id>2960</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2967</d3p1:Key>
        <d3p1:Value z:Id="780">
          <Address z:Id="781">
            <ArrayCount>1</ArrayCount>
            <Location>5198</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="782" z:Size="1">
            <d3p1:anyType z:Ref="470" i:nil="true" />
          </DefaultValues>
          <Id>2967</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2972</d3p1:Key>
        <d3p1:Value z:Id="783">
          <Address z:Id="784">
            <ArrayCount>16</ArrayCount>
            <Location>5202</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="785" z:Size="16">
            <d3p1:anyType z:Ref="475" i:nil="true" />
            <d3p1:anyType z:Ref="476" i:nil="true" />
            <d3p1:anyType z:Ref="477" i:nil="true" />
            <d3p1:anyType z:Ref="478" i:nil="true" />
            <d3p1:anyType z:Ref="479" i:nil="true" />
            <d3p1:anyType z:Ref="480" i:nil="true" />
            <d3p1:anyType z:Ref="481" i:nil="true" />
            <d3p1:anyType z:Ref="482" i:nil="true" />
            <d3p1:anyType z:Ref="483" i:nil="true" />
            <d3p1:anyType z:Ref="484" i:nil="true" />
            <d3p1:anyType z:Ref="485" i:nil="true" />
            <d3p1:anyType z:Ref="486" i:nil="true" />
            <d3p1:anyType z:Ref="487" i:nil="true" />
            <d3p1:anyType z:Ref="488" i:nil="true" />
            <d3p1:anyType z:Ref="489" i:nil="true" />
            <d3p1:anyType z:Ref="490" i:nil="true" />
          </DefaultValues>
          <Id>2972</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2979</d3p1:Key>
        <d3p1:Value z:Id="786">
          <Address z:Id="787">
            <ArrayCount>1</ArrayCount>
            <Location>5218</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="788" z:Size="1">
            <d3p1:anyType z:Ref="495" i:nil="true" />
          </DefaultValues>
          <Id>2979</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2983</d3p1:Key>
        <d3p1:Value z:Id="789">
          <Address z:Id="790">
            <ArrayCount>1</ArrayCount>
            <Location>5220</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="791" z:Size="1">
            <d3p1:anyType z:Ref="500" i:nil="true" />
          </DefaultValues>
          <Id>2983</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2984</d3p1:Key>
        <d3p1:Value z:Id="792">
          <Address z:Id="793">
            <ArrayCount>1</ArrayCount>
            <Location>5222</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="794" z:Size="1">
            <d3p1:anyType z:Ref="505" i:nil="true" />
          </DefaultValues>
          <Id>2984</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2985</d3p1:Key>
        <d3p1:Value z:Id="795">
          <Address z:Id="796">
            <ArrayCount>1</ArrayCount>
            <Location>5224</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="797" z:Size="1">
            <d3p1:anyType z:Ref="509" i:nil="true" />
          </DefaultValues>
          <Id>2985</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2986</d3p1:Key>
        <d3p1:Value z:Id="798">
          <Address z:Id="799">
            <ArrayCount>1</ArrayCount>
            <Location>5226</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="800" z:Size="1">
            <d3p1:anyType z:Ref="513" i:nil="true" />
          </DefaultValues>
          <Id>2986</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2987</d3p1:Key>
        <d3p1:Value z:Id="801">
          <Address z:Id="802">
            <ArrayCount>1</ArrayCount>
            <Location>5228</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="803" z:Size="1">
            <d3p1:anyType z:Ref="517" i:nil="true" />
          </DefaultValues>
          <Id>2987</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2988</d3p1:Key>
        <d3p1:Value z:Id="804">
          <Address z:Id="805">
            <ArrayCount>1</ArrayCount>
            <Location>5230</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="806" z:Size="1">
            <d3p1:anyType z:Ref="521" i:nil="true" />
          </DefaultValues>
          <Id>2988</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2989</d3p1:Key>
        <d3p1:Value z:Id="807">
          <Address z:Id="808">
            <ArrayCount>1</ArrayCount>
            <Location>5232</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="809" z:Size="1">
            <d3p1:anyType z:Ref="525" i:nil="true" />
          </DefaultValues>
          <Id>2989</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2990</d3p1:Key>
        <d3p1:Value z:Id="810">
          <Address z:Id="811">
            <ArrayCount>1</ArrayCount>
            <Location>5234</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="812" z:Size="1">
            <d3p1:anyType z:Ref="529" i:nil="true" />
          </DefaultValues>
          <Id>2990</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2991</d3p1:Key>
        <d3p1:Value z:Id="813">
          <Address z:Id="814">
            <ArrayCount>1</ArrayCount>
            <Location>5236</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="815" z:Size="1">
            <d3p1:anyType z:Ref="533" i:nil="true" />
          </DefaultValues>
          <Id>2991</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2992</d3p1:Key>
        <d3p1:Value z:Id="816">
          <Address z:Id="817">
            <ArrayCount>1</ArrayCount>
            <Location>5238</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="818" z:Size="1">
            <d3p1:anyType z:Ref="538" i:nil="true" />
          </DefaultValues>
          <Id>2992</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2993</d3p1:Key>
        <d3p1:Value z:Id="819">
          <Address z:Id="820">
            <ArrayCount>1</ArrayCount>
            <Location>5240</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="821" z:Size="1">
            <d3p1:anyType z:Ref="543" i:nil="true" />
          </DefaultValues>
          <Id>2993</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2994</d3p1:Key>
        <d3p1:Value z:Id="822">
          <Address z:Id="823">
            <ArrayCount>1</ArrayCount>
            <Location>5242</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="824" z:Size="1">
            <d3p1:anyType z:Ref="548" i:nil="true" />
          </DefaultValues>
          <Id>2994</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3037</d3p1:Key>
        <d3p1:Value z:Id="825">
          <Address z:Id="826">
            <ArrayCount>1</ArrayCount>
            <Location>5244</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="827" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3037</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3126</d3p1:Key>
        <d3p1:Value z:Id="828">
          <Address z:Id="829">
            <ArrayCount>1</ArrayCount>
            <Location>5246</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="830" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3126</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3184</d3p1:Key>
        <d3p1:Value z:Id="831">
          <Address z:Id="832">
            <ArrayCount>1</ArrayCount>
            <Location>13</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="833" z:Size="1">
            <d3p1:anyType z:Ref="561" i:nil="true" />
          </DefaultValues>
          <Id>3184</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3185</d3p1:Key>
        <d3p1:Value z:Id="834">
          <Address z:Id="835">
            <ArrayCount>1</ArrayCount>
            <Location>14</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="836" z:Size="1">
            <d3p1:anyType z:Ref="565" i:nil="true" />
          </DefaultValues>
          <Id>3185</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3186</d3p1:Key>
        <d3p1:Value z:Id="837">
          <Address z:Id="838">
            <ArrayCount>1</ArrayCount>
            <Location>15</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="839" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3186</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3230</d3p1:Key>
        <d3p1:Value z:Id="840">
          <Address z:Id="841">
            <ArrayCount>1</ArrayCount>
            <Location>5248</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="842" z:Size="1">
            <d3p1:anyType z:Ref="573" i:nil="true" />
          </DefaultValues>
          <Id>3230</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3267</d3p1:Key>
        <d3p1:Value z:Id="843">
          <Address z:Id="844">
            <ArrayCount>1</ArrayCount>
            <Location>5250</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="845" z:Size="1">
            <d3p1:anyType z:Ref="577" i:nil="true" />
          </DefaultValues>
          <Id>3267</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>-2</d3p1:Key>
        <d3p1:Value z:Id="846">
          <Address z:Id="847">
            <ArrayCount>512</ArrayCount>
            <Location>5254</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="848" z:Size="512">
            <d3p1:anyType z:Id="849" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Id="850" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
            <d3p1:anyType z:Ref="850" i:nil="true" />
          </DefaultValues>
          <Id>-2</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>118</d3p1:Key>
        <d3p1:Value z:Id="851">
          <Address z:Ref="658" i:nil="true" />
          <DefaultValues z:Id="852" z:Size="1">
            <d3p1:anyType z:Ref="233" i:nil="true" />
          </DefaultValues>
          <Id>118</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>115</d3p1:Key>
        <d3p1:Value z:Id="853">
          <Address z:Ref="655" i:nil="true" />
          <DefaultValues z:Id="854" z:Size="1">
            <d3p1:anyType z:Ref="229" i:nil="true" />
          </DefaultValues>
          <Id>115</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>108</d3p1:Key>
        <d3p1:Value z:Id="855">
          <Address z:Id="856">
            <ArrayCount>1</ArrayCount>
            <Location>5766</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="857" z:Size="1">
            <d3p1:anyType z:Id="858" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>108</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>112</d3p1:Key>
        <d3p1:Value z:Id="859">
          <Address z:Ref="649" i:nil="true" />
          <DefaultValues z:Id="860" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>112</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1922</d3p1:Key>
        <d3p1:Value z:Id="861">
          <Address z:Ref="718" i:nil="true" />
          <DefaultValues z:Id="862" z:Size="1">
            <d3p1:anyType z:Ref="357" i:nil="true" />
          </DefaultValues>
          <Id>1922</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1917</d3p1:Key>
        <d3p1:Value z:Id="863">
          <Address z:Id="864">
            <ArrayCount>1</ArrayCount>
            <Location>5768</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="865" z:Size="1">
            <d3p1:anyType z:Id="866" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1917</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1926</d3p1:Key>
        <d3p1:Value z:Id="867">
          <Address z:Ref="721" i:nil="true" />
          <DefaultValues z:Id="868" z:Size="1">
            <d3p1:anyType z:Ref="361" i:nil="true" />
          </DefaultValues>
          <Id>1926</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1181</d3p1:Key>
        <d3p1:Value z:Id="869">
          <Address z:Id="870">
            <ArrayCount>1</ArrayCount>
            <Location>16</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="871" z:Size="1">
            <d3p1:anyType z:Id="872" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1181</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1182</d3p1:Key>
        <d3p1:Value z:Id="873">
          <Address z:Id="874">
            <ArrayCount>1</ArrayCount>
            <Location>17</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="875" z:Size="1">
            <d3p1:anyType z:Id="876" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1182</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1183</d3p1:Key>
        <d3p1:Value z:Id="877">
          <Address z:Id="878">
            <ArrayCount>1</ArrayCount>
            <Location>18</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="879" z:Size="1">
            <d3p1:anyType z:Id="880" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1183</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1184</d3p1:Key>
        <d3p1:Value z:Id="881">
          <Address z:Id="882">
            <ArrayCount>1</ArrayCount>
            <Location>5770</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="883" z:Size="1">
            <d3p1:anyType z:Id="884" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1184</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1185</d3p1:Key>
        <d3p1:Value z:Id="885">
          <Address z:Id="886">
            <ArrayCount>1</ArrayCount>
            <Location>5772</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="887" z:Size="1">
            <d3p1:anyType z:Id="888" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1185</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1191</d3p1:Key>
        <d3p1:Value z:Id="889">
          <Address z:Id="890">
            <ArrayCount>1</ArrayCount>
            <Location>19</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="891" z:Size="1">
            <d3p1:anyType z:Id="892" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1191</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1192</d3p1:Key>
        <d3p1:Value z:Id="893">
          <Address z:Id="894">
            <ArrayCount>1</ArrayCount>
            <Location>5774</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="895" z:Size="1">
            <d3p1:anyType z:Id="896" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1192</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1193</d3p1:Key>
        <d3p1:Value z:Id="897">
          <Address z:Id="898">
            <ArrayCount>1</ArrayCount>
            <Location>20</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="899" z:Size="1">
            <d3p1:anyType z:Id="900" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1193</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1194</d3p1:Key>
        <d3p1:Value z:Id="901">
          <Address z:Id="902">
            <ArrayCount>1</ArrayCount>
            <Location>5778</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="903" z:Size="1">
            <d3p1:anyType z:Id="904" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1194</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1199</d3p1:Key>
        <d3p1:Value z:Id="905">
          <Address z:Ref="700" i:nil="true" />
          <DefaultValues z:Id="906" z:Size="1">
            <d3p1:anyType z:Ref="311" i:nil="true" />
          </DefaultValues>
          <Id>1199</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1200</d3p1:Key>
        <d3p1:Value z:Id="907">
          <Address z:Id="908">
            <ArrayCount>1</ArrayCount>
            <Location>21</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="909" z:Size="1">
            <d3p1:anyType z:Id="910" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1200</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1730</d3p1:Key>
        <d3p1:Value z:Id="911">
          <Address z:Ref="706" i:nil="true" />
          <DefaultValues z:Id="912" z:Size="9">
            <d3p1:anyType z:Ref="333" i:nil="true" />
            <d3p1:anyType z:Ref="334" i:nil="true" />
            <d3p1:anyType z:Ref="335" i:nil="true" />
            <d3p1:anyType z:Ref="336" i:nil="true" />
            <d3p1:anyType z:Ref="337" i:nil="true" />
            <d3p1:anyType z:Ref="338" i:nil="true" />
            <d3p1:anyType z:Ref="339" i:nil="true" />
            <d3p1:anyType z:Ref="340" i:nil="true" />
            <d3p1:anyType z:Ref="341" i:nil="true" />
          </DefaultValues>
          <Id>1730</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2970</d3p1:Key>
        <d3p1:Value z:Id="913">
          <Address z:Ref="781" i:nil="true" />
          <DefaultValues z:Id="914" z:Size="1">
            <d3p1:anyType z:Ref="470" i:nil="true" />
          </DefaultValues>
          <Id>2970</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2963</d3p1:Key>
        <d3p1:Value z:Id="915">
          <Address z:Ref="778" i:nil="true" />
          <DefaultValues z:Id="916" z:Size="1">
            <d3p1:anyType z:Ref="465" i:nil="true" />
          </DefaultValues>
          <Id>2963</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2966</d3p1:Key>
        <d3p1:Value z:Id="917">
          <Address z:Id="918">
            <ArrayCount>1</ArrayCount>
            <Location>5780</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="919" z:Size="1">
            <d3p1:anyType z:Id="920" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2966</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2922</d3p1:Key>
        <d3p1:Value z:Id="921">
          <Address z:Ref="766" i:nil="true" />
          <DefaultValues z:Id="922" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2922</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2931</d3p1:Key>
        <d3p1:Value z:Id="923">
          <Address z:Id="924">
            <ArrayCount>1</ArrayCount>
            <Location>5784</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="925" z:Size="1">
            <d3p1:anyType z:Id="926" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2931</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2919</d3p1:Key>
        <d3p1:Value z:Id="927">
          <Address z:Ref="724" i:nil="true" />
          <DefaultValues z:Id="928" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>2919</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2916</d3p1:Key>
        <d3p1:Value z:Id="929">
          <Address z:Ref="592" i:nil="true" />
          <DefaultValues z:Id="930" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>2916</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2907</d3p1:Key>
        <d3p1:Value z:Id="931">
          <Address z:Ref="667" i:nil="true" />
          <DefaultValues z:Id="932" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>2907</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2904</d3p1:Key>
        <d3p1:Value z:Id="933">
          <Address z:Ref="664" i:nil="true" />
          <DefaultValues z:Id="934" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>2904</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2901</d3p1:Key>
        <d3p1:Value z:Id="935">
          <Address z:Ref="763" i:nil="true" />
          <DefaultValues z:Id="936" z:Size="1">
            <d3p1:anyType z:Ref="435" i:nil="true" />
          </DefaultValues>
          <Id>2901</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2928</d3p1:Key>
        <d3p1:Value z:Id="937">
          <Address z:Id="938">
            <ArrayCount>8</ArrayCount>
            <Location>5788</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="939" z:Size="8">
            <d3p1:anyType z:Id="940" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
            <d3p1:anyType z:Ref="940" i:nil="true" />
            <d3p1:anyType z:Ref="940" i:nil="true" />
            <d3p1:anyType z:Ref="940" i:nil="true" />
            <d3p1:anyType z:Ref="940" i:nil="true" />
            <d3p1:anyType z:Ref="940" i:nil="true" />
            <d3p1:anyType z:Ref="940" i:nil="true" />
            <d3p1:anyType z:Ref="940" i:nil="true" />
          </DefaultValues>
          <Id>2928</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2945</d3p1:Key>
        <d3p1:Value z:Id="941">
          <Address z:Ref="769" i:nil="true" />
          <DefaultValues z:Id="942" z:Size="8">
            <d3p1:anyType z:Ref="444" i:nil="true" />
            <d3p1:anyType z:Ref="445" i:nil="true" />
            <d3p1:anyType z:Ref="446" i:nil="true" />
            <d3p1:anyType z:Ref="447" i:nil="true" />
            <d3p1:anyType z:Ref="448" i:nil="true" />
            <d3p1:anyType z:Ref="449" i:nil="true" />
            <d3p1:anyType z:Ref="450" i:nil="true" />
            <d3p1:anyType z:Ref="451" i:nil="true" />
          </DefaultValues>
          <Id>2945</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2913</d3p1:Key>
        <d3p1:Value z:Id="943">
          <Address z:Ref="709" i:nil="true" />
          <DefaultValues z:Id="944" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>2913</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2941</d3p1:Key>
        <d3p1:Value z:Id="945">
          <Address z:Id="946">
            <ArrayCount>2</ArrayCount>
            <Location>5820</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="947" z:Size="2">
            <d3p1:anyType z:Id="948" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="948" i:nil="true" />
          </DefaultValues>
          <Id>2941</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2949</d3p1:Key>
        <d3p1:Value z:Id="949">
          <Address z:Ref="772" i:nil="true" />
          <DefaultValues z:Id="950" z:Size="2">
            <d3p1:anyType z:Ref="455" i:nil="true" />
            <d3p1:anyType z:Ref="456" i:nil="true" />
          </DefaultValues>
          <Id>2949</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2160</d3p1:Key>
        <d3p1:Value z:Id="951">
          <Address z:Ref="739" i:nil="true" />
          <DefaultValues z:Id="952" z:Size="5">
            <d3p1:anyType z:Ref="386" i:nil="true" />
            <d3p1:anyType z:Ref="387" i:nil="true" />
            <d3p1:anyType z:Ref="388" i:nil="true" />
            <d3p1:anyType z:Ref="389" i:nil="true" />
            <d3p1:anyType z:Ref="390" i:nil="true" />
          </DefaultValues>
          <Id>2160</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2148</d3p1:Key>
        <d3p1:Value z:Id="953">
          <Address z:Ref="649" i:nil="true" />
          <DefaultValues z:Id="954" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>2148</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2233</d3p1:Key>
        <d3p1:Value z:Id="955">
          <Address z:Id="956">
            <ArrayCount>1</ArrayCount>
            <Location>5822</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="957" z:Size="1">
            <d3p1:anyType z:Id="958" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2233</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2151</d3p1:Key>
        <d3p1:Value z:Id="959">
          <Address z:Id="960">
            <ArrayCount>1</ArrayCount>
            <Location>22</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="961" z:Size="1">
            <d3p1:anyType z:Id="962" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2151</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2152</d3p1:Key>
        <d3p1:Value z:Id="963">
          <Address z:Id="964">
            <ArrayCount>1</ArrayCount>
            <Location>23</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="965" z:Size="1">
            <d3p1:anyType z:Id="966" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2152</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2153</d3p1:Key>
        <d3p1:Value z:Id="967">
          <Address z:Id="968">
            <ArrayCount>1</ArrayCount>
            <Location>24</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="969" z:Size="1">
            <d3p1:anyType z:Id="970" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2153</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2154</d3p1:Key>
        <d3p1:Value z:Id="971">
          <Address z:Id="972">
            <ArrayCount>1</ArrayCount>
            <Location>25</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="973" z:Size="1">
            <d3p1:anyType z:Id="974" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2154</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2155</d3p1:Key>
        <d3p1:Value z:Id="975">
          <Address z:Id="976">
            <ArrayCount>1</ArrayCount>
            <Location>26</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="977" z:Size="1">
            <d3p1:anyType z:Id="978" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2155</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2156</d3p1:Key>
        <d3p1:Value z:Id="979">
          <Address z:Id="980">
            <ArrayCount>1</ArrayCount>
            <Location>27</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="981" z:Size="1">
            <d3p1:anyType z:Id="982" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2156</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2237</d3p1:Key>
        <d3p1:Value z:Id="983">
          <Address z:Id="984">
            <ArrayCount>5</ArrayCount>
            <Location>5824</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="985" z:Size="5">
            <d3p1:anyType z:Id="986" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="986" i:nil="true" />
            <d3p1:anyType z:Ref="986" i:nil="true" />
            <d3p1:anyType z:Ref="986" i:nil="true" />
            <d3p1:anyType z:Ref="986" i:nil="true" />
          </DefaultValues>
          <Id>2237</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2857</d3p1:Key>
        <d3p1:Value z:Id="987">
          <Address z:Id="988">
            <ArrayCount>2</ArrayCount>
            <Location>5834</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="989" z:Size="2">
            <d3p1:anyType z:Id="990" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="990" i:nil="true" />
          </DefaultValues>
          <Id>2857</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2858</d3p1:Key>
        <d3p1:Value z:Id="991">
          <Address z:Id="992">
            <ArrayCount>1</ArrayCount>
            <Location>28</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="993" z:Size="1">
            <d3p1:anyType z:Id="994" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2858</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2853</d3p1:Key>
        <d3p1:Value z:Id="995">
          <Address z:Id="996">
            <ArrayCount>2</ArrayCount>
            <Location>5836</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="997" z:Size="2">
            <d3p1:anyType z:Id="998" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="998" i:nil="true" />
          </DefaultValues>
          <Id>2853</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2854</d3p1:Key>
        <d3p1:Value z:Id="999">
          <Address z:Id="1000">
            <ArrayCount>1</ArrayCount>
            <Location>29</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1001" z:Size="1">
            <d3p1:anyType z:Id="1002" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2854</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2845</d3p1:Key>
        <d3p1:Value z:Id="1003">
          <Address z:Id="1004">
            <ArrayCount>1</ArrayCount>
            <Location>5838</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1005" z:Size="1">
            <d3p1:anyType z:Id="1006" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2845</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2846</d3p1:Key>
        <d3p1:Value z:Id="1007">
          <Address z:Id="1008">
            <ArrayCount>1</ArrayCount>
            <Location>30</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1009" z:Size="1">
            <d3p1:anyType z:Id="1010" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2846</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2842</d3p1:Key>
        <d3p1:Value z:Id="1011">
          <Address z:Ref="766" i:nil="true" />
          <DefaultValues z:Id="1012" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2842</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1094</d3p1:Key>
        <d3p1:Value z:Id="1013">
          <Address z:Ref="610" i:nil="true" />
          <DefaultValues z:Id="1014" z:Size="1">
            <d3p1:anyType z:Ref="114" i:nil="true" />
          </DefaultValues>
          <Id>1094</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1080</d3p1:Key>
        <d3p1:Value z:Id="1015">
          <Address z:Ref="649" i:nil="true" />
          <DefaultValues z:Id="1016" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>1080</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1074</d3p1:Key>
        <d3p1:Value z:Id="1017">
          <Address z:Id="1018">
            <ArrayCount>1</ArrayCount>
            <Location>5842</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1019" z:Size="1">
            <d3p1:anyType z:Id="1020" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1074</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1086</d3p1:Key>
        <d3p1:Value z:Id="1021">
          <Address z:Id="1022">
            <ArrayCount>1</ArrayCount>
            <Location>31</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1023" z:Size="1">
            <d3p1:anyType z:Id="1024" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1087</d3p1:Key>
        <d3p1:Value z:Id="1025">
          <Address z:Id="1026">
            <ArrayCount>1</ArrayCount>
            <Location>32</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1027" z:Size="1">
            <d3p1:anyType z:Id="1028" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1087</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1088</d3p1:Key>
        <d3p1:Value z:Id="1029">
          <Address z:Id="1030">
            <ArrayCount>1</ArrayCount>
            <Location>33</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1031" z:Size="1">
            <d3p1:anyType z:Id="1032" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1088</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1089</d3p1:Key>
        <d3p1:Value z:Id="1033">
          <Address z:Id="1034">
            <ArrayCount>1</ArrayCount>
            <Location>34</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1035" z:Size="1">
            <d3p1:anyType z:Id="1036" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1090</d3p1:Key>
        <d3p1:Value z:Id="1037">
          <Address z:Id="1038">
            <ArrayCount>1</ArrayCount>
            <Location>35</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1039" z:Size="1">
            <d3p1:anyType z:Id="1040" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1090</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1091</d3p1:Key>
        <d3p1:Value z:Id="1041">
          <Address z:Id="1042">
            <ArrayCount>1</ArrayCount>
            <Location>36</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1043" z:Size="1">
            <d3p1:anyType z:Id="1044" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1091</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2830</d3p1:Key>
        <d3p1:Value z:Id="1045">
          <Address z:Id="1046">
            <ArrayCount>1</ArrayCount>
            <Location>5844</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1047" z:Size="1">
            <d3p1:anyType z:Id="1048" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2830</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2834</d3p1:Key>
        <d3p1:Value z:Id="1049">
          <Address z:Id="1050">
            <ArrayCount>1</ArrayCount>
            <Location>5848</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1051" z:Size="1">
            <d3p1:anyType z:Id="1052" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2834</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2827</d3p1:Key>
        <d3p1:Value z:Id="1053">
          <Address z:Ref="763" i:nil="true" />
          <DefaultValues z:Id="1054" z:Size="1">
            <d3p1:anyType z:Ref="435" i:nil="true" />
          </DefaultValues>
          <Id>2827</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1136</d3p1:Key>
        <d3p1:Value z:Id="1055">
          <Address z:Ref="625" i:nil="true" />
          <DefaultValues z:Id="1056" z:Size="10">
            <d3p1:anyType z:Ref="143" i:nil="true" />
            <d3p1:anyType z:Ref="144" i:nil="true" />
            <d3p1:anyType z:Ref="145" i:nil="true" />
            <d3p1:anyType z:Ref="146" i:nil="true" />
            <d3p1:anyType z:Ref="147" i:nil="true" />
            <d3p1:anyType z:Ref="148" i:nil="true" />
            <d3p1:anyType z:Ref="149" i:nil="true" />
            <d3p1:anyType z:Ref="150" i:nil="true" />
            <d3p1:anyType z:Ref="151" i:nil="true" />
            <d3p1:anyType z:Ref="152" i:nil="true" />
          </DefaultValues>
          <Id>1136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1113</d3p1:Key>
        <d3p1:Value z:Id="1057">
          <Address z:Ref="601" i:nil="true" />
          <DefaultValues z:Id="1058" z:Size="1">
            <d3p1:anyType z:Ref="102" i:nil="true" />
          </DefaultValues>
          <Id>1113</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1110</d3p1:Key>
        <d3p1:Value z:Id="1059">
          <Address z:Ref="652" i:nil="true" />
          <DefaultValues z:Id="1060" z:Size="1">
            <d3p1:anyType z:Ref="225" i:nil="true" />
          </DefaultValues>
          <Id>1110</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1107</d3p1:Key>
        <d3p1:Value z:Id="1061">
          <Address z:Ref="649" i:nil="true" />
          <DefaultValues z:Id="1062" z:Size="1">
            <d3p1:anyType z:Ref="221" i:nil="true" />
          </DefaultValues>
          <Id>1107</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1125</d3p1:Key>
        <d3p1:Value z:Id="1063">
          <Address z:Id="1064">
            <ArrayCount>1</ArrayCount>
            <Location>5852</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1065" z:Size="1">
            <d3p1:anyType z:Id="1066" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1128</d3p1:Key>
        <d3p1:Value z:Id="1067">
          <Address z:Id="1068">
            <ArrayCount>1</ArrayCount>
            <Location>37</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1069" z:Size="1">
            <d3p1:anyType z:Id="1070" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1128</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1129</d3p1:Key>
        <d3p1:Value z:Id="1071">
          <Address z:Id="1072">
            <ArrayCount>1</ArrayCount>
            <Location>38</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1073" z:Size="1">
            <d3p1:anyType z:Id="1074" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1130</d3p1:Key>
        <d3p1:Value z:Id="1075">
          <Address z:Id="1076">
            <ArrayCount>1</ArrayCount>
            <Location>39</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1077" z:Size="1">
            <d3p1:anyType z:Id="1078" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1130</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1131</d3p1:Key>
        <d3p1:Value z:Id="1079">
          <Address z:Id="1080">
            <ArrayCount>1</ArrayCount>
            <Location>40</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1081" z:Size="1">
            <d3p1:anyType z:Id="1082" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1131</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1132</d3p1:Key>
        <d3p1:Value z:Id="1083">
          <Address z:Id="1084">
            <ArrayCount>1</ArrayCount>
            <Location>41</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1085" z:Size="1">
            <d3p1:anyType z:Id="1086" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1133</d3p1:Key>
        <d3p1:Value z:Id="1087">
          <Address z:Id="1088">
            <ArrayCount>1</ArrayCount>
            <Location>42</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1089" z:Size="1">
            <d3p1:anyType z:Id="1090" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2659</d3p1:Key>
        <d3p1:Value z:Id="1091">
          <Address z:Id="1092">
            <ArrayCount>1</ArrayCount>
            <Location>43</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1093" z:Size="1">
            <d3p1:anyType z:Id="1094" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2659</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2660</d3p1:Key>
        <d3p1:Value z:Id="1095">
          <Address z:Id="1096">
            <ArrayCount>1</ArrayCount>
            <Location>44</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1097" z:Size="1">
            <d3p1:anyType z:Id="1098" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2660</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2106</d3p1:Key>
        <d3p1:Value z:Id="1099">
          <Address z:Ref="733" i:nil="true" />
          <DefaultValues z:Id="1100" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2106</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1423</d3p1:Key>
        <d3p1:Value z:Id="1101">
          <Address z:Id="1102">
            <ArrayCount>1</ArrayCount>
            <Location>5854</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1103" z:Size="1">
            <d3p1:anyType z:Id="1104" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1423</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1224</d3p1:Key>
        <d3p1:Value z:Id="1105">
          <Address z:Id="1106">
            <ArrayCount>1</ArrayCount>
            <Location>5858</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1107" z:Size="1">
            <d3p1:anyType z:Id="1108" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1224</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1225</d3p1:Key>
        <d3p1:Value z:Id="1109">
          <Address z:Id="1110">
            <ArrayCount>1</ArrayCount>
            <Location>45</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1111" z:Size="1">
            <d3p1:anyType z:Id="1112" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1225</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1226</d3p1:Key>
        <d3p1:Value z:Id="1113">
          <Address z:Id="1114">
            <ArrayCount>1</ArrayCount>
            <Location>46</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1115" z:Size="1">
            <d3p1:anyType z:Id="1116" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1226</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1227</d3p1:Key>
        <d3p1:Value z:Id="1117">
          <Address z:Id="1118">
            <ArrayCount>1</ArrayCount>
            <Location>47</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1119" z:Size="1">
            <d3p1:anyType z:Id="1120" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1227</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1228</d3p1:Key>
        <d3p1:Value z:Id="1121">
          <Address z:Id="1122">
            <ArrayCount>10</ArrayCount>
            <Location>5862</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1123" z:Size="10">
            <d3p1:anyType z:Id="1124" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
            <d3p1:anyType z:Ref="1124" i:nil="true" />
          </DefaultValues>
          <Id>1228</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1247</d3p1:Key>
        <d3p1:Value z:Id="1125">
          <Address z:Ref="667" i:nil="true" />
          <DefaultValues z:Id="1126" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>1247</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1700</d3p1:Key>
        <d3p1:Value z:Id="1127">
          <Address z:Id="1128">
            <ArrayCount>1</ArrayCount>
            <Location>5902</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1129" z:Size="1">
            <d3p1:anyType z:Id="1130" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1700</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1710</d3p1:Key>
        <d3p1:Value z:Id="1131">
          <Address z:Id="1132">
            <ArrayCount>1</ArrayCount>
            <Location>5906</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1133" z:Size="1">
            <d3p1:anyType z:Id="1134" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1710</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1703</d3p1:Key>
        <d3p1:Value z:Id="1135">
          <Address z:Ref="664" i:nil="true" />
          <DefaultValues z:Id="1136" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>1703</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2783</d3p1:Key>
        <d3p1:Value z:Id="1137">
          <Address z:Id="1138">
            <ArrayCount>1</ArrayCount>
            <Location>48</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1139" z:Size="1">
            <d3p1:anyType z:Id="1140" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2783</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2784</d3p1:Key>
        <d3p1:Value z:Id="1141">
          <Address z:Id="1142">
            <ArrayCount>1</ArrayCount>
            <Location>49</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1143" z:Size="1">
            <d3p1:anyType z:Id="1144" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2784</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2785</d3p1:Key>
        <d3p1:Value z:Id="1145">
          <Address z:Id="1146">
            <ArrayCount>1</ArrayCount>
            <Location>5910</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1147" z:Size="1">
            <d3p1:anyType z:Id="1148" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2785</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2776</d3p1:Key>
        <d3p1:Value z:Id="1149">
          <Address z:Id="1150">
            <ArrayCount>2</ArrayCount>
            <Location>5912</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1151" z:Size="2">
            <d3p1:anyType z:Id="1152" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1152" i:nil="true" />
          </DefaultValues>
          <Id>2776</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2777</d3p1:Key>
        <d3p1:Value z:Id="1153">
          <Address z:Id="1154">
            <ArrayCount>1</ArrayCount>
            <Location>50</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1155" z:Size="1">
            <d3p1:anyType z:Id="1156" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2777</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2755</d3p1:Key>
        <d3p1:Value z:Id="1157">
          <Address z:Id="1158">
            <ArrayCount>1</ArrayCount>
            <Location>5920</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1159" z:Size="1">
            <d3p1:anyType z:Id="1160" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>2755</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2756</d3p1:Key>
        <d3p1:Value z:Id="1161">
          <Address z:Id="1162">
            <ArrayCount>1</ArrayCount>
            <Location>5924</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1163" z:Size="1">
            <d3p1:anyType z:Id="1164" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2756</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2757</d3p1:Key>
        <d3p1:Value z:Id="1165">
          <Address z:Id="1166">
            <ArrayCount>1</ArrayCount>
            <Location>5926</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1167" z:Size="1">
            <d3p1:anyType z:Id="1168" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2757</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2758</d3p1:Key>
        <d3p1:Value z:Id="1169">
          <Address z:Id="1170">
            <ArrayCount>1</ArrayCount>
            <Location>5928</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1171" z:Size="1">
            <d3p1:anyType z:Id="1172" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2758</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2759</d3p1:Key>
        <d3p1:Value z:Id="1173">
          <Address z:Id="1174">
            <ArrayCount>1</ArrayCount>
            <Location>5930</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1175" z:Size="1">
            <d3p1:anyType z:Id="1176" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2759</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2767</d3p1:Key>
        <d3p1:Value z:Id="1177">
          <Address z:Id="1178">
            <ArrayCount>1</ArrayCount>
            <Location>51</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1179" z:Size="1">
            <d3p1:anyType z:Id="1180" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2767</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2788</d3p1:Key>
        <d3p1:Value z:Id="1181">
          <Address z:Id="1182">
            <ArrayCount>1</ArrayCount>
            <Location>52</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1183" z:Size="1">
            <d3p1:anyType z:Id="1184" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2788</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2697</d3p1:Key>
        <d3p1:Value z:Id="1185">
          <Address z:Id="1186">
            <ArrayCount>1</ArrayCount>
            <Location>53</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1187" z:Size="1">
            <d3p1:anyType z:Id="1188" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2697</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2698</d3p1:Key>
        <d3p1:Value z:Id="1189">
          <Address z:Id="1190">
            <ArrayCount>1</ArrayCount>
            <Location>5932</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1191" z:Size="1">
            <d3p1:anyType z:Id="1192" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2698</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2693</d3p1:Key>
        <d3p1:Value z:Id="1193">
          <Address z:Id="1194">
            <ArrayCount>1</ArrayCount>
            <Location>54</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1195" z:Size="1">
            <d3p1:anyType z:Id="1196" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2739</d3p1:Key>
        <d3p1:Value z:Id="1197">
          <Address z:Id="1198">
            <ArrayCount>1</ArrayCount>
            <Location>5936</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1199" z:Size="1">
            <d3p1:anyType z:Id="1200" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2739</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2664</d3p1:Key>
        <d3p1:Value z:Id="1201">
          <Address z:Id="1202">
            <ArrayCount>1</ArrayCount>
            <Location>5938</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1203" z:Size="1">
            <d3p1:anyType z:Id="1204" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2664</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2802</d3p1:Key>
        <d3p1:Value z:Id="1205">
          <Address z:Id="1206">
            <ArrayCount>1</ArrayCount>
            <Location>5942</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1207" z:Size="1">
            <d3p1:anyType z:Id="1208" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2802</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2799</d3p1:Key>
        <d3p1:Value z:Id="1209">
          <Address z:Id="1210">
            <ArrayCount>1</ArrayCount>
            <Location>55</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1211" z:Size="1">
            <d3p1:anyType z:Id="1212" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2799</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2813</d3p1:Key>
        <d3p1:Value z:Id="1213">
          <Address z:Id="1214">
            <ArrayCount>1</ArrayCount>
            <Location>5946</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1215" z:Size="1">
            <d3p1:anyType z:Id="1216" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2813</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2814</d3p1:Key>
        <d3p1:Value z:Id="1217">
          <Address z:Id="1218">
            <ArrayCount>1</ArrayCount>
            <Location>56</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1219" z:Size="1">
            <d3p1:anyType z:Id="1220" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2814</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2815</d3p1:Key>
        <d3p1:Value z:Id="1221">
          <Address z:Id="1222">
            <ArrayCount>1</ArrayCount>
            <Location>57</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1223" z:Size="1">
            <d3p1:anyType z:Id="1224" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2815</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2816</d3p1:Key>
        <d3p1:Value z:Id="1225">
          <Address z:Id="1226">
            <ArrayCount>1</ArrayCount>
            <Location>58</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1227" z:Size="1">
            <d3p1:anyType z:Id="1228" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2816</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2809</d3p1:Key>
        <d3p1:Value z:Id="1229">
          <Address z:Id="1230">
            <ArrayCount>10</ArrayCount>
            <Location>5950</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1231" z:Size="10">
            <d3p1:anyType z:Id="1232" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
            <d3p1:anyType z:Ref="1232" i:nil="true" />
          </DefaultValues>
          <Id>2809</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2635</d3p1:Key>
        <d3p1:Value z:Id="1233">
          <Address z:Ref="748" i:nil="true" />
          <DefaultValues z:Id="1234" z:Size="1">
            <d3p1:anyType z:Ref="402" i:nil="true" />
          </DefaultValues>
          <Id>2635</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2650</d3p1:Key>
        <d3p1:Value z:Id="1235">
          <Address z:Ref="760" i:nil="true" />
          <DefaultValues z:Id="1236" z:Size="7">
            <d3p1:anyType z:Ref="424" i:nil="true" />
            <d3p1:anyType z:Ref="425" i:nil="true" />
            <d3p1:anyType z:Ref="426" i:nil="true" />
            <d3p1:anyType z:Ref="427" i:nil="true" />
            <d3p1:anyType z:Ref="428" i:nil="true" />
            <d3p1:anyType z:Ref="429" i:nil="true" />
            <d3p1:anyType z:Ref="430" i:nil="true" />
          </DefaultValues>
          <Id>2650</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2647</d3p1:Key>
        <d3p1:Value z:Id="1237">
          <Address z:Ref="757" i:nil="true" />
          <DefaultValues z:Id="1238" z:Size="7">
            <d3p1:anyType z:Ref="414" i:nil="true" />
            <d3p1:anyType z:Ref="415" i:nil="true" />
            <d3p1:anyType z:Ref="416" i:nil="true" />
            <d3p1:anyType z:Ref="417" i:nil="true" />
            <d3p1:anyType z:Ref="418" i:nil="true" />
            <d3p1:anyType z:Ref="419" i:nil="true" />
            <d3p1:anyType z:Ref="420" i:nil="true" />
          </DefaultValues>
          <Id>2647</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3270</d3p1:Key>
        <d3p1:Value z:Id="1239">
          <Address z:Ref="844" i:nil="true" />
          <DefaultValues z:Id="1240" z:Size="1">
            <d3p1:anyType z:Ref="577" i:nil="true" />
          </DefaultValues>
          <Id>3270</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1719</d3p1:Key>
        <d3p1:Value z:Id="1241">
          <Address z:Id="1242">
            <ArrayCount>1</ArrayCount>
            <Location>5990</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1243" z:Size="1">
            <d3p1:anyType z:Id="1244" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1719</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1693</d3p1:Key>
        <d3p1:Value z:Id="1245">
          <Address z:Id="1246">
            <ArrayCount>1</ArrayCount>
            <Location>5994</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1247" z:Size="1">
            <d3p1:anyType z:Id="1248" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1693</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1715</d3p1:Key>
        <d3p1:Value z:Id="1249">
          <Address z:Ref="697" i:nil="true" />
          <DefaultValues z:Id="1250" z:Size="1">
            <d3p1:anyType z:Ref="307" i:nil="true" />
          </DefaultValues>
          <Id>1715</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2642</d3p1:Key>
        <d3p1:Value z:Id="1251">
          <Address z:Id="1252">
            <ArrayCount>1</ArrayCount>
            <Location>5998</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1253" z:Size="1">
            <d3p1:anyType z:Id="1254" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2642</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2478</d3p1:Key>
        <d3p1:Value z:Id="1255">
          <Address z:Ref="745" i:nil="true" />
          <DefaultValues z:Id="1256" z:Size="1">
            <d3p1:anyType z:Ref="398" i:nil="true" />
          </DefaultValues>
          <Id>2478</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2312</d3p1:Key>
        <d3p1:Value z:Id="1257">
          <Address z:Ref="742" i:nil="true" />
          <DefaultValues z:Id="1258" z:Size="1">
            <d3p1:anyType z:Ref="394" i:nil="true" />
          </DefaultValues>
          <Id>2312</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2081</d3p1:Key>
        <d3p1:Value z:Id="1259">
          <Address z:Ref="730" i:nil="true" />
          <DefaultValues z:Id="1260" z:Size="1">
            <d3p1:anyType z:Ref="374" i:nil="true" />
          </DefaultValues>
          <Id>2081</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2078</d3p1:Key>
        <d3p1:Value z:Id="1261">
          <Address z:Ref="727" i:nil="true" />
          <DefaultValues z:Id="1262" z:Size="1">
            <d3p1:anyType z:Ref="370" i:nil="true" />
          </DefaultValues>
          <Id>2078</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1305</d3p1:Key>
        <d3p1:Value z:Id="1263">
          <Address z:Ref="685" i:nil="true" />
          <DefaultValues z:Id="1264" z:Size="1">
            <d3p1:anyType z:Ref="285" i:nil="true" />
          </DefaultValues>
          <Id>1305</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1301</d3p1:Key>
        <d3p1:Value z:Id="1265">
          <Address z:Ref="682" i:nil="true" />
          <DefaultValues z:Id="1266" z:Size="17">
            <d3p1:anyType z:Ref="265" i:nil="true" />
            <d3p1:anyType z:Ref="266" i:nil="true" />
            <d3p1:anyType z:Ref="267" i:nil="true" />
            <d3p1:anyType z:Ref="268" i:nil="true" />
            <d3p1:anyType z:Ref="269" i:nil="true" />
            <d3p1:anyType z:Ref="270" i:nil="true" />
            <d3p1:anyType z:Ref="271" i:nil="true" />
            <d3p1:anyType z:Ref="272" i:nil="true" />
            <d3p1:anyType z:Ref="273" i:nil="true" />
            <d3p1:anyType z:Ref="274" i:nil="true" />
            <d3p1:anyType z:Ref="275" i:nil="true" />
            <d3p1:anyType z:Ref="276" i:nil="true" />
            <d3p1:anyType z:Ref="277" i:nil="true" />
            <d3p1:anyType z:Ref="278" i:nil="true" />
            <d3p1:anyType z:Ref="279" i:nil="true" />
            <d3p1:anyType z:Ref="280" i:nil="true" />
            <d3p1:anyType z:Ref="281" i:nil="true" />
          </DefaultValues>
          <Id>1301</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1297</d3p1:Key>
        <d3p1:Value z:Id="1267">
          <Address z:Id="1268">
            <ArrayCount>1</ArrayCount>
            <Location>6002</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1269" z:Size="1">
            <d3p1:anyType z:Id="1270" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1297</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1289</d3p1:Key>
        <d3p1:Value z:Id="1271">
          <Address z:Ref="679" i:nil="true" />
          <DefaultValues z:Id="1272" z:Size="1">
            <d3p1:anyType z:Ref="261" i:nil="true" />
          </DefaultValues>
          <Id>1289</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1286</d3p1:Key>
        <d3p1:Value z:Id="1273">
          <Address z:Ref="676" i:nil="true" />
          <DefaultValues z:Id="1274" z:Size="1">
            <d3p1:anyType z:Ref="257" i:nil="true" />
          </DefaultValues>
          <Id>1286</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1279</d3p1:Key>
        <d3p1:Value z:Id="1275">
          <Address z:Ref="673" i:nil="true" />
          <DefaultValues z:Id="1276" z:Size="1">
            <d3p1:anyType z:Ref="253" i:nil="true" />
          </DefaultValues>
          <Id>1279</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1264</d3p1:Key>
        <d3p1:Value z:Id="1277">
          <Address z:Id="1278">
            <ArrayCount>1</ArrayCount>
            <Location>6004</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1279" z:Size="1">
            <d3p1:anyType z:Id="1280" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1264</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1265</d3p1:Key>
        <d3p1:Value z:Id="1281">
          <Address z:Id="1282">
            <ArrayCount>1</ArrayCount>
            <Location>6008</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1283" z:Size="1">
            <d3p1:anyType z:Id="1284" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1265</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1266</d3p1:Key>
        <d3p1:Value z:Id="1285">
          <Address z:Id="1286">
            <ArrayCount>1</ArrayCount>
            <Location>6012</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1287" z:Size="1">
            <d3p1:anyType z:Id="1288" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1266</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1267</d3p1:Key>
        <d3p1:Value z:Id="1289">
          <Address z:Id="1290">
            <ArrayCount>1</ArrayCount>
            <Location>6014</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1291" z:Size="1">
            <d3p1:anyType z:Id="1292" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1267</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1268</d3p1:Key>
        <d3p1:Value z:Id="1293">
          <Address z:Id="1294">
            <ArrayCount>1</ArrayCount>
            <Location>6018</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1295" z:Size="1">
            <d3p1:anyType z:Id="1296" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1268</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1269</d3p1:Key>
        <d3p1:Value z:Id="1297">
          <Address z:Id="1298">
            <ArrayCount>1</ArrayCount>
            <Location>59</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1299" z:Size="1">
            <d3p1:anyType z:Id="1300" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1269</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1270</d3p1:Key>
        <d3p1:Value z:Id="1301">
          <Address z:Id="1302">
            <ArrayCount>4</ArrayCount>
            <Location>6022</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1303" z:Size="4">
            <d3p1:anyType z:Id="1304" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1304" i:nil="true" />
            <d3p1:anyType z:Ref="1304" i:nil="true" />
            <d3p1:anyType z:Ref="1304" i:nil="true" />
          </DefaultValues>
          <Id>1270</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2623</d3p1:Key>
        <d3p1:Value z:Id="1305">
          <Address z:Id="1306">
            <ArrayCount>1</ArrayCount>
            <Location>6038</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1307" z:Size="1">
            <d3p1:anyType z:Id="1308" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2623</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2620</d3p1:Key>
        <d3p1:Value z:Id="1309">
          <Address z:Ref="694" i:nil="true" />
          <DefaultValues z:Id="1310" z:Size="4">
            <d3p1:anyType z:Ref="300" i:nil="true" />
            <d3p1:anyType z:Ref="301" i:nil="true" />
            <d3p1:anyType z:Ref="302" i:nil="true" />
            <d3p1:anyType z:Ref="303" i:nil="true" />
          </DefaultValues>
          <Id>2620</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2617</d3p1:Key>
        <d3p1:Value z:Id="1311">
          <Address z:Ref="691" i:nil="true" />
          <DefaultValues z:Id="1312" z:Size="4">
            <d3p1:anyType z:Ref="293" i:nil="true" />
            <d3p1:anyType z:Ref="294" i:nil="true" />
            <d3p1:anyType z:Ref="295" i:nil="true" />
            <d3p1:anyType z:Ref="296" i:nil="true" />
          </DefaultValues>
          <Id>2617</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2605</d3p1:Key>
        <d3p1:Value z:Id="1313">
          <Address z:Id="1314">
            <ArrayCount>1</ArrayCount>
            <Location>6042</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1315" z:Size="1">
            <d3p1:anyType z:Id="1316" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2605</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2627</d3p1:Key>
        <d3p1:Value z:Id="1317">
          <Address z:Ref="754" i:nil="true" />
          <DefaultValues z:Id="1318" z:Size="1">
            <d3p1:anyType z:Ref="410" i:nil="true" />
          </DefaultValues>
          <Id>2627</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2632</d3p1:Key>
        <d3p1:Value z:Id="1319">
          <Address z:Id="1320">
            <ArrayCount>1</ArrayCount>
            <Location>6046</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1321" z:Size="1">
            <d3p1:anyType z:Id="1322" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2632</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1533</d3p1:Key>
        <d3p1:Value z:Id="1323">
          <Address z:Id="1324">
            <ArrayCount>1</ArrayCount>
            <Location>6050</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1325" z:Size="1">
            <d3p1:anyType z:Id="1326" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1533</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1530</d3p1:Key>
        <d3p1:Value z:Id="1327">
          <Address z:Id="1328">
            <ArrayCount>1</ArrayCount>
            <Location>6054</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1329" z:Size="1">
            <d3p1:anyType z:Id="1330" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1530</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1488</d3p1:Key>
        <d3p1:Value z:Id="1331">
          <Address z:Id="1332">
            <ArrayCount>2</ArrayCount>
            <Location>6058</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1333" z:Size="2">
            <d3p1:anyType z:Id="1334" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1334" i:nil="true" />
          </DefaultValues>
          <Id>1488</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1539</d3p1:Key>
        <d3p1:Value z:Id="1335">
          <Address z:Id="1336">
            <ArrayCount>1</ArrayCount>
            <Location>6066</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1337" z:Size="1">
            <d3p1:anyType z:Id="1338" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1539</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1543</d3p1:Key>
        <d3p1:Value z:Id="1339">
          <Address z:Id="1340">
            <ArrayCount>1</ArrayCount>
            <Location>6070</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1341" z:Size="1">
            <d3p1:anyType z:Id="1342" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1543</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1434</d3p1:Key>
        <d3p1:Value z:Id="1343">
          <Address z:Id="1344">
            <ArrayCount>2</ArrayCount>
            <Location>6074</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1345" z:Size="2">
            <d3p1:anyType z:Id="1346" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1346" i:nil="true" />
          </DefaultValues>
          <Id>1434</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1686</d3p1:Key>
        <d3p1:Value z:Id="1347">
          <Address z:Ref="751" i:nil="true" />
          <DefaultValues z:Id="1348" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>1686</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1908</d3p1:Key>
        <d3p1:Value z:Id="1349">
          <Address z:Id="1350">
            <ArrayCount>2</ArrayCount>
            <Location>6082</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1351" z:Size="2">
            <d3p1:anyType z:Id="1352" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1352" i:nil="true" />
          </DefaultValues>
          <Id>1908</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2109</d3p1:Key>
        <d3p1:Value z:Id="1353">
          <Address z:Ref="733" i:nil="true" />
          <DefaultValues z:Id="1354" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1425</d3p1:Key>
        <d3p1:Value z:Id="1355">
          <Address z:Id="1356">
            <ArrayCount>1</ArrayCount>
            <Location>6090</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1357" z:Size="1">
            <d3p1:anyType z:Id="1358" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1425</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1209</d3p1:Key>
        <d3p1:Value z:Id="1359">
          <Address z:Id="1360">
            <ArrayCount>1</ArrayCount>
            <Location>6094</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1361" z:Size="1">
            <d3p1:anyType z:Id="1362" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1209</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1210</d3p1:Key>
        <d3p1:Value z:Id="1363">
          <Address z:Id="1364">
            <ArrayCount>1</ArrayCount>
            <Location>60</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1365" z:Size="1">
            <d3p1:anyType z:Id="1366" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1210</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1211</d3p1:Key>
        <d3p1:Value z:Id="1367">
          <Address z:Id="1368">
            <ArrayCount>1</ArrayCount>
            <Location>61</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1369" z:Size="1">
            <d3p1:anyType z:Id="1370" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1211</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1212</d3p1:Key>
        <d3p1:Value z:Id="1371">
          <Address z:Id="1372">
            <ArrayCount>1</ArrayCount>
            <Location>62</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1373" z:Size="1">
            <d3p1:anyType z:Id="1374" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1212</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1213</d3p1:Key>
        <d3p1:Value z:Id="1375">
          <Address z:Id="1376">
            <ArrayCount>10</ArrayCount>
            <Location>6098</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1377" z:Size="10">
            <d3p1:anyType z:Id="1378" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
            <d3p1:anyType z:Ref="1378" i:nil="true" />
          </DefaultValues>
          <Id>1213</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2248</d3p1:Key>
        <d3p1:Value z:Id="1379">
          <Address z:Id="1380">
            <ArrayCount>1</ArrayCount>
            <Location>6138</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1381" z:Size="1">
            <d3p1:anyType z:Id="1382" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2248</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2318</d3p1:Key>
        <d3p1:Value z:Id="1383">
          <Address z:Id="1384">
            <ArrayCount>1</ArrayCount>
            <Location>6142</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1385" z:Size="1">
            <d3p1:anyType z:Id="1386" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2318</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2319</d3p1:Key>
        <d3p1:Value z:Id="1387">
          <Address z:Id="1388">
            <ArrayCount>1</ArrayCount>
            <Location>63</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1389" z:Size="1">
            <d3p1:anyType z:Id="1390" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2319</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2320</d3p1:Key>
        <d3p1:Value z:Id="1391">
          <Address z:Id="1392">
            <ArrayCount>1</ArrayCount>
            <Location>64</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1393" z:Size="1">
            <d3p1:anyType z:Id="1394" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2320</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2321</d3p1:Key>
        <d3p1:Value z:Id="1395">
          <Address z:Id="1396">
            <ArrayCount>1</ArrayCount>
            <Location>65</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1397" z:Size="1">
            <d3p1:anyType z:Id="1398" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2321</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2314</d3p1:Key>
        <d3p1:Value z:Id="1399">
          <Address z:Id="1400">
            <ArrayCount>10</ArrayCount>
            <Location>6146</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1401" z:Size="10">
            <d3p1:anyType z:Id="1402" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
            <d3p1:anyType z:Ref="1402" i:nil="true" />
          </DefaultValues>
          <Id>2314</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1980</d3p1:Key>
        <d3p1:Value z:Id="1403">
          <Address z:Ref="721" i:nil="true" />
          <DefaultValues z:Id="1404" z:Size="1">
            <d3p1:anyType z:Ref="361" i:nil="true" />
          </DefaultValues>
          <Id>1980</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1954</d3p1:Key>
        <d3p1:Value z:Id="1405">
          <Address z:Id="1406">
            <ArrayCount>1</ArrayCount>
            <Location>66</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1407" z:Size="1">
            <d3p1:anyType z:Id="1408" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1954</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1955</d3p1:Key>
        <d3p1:Value z:Id="1409">
          <Address z:Id="1410">
            <ArrayCount>1</ArrayCount>
            <Location>67</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1411" z:Size="1">
            <d3p1:anyType z:Id="1412" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1955</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1956</d3p1:Key>
        <d3p1:Value z:Id="1413">
          <Address z:Id="1414">
            <ArrayCount>1</ArrayCount>
            <Location>68</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1415" z:Size="1">
            <d3p1:anyType z:Id="1416" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1956</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1957</d3p1:Key>
        <d3p1:Value z:Id="1417">
          <Address z:Id="1418">
            <ArrayCount>1</ArrayCount>
            <Location>6186</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1419" z:Size="1">
            <d3p1:anyType z:Id="1420" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1957</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1958</d3p1:Key>
        <d3p1:Value z:Id="1421">
          <Address z:Id="1422">
            <ArrayCount>1</ArrayCount>
            <Location>6190</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1423" z:Size="1">
            <d3p1:anyType z:Id="1424" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1958</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1959</d3p1:Key>
        <d3p1:Value z:Id="1425">
          <Address z:Id="1426">
            <ArrayCount>1</ArrayCount>
            <Location>6194</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1427" z:Size="1">
            <d3p1:anyType z:Id="1428" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1959</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1960</d3p1:Key>
        <d3p1:Value z:Id="1429">
          <Address z:Id="1430">
            <ArrayCount>1</ArrayCount>
            <Location>6198</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1431" z:Size="1">
            <d3p1:anyType z:Id="1432" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1960</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1961</d3p1:Key>
        <d3p1:Value z:Id="1433">
          <Address z:Id="1434">
            <ArrayCount>1</ArrayCount>
            <Location>6202</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1435" z:Size="1">
            <d3p1:anyType z:Id="1436" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1961</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1962</d3p1:Key>
        <d3p1:Value z:Id="1437">
          <Address z:Id="1438">
            <ArrayCount>1</ArrayCount>
            <Location>6206</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1439" z:Size="1">
            <d3p1:anyType z:Id="1440" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1962</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1963</d3p1:Key>
        <d3p1:Value z:Id="1441">
          <Address z:Id="1442">
            <ArrayCount>1</ArrayCount>
            <Location>6210</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1443" z:Size="1">
            <d3p1:anyType z:Id="1444" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1963</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1964</d3p1:Key>
        <d3p1:Value z:Id="1445">
          <Address z:Id="1446">
            <ArrayCount>1</ArrayCount>
            <Location>6214</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1447" z:Size="1">
            <d3p1:anyType z:Id="1448" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1964</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1965</d3p1:Key>
        <d3p1:Value z:Id="1449">
          <Address z:Id="1450">
            <ArrayCount>1</ArrayCount>
            <Location>6218</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1451" z:Size="1">
            <d3p1:anyType z:Id="1452" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1965</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1928</d3p1:Key>
        <d3p1:Value z:Id="1453">
          <Address z:Id="1454">
            <ArrayCount>1</ArrayCount>
            <Location>69</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1455" z:Size="1">
            <d3p1:anyType z:Id="1456" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1928</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1929</d3p1:Key>
        <d3p1:Value z:Id="1457">
          <Address z:Id="1458">
            <ArrayCount>1</ArrayCount>
            <Location>6222</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1459" z:Size="1">
            <d3p1:anyType z:Id="1460" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1929</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1930</d3p1:Key>
        <d3p1:Value z:Id="1461">
          <Address z:Id="1462">
            <ArrayCount>1</ArrayCount>
            <Location>6224</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1463" z:Size="1">
            <d3p1:anyType z:Id="1464" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1930</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1931</d3p1:Key>
        <d3p1:Value z:Id="1465">
          <Address z:Id="1466">
            <ArrayCount>1</ArrayCount>
            <Location>6226</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1467" z:Size="1">
            <d3p1:anyType z:Id="1468" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1931</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1932</d3p1:Key>
        <d3p1:Value z:Id="1469">
          <Address z:Id="1470">
            <ArrayCount>1</ArrayCount>
            <Location>6230</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1471" z:Size="1">
            <d3p1:anyType z:Id="1472" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1932</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1933</d3p1:Key>
        <d3p1:Value z:Id="1473">
          <Address z:Id="1474">
            <ArrayCount>1</ArrayCount>
            <Location>70</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1475" z:Size="1">
            <d3p1:anyType z:Id="1476" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1933</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1934</d3p1:Key>
        <d3p1:Value z:Id="1477">
          <Address z:Id="1478">
            <ArrayCount>1</ArrayCount>
            <Location>71</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1479" z:Size="1">
            <d3p1:anyType z:Id="1480" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1934</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1935</d3p1:Key>
        <d3p1:Value z:Id="1481">
          <Address z:Id="1482">
            <ArrayCount>1</ArrayCount>
            <Location>6234</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1483" z:Size="1">
            <d3p1:anyType z:Id="1484" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1935</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1936</d3p1:Key>
        <d3p1:Value z:Id="1485">
          <Address z:Id="1486">
            <ArrayCount>1</ArrayCount>
            <Location>6236</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1487" z:Size="1">
            <d3p1:anyType z:Id="1488" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1936</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1937</d3p1:Key>
        <d3p1:Value z:Id="1489">
          <Address z:Id="1490">
            <ArrayCount>1</ArrayCount>
            <Location>6238</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1491" z:Size="1">
            <d3p1:anyType z:Id="1492" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1937</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1938</d3p1:Key>
        <d3p1:Value z:Id="1493">
          <Address z:Id="1494">
            <ArrayCount>1</ArrayCount>
            <Location>72</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1495" z:Size="1">
            <d3p1:anyType z:Id="1496" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1938</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1939</d3p1:Key>
        <d3p1:Value z:Id="1497">
          <Address z:Id="1498">
            <ArrayCount>1</ArrayCount>
            <Location>6240</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1499" z:Size="1">
            <d3p1:anyType z:Id="1500" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1939</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1940</d3p1:Key>
        <d3p1:Value z:Id="1501">
          <Address z:Id="1502">
            <ArrayCount>1</ArrayCount>
            <Location>6244</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1503" z:Size="1">
            <d3p1:anyType z:Id="1504" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1940</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1941</d3p1:Key>
        <d3p1:Value z:Id="1505">
          <Address z:Id="1506">
            <ArrayCount>1</ArrayCount>
            <Location>6246</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1507" z:Size="1">
            <d3p1:anyType z:Id="1508" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1941</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1942</d3p1:Key>
        <d3p1:Value z:Id="1509">
          <Address z:Id="1510">
            <ArrayCount>1</ArrayCount>
            <Location>6250</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1511" z:Size="1">
            <d3p1:anyType z:Id="1512" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>1942</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1943</d3p1:Key>
        <d3p1:Value z:Id="1513">
          <Address z:Id="1514">
            <ArrayCount>1</ArrayCount>
            <Location>6254</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1515" z:Size="1">
            <d3p1:anyType z:Id="1516" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1943</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1944</d3p1:Key>
        <d3p1:Value z:Id="1517">
          <Address z:Id="1518">
            <ArrayCount>1</ArrayCount>
            <Location>6258</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1519" z:Size="1">
            <d3p1:anyType z:Id="1520" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1944</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1945</d3p1:Key>
        <d3p1:Value z:Id="1521">
          <Address z:Id="1522">
            <ArrayCount>1</ArrayCount>
            <Location>6262</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1523" z:Size="1">
            <d3p1:anyType z:Id="1524" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1945</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1946</d3p1:Key>
        <d3p1:Value z:Id="1525">
          <Address z:Id="1526">
            <ArrayCount>1</ArrayCount>
            <Location>6266</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1527" z:Size="1">
            <d3p1:anyType z:Id="1528" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1946</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1947</d3p1:Key>
        <d3p1:Value z:Id="1529">
          <Address z:Id="1530">
            <ArrayCount>1</ArrayCount>
            <Location>6270</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1531" z:Size="1">
            <d3p1:anyType z:Id="1532" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1947</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1948</d3p1:Key>
        <d3p1:Value z:Id="1533">
          <Address z:Id="1534">
            <ArrayCount>1</ArrayCount>
            <Location>6274</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1535" z:Size="1">
            <d3p1:anyType z:Id="1536" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1948</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1949</d3p1:Key>
        <d3p1:Value z:Id="1537">
          <Address z:Id="1538">
            <ArrayCount>1</ArrayCount>
            <Location>6278</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1539" z:Size="1">
            <d3p1:anyType z:Id="1540" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>1949</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1974</d3p1:Key>
        <d3p1:Value z:Id="1541">
          <Address z:Ref="592" i:nil="true" />
          <DefaultValues z:Id="1542" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>1974</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1977</d3p1:Key>
        <d3p1:Value z:Id="1543">
          <Address z:Ref="724" i:nil="true" />
          <DefaultValues z:Id="1544" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>1977</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2014</d3p1:Key>
        <d3p1:Value z:Id="1545">
          <Address z:Id="1546">
            <ArrayCount>1</ArrayCount>
            <Location>73</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1547" z:Size="1">
            <d3p1:anyType z:Id="1548" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2014</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2022</d3p1:Key>
        <d3p1:Value z:Id="1549">
          <Address z:Id="1550">
            <ArrayCount>1</ArrayCount>
            <Location>74</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1551" z:Size="1">
            <d3p1:anyType z:Id="1552" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2022</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2023</d3p1:Key>
        <d3p1:Value z:Id="1553">
          <Address z:Id="1554">
            <ArrayCount>1</ArrayCount>
            <Location>6282</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1555" z:Size="1">
            <d3p1:anyType z:Id="1556" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2023</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2024</d3p1:Key>
        <d3p1:Value z:Id="1557">
          <Address z:Id="1558">
            <ArrayCount>2</ArrayCount>
            <Location>6286</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1559" z:Size="2">
            <d3p1:anyType z:Id="1560" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1560" i:nil="true" />
          </DefaultValues>
          <Id>2024</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2018</d3p1:Key>
        <d3p1:Value z:Id="1561">
          <Address z:Id="1562">
            <ArrayCount>1</ArrayCount>
            <Location>75</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1563" z:Size="1">
            <d3p1:anyType z:Id="1564" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2018</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2016</d3p1:Key>
        <d3p1:Value z:Id="1565">
          <Address z:Id="1566">
            <ArrayCount>1</ArrayCount>
            <Location>76</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1567" z:Size="1">
            <d3p1:anyType z:Id="1568" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2016</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2008</d3p1:Key>
        <d3p1:Value z:Id="1569">
          <Address z:Id="1570">
            <ArrayCount>1</ArrayCount>
            <Location>77</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1571" z:Size="1">
            <d3p1:anyType z:Id="1572" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2008</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1746</d3p1:Key>
        <d3p1:Value z:Id="1573">
          <Address z:Id="1574">
            <ArrayCount>1</ArrayCount>
            <Location>78</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1575" z:Size="1">
            <d3p1:anyType z:Id="1576" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1746</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2004</d3p1:Key>
        <d3p1:Value z:Id="1577">
          <Address z:Id="1578">
            <ArrayCount>1</ArrayCount>
            <Location>79</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1579" z:Size="1">
            <d3p1:anyType z:Id="1580" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>2004</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2005</d3p1:Key>
        <d3p1:Value z:Id="1581">
          <Address z:Id="1582">
            <ArrayCount>1</ArrayCount>
            <Location>6294</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1583" z:Size="1">
            <d3p1:anyType z:Id="1584" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2005</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2006</d3p1:Key>
        <d3p1:Value z:Id="1585">
          <Address z:Id="1586">
            <ArrayCount>2</ArrayCount>
            <Location>6298</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1587" z:Size="2">
            <d3p1:anyType z:Id="1588" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1588" i:nil="true" />
          </DefaultValues>
          <Id>2006</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1744</d3p1:Key>
        <d3p1:Value z:Id="1589">
          <Address z:Id="1590">
            <ArrayCount>1</ArrayCount>
            <Location>80</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1591" z:Size="1">
            <d3p1:anyType z:Id="1592" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1744</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1998</d3p1:Key>
        <d3p1:Value z:Id="1593">
          <Address z:Id="1594">
            <ArrayCount>1</ArrayCount>
            <Location>81</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1595" z:Size="1">
            <d3p1:anyType z:Id="1596" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1998</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1999</d3p1:Key>
        <d3p1:Value z:Id="1597">
          <Address z:Id="1598">
            <ArrayCount>1</ArrayCount>
            <Location>6306</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1599" z:Size="1">
            <d3p1:anyType z:Id="1600" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1999</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2000</d3p1:Key>
        <d3p1:Value z:Id="1601">
          <Address z:Id="1602">
            <ArrayCount>2</ArrayCount>
            <Location>6310</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1603" z:Size="2">
            <d3p1:anyType z:Id="1604" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1604" i:nil="true" />
          </DefaultValues>
          <Id>2000</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1742</d3p1:Key>
        <d3p1:Value z:Id="1605">
          <Address z:Id="1606">
            <ArrayCount>1</ArrayCount>
            <Location>82</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1607" z:Size="1">
            <d3p1:anyType z:Id="1608" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1742</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1992</d3p1:Key>
        <d3p1:Value z:Id="1609">
          <Address z:Id="1610">
            <ArrayCount>1</ArrayCount>
            <Location>83</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1611" z:Size="1">
            <d3p1:anyType z:Id="1612" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1992</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1993</d3p1:Key>
        <d3p1:Value z:Id="1613">
          <Address z:Id="1614">
            <ArrayCount>1</ArrayCount>
            <Location>6318</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1615" z:Size="1">
            <d3p1:anyType z:Id="1616" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1993</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1994</d3p1:Key>
        <d3p1:Value z:Id="1617">
          <Address z:Id="1618">
            <ArrayCount>2</ArrayCount>
            <Location>6322</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1619" z:Size="2">
            <d3p1:anyType z:Id="1620" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1620" i:nil="true" />
          </DefaultValues>
          <Id>1994</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1738</d3p1:Key>
        <d3p1:Value z:Id="1621">
          <Address z:Id="1622">
            <ArrayCount>1</ArrayCount>
            <Location>6330</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1623" z:Size="1">
            <d3p1:anyType z:Id="1624" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1738</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1750</d3p1:Key>
        <d3p1:Value z:Id="1625">
          <Address z:Ref="709" i:nil="true" />
          <DefaultValues z:Id="1626" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>1750</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2125</d3p1:Key>
        <d3p1:Value z:Id="1627">
          <Address z:Id="1628">
            <ArrayCount>1</ArrayCount>
            <Location>6332</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1629" z:Size="1">
            <d3p1:anyType z:Id="1630" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>2125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2129</d3p1:Key>
        <d3p1:Value z:Id="1631">
          <Address z:Ref="736" i:nil="true" />
          <DefaultValues z:Id="1632" z:Size="1">
            <d3p1:anyType z:Ref="382" i:nil="true" />
          </DefaultValues>
          <Id>2129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1762</d3p1:Key>
        <d3p1:Value z:Id="1633">
          <Address z:Id="1634">
            <ArrayCount>1</ArrayCount>
            <Location>6336</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1635" z:Size="1">
            <d3p1:anyType z:Id="1636" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1762</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1768</d3p1:Key>
        <d3p1:Value z:Id="1637">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1638" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>1768</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1776</d3p1:Key>
        <d3p1:Value z:Id="1639">
          <Address z:Ref="715" i:nil="true" />
          <DefaultValues z:Id="1640" z:Size="1">
            <d3p1:anyType z:Ref="353" i:nil="true" />
          </DefaultValues>
          <Id>1776</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1771</d3p1:Key>
        <d3p1:Value z:Id="1641">
          <Address z:Id="1642">
            <ArrayCount>1</ArrayCount>
            <Location>84</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1643" z:Size="1">
            <d3p1:anyType z:Id="1644" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>1771</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1772</d3p1:Key>
        <d3p1:Value z:Id="1645">
          <Address z:Id="1646">
            <ArrayCount>1</ArrayCount>
            <Location>6340</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1647" z:Size="1">
            <d3p1:anyType z:Id="1648" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1772</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1773</d3p1:Key>
        <d3p1:Value z:Id="1649">
          <Address z:Id="1650">
            <ArrayCount>1</ArrayCount>
            <Location>6344</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1651" z:Size="1">
            <d3p1:anyType z:Id="1652" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1773</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1851</d3p1:Key>
        <d3p1:Value z:Id="1653">
          <Address z:Ref="664" i:nil="true" />
          <DefaultValues z:Id="1654" z:Size="1">
            <d3p1:anyType z:Ref="241" i:nil="true" />
          </DefaultValues>
          <Id>1851</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1872</d3p1:Key>
        <d3p1:Value z:Id="1655">
          <Address z:Id="1656">
            <ArrayCount>1</ArrayCount>
            <Location>6346</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1657" z:Size="1">
            <d3p1:anyType z:Id="1658" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1872</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1873</d3p1:Key>
        <d3p1:Value z:Id="1659">
          <Address z:Id="1660">
            <ArrayCount>1</ArrayCount>
            <Location>6350</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1661" z:Size="1">
            <d3p1:anyType z:Id="1662" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1873</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2092</d3p1:Key>
        <d3p1:Value z:Id="1663">
          <Address z:Ref="727" i:nil="true" />
          <DefaultValues z:Id="1664" z:Size="1">
            <d3p1:anyType z:Ref="370" i:nil="true" />
          </DefaultValues>
          <Id>2092</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2070</d3p1:Key>
        <d3p1:Value z:Id="1665">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1666" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2070</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2067</d3p1:Key>
        <d3p1:Value z:Id="1667">
          <Address z:Id="1668">
            <ArrayCount>1</ArrayCount>
            <Location>6352</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1669" z:Size="1">
            <d3p1:anyType z:Id="1670" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2067</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2048</d3p1:Key>
        <d3p1:Value z:Id="1671">
          <Address z:Ref="673" i:nil="true" />
          <DefaultValues z:Id="1672" z:Size="1">
            <d3p1:anyType z:Ref="253" i:nil="true" />
          </DefaultValues>
          <Id>2048</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2045</d3p1:Key>
        <d3p1:Value z:Id="1673">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1674" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2045</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2042</d3p1:Key>
        <d3p1:Value z:Id="1675">
          <Address z:Id="1676">
            <ArrayCount>1</ArrayCount>
            <Location>6356</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1677" z:Size="1">
            <d3p1:anyType z:Id="1678" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2042</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1854</d3p1:Key>
        <d3p1:Value z:Id="1679">
          <Address z:Ref="667" i:nil="true" />
          <DefaultValues z:Id="1680" z:Size="1">
            <d3p1:anyType z:Ref="245" i:nil="true" />
          </DefaultValues>
          <Id>1854</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1876</d3p1:Key>
        <d3p1:Value z:Id="1681">
          <Address z:Id="1682">
            <ArrayCount>1</ArrayCount>
            <Location>6360</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1683" z:Size="1">
            <d3p1:anyType z:Id="1684" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1876</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1877</d3p1:Key>
        <d3p1:Value z:Id="1685">
          <Address z:Id="1686">
            <ArrayCount>1</ArrayCount>
            <Location>6364</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1687" z:Size="1">
            <d3p1:anyType z:Id="1688" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1877</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2095</d3p1:Key>
        <d3p1:Value z:Id="1689">
          <Address z:Ref="730" i:nil="true" />
          <DefaultValues z:Id="1690" z:Size="1">
            <d3p1:anyType z:Ref="374" i:nil="true" />
          </DefaultValues>
          <Id>2095</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2089</d3p1:Key>
        <d3p1:Value z:Id="1691">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1692" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2089</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2086</d3p1:Key>
        <d3p1:Value z:Id="1693">
          <Address z:Id="1694">
            <ArrayCount>1</ArrayCount>
            <Location>6366</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1695" z:Size="1">
            <d3p1:anyType z:Id="1696" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2086</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1857</d3p1:Key>
        <d3p1:Value z:Id="1697">
          <Address z:Ref="670" i:nil="true" />
          <DefaultValues z:Id="1698" z:Size="1">
            <d3p1:anyType z:Ref="249" i:nil="true" />
          </DefaultValues>
          <Id>1857</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1883</d3p1:Key>
        <d3p1:Value z:Id="1699">
          <Address z:Id="1700">
            <ArrayCount>1</ArrayCount>
            <Location>6370</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1701" z:Size="1">
            <d3p1:anyType z:Id="1702" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1883</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1884</d3p1:Key>
        <d3p1:Value z:Id="1703">
          <Address z:Id="1704">
            <ArrayCount>1</ArrayCount>
            <Location>6374</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1705" z:Size="1">
            <d3p1:anyType z:Id="1706" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1884</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2051</d3p1:Key>
        <d3p1:Value z:Id="1707">
          <Address z:Ref="676" i:nil="true" />
          <DefaultValues z:Id="1708" z:Size="1">
            <d3p1:anyType z:Ref="257" i:nil="true" />
          </DefaultValues>
          <Id>2051</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2033</d3p1:Key>
        <d3p1:Value z:Id="1709">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1710" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2033</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2030</d3p1:Key>
        <d3p1:Value z:Id="1711">
          <Address z:Id="1712">
            <ArrayCount>1</ArrayCount>
            <Location>6376</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1713" z:Size="1">
            <d3p1:anyType z:Id="1714" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2030</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1860</d3p1:Key>
        <d3p1:Value z:Id="1715">
          <Address z:Ref="751" i:nil="true" />
          <DefaultValues z:Id="1716" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>1860</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1887</d3p1:Key>
        <d3p1:Value z:Id="1717">
          <Address z:Id="1718">
            <ArrayCount>1</ArrayCount>
            <Location>6380</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1719" z:Size="1">
            <d3p1:anyType z:Id="1720" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1887</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1888</d3p1:Key>
        <d3p1:Value z:Id="1721">
          <Address z:Id="1722">
            <ArrayCount>1</ArrayCount>
            <Location>6384</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1723" z:Size="1">
            <d3p1:anyType z:Id="1724" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1888</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2062</d3p1:Key>
        <d3p1:Value z:Id="1725">
          <Address z:Ref="679" i:nil="true" />
          <DefaultValues z:Id="1726" z:Size="1">
            <d3p1:anyType z:Ref="261" i:nil="true" />
          </DefaultValues>
          <Id>2062</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2059</d3p1:Key>
        <d3p1:Value z:Id="1727">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1728" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2059</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2056</d3p1:Key>
        <d3p1:Value z:Id="1729">
          <Address z:Id="1730">
            <ArrayCount>1</ArrayCount>
            <Location>6386</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1731" z:Size="1">
            <d3p1:anyType z:Id="1732" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2056</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1863</d3p1:Key>
        <d3p1:Value z:Id="1733">
          <Address z:Ref="709" i:nil="true" />
          <DefaultValues z:Id="1734" z:Size="1">
            <d3p1:anyType z:Ref="345" i:nil="true" />
          </DefaultValues>
          <Id>1863</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1903</d3p1:Key>
        <d3p1:Value z:Id="1735">
          <Address z:Id="1736">
            <ArrayCount>1</ArrayCount>
            <Location>6390</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1737" z:Size="1">
            <d3p1:anyType z:Id="1738" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1903</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1904</d3p1:Key>
        <d3p1:Value z:Id="1739">
          <Address z:Id="1740">
            <ArrayCount>1</ArrayCount>
            <Location>6394</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1741" z:Size="1">
            <d3p1:anyType z:Id="1742" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1904</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2120</d3p1:Key>
        <d3p1:Value z:Id="1743">
          <Address z:Ref="733" i:nil="true" />
          <DefaultValues z:Id="1744" z:Size="1">
            <d3p1:anyType z:Ref="378" i:nil="true" />
          </DefaultValues>
          <Id>2120</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2117</d3p1:Key>
        <d3p1:Value z:Id="1745">
          <Address z:Ref="712" i:nil="true" />
          <DefaultValues z:Id="1746" z:Size="1">
            <d3p1:anyType z:Ref="349" i:nil="true" />
          </DefaultValues>
          <Id>2117</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2114</d3p1:Key>
        <d3p1:Value z:Id="1747">
          <Address z:Id="1748">
            <ArrayCount>1</ArrayCount>
            <Location>6396</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1749" z:Size="1">
            <d3p1:anyType z:Id="1750" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2114</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2136</d3p1:Key>
        <d3p1:Value z:Id="1751">
          <Address z:Ref="736" i:nil="true" />
          <DefaultValues z:Id="1752" z:Size="1">
            <d3p1:anyType z:Ref="382" i:nil="true" />
          </DefaultValues>
          <Id>2136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2132</d3p1:Key>
        <d3p1:Value z:Id="1753">
          <Address z:Id="1754">
            <ArrayCount>1</ArrayCount>
            <Location>6400</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1755" z:Size="1">
            <d3p1:anyType z:Id="1756" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2133</d3p1:Key>
        <d3p1:Value z:Id="1757">
          <Address z:Id="1758">
            <ArrayCount>1</ArrayCount>
            <Location>6404</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1759" z:Size="1">
            <d3p1:anyType z:Id="1760" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2133</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1987</d3p1:Key>
        <d3p1:Value z:Id="1761">
          <Address z:Ref="592" i:nil="true" />
          <DefaultValues z:Id="1762" z:Size="1">
            <d3p1:anyType z:Ref="90" i:nil="true" />
          </DefaultValues>
          <Id>1987</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1983</d3p1:Key>
        <d3p1:Value z:Id="1763">
          <Address z:Id="1764">
            <ArrayCount>1</ArrayCount>
            <Location>6406</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1765" z:Size="1">
            <d3p1:anyType z:Id="1766" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1983</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>1984</d3p1:Key>
        <d3p1:Value z:Id="1767">
          <Address z:Id="1768">
            <ArrayCount>1</ArrayCount>
            <Location>6410</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1769" z:Size="1">
            <d3p1:anyType z:Id="1770" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>1984</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2873</d3p1:Key>
        <d3p1:Value z:Id="1771">
          <Address z:Ref="724" i:nil="true" />
          <DefaultValues z:Id="1772" z:Size="1">
            <d3p1:anyType z:Ref="366" i:nil="true" />
          </DefaultValues>
          <Id>2873</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2876</d3p1:Key>
        <d3p1:Value z:Id="1773">
          <Address z:Id="1774">
            <ArrayCount>1</ArrayCount>
            <Location>6412</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1775" z:Size="1">
            <d3p1:anyType z:Id="1776" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2876</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2877</d3p1:Key>
        <d3p1:Value z:Id="1777">
          <Address z:Id="1778">
            <ArrayCount>1</ArrayCount>
            <Location>6416</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1779" z:Size="1">
            <d3p1:anyType z:Id="1780" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2877</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2884</d3p1:Key>
        <d3p1:Value z:Id="1781">
          <Address z:Ref="766" i:nil="true" />
          <DefaultValues z:Id="1782" z:Size="1">
            <d3p1:anyType z:Ref="440" i:nil="true" />
          </DefaultValues>
          <Id>2884</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2880</d3p1:Key>
        <d3p1:Value z:Id="1783">
          <Address z:Id="1784">
            <ArrayCount>1</ArrayCount>
            <Location>6418</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1785" z:Size="1">
            <d3p1:anyType z:Id="1786" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2880</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2881</d3p1:Key>
        <d3p1:Value z:Id="1787">
          <Address z:Id="1788">
            <ArrayCount>1</ArrayCount>
            <Location>6422</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1789" z:Size="1">
            <d3p1:anyType z:Id="1790" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2881</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2895</d3p1:Key>
        <d3p1:Value z:Id="1791">
          <Address z:Ref="751" i:nil="true" />
          <DefaultValues z:Id="1792" z:Size="1">
            <d3p1:anyType z:Ref="406" i:nil="true" />
          </DefaultValues>
          <Id>2895</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2887</d3p1:Key>
        <d3p1:Value z:Id="1793">
          <Address z:Id="1794">
            <ArrayCount>1</ArrayCount>
            <Location>6424</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1795" z:Size="1">
            <d3p1:anyType z:Id="1796" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2887</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2888</d3p1:Key>
        <d3p1:Value z:Id="1797">
          <Address z:Id="1798">
            <ArrayCount>1</ArrayCount>
            <Location>6428</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1799" z:Size="1">
            <d3p1:anyType z:Id="1800" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2888</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2898</d3p1:Key>
        <d3p1:Value z:Id="1801">
          <Address z:Ref="754" i:nil="true" />
          <DefaultValues z:Id="1802" z:Size="1">
            <d3p1:anyType z:Ref="410" i:nil="true" />
          </DefaultValues>
          <Id>2898</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2891</d3p1:Key>
        <d3p1:Value z:Id="1803">
          <Address z:Id="1804">
            <ArrayCount>1</ArrayCount>
            <Location>6430</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="1805" z:Size="1">
            <d3p1:anyType z:Id="1806" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2891</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2892</d3p1:Key>
        <d3p1:Value z:Id="1807">
          <Address z:Id="1808">
            <ArrayCount>1</ArrayCount>
            <Location>6434</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1809" z:Size="1">
            <d3p1:anyType z:Id="1810" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>2892</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2975</d3p1:Key>
        <d3p1:Value z:Id="1811">
          <Address z:Ref="784" i:nil="true" />
          <DefaultValues z:Id="1812" z:Size="16">
            <d3p1:anyType z:Ref="475" i:nil="true" />
            <d3p1:anyType z:Ref="476" i:nil="true" />
            <d3p1:anyType z:Ref="477" i:nil="true" />
            <d3p1:anyType z:Ref="478" i:nil="true" />
            <d3p1:anyType z:Ref="479" i:nil="true" />
            <d3p1:anyType z:Ref="480" i:nil="true" />
            <d3p1:anyType z:Ref="481" i:nil="true" />
            <d3p1:anyType z:Ref="482" i:nil="true" />
            <d3p1:anyType z:Ref="483" i:nil="true" />
            <d3p1:anyType z:Ref="484" i:nil="true" />
            <d3p1:anyType z:Ref="485" i:nil="true" />
            <d3p1:anyType z:Ref="486" i:nil="true" />
            <d3p1:anyType z:Ref="487" i:nil="true" />
            <d3p1:anyType z:Ref="488" i:nil="true" />
            <d3p1:anyType z:Ref="489" i:nil="true" />
            <d3p1:anyType z:Ref="490" i:nil="true" />
          </DefaultValues>
          <Id>2975</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2978</d3p1:Key>
        <d3p1:Value z:Id="1813">
          <Address z:Id="1814">
            <ArrayCount>16</ArrayCount>
            <Location>6436</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1815" z:Size="16">
            <d3p1:anyType z:Id="1816" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
            <d3p1:anyType z:Ref="1816" i:nil="true" />
          </DefaultValues>
          <Id>2978</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2982</d3p1:Key>
        <d3p1:Value z:Id="1817">
          <Address z:Ref="787" i:nil="true" />
          <DefaultValues z:Id="1818" z:Size="1">
            <d3p1:anyType z:Ref="495" i:nil="true" />
          </DefaultValues>
          <Id>2982</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3243</d3p1:Key>
        <d3p1:Value z:Id="1819">
          <Address z:Id="1820">
            <ArrayCount>1</ArrayCount>
            <Location>6452</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1821" z:Size="1">
            <d3p1:anyType z:Id="1822" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3243</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>2997</d3p1:Key>
        <d3p1:Value z:Id="1823">
          <Address z:Ref="790" i:nil="true" />
          <DefaultValues z:Id="1824" z:Size="1">
            <d3p1:anyType z:Ref="500" i:nil="true" />
          </DefaultValues>
          <Id>2997</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3246</d3p1:Key>
        <d3p1:Value z:Id="1825">
          <Address z:Id="1826">
            <ArrayCount>1</ArrayCount>
            <Location>6454</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1827" z:Size="1">
            <d3p1:anyType z:Id="1828" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3246</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3000</d3p1:Key>
        <d3p1:Value z:Id="1829">
          <Address z:Ref="793" i:nil="true" />
          <DefaultValues z:Id="1830" z:Size="1">
            <d3p1:anyType z:Ref="505" i:nil="true" />
          </DefaultValues>
          <Id>3000</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3249</d3p1:Key>
        <d3p1:Value z:Id="1831">
          <Address z:Ref="796" i:nil="true" />
          <DefaultValues z:Id="1832" z:Size="1">
            <d3p1:anyType z:Ref="509" i:nil="true" />
          </DefaultValues>
          <Id>3249</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3006</d3p1:Key>
        <d3p1:Value z:Id="1833">
          <Address z:Ref="799" i:nil="true" />
          <DefaultValues z:Id="1834" z:Size="1">
            <d3p1:anyType z:Ref="513" i:nil="true" />
          </DefaultValues>
          <Id>3006</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3009</d3p1:Key>
        <d3p1:Value z:Id="1835">
          <Address z:Ref="802" i:nil="true" />
          <DefaultValues z:Id="1836" z:Size="1">
            <d3p1:anyType z:Ref="517" i:nil="true" />
          </DefaultValues>
          <Id>3009</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3012</d3p1:Key>
        <d3p1:Value z:Id="1837">
          <Address z:Ref="805" i:nil="true" />
          <DefaultValues z:Id="1838" z:Size="1">
            <d3p1:anyType z:Ref="521" i:nil="true" />
          </DefaultValues>
          <Id>3012</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3015</d3p1:Key>
        <d3p1:Value z:Id="1839">
          <Address z:Ref="808" i:nil="true" />
          <DefaultValues z:Id="1840" z:Size="1">
            <d3p1:anyType z:Ref="525" i:nil="true" />
          </DefaultValues>
          <Id>3015</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3018</d3p1:Key>
        <d3p1:Value z:Id="1841">
          <Address z:Ref="811" i:nil="true" />
          <DefaultValues z:Id="1842" z:Size="1">
            <d3p1:anyType z:Ref="529" i:nil="true" />
          </DefaultValues>
          <Id>3018</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3021</d3p1:Key>
        <d3p1:Value z:Id="1843">
          <Address z:Ref="814" i:nil="true" />
          <DefaultValues z:Id="1844" z:Size="1">
            <d3p1:anyType z:Ref="533" i:nil="true" />
          </DefaultValues>
          <Id>3021</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3263</d3p1:Key>
        <d3p1:Value z:Id="1845">
          <Address z:Ref="787" i:nil="true" />
          <DefaultValues z:Id="1846" z:Size="1">
            <d3p1:anyType z:Ref="495" i:nil="true" />
          </DefaultValues>
          <Id>3263</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3256</d3p1:Key>
        <d3p1:Value z:Id="1847">
          <Address z:Ref="670" i:nil="true" />
          <DefaultValues z:Id="1848" z:Size="1">
            <d3p1:anyType z:Ref="249" i:nil="true" />
          </DefaultValues>
          <Id>3256</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3260</d3p1:Key>
        <d3p1:Value z:Id="1849">
          <Address z:Id="1850">
            <ArrayCount>1</ArrayCount>
            <Location>6456</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1851" z:Size="1">
            <d3p1:anyType z:Id="1852" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3260</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3213</d3p1:Key>
        <d3p1:Value z:Id="1853">
          <Address z:Ref="838" i:nil="true" />
          <DefaultValues z:Id="1854" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3213</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3183</d3p1:Key>
        <d3p1:Value z:Id="1855">
          <Address z:Ref="814" i:nil="true" />
          <DefaultValues z:Id="1856" z:Size="1">
            <d3p1:anyType z:Ref="533" i:nil="true" />
          </DefaultValues>
          <Id>3183</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3169</d3p1:Key>
        <d3p1:Value z:Id="1857">
          <Address z:Ref="829" i:nil="true" />
          <DefaultValues z:Id="1858" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3169</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3177</d3p1:Key>
        <d3p1:Value z:Id="1859">
          <Address z:Id="1860">
            <ArrayCount>1</ArrayCount>
            <Location>85</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1861" z:Size="1">
            <d3p1:anyType z:Id="1862" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3177</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3180</d3p1:Key>
        <d3p1:Value z:Id="1863">
          <Address z:Ref="811" i:nil="true" />
          <DefaultValues z:Id="1864" z:Size="1">
            <d3p1:anyType z:Ref="529" i:nil="true" />
          </DefaultValues>
          <Id>3180</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3173</d3p1:Key>
        <d3p1:Value z:Id="1865">
          <Address z:Id="1866">
            <ArrayCount>1</ArrayCount>
            <Location>86</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1867" z:Size="1">
            <d3p1:anyType z:Id="1868" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3173</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3201</d3p1:Key>
        <d3p1:Value z:Id="1869">
          <Address z:Id="1870">
            <ArrayCount>1</ArrayCount>
            <Location>87</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1871" z:Size="1">
            <d3p1:anyType z:Id="1872" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3201</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3210</d3p1:Key>
        <d3p1:Value z:Id="1873">
          <Address z:Ref="838" i:nil="true" />
          <DefaultValues z:Id="1874" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3210</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3166</d3p1:Key>
        <d3p1:Value z:Id="1875">
          <Address z:Ref="808" i:nil="true" />
          <DefaultValues z:Id="1876" z:Size="1">
            <d3p1:anyType z:Ref="525" i:nil="true" />
          </DefaultValues>
          <Id>3166</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3152</d3p1:Key>
        <d3p1:Value z:Id="1877">
          <Address z:Ref="829" i:nil="true" />
          <DefaultValues z:Id="1878" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3152</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3160</d3p1:Key>
        <d3p1:Value z:Id="1879">
          <Address z:Id="1880">
            <ArrayCount>1</ArrayCount>
            <Location>88</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1881" z:Size="1">
            <d3p1:anyType z:Id="1882" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3160</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3163</d3p1:Key>
        <d3p1:Value z:Id="1883">
          <Address z:Ref="805" i:nil="true" />
          <DefaultValues z:Id="1884" z:Size="1">
            <d3p1:anyType z:Ref="521" i:nil="true" />
          </DefaultValues>
          <Id>3163</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3156</d3p1:Key>
        <d3p1:Value z:Id="1885">
          <Address z:Id="1886">
            <ArrayCount>1</ArrayCount>
            <Location>89</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1887" z:Size="1">
            <d3p1:anyType z:Id="1888" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3156</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3195</d3p1:Key>
        <d3p1:Value z:Id="1889">
          <Address z:Id="1890">
            <ArrayCount>1</ArrayCount>
            <Location>90</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1891" z:Size="1">
            <d3p1:anyType z:Id="1892" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3195</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3207</d3p1:Key>
        <d3p1:Value z:Id="1893">
          <Address z:Ref="838" i:nil="true" />
          <DefaultValues z:Id="1894" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3207</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3149</d3p1:Key>
        <d3p1:Value z:Id="1895">
          <Address z:Ref="802" i:nil="true" />
          <DefaultValues z:Id="1896" z:Size="1">
            <d3p1:anyType z:Ref="517" i:nil="true" />
          </DefaultValues>
          <Id>3149</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3132</d3p1:Key>
        <d3p1:Value z:Id="1897">
          <Address z:Ref="829" i:nil="true" />
          <DefaultValues z:Id="1898" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3132</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3140</d3p1:Key>
        <d3p1:Value z:Id="1899">
          <Address z:Id="1900">
            <ArrayCount>1</ArrayCount>
            <Location>91</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1901" z:Size="1">
            <d3p1:anyType z:Id="1902" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3140</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3143</d3p1:Key>
        <d3p1:Value z:Id="1903">
          <Address z:Ref="799" i:nil="true" />
          <DefaultValues z:Id="1904" z:Size="1">
            <d3p1:anyType z:Ref="513" i:nil="true" />
          </DefaultValues>
          <Id>3143</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3136</d3p1:Key>
        <d3p1:Value z:Id="1905">
          <Address z:Id="1906">
            <ArrayCount>1</ArrayCount>
            <Location>92</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1907" z:Size="1">
            <d3p1:anyType z:Id="1908" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3136</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3189</d3p1:Key>
        <d3p1:Value z:Id="1909">
          <Address z:Id="1910">
            <ArrayCount>1</ArrayCount>
            <Location>93</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1911" z:Size="1">
            <d3p1:anyType z:Id="1912" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3189</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3216</d3p1:Key>
        <d3p1:Value z:Id="1913">
          <Address z:Id="1914">
            <ArrayCount>1</ArrayCount>
            <Location>94</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1915" z:Size="1">
            <d3p1:anyType z:Id="1916" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3216</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3229</d3p1:Key>
        <d3p1:Value z:Id="1917">
          <Address z:Id="1918">
            <ArrayCount>1</ArrayCount>
            <Location>6458</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1919" z:Size="1">
            <d3p1:anyType z:Id="1920" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3229</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3226</d3p1:Key>
        <d3p1:Value z:Id="1921">
          <Address z:Ref="793" i:nil="true" />
          <DefaultValues z:Id="1922" z:Size="1">
            <d3p1:anyType z:Ref="505" i:nil="true" />
          </DefaultValues>
          <Id>3226</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3223</d3p1:Key>
        <d3p1:Value z:Id="1923">
          <Address z:Ref="790" i:nil="true" />
          <DefaultValues z:Id="1924" z:Size="1">
            <d3p1:anyType z:Ref="500" i:nil="true" />
          </DefaultValues>
          <Id>3223</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3237</d3p1:Key>
        <d3p1:Value z:Id="1925">
          <Address z:Id="1926">
            <ArrayCount>1</ArrayCount>
            <Location>6460</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1927" z:Size="1">
            <d3p1:anyType z:Id="1928" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3237</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3233</d3p1:Key>
        <d3p1:Value z:Id="1929">
          <Address z:Ref="841" i:nil="true" />
          <DefaultValues z:Id="1930" z:Size="1">
            <d3p1:anyType z:Ref="573" i:nil="true" />
          </DefaultValues>
          <Id>3233</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3253</d3p1:Key>
        <d3p1:Value z:Id="1931">
          <Address z:Id="1932">
            <ArrayCount>1</ArrayCount>
            <Location>6462</Location>
            <MemType>Ram</MemType>
            <ValueType>Short</ValueType>
          </Address>
          <DefaultValues z:Id="1933" z:Size="1">
            <d3p1:anyType z:Id="1934" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3253</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3266</d3p1:Key>
        <d3p1:Value z:Id="1935">
          <Address z:Id="1936">
            <ArrayCount>1</ArrayCount>
            <Location>6464</Location>
            <MemType>Ram</MemType>
            <ValueType>Float</ValueType>
          </Address>
          <DefaultValues z:Id="1937" z:Size="1">
            <d3p1:anyType z:Id="1938" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:float">0</d3p1:anyType>
          </DefaultValues>
          <Id>3266</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3273</d3p1:Key>
        <d3p1:Value z:Id="1939">
          <Address z:Ref="844" i:nil="true" />
          <DefaultValues z:Id="1940" z:Size="1">
            <d3p1:anyType z:Ref="577" i:nil="true" />
          </DefaultValues>
          <Id>3273</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3032</d3p1:Key>
        <d3p1:Value z:Id="1941">
          <Address z:Id="1942">
            <ArrayCount>1</ArrayCount>
            <Location>6468</Location>
            <MemType>Ram</MemType>
            <ValueType>Date</ValueType>
          </Address>
          <DefaultValues z:Id="1943" z:Size="1">
            <d3p1:anyType z:Id="1944" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>3032</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3033</d3p1:Key>
        <d3p1:Value z:Id="1945">
          <Address z:Id="1946">
            <ArrayCount>1</ArrayCount>
            <Location>6472</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1947" z:Size="1">
            <d3p1:anyType z:Id="1948" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3033</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3034</d3p1:Key>
        <d3p1:Value z:Id="1949">
          <Address z:Id="1950">
            <ArrayCount>1</ArrayCount>
            <Location>6474</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1951" z:Size="1">
            <d3p1:anyType z:Id="1952" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3034</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3035</d3p1:Key>
        <d3p1:Value z:Id="1953">
          <Address z:Id="1954">
            <ArrayCount>1</ArrayCount>
            <Location>6476</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1955" z:Size="1">
            <d3p1:anyType z:Id="1956" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3035</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3036</d3p1:Key>
        <d3p1:Value z:Id="1957">
          <Address z:Id="1958">
            <ArrayCount>1</ArrayCount>
            <Location>6478</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1959" z:Size="1">
            <d3p1:anyType z:Id="1960" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3036</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3040</d3p1:Key>
        <d3p1:Value z:Id="1961">
          <Address z:Ref="826" i:nil="true" />
          <DefaultValues z:Id="1962" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3040</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3099</d3p1:Key>
        <d3p1:Value z:Id="1963">
          <Address z:Ref="826" i:nil="true" />
          <DefaultValues z:Id="1964" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3099</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3024</d3p1:Key>
        <d3p1:Value z:Id="1965">
          <Address z:Ref="817" i:nil="true" />
          <DefaultValues z:Id="1966" z:Size="1">
            <d3p1:anyType z:Ref="538" i:nil="true" />
          </DefaultValues>
          <Id>3024</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3092</d3p1:Key>
        <d3p1:Value z:Id="1967">
          <Address z:Id="1968">
            <ArrayCount>7</ArrayCount>
            <Location>95</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1969" z:Size="7">
            <d3p1:anyType z:Id="1970" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="1970" i:nil="true" />
            <d3p1:anyType z:Ref="1970" i:nil="true" />
            <d3p1:anyType z:Ref="1970" i:nil="true" />
            <d3p1:anyType z:Ref="1970" i:nil="true" />
            <d3p1:anyType z:Ref="1970" i:nil="true" />
            <d3p1:anyType z:Ref="1970" i:nil="true" />
          </DefaultValues>
          <Id>3092</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3096</d3p1:Key>
        <d3p1:Value z:Id="1971">
          <Address z:Id="1972">
            <ArrayCount>1</ArrayCount>
            <Location>102</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="1973" z:Size="1">
            <d3p1:anyType z:Id="1974" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3096</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3121</d3p1:Key>
        <d3p1:Value z:Id="1975">
          <Address z:Id="1976">
            <ArrayCount>1</ArrayCount>
            <Location>6480</Location>
            <MemType>Ram</MemType>
            <ValueType>Time</ValueType>
          </Address>
          <DefaultValues z:Id="1977" z:Size="1">
            <d3p1:anyType z:Id="1978" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:dateTime">0001-01-01T00:00:00</d3p1:anyType>
          </DefaultValues>
          <Id>3121</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3122</d3p1:Key>
        <d3p1:Value z:Id="1979">
          <Address z:Id="1980">
            <ArrayCount>1</ArrayCount>
            <Location>6484</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1981" z:Size="1">
            <d3p1:anyType z:Id="1982" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3122</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3123</d3p1:Key>
        <d3p1:Value z:Id="1983">
          <Address z:Id="1984">
            <ArrayCount>1</ArrayCount>
            <Location>6486</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1985" z:Size="1">
            <d3p1:anyType z:Id="1986" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3123</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3124</d3p1:Key>
        <d3p1:Value z:Id="1987">
          <Address z:Id="1988">
            <ArrayCount>1</ArrayCount>
            <Location>6488</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1989" z:Size="1">
            <d3p1:anyType z:Id="1990" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3124</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3125</d3p1:Key>
        <d3p1:Value z:Id="1991">
          <Address z:Id="1992">
            <ArrayCount>1</ArrayCount>
            <Location>6490</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="1993" z:Size="1">
            <d3p1:anyType z:Id="1994" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3125</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3129</d3p1:Key>
        <d3p1:Value z:Id="1995">
          <Address z:Ref="829" i:nil="true" />
          <DefaultValues z:Id="1996" z:Size="1">
            <d3p1:anyType z:Ref="557" i:nil="true" />
          </DefaultValues>
          <Id>3129</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3288</d3p1:Key>
        <d3p1:Value z:Id="1997">
          <Address z:Ref="826" i:nil="true" />
          <DefaultValues z:Id="1998" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3288</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3298</d3p1:Key>
        <d3p1:Value z:Id="1999">
          <Address z:Id="2000">
            <ArrayCount>1</ArrayCount>
            <Location>6492</Location>
            <MemType>Ram</MemType>
            <ValueType>Byte</ValueType>
          </Address>
          <DefaultValues z:Id="2001" z:Size="1">
            <d3p1:anyType z:Id="2002" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3298</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3291</d3p1:Key>
        <d3p1:Value z:Id="2003">
          <Address z:Id="2004">
            <ArrayCount>1</ArrayCount>
            <Location>6494</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="2005" z:Size="1">
            <d3p1:anyType z:Id="2006" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3291</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3276</d3p1:Key>
        <d3p1:Value z:Id="2007">
          <Address z:Ref="817" i:nil="true" />
          <DefaultValues z:Id="2008" z:Size="1">
            <d3p1:anyType z:Ref="538" i:nil="true" />
          </DefaultValues>
          <Id>3276</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3279</d3p1:Key>
        <d3p1:Value z:Id="2009">
          <Address z:Id="2010">
            <ArrayCount>1</ArrayCount>
            <Location>6498</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="2011" z:Size="1">
            <d3p1:anyType z:Id="2012" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3279</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3284</d3p1:Key>
        <d3p1:Value z:Id="2013">
          <Address z:Id="2014">
            <ArrayCount>1</ArrayCount>
            <Location>6502</Location>
            <MemType>Ram</MemType>
            <ValueType>Int</ValueType>
          </Address>
          <DefaultValues z:Id="2015" z:Size="1">
            <d3p1:anyType z:Id="2016" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:int">0</d3p1:anyType>
          </DefaultValues>
          <Id>3284</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3285</d3p1:Key>
        <d3p1:Value z:Id="2017">
          <Address z:Id="2018">
            <ArrayCount>1</ArrayCount>
            <Location>103</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2019" z:Size="1">
            <d3p1:anyType z:Id="2020" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3285</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3294</d3p1:Key>
        <d3p1:Value z:Id="2021">
          <Address z:Id="2022">
            <ArrayCount>1</ArrayCount>
            <Location>104</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2023" z:Size="1">
            <d3p1:anyType z:Id="2024" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3294</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3192</d3p1:Key>
        <d3p1:Value z:Id="2025">
          <Address z:Ref="838" i:nil="true" />
          <DefaultValues z:Id="2026" z:Size="1">
            <d3p1:anyType z:Ref="569" i:nil="true" />
          </DefaultValues>
          <Id>3192</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3109</d3p1:Key>
        <d3p1:Value z:Id="2027">
          <Address z:Ref="826" i:nil="true" />
          <DefaultValues z:Id="2028" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3109</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3027</d3p1:Key>
        <d3p1:Value z:Id="2029">
          <Address z:Ref="820" i:nil="true" />
          <DefaultValues z:Id="2030" z:Size="1">
            <d3p1:anyType z:Ref="543" i:nil="true" />
          </DefaultValues>
          <Id>3027</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3102</d3p1:Key>
        <d3p1:Value z:Id="2031">
          <Address z:Id="2032">
            <ArrayCount>7</ArrayCount>
            <Location>105</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2033" z:Size="7">
            <d3p1:anyType z:Id="2034" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="2034" i:nil="true" />
            <d3p1:anyType z:Ref="2034" i:nil="true" />
            <d3p1:anyType z:Ref="2034" i:nil="true" />
            <d3p1:anyType z:Ref="2034" i:nil="true" />
            <d3p1:anyType z:Ref="2034" i:nil="true" />
            <d3p1:anyType z:Ref="2034" i:nil="true" />
          </DefaultValues>
          <Id>3102</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3106</d3p1:Key>
        <d3p1:Value z:Id="2035">
          <Address z:Id="2036">
            <ArrayCount>1</ArrayCount>
            <Location>112</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2037" z:Size="1">
            <d3p1:anyType z:Id="2038" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3106</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3198</d3p1:Key>
        <d3p1:Value z:Id="2039">
          <Address z:Ref="832" i:nil="true" />
          <DefaultValues z:Id="2040" z:Size="1">
            <d3p1:anyType z:Ref="561" i:nil="true" />
          </DefaultValues>
          <Id>3198</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3119</d3p1:Key>
        <d3p1:Value z:Id="2041">
          <Address z:Ref="826" i:nil="true" />
          <DefaultValues z:Id="2042" z:Size="1">
            <d3p1:anyType z:Ref="553" i:nil="true" />
          </DefaultValues>
          <Id>3119</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3030</d3p1:Key>
        <d3p1:Value z:Id="2043">
          <Address z:Ref="823" i:nil="true" />
          <DefaultValues z:Id="2044" z:Size="1">
            <d3p1:anyType z:Ref="548" i:nil="true" />
          </DefaultValues>
          <Id>3030</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3112</d3p1:Key>
        <d3p1:Value z:Id="2045">
          <Address z:Id="2046">
            <ArrayCount>7</ArrayCount>
            <Location>113</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2047" z:Size="7">
            <d3p1:anyType z:Id="2048" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
            <d3p1:anyType z:Ref="2048" i:nil="true" />
            <d3p1:anyType z:Ref="2048" i:nil="true" />
            <d3p1:anyType z:Ref="2048" i:nil="true" />
            <d3p1:anyType z:Ref="2048" i:nil="true" />
            <d3p1:anyType z:Ref="2048" i:nil="true" />
            <d3p1:anyType z:Ref="2048" i:nil="true" />
          </DefaultValues>
          <Id>3112</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3116</d3p1:Key>
        <d3p1:Value z:Id="2049">
          <Address z:Id="2050">
            <ArrayCount>1</ArrayCount>
            <Location>120</Location>
            <MemType>RamBit</MemType>
            <ValueType>Bool</ValueType>
          </Address>
          <DefaultValues z:Id="2051" z:Size="1">
            <d3p1:anyType z:Id="2052" xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:boolean">false</d3p1:anyType>
          </DefaultValues>
          <Id>3116</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
      <d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
        <d3p1:Key>3204</d3p1:Key>
        <d3p1:Value z:Id="2053">
          <Address z:Ref="835" i:nil="true" />
          <DefaultValues z:Id="2054" z:Size="1">
            <d3p1:anyType z:Ref="565" i:nil="true" />
          </DefaultValues>
          <Id>3204</Id>
        </d3p1:Value>
      </d3p1:KeyValueOfintMemoryMapItem7bRXORMM>
    </Items>
  </MemoryMapStore>
  <MinimalIdeVersionForSharedLibrary xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="2055">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>0</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </MinimalIdeVersionForSharedLibrary>
  <Name z:Id="2056">Отопленок</Name>
  <PawnConfig z:Id="2057">
    <CompilerVersion>Version2</CompilerVersion>
    <MaxExecTime>500</MaxExecTime>
    <Mode>FreeRun</Mode>
    <Periodic>300</Periodic>
    <StackSize>1024</StackSize>
  </PawnConfig>
  <ProgramPartsCollection xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="2058" z:Size="8">
    <d2p1:anyType z:Id="2059" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2060" z:Size="3">
        <d2p1:anyType z:Id="2061" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2062" z:Size="6">
            <FBDConnector z:Id="2063">
              <EndFBDPort z:Id="2064" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2065" z:Size="1">
                  <FBDPortExtSettings z:Id="2066">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2067" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2068">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2069" i:type="OutputFBDPort">
                <Alias z:Id="2070">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>108</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2071" z:Size="1">
                  <FBDPortExtSettings z:Id="2072">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2067" i:nil="true" />
                <VariableName z:Id="2073">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2074">
              <EndFBDPort z:Id="2075" i:type="InputFBDPort">
                <Alias z:Id="2076">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>103</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2077" z:Size="1">
                  <FBDPortExtSettings z:Id="2078">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2079" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2080">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2081" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>115</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2082" z:Size="1">
                  <FBDPortExtSettings z:Id="2083">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2079" i:nil="true" />
                <VariableName z:Id="2084">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2085">
              <EndFBDPort z:Id="2086" i:type="InputFBDPort">
                <Alias z:Id="2087">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2088" z:Size="1">
                  <FBDPortExtSettings z:Id="2089">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2090" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2091">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2092" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>118</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2093" z:Size="1">
                  <FBDPortExtSettings z:Id="2094">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2090" i:nil="true" />
                <VariableName z:Ref="2084" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2095">
              <EndFBDPort z:Id="2096" i:type="InputFBDPort">
                <Alias z:Id="2097">Вход 101</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1916</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2098" z:Size="1">
                  <FBDPortExtSettings z:Id="2099">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2090" i:nil="true" />
                <VariableName z:Id="2100">Baudrate</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2092" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2101">
              <EndFBDPort z:Id="2102" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1925</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2103" z:Size="1">
                  <FBDPortExtSettings z:Id="2104">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2105" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2106">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2107" i:type="OutputFBDPort">
                <Alias z:Id="2108">Выход 104</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1917</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2109" z:Size="1">
                  <FBDPortExtSettings z:Id="2110">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2105" i:nil="true" />
                <VariableName z:Id="2111">PortPar</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2112">
              <EndFBDPort z:Id="2113" i:type="InputFBDPort">
                <Alias z:Id="2114">Вход 100</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1912</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2115" z:Size="1">
                  <FBDPortExtSettings z:Id="2116">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2117" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2118">Port</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2119" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1922</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2120" z:Size="1">
                  <FBDPortExtSettings z:Id="2121">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2117" i:nil="true" />
                <VariableName z:Id="2122">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2123" z:Size="9">
            <FBDItem z:Id="2124" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>116</Id>
              <InputPortsCollection z:Id="2125" z:Size="1">
                <FBDPort z:Id="2126" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>117</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2127" z:Size="1">
                    <FBDPortExtSettings z:Id="2128">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2068" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2129" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="2130">Tag</Name>
              <OutputPortsCollection z:Id="2131" z:Size="1">
                <FBDPort z:Ref="2092" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2132">_</Prefix>
              <SecondName z:Ref="2130" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="230" i:nil="true" />
              <InputFBDPort z:Ref="2126" i:nil="true" />
              <OutputFBDPort z:Ref="2092" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2133" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>113</Id>
              <InputPortsCollection z:Id="2134" z:Size="1">
                <FBDPort z:Id="2135" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2136" z:Size="1">
                    <FBDPortExtSettings z:Id="2137">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2068" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2138" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="2130" i:nil="true" />
              <OutputPortsCollection z:Id="2139" z:Size="1">
                <FBDPort z:Ref="2081" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2132" i:nil="true" />
              <SecondName z:Ref="2130" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="226" i:nil="true" />
              <InputFBDPort z:Ref="2135" i:nil="true" />
              <OutputFBDPort z:Ref="2081" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2140" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2141">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>102</Id>
              <InputPortsCollection z:Id="2142" z:Size="5">
                <FBDPort z:Ref="2075" i:nil="true" />
                <FBDPort z:Id="2143" i:type="InputFBDPort">
                  <Alias z:Id="2144">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>104</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2145" z:Size="1">
                    <FBDPortExtSettings z:Id="2146">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2147">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="2148" i:type="InputFBDPort">
                  <Alias z:Id="2149">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2150" z:Size="1">
                    <FBDPortExtSettings z:Id="2151">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2152">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="2153" i:type="InputFBDPort">
                  <Alias z:Id="2154">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2155" z:Size="1">
                    <FBDPortExtSettings z:Id="2156">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2157" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2158" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2159">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2086" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2160" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3690</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Id="2161">SerialPortParam</Name>
              <OutputPortsCollection z:Id="2162" z:Size="1">
                <FBDPort z:Ref="2069" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2163">YART</Prefix>
              <SecondName z:Ref="2161" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Id="2164">// Ограничение на входящие значение с применением значения по умолчанию, если это необходимо


if(Port &lt; 1 || Port &gt; 3) Port = 2;					// значение по умолчанию: 2


//if(DataBits &lt; 0 || DataBits &gt; 3) DataBits = 0;	// параметр временно не используется; значение по умолчанию: 0 


DataBits = 0;										// принудительная установка в 0


if(Parity &lt; 0 || Parity &gt; 2) Parity = 0;			// значение по умолчанию: 0


if(StopBits &lt; 0 || StopBits &gt; 2) StopBits = 0;		// значение по умолчанию: 0


if(Baudrate &lt; 1) Baudrate = 4;


if(Baudrate &gt; 8) Baudrate = 8;						// принудительная установка при превышении допустимой скорости





// Допустимые значения DataBits:


// 0 = 8


// 1 = 7


// 2 = 6


// 3 = 5





// Допустимые значения Parity:


// 0 = N


// 1 = O


// 2 = E


// 3 = M


// 4 = S





// Допустимые значения StopBits:


// 0 = 1


// 1 = 2


// 2 = 1.5





// Допустимые значения Baudrate:


// 1 =   1200


// 2 =   2400


// 3 =   4800


// 4 =   9600


// 5 =  19200


// 6 =  38400


// 7 =  57600


// 8 = 115200





// Формирование результата


PortPar = (Baudrate &lt;&lt; 12) | (StopBits &lt;&lt; 10) | (Parity &lt;&lt; 7) | (DataBits &lt;&lt; 4) | Port;</Code>
            </FBDItem>
            <FBDItem z:Id="2165" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>110</Id>
              <InputPortsCollection z:Id="2166" z:Size="1">
                <FBDPort z:Ref="2064" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2167" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3850</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="2130" i:nil="true" />
              <OutputPortsCollection z:Id="2168" z:Size="1">
                <FBDPort z:Id="2169" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2170" z:Size="1">
                    <FBDPortExtSettings z:Id="2171">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2172" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2084" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2132" i:nil="true" />
              <SecondName z:Ref="2130" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="2064" i:nil="true" />
              <OutputFBDPort z:Ref="2169" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2173" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1920</Id>
              <InputPortsCollection z:Id="2174" z:Size="1">
                <FBDPort z:Id="2175" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1921</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2176" z:Size="1">
                    <FBDPortExtSettings z:Id="2177">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2106" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2178" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Id="2179">Tag</Name>
              <OutputPortsCollection z:Id="2180" z:Size="1">
                <FBDPort z:Ref="2119" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2181">_</Prefix>
              <SecondName z:Ref="2179" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="354" i:nil="true" />
              <InputFBDPort z:Ref="2175" i:nil="true" />
              <OutputFBDPort z:Ref="2119" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2182" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2183">Конфигурация последовательного порта</Description>
              <HelpID>238</HelpID>
              <Id>1911</Id>
              <InputPortsCollection z:Id="2184" z:Size="5">
                <FBDPort z:Ref="2113" i:nil="true" />
                <FBDPort z:Id="2185" i:type="InputFBDPort">
                  <Alias z:Id="2186">Вход 6184</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1913</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2187" z:Size="1">
                    <FBDPortExtSettings z:Id="2188">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2189">DataBits</VariableName>
                </FBDPort>
                <FBDPort z:Id="2190" i:type="InputFBDPort">
                  <Alias z:Id="2191">Вход 102</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1914</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2192" z:Size="1">
                    <FBDPortExtSettings z:Id="2193">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2194">Parity</VariableName>
                </FBDPort>
                <FBDPort z:Id="2195" i:type="InputFBDPort">
                  <Alias z:Id="2196">Вход 103</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1915</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2197" z:Size="1">
                    <FBDPortExtSettings z:Id="2198">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2199">StopBits</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2096" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2200" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3720</d8p1:_x>
                <d8p1:_y>3950</d8p1:_y>
              </Location>
              <Name z:Id="2201">SerialPortParam</Name>
              <OutputPortsCollection z:Id="2202" z:Size="1">
                <FBDPort z:Ref="2107" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2203">YART</Prefix>
              <SecondName z:Ref="2201" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ed7da23-8e20-4740-9fe3-85befd48bde4</SpecificationId>
              <Code z:Ref="2164" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2204" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1924</Id>
              <InputPortsCollection z:Id="2205" z:Size="1">
                <FBDPort z:Ref="2102" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2206" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Ref="2179" i:nil="true" />
              <OutputPortsCollection z:Id="2207" z:Size="1">
                <FBDPort z:Id="2208" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1926</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2209" z:Size="1">
                    <FBDPortExtSettings z:Id="2210">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2211" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2122" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2181" i:nil="true" />
              <SecondName z:Ref="2179" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="358" i:nil="true" />
              <InputFBDPort z:Ref="2102" i:nil="true" />
              <OutputFBDPort z:Ref="2208" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2212" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>119</Id>
              <InputPortsCollection z:Id="2213" z:Size="0" />
              <InternalPortsCollection z:Id="2214" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="2215">comment</Name>
              <OutputPortsCollection z:Id="2216" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2132" i:nil="true" />
              <SecondName z:Id="2217">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2218">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</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
            <FBDItem z:Id="2219" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1918</Id>
              <InputPortsCollection z:Id="2220" z:Size="0" />
              <InternalPortsCollection z:Id="2221" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Id="2222">comment</Name>
              <OutputPortsCollection z:Id="2223" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="2224">_</Prefix>
              <SecondName z:Id="2225">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="2226">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</Comment>
              <Height>223</Height>
              <Width>635.454545454546</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="2227">RS485_Setup</Name>
          <Parent z:Ref="2059" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>1</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="2228" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2229" z:Size="4">
            <FBDConnector z:Id="2230">
              <EndFBDPort z:Id="2231" i:type="InputFBDPort">
                <Alias z:Id="2232">Write</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1198</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2233" z:Size="1">
                  <FBDPortExtSettings z:Id="2234">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2235" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2236">write</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2237" i:type="OutputFBDPort">
                <Alias z:Id="2238">Выход 5254</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1191</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2239" z:Size="1">
                  <FBDPortExtSettings z:Id="2240">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2235" i:nil="true" />
                <VariableName z:Id="2241">PULSE</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2242">
              <EndFBDPort z:Id="2243" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1197</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2244" z:Size="1">
                  <FBDPortExtSettings z:Id="2245">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2246">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2247" i:type="OutputFBDPort">
                <Alias z:Id="2248"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1202</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2249" z:Size="1">
                  <FBDPortExtSettings z:Id="2250">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2251" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2252" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="2253">out_180</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2254">
              <EndFBDPort z:Id="2255" i:type="InputFBDPort">
                <Alias z:Id="2256">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1189</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2257" z:Size="1">
                  <FBDPortExtSettings z:Id="2258">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="2259">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2260" i:type="OutputFBDPort">
                <Alias z:Id="2261"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1187</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2262" z:Size="1">
                  <FBDPortExtSettings z:Id="2263">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2264" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="2265" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1000</d2p1:anyType>
                </Value>
                <VariableName z:Id="2266">out_161</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2267">
              <EndFBDPort z:Id="2268" i:type="InputFBDPort">
                <Alias z:Id="2269">Вход 5252</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1190</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2270" z:Size="1">
                  <FBDPortExtSettings z:Id="2271">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="2272" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2273">EN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2274" i:type="OutputFBDPort">
                <Alias z:Id="2275">Выход 117</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1182</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2276" z:Size="1">
                  <FBDPortExtSettings z:Id="2277">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="2272" i:nil="true" />
                <VariableName z:Id="2278">Ok</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2279" z:Size="6">
            <FBDItem z:Id="2280" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1201</Id>
              <InputPortsCollection z:Id="2281" z:Size="0" />
              <InternalPortsCollection z:Id="2282" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3820</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2283" z:Size="1">
                <FBDPort z:Ref="2247" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2284">_</Prefix>
              <SecondName z:Id="2285">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2251" i:nil="true" />
              <OutputFBDPort z:Ref="2247" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2286" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1186</Id>
              <InputPortsCollection z:Id="2287" z:Size="0" />
              <InternalPortsCollection z:Id="2288" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="2289" z:Size="1">
                <FBDPort z:Ref="2260" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2290">_</Prefix>
              <SecondName z:Id="2291">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="2264" i:nil="true" />
              <OutputFBDPort z:Ref="2260" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2292" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2293">Статус подключения к серверу телеметрии</Description>
              <HelpID>714</HelpID>
              <Id>1180</Id>
              <InputPortsCollection z:Id="2294" z:Size="0" />
              <InternalPortsCollection z:Id="2295" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3620</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="2296">Telemetry State</Name>
              <OutputPortsCollection z:Id="2297" z:Size="5">
                <FBDPort z:Id="2298" i:type="OutputFBDPort">
                  <Alias z:Id="2299">Выход 112</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1181</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2300" z:Size="1">
                    <FBDPortExtSettings z:Id="2301">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2302" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2303">Init</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2274" i:nil="true" />
                <FBDPort z:Id="2304" i:type="OutputFBDPort">
                  <Alias z:Id="2305">Выход 113</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1183</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2306" z:Size="1">
                    <FBDPortExtSettings z:Id="2307">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2308" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2309">Error</VariableName>
                </FBDPort>
                <FBDPort z:Id="2310" i:type="OutputFBDPort">
                  <Alias z:Id="2311">Выход 15051</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1184</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2312" z:Size="1">
                    <FBDPortExtSettings z:Id="2313">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2314" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2315">LastErr</VariableName>
                </FBDPort>
                <FBDPort z:Id="2316" i:type="OutputFBDPort">
                  <Alias z:Id="2317">Выход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1185</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2318" z:Size="1">
                    <FBDPortExtSettings z:Id="2319">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2320" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2321">State</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2322">YART</Prefix>
              <SecondName z:Id="2323">TeleState</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7ad2295d-eb4d-4b18-9a03-4145c7b12a45</SpecificationId>
              <Code z:Id="2324">new state_tmp = get_short(MQTT_STATE);


State = state_tmp;


Init = state_tmp == 0;


Error= state_tmp != 0 &amp;&amp; state_tmp!=6;


Ok = state_tmp == 6;





/*


Last state (addr 366)


enum {


  MQTT_LST_INIT=0,


  MQTT_LST_WRONG_MODE_PTR,


  MQTT_LST_WRONG_MODE_CONTENTS,


  MQTT_LST_INCORRECT_MODE,


  MQTT_LST_CANT_CONNECT_IP,


  MQTT_LST_CANT_AUTHORIZE,


  MQTT_LST_CANT_SUBSCRIBE,


  MQTT_LST_DESCRIPTION_ERROR,


  MQTT_LST_RUN_TIME_ERROR,


  MQTT_LST_USER_RESET,


  MQTT_LST_PUBLISH_ERROR


};


*/





LastErr = get_short(MQTT_LAST_ERR);</Code>
            </FBDItem>
            <FBDItem z:Id="2325" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2326">Генерация импульсов с заданной периодичностью</Description>
              <HelpID>16</HelpID>
              <Id>1188</Id>
              <InputPortsCollection z:Id="2327" z:Size="2">
                <FBDPort z:Ref="2255" i:nil="true" />
                <FBDPort z:Ref="2268" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2328" z:Size="1">
                <FBDPort z:Id="2329" i:type="InternalFBDPort">
                  <Alias z:Id="2330">Внутренняя 5256</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1194</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="2331" z:Size="1">
                    <FBDPortExtSettings z:Id="2332">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2333">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="2334">PULSE GENERATOR</Name>
              <OutputPortsCollection z:Id="2335" z:Size="3">
                <FBDPort z:Ref="2237" i:nil="true" />
                <FBDPort z:Id="2336" i:type="OutputFBDPort">
                  <Alias z:Id="2337">ELAPSED</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1192</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2338" z:Size="1">
                    <FBDPortExtSettings z:Id="2339">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="2340" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2341">COUNTER</VariableName>
                </FBDPort>
                <FBDPort z:Id="2342" i:type="OutputFBDPort">
                  <Alias z:Id="2343">Выход 5255</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1193</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2344" z:Size="1">
                    <FBDPortExtSettings z:Id="2345">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2346" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2347">ENO</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2348">YART</Prefix>
              <SecondName z:Id="2349">PULSEGENERATOR</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3c324fa4-d4d4-48e7-95af-5ff85ab56d15</SpecificationId>
              <Code z:Id="2350">//#PULSE GENERATOR (Генератор импульсов)


if(!EN){


	COUNTER = 0; 


	tf = 0;


}else{


	if(COUNTER &gt;= PERIOD){


		PULSE = true;


		COUNTER -= PERIOD;


	}else{


		PULSE = false;


	}


	YARTAddScanTask(COUNTER, tf);


}


ENO = EN;</Code>
            </FBDItem>
            <FBDItem z:Id="2351" i:type="SetpointFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1196</Id>
              <InputPortsCollection z:Id="2352" z:Size="2">
                <FBDPort z:Ref="2243" i:nil="true" />
                <FBDPort z:Ref="2231" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2353" z:Size="1">
                <FBDPort z:Id="2354" i:type="InternalFBDPort">
                  <Alias z:Id="2355">writeStatus</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1200</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="2356" z:Size="1">
                    <FBDPortExtSettings z:Id="2357">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2355" i:nil="true" />
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="2358">Tag</Name>
              <OutputPortsCollection z:Id="2359" z:Size="1">
                <FBDPort z:Id="2360" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1199</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2361" z:Size="1">
                    <FBDPortExtSettings z:Id="2362">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2363" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2364">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2365">_</Prefix>
              <SecondName z:Id="2366">__00__WriteSetpoint</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>59d31f4d-66d3-4778-a3c2-9315c0b02c9b</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="308" i:nil="true" />
              <InputFBDPort z:Ref="2243" i:nil="true" />
              <OutputFBDPort z:Ref="2360" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
              <InputWriteFBDPort z:Ref="2231" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2367" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1728</Id>
              <InputPortsCollection z:Id="2368" z:Size="1">
                <FBDPort z:Id="2369" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1729</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2370" z:Size="9">
                    <FBDPortExtSettings z:Id="2371">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2372">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2373">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2374">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2375">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2376">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2377">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2378">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2379">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2380">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2381" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name z:Id="2382">Tag</Name>
              <OutputPortsCollection z:Id="2383" z:Size="1">
                <FBDPort z:Id="2384" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>9</ArrayItemsCount>
                  <Id>1730</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2385" z:Size="9">
                    <FBDPortExtSettings z:Id="2386">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2387">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2388">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2389">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2390">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2391">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2392">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2393">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2394">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Char</Type>
                  <Value z:Id="2395" i:type="d2p1:ArrayOfanyType" z:Size="9">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2396">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2397">_</Prefix>
              <SecondName z:Ref="2382" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="330" i:nil="true" />
              <InputFBDPort z:Ref="2369" i:nil="true" />
              <OutputFBDPort z:Ref="2384" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="2398">Publicator</Name>
          <Parent z:Ref="2059" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>5</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
        <d2p1:anyType z:Id="2399" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2400" z:Size="14">
            <FBDConnector z:Id="2401">
              <EndFBDPort z:Id="2402" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2927</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2403" z:Size="8">
                  <FBDPortExtSettings z:Id="2404">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2405">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2406">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2407">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2408">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2409">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2410">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2411">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2412" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2413">FloatIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2414" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2901</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2415" z:Size="1">
                  <FBDPortExtSettings z:Id="2416">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2412" i:nil="true" />
                <VariableName z:Id="2417">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2418">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2419" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2904</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2420" z:Size="1">
                  <FBDPortExtSettings z:Id="2421">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2422" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2417" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2423">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2424" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2907</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2425" z:Size="1">
                  <FBDPortExtSettings z:Id="2426">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2427" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2417" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2428">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2429" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2916</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2430" z:Size="1">
                  <FBDPortExtSettings z:Id="2431">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2432" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2417" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2433">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2434" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2919</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2435" z:Size="1">
                  <FBDPortExtSettings z:Id="2436">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2437" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2417" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2438">
              <EndFBDPort z:Id="2439" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2930</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2440" z:Size="1">
                  <FBDPortExtSettings z:Id="2441">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2442" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2443">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2444" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2922</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2445" z:Size="1">
                  <FBDPortExtSettings z:Id="2446">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2442" i:nil="true" />
                <VariableName z:Ref="2417" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2447">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2448" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2931</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2449" z:Size="1">
                  <FBDPortExtSettings z:Id="2450">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2451" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2452">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2453">
              <EndFBDPort z:Id="2454" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2940</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2455" z:Size="2">
                  <FBDPortExtSettings z:Id="2456">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2457">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2458" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2459">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2460" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2913</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2461" z:Size="1">
                  <FBDPortExtSettings z:Id="2462">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2458" i:nil="true" />
                <VariableName z:Ref="2417" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2463">
              <EndFBDPort z:Ref="2454" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2460" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2464">
              <EndFBDPort z:Id="2465" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2944</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2466" z:Size="8">
                  <FBDPortExtSettings z:Id="2467">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2468">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2469">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2470">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2471">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2472">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2473">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2474">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2475" i:type="d2p1:ArrayOfanyType" z:Size="8">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2476">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2477" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>2928</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2478" z:Size="8">
                  <FBDPortExtSettings z:Id="2479">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2480">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2481">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2482">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2483">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2484">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2485">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2486">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2475" i:nil="true" />
                <VariableName z:Id="2487">FloatOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2488">
              <EndFBDPort z:Id="2489" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2948</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2490" z:Size="2">
                  <FBDPortExtSettings z:Id="2491">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2492">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2493" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2476" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2494" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2941</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2495" z:Size="2">
                  <FBDPortExtSettings z:Id="2496">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2497">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2493" i:nil="true" />
                <VariableName z:Id="2498">ByteOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2499">
              <EndFBDPort z:Id="2500" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2965</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2501" z:Size="1">
                  <FBDPortExtSettings z:Id="2502">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2503" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2504">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2505" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2963</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2506" z:Size="1">
                  <FBDPortExtSettings z:Id="2507">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2503" i:nil="true" />
                <VariableName z:Id="2508">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2509">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2510" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2966</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2511" z:Size="1">
                  <FBDPortExtSettings z:Id="2512">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2513" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2514">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2515">
              <EndFBDPort z:Ref="2402" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2516" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2970</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2517" z:Size="1">
                  <FBDPortExtSettings z:Id="2518">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2519" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2508" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2520" z:Size="15">
            <FBDItem z:Id="2521" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2968</Id>
              <InputPortsCollection z:Id="2522" z:Size="1">
                <FBDPort z:Id="2523" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2969</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2524" z:Size="1">
                    <FBDPortExtSettings z:Id="2525">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2526">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2527" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3500</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="2528">Tag</Name>
              <OutputPortsCollection z:Id="2529" z:Size="1">
                <FBDPort z:Ref="2516" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2530">_</Prefix>
              <SecondName z:Ref="2528" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="466" i:nil="true" />
              <InputFBDPort z:Ref="2523" i:nil="true" />
              <OutputFBDPort z:Ref="2516" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2531" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2961</Id>
              <InputPortsCollection z:Id="2532" z:Size="1">
                <FBDPort z:Id="2533" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2962</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2534" z:Size="1">
                    <FBDPortExtSettings z:Id="2535">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2526" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2536" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3420</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Ref="2528" i:nil="true" />
              <OutputPortsCollection z:Id="2537" z:Size="1">
                <FBDPort z:Ref="2505" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2530" i:nil="true" />
              <SecondName z:Ref="2528" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="461" i:nil="true" />
              <InputFBDPort z:Ref="2533" i:nil="true" />
              <OutputFBDPort z:Ref="2505" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2538" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2539">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>2964</Id>
              <InputPortsCollection z:Id="2540" z:Size="1">
                <FBDPort z:Ref="2500" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2541" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Id="2542">I&gt;F</Name>
              <OutputPortsCollection z:Id="2543" z:Size="1">
                <FBDPort z:Ref="2510" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2544">YART</Prefix>
              <SecondName z:Id="2545">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Id="2546">//#I  &gt; F (Int в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="2547" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2920</Id>
              <InputPortsCollection z:Id="2548" z:Size="1">
                <FBDPort z:Id="2549" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2921</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2550" z:Size="1">
                    <FBDPortExtSettings z:Id="2551">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2552" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3430</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Id="2553">Tag</Name>
              <OutputPortsCollection z:Id="2554" z:Size="1">
                <FBDPort z:Ref="2444" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2555">_</Prefix>
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="436" i:nil="true" />
              <InputFBDPort z:Ref="2549" i:nil="true" />
              <OutputFBDPort z:Ref="2444" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2556" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2557">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>2929</Id>
              <InputPortsCollection z:Id="2558" z:Size="1">
                <FBDPort z:Ref="2439" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2559" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3650</d8p1:_x>
                <d8p1:_y>3850</d8p1:_y>
              </Location>
              <Name z:Id="2560">I&gt;F</Name>
              <OutputPortsCollection z:Id="2561" z:Size="1">
                <FBDPort z:Ref="2448" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2562">YART</Prefix>
              <SecondName z:Id="2563">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2546" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2564" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2917</Id>
              <InputPortsCollection z:Id="2565" z:Size="1">
                <FBDPort z:Id="2566" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2918</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2567" z:Size="1">
                    <FBDPortExtSettings z:Id="2568">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2569" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2570" z:Size="1">
                <FBDPort z:Ref="2434" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="362" i:nil="true" />
              <InputFBDPort z:Ref="2566" i:nil="true" />
              <OutputFBDPort z:Ref="2434" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2571" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2914</Id>
              <InputPortsCollection z:Id="2572" z:Size="1">
                <FBDPort z:Id="2573" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2915</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2574" z:Size="1">
                    <FBDPortExtSettings z:Id="2575">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2576" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2577" z:Size="1">
                <FBDPort z:Ref="2429" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="86" i:nil="true" />
              <InputFBDPort z:Ref="2573" i:nil="true" />
              <OutputFBDPort z:Ref="2429" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2578" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2905</Id>
              <InputPortsCollection z:Id="2579" z:Size="1">
                <FBDPort z:Id="2580" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2906</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2581" z:Size="1">
                    <FBDPortExtSettings z:Id="2582">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2583" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2584" z:Size="1">
                <FBDPort z:Ref="2424" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="242" i:nil="true" />
              <InputFBDPort z:Ref="2580" i:nil="true" />
              <OutputFBDPort z:Ref="2424" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2585" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2902</Id>
              <InputPortsCollection z:Id="2586" z:Size="1">
                <FBDPort z:Id="2587" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2903</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2588" z:Size="1">
                    <FBDPortExtSettings z:Id="2589">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2590" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3700</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2591" z:Size="1">
                <FBDPort z:Ref="2419" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="238" i:nil="true" />
              <InputFBDPort z:Ref="2587" i:nil="true" />
              <OutputFBDPort z:Ref="2419" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2592" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2899</Id>
              <InputPortsCollection z:Id="2593" z:Size="1">
                <FBDPort z:Id="2594" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2900</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2595" z:Size="1">
                    <FBDPortExtSettings z:Id="2596">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2597" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2598" z:Size="1">
                <FBDPort z:Ref="2414" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="431" i:nil="true" />
              <InputFBDPort z:Ref="2594" i:nil="true" />
              <OutputFBDPort z:Ref="2414" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2599" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2600">Упаковка/Распаковка массива</Description>
              <HelpID>95</HelpID>
              <Id>2926</Id>
              <InputPortsCollection z:Id="2601" z:Size="1">
                <FBDPort z:Ref="2402" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2602" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3770</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="2603">ARRAY</Name>
              <OutputPortsCollection z:Id="2604" z:Size="1">
                <FBDPort z:Ref="2477" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2562" i:nil="true" />
              <SecondName z:Id="2605">FloatMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>7d6e82cd-5de6-4502-94a0-4c47d2596119</SpecificationId>
              <Code z:Id="2606">//#FLOATARR (Свертка / Развертка Bit массивов)


for(new i = 0; i&lt;sizeof_FloatIn; i++)


{


	if(i&gt;=sizeof_FloatOut) return;


	FloatOut[i] = FloatIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2607" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2943</Id>
              <InputPortsCollection z:Id="2608" z:Size="1">
                <FBDPort z:Ref="2465" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2609" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2610" z:Size="1">
                <FBDPort z:Id="2611" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>8</ArrayItemsCount>
                  <Id>2945</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2612" z:Size="8">
                    <FBDPortExtSettings z:Id="2613">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2614">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2615">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2616">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2617">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2618">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2619">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2620">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="2621" i:type="d2p1:ArrayOfanyType" z:Size="8">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2417" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="441" i:nil="true" />
              <InputFBDPort z:Ref="2465" i:nil="true" />
              <OutputFBDPort z:Ref="2611" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2622" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2911</Id>
              <InputPortsCollection z:Id="2623" z:Size="1">
                <FBDPort z:Id="2624" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2912</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2625" z:Size="1">
                    <FBDPortExtSettings z:Id="2626">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2476" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2627" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2628" z:Size="1">
                <FBDPort z:Ref="2460" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="342" i:nil="true" />
              <InputFBDPort z:Ref="2624" i:nil="true" />
              <OutputFBDPort z:Ref="2460" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2629" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2630">Упаковка/Распаковка массива</Description>
              <HelpID>92</HelpID>
              <Id>2939</Id>
              <InputPortsCollection z:Id="2631" z:Size="1">
                <FBDPort z:Ref="2454" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2632" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3750</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Id="2633">ARRAY</Name>
              <OutputPortsCollection z:Id="2634" z:Size="1">
                <FBDPort z:Ref="2494" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2562" i:nil="true" />
              <SecondName z:Id="2635">ByteMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>487e1ff3-87f3-4b13-b3dd-4a1be44bd7b7</SpecificationId>
              <Code z:Id="2636">//#BYTEARR (Свертка / Развертка Bit массивов )  


for(new i = 0; i&lt;sizeof_ByteIn; i++)


{


	if(i&gt;=sizeof_ByteOut) return;


	ByteOut[i] = ByteIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2637" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2947</Id>
              <InputPortsCollection z:Id="2638" z:Size="1">
                <FBDPort z:Ref="2489" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2639" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3900</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2553" i:nil="true" />
              <OutputPortsCollection z:Id="2640" z:Size="1">
                <FBDPort z:Id="2641" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2949</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2642" z:Size="2">
                    <FBDPortExtSettings z:Id="2643">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2644">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2645" i:type="d2p1:ArrayOfanyType" z:Size="2">
                    <d2p1:anyType i:nil="true" />
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2417" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2555" i:nil="true" />
              <SecondName z:Ref="2553" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="79" i:nil="true" />
              <CustomTag z:Ref="452" i:nil="true" />
              <InputFBDPort z:Ref="2489" i:nil="true" />
              <OutputFBDPort z:Ref="2641" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="2646">ToArray</Name>
          <Parent z:Ref="2059" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>9</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="2647">Connection</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="2648" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="2649" z:Size="1">
        <d2p1:anyType z:Id="2650" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="2651" z:Size="22">
            <FBDConnector z:Id="2652">
              <EndFBDPort z:Id="2653" i:type="InputFBDPort">
                <Alias z:Id="2654">Вход 279</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1068</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2655" z:Size="1">
                  <FBDPortExtSettings z:Id="2656">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2657" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2658">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2659" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1080</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2660" z:Size="1">
                  <FBDPortExtSettings z:Id="2661">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2657" i:nil="true" />
                <VariableName z:Id="2662">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2663">
              <EndFBDPort z:Id="2664" i:type="InputFBDPort">
                <Alias z:Id="2665">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1085</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2666" z:Size="1">
                  <FBDPortExtSettings z:Id="2667">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2668" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2669">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2670" i:type="OutputFBDPort">
                <Alias z:Id="2671">Выход 315</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1074</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2672" z:Size="1">
                  <FBDPortExtSettings z:Id="2673">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2668" i:nil="true" />
                <VariableName z:Id="2674">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2675">
              <EndFBDPort z:Id="2676" i:type="InputFBDPort">
                <Alias z:Id="2677">Вход 282</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1071</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2678" z:Size="1">
                  <FBDPortExtSettings z:Id="2679">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2680" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2681">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2682" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1094</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2683" z:Size="1">
                  <FBDPortExtSettings z:Id="2684">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2680" i:nil="true" />
                <VariableName z:Id="2685">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2686">
              <EndFBDPort z:Id="2687" i:type="InputFBDPort">
                <Alias z:Id="2688">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1127</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2689" z:Size="1">
                  <FBDPortExtSettings z:Id="2690">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2691" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2692">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2693" i:type="OutputFBDPort">
                <Alias z:Id="2694">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2695" z:Size="1">
                  <FBDPortExtSettings z:Id="2696">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2691" i:nil="true" />
                <VariableName z:Id="2697">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2698">
              <EndFBDPort z:Id="2699" i:type="InputFBDPort">
                <Alias z:Id="2700">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1119</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2701" z:Size="1">
                  <FBDPortExtSettings z:Id="2702">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2703" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2704">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2705" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1107</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2706" z:Size="1">
                  <FBDPortExtSettings z:Id="2707">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2703" i:nil="true" />
                <VariableName z:Id="2708">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2709">
              <EndFBDPort z:Id="2710" i:type="InputFBDPort">
                <Alias z:Id="2711">Вход 124</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2712" z:Size="1">
                  <FBDPortExtSettings z:Id="2713">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2714" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2715">NodeId</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2716" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1110</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2717" z:Size="1">
                  <FBDPortExtSettings z:Id="2718">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="2714" i:nil="true" />
                <VariableName z:Ref="2708" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2719">
              <EndFBDPort z:Id="2720" i:type="InputFBDPort">
                <Alias z:Id="2721">Вход 127</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1121</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2722" z:Size="1">
                  <FBDPortExtSettings z:Id="2723">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2724" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2725">NodeAddress</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2726" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1113</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2727" z:Size="1">
                  <FBDPortExtSettings z:Id="2728">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2724" i:nil="true" />
                <VariableName z:Ref="2708" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2729">
              <EndFBDPort z:Id="2730" i:type="InputFBDPort">
                <Alias z:Id="2731">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1122</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2732" z:Size="1">
                  <FBDPortExtSettings z:Id="2733">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2734" i:type="d2p1:ArrayOfanyType" z:Size="10">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2735">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2736" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>10</ArrayItemsCount>
                <Id>1136</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2737" z:Size="10">
                  <FBDPortExtSettings z:Id="2738">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2739">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2740">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2741">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2742">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2743">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2744">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2745">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2746">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2747">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2734" i:nil="true" />
                <VariableName z:Ref="2708" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2748">
              <EndFBDPort z:Id="2749" i:type="InputFBDPort">
                <Alias z:Id="2750">Вход 122</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2227</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2751" z:Size="1">
                  <FBDPortExtSettings z:Id="2752">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2753" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2754">PortPar</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2755" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2148</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2756" z:Size="1">
                  <FBDPortExtSettings z:Id="2757">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2753" i:nil="true" />
                <VariableName z:Id="2758">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2759">
              <EndFBDPort z:Id="2760" i:type="InputFBDPort">
                <Alias z:Id="2761">Вход 438</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2150</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2762" z:Size="1">
                  <FBDPortExtSettings z:Id="2763">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2764" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2765">Status</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2766" i:type="OutputFBDPort">
                <Alias z:Id="2767">Выход 138</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2233</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2768" z:Size="1">
                  <FBDPortExtSettings z:Id="2769">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2764" i:nil="true" />
                <VariableName z:Id="2770">Status</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2771">
              <EndFBDPort z:Id="2772" i:type="InputFBDPort">
                <Alias z:Id="2773">Вход 148</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2230</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2774" z:Size="1">
                  <FBDPortExtSettings z:Id="2775">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2776" i:type="d2p1:ArrayOfanyType" z:Size="5">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2777">Result</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2778" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2160</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2779" z:Size="5">
                  <FBDPortExtSettings z:Id="2780">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2781">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2782">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2783">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2784">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2776" i:nil="true" />
                <VariableName z:Id="2785">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2786">
              <EndFBDPort z:Id="2787" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2236</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2788" z:Size="5">
                  <FBDPortExtSettings z:Id="2789">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2790">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2791">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2792">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2793">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2776" i:nil="true" />
                <VariableName z:Id="2794">ShortIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2778" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2795">
              <EndFBDPort z:Id="2796" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2829</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2797" z:Size="1">
                  <FBDPortExtSettings z:Id="2798">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="2680" i:nil="true" />
                <VariableName z:Id="2799">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="2682" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2800">
              <EndFBDPort z:Id="2801" i:type="InputFBDPort">
                <Alias z:Id="2802">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2832</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2803" z:Size="1">
                  <FBDPortExtSettings z:Id="2804">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2805" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2806">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2807" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2830</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2808" z:Size="1">
                  <FBDPortExtSettings z:Id="2809">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2805" i:nil="true" />
                <VariableName z:Id="2810">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2811">
              <EndFBDPort z:Id="2812" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2826</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2813" z:Size="1">
                  <FBDPortExtSettings z:Id="2814">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="2815" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2816">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2817" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2834</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2818" z:Size="1">
                  <FBDPortExtSettings z:Id="2819">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="2815" i:nil="true" />
                <VariableName z:Id="2820">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2821">
              <EndFBDPort z:Id="2822" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2852</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2823" z:Size="1">
                  <FBDPortExtSettings z:Id="2824">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2825" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2826">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Id="2827" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2237</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2828" z:Size="5">
                  <FBDPortExtSettings z:Id="2829">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2830">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2831">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2832">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2833">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2834" i:type="d2p1:ArrayOfanyType" z:Size="5">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2835">ShortOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2836">
              <EndFBDPort z:Id="2837" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2856</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2838" z:Size="1">
                  <FBDPortExtSettings z:Id="2839">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="2840" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2841">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="2827" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2842">
              <EndFBDPort z:Id="2843" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2844</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2844" z:Size="4">
                  <FBDPortExtSettings z:Id="2845">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2846">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2847">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2848">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2849" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2850">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2851" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2853</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2852" z:Size="2">
                  <FBDPortExtSettings z:Id="2853">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2854">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2855" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2856">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2857">
              <EndFBDPort z:Ref="2843" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="2851" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2858">
              <EndFBDPort z:Ref="2843" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2859" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2857</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2860" z:Size="2">
                  <FBDPortExtSettings z:Id="2861">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="2862">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="2863" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType i:nil="true" />
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="2864">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="2865">
              <EndFBDPort z:Ref="2843" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="2859" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="2866">
              <EndFBDPort z:Id="2867" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2841</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="2868" z:Size="1">
                  <FBDPortExtSettings z:Id="2869">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="2870" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2816" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="2871" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2845</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="2872" z:Size="1">
                  <FBDPortExtSettings z:Id="2873">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="2870" i:nil="true" />
                <VariableName z:Id="2874">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="2875" z:Size="26">
            <FBDItem z:Id="2876" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2158</Id>
              <InputPortsCollection z:Id="2877" z:Size="1">
                <FBDPort z:Id="2878" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>5</ArrayItemsCount>
                  <Id>2159</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2879" z:Size="5">
                    <FBDPortExtSettings z:Id="2880">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2881">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2882">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2883">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="2884">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2885">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2886" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4180</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="2887">Tag</Name>
              <OutputPortsCollection z:Id="2888" z:Size="1">
                <FBDPort z:Ref="2778" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2889">_</Prefix>
              <SecondName z:Ref="2887" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="383" i:nil="true" />
              <InputFBDPort z:Ref="2878" i:nil="true" />
              <OutputFBDPort z:Ref="2778" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2890" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2146</Id>
              <InputPortsCollection z:Id="2891" z:Size="1">
                <FBDPort z:Id="2892" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2147</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2893" z:Size="1">
                    <FBDPortExtSettings z:Id="2894">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="2895">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2896" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4170</d8p1:_x>
                <d8p1:_y>4080</d8p1:_y>
              </Location>
              <Name z:Id="2897">Tag</Name>
              <OutputPortsCollection z:Id="2898" z:Size="1">
                <FBDPort z:Ref="2755" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2899">_</Prefix>
              <SecondName z:Ref="2897" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="2892" i:nil="true" />
              <OutputFBDPort z:Ref="2755" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="2900" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2901">Read holding registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>272</HelpID>
              <Id>2225</Id>
              <InputPortsCollection z:Id="2902" z:Size="7">
                <FBDPort z:Id="2903" i:type="InputFBDPort">
                  <Alias z:Id="2904">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2905" z:Size="1">
                    <FBDPortExtSettings z:Id="2906">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2907" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2908" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2909">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2749" i:nil="true" />
                <FBDPort z:Id="2910" i:type="InputFBDPort">
                  <Alias z:Id="2911">Вход 124</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2228</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2912" z:Size="1">
                    <FBDPortExtSettings z:Id="2913">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="2914" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2915" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2916">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="2917" i:type="InputFBDPort">
                  <Alias z:Id="2918">Вход 127</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2229</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2919" z:Size="1">
                    <FBDPortExtSettings z:Id="2920">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2921" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2922" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">4096</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2923">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2772" i:nil="true" />
                <FBDPort z:Id="2924" i:type="InputFBDPort">
                  <Alias z:Id="2925">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2231</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2926" z:Size="1">
                    <FBDPortExtSettings z:Id="2927">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2928" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2929" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2930">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="2931" i:type="InputFBDPort">
                  <Alias z:Id="2932">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2232</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="2933" z:Size="1">
                    <FBDPortExtSettings z:Id="2934">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="2935" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="2936" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="2937">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2938" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4400</d8p1:_x>
                <d8p1:_y>4050</d8p1:_y>
              </Location>
              <Name z:Id="2939">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="2940" z:Size="1">
                <FBDPort z:Ref="2766" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2941">YART</Prefix>
              <SecondName z:Ref="2939" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Id="2942">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 3 &lt;&lt; 24; //функция MODBUS (read holding registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="2943" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="2944">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>2149</Id>
              <InputPortsCollection z:Id="2945" z:Size="1">
                <FBDPort z:Ref="2760" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2946" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>4060</d8p1:_y>
              </Location>
              <Name z:Id="2947">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="2948" z:Size="6">
                <FBDPort z:Id="2949" i:type="OutputFBDPort">
                  <Alias z:Id="2950">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2151</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2951" z:Size="1">
                    <FBDPortExtSettings z:Id="2952">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2953" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2954">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="2955" i:type="OutputFBDPort">
                  <Alias z:Id="2956">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2152</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2957" z:Size="1">
                    <FBDPortExtSettings z:Id="2958">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2959" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2960">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="2961" i:type="OutputFBDPort">
                  <Alias z:Id="2962">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2153</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2963" z:Size="1">
                    <FBDPortExtSettings z:Id="2964">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2965" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2966">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="2967" i:type="OutputFBDPort">
                  <Alias z:Id="2968">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2154</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2969" z:Size="1">
                    <FBDPortExtSettings z:Id="2970">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2971" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2972">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="2973" i:type="OutputFBDPort">
                  <Alias z:Id="2974">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2155</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2975" z:Size="1">
                    <FBDPortExtSettings z:Id="2976">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2977" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2978">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="2979" i:type="OutputFBDPort">
                  <Alias z:Id="2980">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2156</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="2981" z:Size="1">
                    <FBDPortExtSettings z:Id="2982">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="2983" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="2984">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="2985">YART</Prefix>
              <SecondName z:Ref="2947" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Id="2986">if (Status == -1)


{


	Failed = 1;


	return;


}


Connected = Status &amp; 0x0080 != 0;


Free = Status &amp; 0x007f == 0;


Sending = Status &amp; 0x007f == 1;


WaitRespond = Status &amp; 0x007f == 2;


Failed = Status &amp; 0x007f == 3;


Disconnected = Status &amp; 0x007f == 4;</Code>
            </FBDItem>
            <FBDItem z:Id="2987" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2988">Упаковка/Распаковка массива</Description>
              <HelpID>93</HelpID>
              <Id>2235</Id>
              <InputPortsCollection z:Id="2989" z:Size="1">
                <FBDPort z:Ref="2787" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2990" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4370</d8p1:_x>
                <d8p1:_y>4220</d8p1:_y>
              </Location>
              <Name z:Id="2991">ARRAY</Name>
              <OutputPortsCollection z:Id="2992" z:Size="1">
                <FBDPort z:Ref="2827" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2941" i:nil="true" />
              <SecondName z:Id="2993">ShortMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>450cea9c-3952-4754-8583-dd32c04d9ec8</SpecificationId>
              <Code z:Id="2994">//#INTARR (Свертка / Развертка Bit массивов)SH


for(new i = 0; i&lt;sizeof_ShortIn; i++)


{


	if(i&gt;=sizeof_ShortOut) return;


	ShortOut[i] = ShortIn[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="2995" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="2996">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>2855</Id>
              <InputPortsCollection z:Id="2997" z:Size="1">
                <FBDPort z:Ref="2837" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="2998" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4540</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="2999">SPLIT LE</Name>
              <OutputPortsCollection z:Id="3000" z:Size="2">
                <FBDPort z:Ref="2859" i:nil="true" />
                <FBDPort z:Id="3001" i:type="OutputFBDPort">
                  <Alias z:Id="3002">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2858</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3003" z:Size="1">
                    <FBDPortExtSettings z:Id="3004">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3005" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3006">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3007">YART</Prefix>
              <SecondName z:Id="3008">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Id="3009">const S = 2;





if(sizeof_y == S) for(new i = 0; i &lt; S; i++) y[i] = (x &gt;&gt; (8 * i)) &amp; 0xFF;


else e = true;</Code>
            </FBDItem>
            <FBDItem z:Id="3010" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3011">Разбивка значения на массив байт (little-endian)</Description>
              <HelpID>880</HelpID>
              <Id>2851</Id>
              <InputPortsCollection z:Id="3012" z:Size="1">
                <FBDPort z:Ref="2822" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3013" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4540</d8p1:_x>
                <d8p1:_y>4230</d8p1:_y>
              </Location>
              <Name z:Id="3014">SPLIT LE</Name>
              <OutputPortsCollection z:Id="3015" z:Size="2">
                <FBDPort z:Ref="2851" i:nil="true" />
                <FBDPort z:Id="3016" i:type="OutputFBDPort">
                  <Alias z:Id="3017">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2854</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3018" z:Size="1">
                    <FBDPortExtSettings z:Id="3019">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3020" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3021">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3022">YART</Prefix>
              <SecondName z:Id="3023">split_s_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5befd1f3-0cd0-4faa-905e-b40bd333bd2f</SpecificationId>
              <Code z:Ref="3009" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3024" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3025">Сборка массива байт (little-endian) в значение</Description>
              <HelpID>884</HelpID>
              <Id>2843</Id>
              <InputPortsCollection z:Id="3026" z:Size="1">
                <FBDPort z:Ref="2843" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3027" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="3028">JOIN LE</Name>
              <OutputPortsCollection z:Id="3029" z:Size="2">
                <FBDPort z:Ref="2871" i:nil="true" />
                <FBDPort z:Id="3030" i:type="OutputFBDPort">
                  <Alias z:Id="3031">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2846</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3032" z:Size="1">
                    <FBDPortExtSettings z:Id="3033">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3034" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3035">e</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3022" i:nil="true" />
              <SecondName z:Id="3036">join_i_le</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>98ef9844-4840-4068-892c-b0954294f66b</SpecificationId>
              <Code z:Id="3037">const S = 4;





if(sizeof_x == S) for(new i = 0; i &lt; S; i++) y |= (x[i] &amp; 0xFF) &lt;&lt; (8 * i);


else e = true;</Code>
            </FBDItem>
            <FBDItem z:Id="3038" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2840</Id>
              <InputPortsCollection z:Id="3039" z:Size="1">
                <FBDPort z:Ref="2867" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3040" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="3041">Tag</Name>
              <OutputPortsCollection z:Id="3042" z:Size="1">
                <FBDPort z:Id="3043" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2842</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3044" z:Size="1">
                    <FBDPortExtSettings z:Id="3045">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="3046" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3047">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3048">_</Prefix>
              <SecondName z:Ref="3041" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="436" i:nil="true" />
              <InputFBDPort z:Ref="2867" i:nil="true" />
              <OutputFBDPort z:Ref="3043" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3049" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1092</Id>
              <InputPortsCollection z:Id="3050" z:Size="1">
                <FBDPort z:Id="3051" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1093</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3052" z:Size="1">
                    <FBDPortExtSettings z:Id="3053">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3054">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3055" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3510</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="3056">Tag</Name>
              <OutputPortsCollection z:Id="3057" z:Size="1">
                <FBDPort z:Ref="2682" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3058">_</Prefix>
              <SecondName z:Ref="3056" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="111" i:nil="true" />
              <InputFBDPort z:Ref="3051" i:nil="true" />
              <OutputFBDPort z:Ref="2682" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3059" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1078</Id>
              <InputPortsCollection z:Id="3060" z:Size="1">
                <FBDPort z:Id="3061" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1079</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3062" z:Size="1">
                    <FBDPortExtSettings z:Id="3063">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3064">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3065" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="3066">Tag</Name>
              <OutputPortsCollection z:Id="3067" z:Size="1">
                <FBDPort z:Ref="2659" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3068">_</Prefix>
              <SecondName z:Ref="3066" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="3061" i:nil="true" />
              <OutputFBDPort z:Ref="2659" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3069" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3070">Read input registers

Внимание: Нельзя использовать более 40 блоков MODBUS RTU MASTER. Каждый блок может работать с массивом до 32 регистров включительно.</Description>
              <HelpID>271</HelpID>
              <Id>1066</Id>
              <InputPortsCollection z:Id="3071" z:Size="7">
                <FBDPort z:Id="3072" i:type="InputFBDPort">
                  <Alias z:Id="3073">Вход 278</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3074" z:Size="1">
                    <FBDPortExtSettings z:Id="3075">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3076" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3077" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3078">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2653" i:nil="true" />
                <FBDPort z:Id="3079" i:type="InputFBDPort">
                  <Alias z:Id="3080">Вход 280</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3081" z:Size="1">
                    <FBDPortExtSettings z:Id="3082">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="3083" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3084" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3085">NodeId</VariableName>
                </FBDPort>
                <FBDPort z:Id="3086" i:type="InputFBDPort">
                  <Alias z:Id="3087">Вход 281</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1070</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3088" z:Size="1">
                    <FBDPortExtSettings z:Id="3089">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3090" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3091" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3092">NodeAddress</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2676" i:nil="true" />
                <FBDPort z:Id="3093" i:type="InputFBDPort">
                  <Alias z:Id="3094">Вход 283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1072</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3095" z:Size="1">
                    <FBDPortExtSettings z:Id="3096">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3097" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3098" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3099">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="3100" i:type="InputFBDPort">
                  <Alias z:Id="3101">Вход 284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1073</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3102" z:Size="1">
                    <FBDPortExtSettings z:Id="3103">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3104" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3105" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3106">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3107" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3740</d8p1:_x>
                <d8p1:_y>4110</d8p1:_y>
              </Location>
              <Name z:Id="3108">MBRTUMIRRead</Name>
              <OutputPortsCollection z:Id="3109" z:Size="1">
                <FBDPort z:Ref="2670" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3110">YART</Prefix>
              <SecondName z:Ref="3108" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>19be49cb-7d11-4952-942b-1f42f10cdde5</SpecificationId>
              <Code z:Id="3111">new ctrl = YARTMBRTUGetComSets(PortPar);


ctrl |= Enable &amp; 0x0001; //работает или нет


ctrl |= 1 &lt;&lt; 5; // номер протокола 1 - MODBUS RTU MASTER


ctrl |= 4 &lt;&lt; 24; //функция MODBUS (read input registers)





new node = NodeId &lt;&lt; 16;


node |= NodeAddress;





new tm = Timeout &lt;&lt; 16;


tm |= Retries;





new result = Result[0] &lt;&lt; 16; //адрес в памяти ПЛК, куда кладем результат


result |= Result[1]; //длинна запроса (в short`ах)





Status = read_data(ctrl, node, result, tm);</Code>
            </FBDItem>
            <FBDItem z:Id="3112" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3113">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1084</Id>
              <InputPortsCollection z:Id="3114" z:Size="1">
                <FBDPort z:Ref="2664" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3115" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3920</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="3116">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="3117" z:Size="6">
                <FBDPort z:Id="3118" i:type="OutputFBDPort">
                  <Alias z:Id="3119">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3120" z:Size="1">
                    <FBDPortExtSettings z:Id="3121">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3122" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3123">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="3124" i:type="OutputFBDPort">
                  <Alias z:Id="3125">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1087</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3126" z:Size="1">
                    <FBDPortExtSettings z:Id="3127">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3128" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3129">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="3130" i:type="OutputFBDPort">
                  <Alias z:Id="3131">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3132" z:Size="1">
                    <FBDPortExtSettings z:Id="3133">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3134" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3135">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="3136" i:type="OutputFBDPort">
                  <Alias z:Id="3137">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1089</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3138" z:Size="1">
                    <FBDPortExtSettings z:Id="3139">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3140" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3141">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="3142" i:type="OutputFBDPort">
                  <Alias z:Id="3143">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1090</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3144" z:Size="1">
                    <FBDPortExtSettings z:Id="3145">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3146" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3147">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="3148" i:type="OutputFBDPort">
                  <Alias z:Id="3149">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3150" z:Size="1">
                    <FBDPortExtSettings z:Id="3151">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3152" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3153">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3110" i:nil="true" />
              <SecondName z:Ref="3116" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="2986" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3154" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="3155">Преобразование Short в Float</Description>
              <HelpID>106</HelpID>
              <Id>2828</Id>
              <InputPortsCollection z:Id="3156" z:Size="1">
                <FBDPort z:Ref="2796" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3157" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3479.0489745693226</d8p1:_x>
                <d8p1:_y>4223.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="3158">S&gt;F</Name>
              <OutputPortsCollection z:Id="3159" z:Size="1">
                <FBDPort z:Ref="2807" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3022" i:nil="true" />
              <SecondName z:Id="3160">ShortFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>06e48c4e-f372-4aee-84a8-6b45e846a795</SpecificationId>
              <Code z:Id="3161">//#S &gt; F (Short в Float)


#inline yFloat = float(a);</Code>
            </FBDItem>
            <FBDItem z:Id="3162" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3163">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>2831</Id>
              <InputPortsCollection z:Id="3164" z:Size="2">
                <FBDPort z:Ref="2801" i:nil="true" />
                <FBDPort z:Id="3165" i:type="InputFBDPort">
                  <Alias z:Id="3166">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2833</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3167" z:Size="1">
                    <FBDPortExtSettings z:Id="3168">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3169" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3170" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3171">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3172" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3598.0489745693226</d8p1:_x>
                <d8p1:_y>4241.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="3173">DIV</Name>
              <OutputPortsCollection z:Id="3174" z:Size="1">
                <FBDPort z:Ref="2817" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3022" i:nil="true" />
              <SecondName z:Ref="3173" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Id="3175">if(b != 0.0){


	y = a / b;


} else __eno = false;</Code>
            </FBDItem>
            <FBDItem z:Id="3176" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2825</Id>
              <InputPortsCollection z:Id="3177" z:Size="1">
                <FBDPort z:Ref="2812" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3178" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>4250</d8p1:_y>
              </Location>
              <Name z:Ref="3041" i:nil="true" />
              <OutputPortsCollection z:Id="3179" z:Size="1">
                <FBDPort z:Id="3180" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2827</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3181" z:Size="1">
                    <FBDPortExtSettings z:Id="3182">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="3183" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="3047" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3048" i:nil="true" />
              <SecondName z:Ref="3041" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="431" i:nil="true" />
              <InputFBDPort z:Ref="2812" i:nil="true" />
              <OutputFBDPort z:Ref="3180" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3184" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1134</Id>
              <InputPortsCollection z:Id="3185" z:Size="1">
                <FBDPort z:Id="3186" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1135</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3187" z:Size="10">
                    <FBDPortExtSettings z:Id="3188">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3189">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3190">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3191">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3192">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3193">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3194">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3195">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3196">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="3197">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="3198">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3199" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4610</d8p1:_y>
              </Location>
              <Name z:Id="3200">Tag</Name>
              <OutputPortsCollection z:Id="3201" z:Size="1">
                <FBDPort z:Ref="2736" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3202">_</Prefix>
              <SecondName z:Ref="3200" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="140" i:nil="true" />
              <InputFBDPort z:Ref="3186" i:nil="true" />
              <OutputFBDPort z:Ref="2736" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3203" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1111</Id>
              <InputPortsCollection z:Id="3204" z:Size="1">
                <FBDPort z:Id="3205" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1112</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3206" z:Size="1">
                    <FBDPortExtSettings z:Id="3207">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3198" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3208" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4570</d8p1:_y>
              </Location>
              <Name z:Ref="3200" i:nil="true" />
              <OutputPortsCollection z:Id="3209" z:Size="1">
                <FBDPort z:Ref="2726" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3202" i:nil="true" />
              <SecondName z:Ref="3200" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="99" i:nil="true" />
              <InputFBDPort z:Ref="3205" i:nil="true" />
              <OutputFBDPort z:Ref="2726" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3210" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1108</Id>
              <InputPortsCollection z:Id="3211" z:Size="1">
                <FBDPort z:Id="3212" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1109</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3213" z:Size="1">
                    <FBDPortExtSettings z:Id="3214">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3198" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3215" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Ref="3200" i:nil="true" />
              <OutputPortsCollection z:Id="3216" z:Size="1">
                <FBDPort z:Ref="2716" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3202" i:nil="true" />
              <SecondName z:Ref="3200" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="69" i:nil="true" />
              <CustomTag z:Ref="222" i:nil="true" />
              <InputFBDPort z:Ref="3212" i:nil="true" />
              <OutputFBDPort z:Ref="2716" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3217" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1105</Id>
              <InputPortsCollection z:Id="3218" z:Size="1">
                <FBDPort z:Id="3219" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1106</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3220" z:Size="1">
                    <FBDPortExtSettings z:Id="3221">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3198" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3222" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4480</d8p1:_y>
              </Location>
              <Name z:Ref="3200" i:nil="true" />
              <OutputPortsCollection z:Id="3223" z:Size="1">
                <FBDPort z:Ref="2705" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3202" i:nil="true" />
              <SecondName z:Ref="3200" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="218" i:nil="true" />
              <InputFBDPort z:Ref="3219" i:nil="true" />
              <OutputFBDPort z:Ref="2705" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3224" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3225">Read holding registers

Внимание: Нельзя использовать более 20 блоков MODBUS RTU MASTER</Description>
              <HelpID>272</HelpID>
              <Id>1117</Id>
              <InputPortsCollection z:Id="3226" z:Size="7">
                <FBDPort z:Id="3227" i:type="InputFBDPort">
                  <Alias z:Id="3228">Вход 123</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1118</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3229" z:Size="1">
                    <FBDPortExtSettings z:Id="3230">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3231" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3232" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3233">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Ref="2699" i:nil="true" />
                <FBDPort z:Ref="2710" i:nil="true" />
                <FBDPort z:Ref="2720" i:nil="true" />
                <FBDPort z:Ref="2730" i:nil="true" />
                <FBDPort z:Id="3234" i:type="InputFBDPort">
                  <Alias z:Id="3235">Вход 125</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1123</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3236" z:Size="1">
                    <FBDPortExtSettings z:Id="3237">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3238" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3239" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1300</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3240">Timeout</VariableName>
                </FBDPort>
                <FBDPort z:Id="3241" i:type="InputFBDPort">
                  <Alias z:Id="3242">Вход 126</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1124</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="3243" z:Size="1">
                    <FBDPortExtSettings z:Id="3244">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="3245" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="3246" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="3247">Retries</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3248" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3800</d8p1:_x>
                <d8p1:_y>4480</d8p1:_y>
              </Location>
              <Name z:Id="3249">MBRTUMHRRead</Name>
              <OutputPortsCollection z:Id="3250" z:Size="1">
                <FBDPort z:Ref="2693" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3251">YART</Prefix>
              <SecondName z:Ref="3249" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>5126281e-7148-4cab-aa56-f790e8fe82aa</SpecificationId>
              <Code z:Ref="2942" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3252" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="3253">Расшифровка результата выполнения блока чтения/записи MODBUS RTU MASTER</Description>
              <HelpID>268</HelpID>
              <Id>1126</Id>
              <InputPortsCollection z:Id="3254" z:Size="1">
                <FBDPort z:Ref="2687" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="3255" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="3256">StatusMBDecoder</Name>
              <OutputPortsCollection z:Id="3257" z:Size="6">
                <FBDPort z:Id="3258" i:type="OutputFBDPort">
                  <Alias z:Id="3259">Выход 439</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1128</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3260" z:Size="1">
                    <FBDPortExtSettings z:Id="3261">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3262" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3263">Connected</VariableName>
                </FBDPort>
                <FBDPort z:Id="3264" i:type="OutputFBDPort">
                  <Alias z:Id="3265">Выход 440</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3266" z:Size="1">
                    <FBDPortExtSettings z:Id="3267">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3268" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3269">Free</VariableName>
                </FBDPort>
                <FBDPort z:Id="3270" i:type="OutputFBDPort">
                  <Alias z:Id="3271">Выход 441</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1130</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3272" z:Size="1">
                    <FBDPortExtSettings z:Id="3273">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3274" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3275">Sending</VariableName>
                </FBDPort>
                <FBDPort z:Id="3276" i:type="OutputFBDPort">
                  <Alias z:Id="3277">Выход 443</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1131</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3278" z:Size="1">
                    <FBDPortExtSettings z:Id="3279">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3280" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3281">WaitRespond</VariableName>
                </FBDPort>
                <FBDPort z:Id="3282" i:type="OutputFBDPort">
                  <Alias z:Id="3283">Выход 444</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3284" z:Size="1">
                    <FBDPortExtSettings z:Id="3285">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3286" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3287">Failed</VariableName>
                </FBDPort>
                <FBDPort z:Id="3288" i:type="OutputFBDPort">
                  <Alias z:Id="3289">Выход 445</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="3290" z:Size="1">
                    <FBDPortExtSettings z:Id="3291">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="3292" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="3293">Disconnected</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="3294">YART</Prefix>
              <SecondName z:Ref="3256" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>46c51055-c72d-414a-9245-97cd7faee58d</SpecificationId>
              <Code z:Ref="2986" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="3295" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1137</Id>
              <InputPortsCollection z:Id="3296" z:Size="0" />
              <InternalPortsCollection z:Id="3297" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3500</d8p1:_x>
                <d8p1:_y>4420</d8p1:_y>
              </Location>
              <Name z:Id="3298">comment</Name>
              <OutputPortsCollection z:Id="3299" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="3300">_</Prefix>
              <SecondName z:Id="3301">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3302">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</Comment>
              <Height>256.99871895158185</Height>
              <Width>652.8334433743903</Width>
            </FBDItem>
            <FBDItem z:Id="3303" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1140</Id>
              <InputPortsCollection z:Id="3304" z:Size="0" />
              <InternalPortsCollection z:Id="3305" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3420</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Id="3306">comment</Name>
              <OutputPortsCollection z:Id="3307" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="3308">_</Prefix>
              <SecondName z:Id="3309">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3310">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</Comment>
              <Height>384.23943374694227</Height>
              <Width>677.28701152943631</Width>
            </FBDItem>
            <FBDItem z:Id="3311" i:type="DisplayVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1177</Id>
              <InputPortsCollection z:Id="3312" z:Size="0" />
              <InternalPortsCollection z:Id="3313" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="3314" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="3058" i:nil="true" />
              <SecondName z:Id="3315">newfun_266497545</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>17fe287e-341c-4631-bf6b-2c3c220f2e46</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="3316">
                <ArrayIndex>0</ArrayIndex>
                <TagId>2817</TagId>
              </Tag>
              <FontSize>14</FontSize>
              <Format z:Id="3317">0.#</Format>
            </FBDItem>
            <FBDItem z:Id="3318" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2234</Id>
              <InputPortsCollection z:Id="3319" z:Size="0" />
              <InternalPortsCollection z:Id="3320" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4155.5348040758736</d8p1:_x>
                <d8p1:_y>3993.7150354028645</d8p1:_y>
              </Location>
              <Name z:Id="3321">comment</Name>
              <OutputPortsCollection z:Id="3322" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="2889" i:nil="true" />
              <SecondName z:Id="3323">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="3324">UEsDBBQAAgAIAKprfVG3WsM8EQEAAOUBAAARAAAAZG9jUHJvcHMvY29yZS54bWxtkU1qwzAQha9itLdl2VBS4SiLlq5aKDTQ0p2QJo6I9YOkxOnZuuiReoXaSm0cCGjz9L430sz8fv80m7PushP4oKxZI1KUKAMjrFSmXaNj3OUrtGGNcFRYD6/eOvBRQciGmAlUijXax+goxu7ou8L6FkuBoQMNJgZMCoLRzEbwOtwMJGdBahW/HNxEJ3Omz0HNYN/3RV8ntCpLgj9ent/EHjTPlQmRGwFTSrg5FBIRiqE3M5g76zWPIRVxXBx4C2OxO6whcskjx+MocjfPArFGCio88Gg9q0mDF7L5b/tyATIbvksvzU3Oe/3wuH1CrCqrMidkOFtS03pFy/vPsdZVPu3Cw0mNC2PDW0uZ1PWi2B9QSwMEFAACAAgAqmt9UZvcEkISAgAAMAUAABEAAAB3b3JkL2RvY3VtZW50LnhtbK2UT27UMBTGrxJ5P+OkdEoVTaZCICEWSBWjHsDjOIlF/Ee2k3RY0W5YsGbBBhAbthVipArUcgXPSbgCdmaSlBYQqN3E/uz3fu97juUf375PD45ZGdREaSp4AqJxCALCsUgpzxNQmWy0Dw5m0yZOBa4Y4SZw8VzHTQIKY2QMocYFYUiPhSTc7WVCMWScVDlshEqlEpho7XCshDthuAcZohx0GKlvgBjFSmiRmTEWDIoso5i0KJcehdeg8wJJ0tEY/hdXDKnnlRw5uESGLmhJzbJ11puKQte64vEWMuod+aR44yj2PrqM+m/xNSuHdqPd2/X7SKHGDQMwvx3vsRKVHGg3D/C/aA8Rr5EGAcPxk5wLhRYlSYDvGvg7tBDp0o+y/RwqP6jNUCKeB01cozIBqho9OwJOLWhKr0iCtHmgKeqX4GwKtwQ4AO+Q2sRmZj+tT+3KXthzuwrWJ+tXdrU+dd9z+9WeBfazvbRf1q8D+95+sO/sR/vGvvX5ZkPZOOubvmNz/r/FWiLsTlkqoomqCZjZM+fopbN5Evzi5M/lCR8dzYfyvRzKb5eunU0S7Py2V02w2cYsJemqcHJsDlFOWoyLzOcv3JZ7SaJoMgl9vSIBu3v3Jn7qniDXVNjHPkXKrZYkMy6+DVY0L3phhOymC2GMYJ0qCEqJSsD9cN/LTAhzReaVaWXYtdY5h91thcPTN/sJUEsDBBQAAgAIAKprfVFWy7tQ3wIAAJcKAAAPAAAAd29yZC9zdHlsZXMueG1s3VbBbtwgEP0Vi3tj7yqqolWcKNkqSqU0XTVR7thgmy4GBDhO+ms99JP6Cx0wbHbtbVKp20t98fCAN8O8Yeyf33+cnj+1PHmk2jApcjQ7ylBCRSkJE3WOOlu9O0HnZ6f9wthnTk0Cq4VZ9DlqrFWLNDVlQ1tsjqSiAuYqqVtsYajrtJeaKC1LagyQtTydZ9n7tMVMIEdIZPmBVrjj1rihXukwDCP/upLCmqRfYFMylqMl5qzQDAHSXAizjaRufQETj5jnKAsAGwMlVmaMGavZmo5RIVdaymoMP2LBTDOhlVzqCOLOykj9LYLzeYC6iAgpaFzWkIiWnGLtDugpI1m/qBjfpQbN7AVntYg7C2woZxtOjkXtrDRkMx3nWI1H7rWmVN3SJzs+oMNvgHySPIVreqkpXl9SEH+SxZ4R2S9BRS15nJvFU3dKaagOx3vbtQUU4USaPYmZZCLyXAB0/awaKqY8CpdQhAC7DH3pOH3JrENAn+PMDQp/Cr8Rqq6yVAd7mHAuAtf2mjE81J4gPlpt7I134ddzWtlgalY3druGhIXMd5jfbaLdOUTByKSev5YRccQoCK6C4NsSp5Mr5680bLfPCqJTWONaY9W40PzUR5KjlY+UDLucdP5q4HYj9K278TwWw0oPhh6MNDBNvZUNuCshdTvelm95C+Enqxhs4jpEFJm27JoRQsXfBTF16/RLhhKNWsBlI583d2+ZHTiG+SQGqGyqoVbXaMM86TwZPFdX40bj2i+naNQMfhOPxYVbuxXL/Z+VQHI/7PS+bcGH8MBYUs4/4WEkFWzqQ/0PDskTjh0LKniYnmUn+xYU0lrZvsLgb9QrFOluQOl2oDrWri3f0mxPjqZZ8elI7lir4DXbXzb32Z58XcJ3E1rhS752RHTflBwdewPaRGwrpsHQaMOg0hBHsMNnJPPPbqIPzrvR5+DMUdiDEzP4iyD0+t9RPxyeOp2Uyf9wyaJlzn4BUEsDBBQAAgAIAKprfVEIBOYLcwAAAH8AAAASAAAAd29yZC9udW1iZXJpbmcueG1sDYtBDsIgEAC/Qrhb0IMxpLRvQbptSbq7hKXi3zz4JL8gx5nJ/D7fcX7joV5QJDF5fR2sVkCRl0Sb12ddLw89T2NzdOITSreqDySueb3Xmp0xEnfAIANnoN5WLhhqx7KZxmXJhSOI9BMPc7P2bjAk0spMf1BLAwQUAAIACACqa31RvH7mNlUBAACUAgAAEQAAAHdvcmQvc2V0dGluZ3MueG1sZZJNboMwEIWvEnnfEMhPKxQStatsoi7oBQZ7ACvGtmwTytm66JF6hRqIRZvsZr73ZsYz8s/X9/742YjFFY3lSmYkXq7IAiVVjMsqI60rn17I8bDvUovOeWYX3i9t2mWkdk6nUWRpjQ3YpdIovVYq04DzqamiThmmjaJorS9tRJSsVruoAS7J0JJxqwX0b0AvlVGtZHkNGhddegWREf+QaHRhCa1wH1DkTumgPidBh9apU69rlOD8DvfleEX5Ktk7YycE5ve8N1DVaHBzlE+LepuEBjMyUV5wwV1/VgyJl1rDHw7QcGqUVaVb+pJIlSWnOJ6AhJFxMs6M/g0VJh8a4Bm0nuYWVZwRwavaxUOp8xkDcxmTokpuWjJqyaSNCVCKcnDfgpklgf3xrQNbz2wT2GZm28C2M9sFthtY3Ws0gsuLP0kIB14qIVSH7DTrDygcJHyvwy9QSwMEFAACAAgAqmt9UW1S3r+fBQAA/RsAABUAAAB3b3JkL3RoZW1lL3RoZW1lMS54bWztWU9v2zYU/yqE7q0sW3KdoG4RO3a7NWmDxOvQIy3TEmtKFEg6qW9DexwwYFg37DJgtx2GbQFaYIdl2IfJ1mHrgHyFUbQsUTbVJE1WbFh8sEXq997v/eF7IuWTn365eftJRMA+YhzTuG0512sWQLFPRzgO2tZUjK+1rNu3bsJ1EaIIAQmO+TpsW6EQybptc19OQ36dJiiW98aURVDIIQvsEYMHUklE7Hqt1rQjiGMLxDBCbevBeIx9BAapSitX3iPyKxY8nfAJ2/MVoy6hsKOJk/7wGe8SBvYhaVuSZ0QPBuiJsACBXMgbbaumPhawb920cykiKoQ1wb76LAQzidGkrgRZMMwlnb67dmOzYKjPGVaBvV6v23MKjQoBfV9666yA3X7L6eRaNdT8clV7t+bV3CUBjaGxIrDW6XS8tbJAoxBwVwRataa7US8LuIWAt+pDZ6PbbZYFvEKguSLQv7HWdJcEFCokOJ6swNPMFinKMWNK7hrxLYlv5WuhgNnaSpsriEXVuovgY8r6EqCyDAWOgZglaAx9ievCaMgwVAxwHUHtVjbn89W5lA5wn+FEtK33EygLpMCcHH13cvQCnBwdHj99efz0x+Nnz46f/mCSvAvjQJd8/c2nf331Efjzxdevn39eIcB1gd++//jXnz+rQAod+eqLw99fHr768pM/vn1uwm8wONTxAxwhDu6jA7BLo9Q/AwUasnOKDEKISyIwlFATsifCEvL+DBIjsIPKMXzIZFswIu9MH5fs3QvZVGAT8l4YlZDblJIOZWaf7ik6zadpHFTws6kO3IVw30jfXcpyb5rIlY2NSrshKpm6Q2TiYYBiJEB6j04QMsk9wrgU323sM8rpWIBHGHQgNgdmgIfCLHUXRzJBM6ONMuulCG0/BB1KjASbaL8MlRUCiVEpIqVo3oFTASOz1TAiOnQLitBo6N6M+aXAcyGTHiBCQW+EODcKPWCzksn3oGxR5hWwTWZRGcoEnhihW5BSHbpJJ90QRonZbhyHOvg9PpErFoIdKsx20HLNpGOZEBhXZ/4hRuKcxf4BDkLzYknvTJmxRhAt1+iMjCGKFw+AUiuPcPymvk6wbOxXfX2pr2/Ih52xnpa7eSXwP9rDN+E03kFpnVy18KsWftXC31Dh/0TjLnq1re/WlZ6ocus+xoTsiRlBW1x1eS5dHPXlpBooofyokITycsFXAgYMqmvAqPgQi3AvhInkcRRFwDPdAQcJ5fKIYlUqVydeLL1Wc15+TJVwKLbpaD7fKJ1fc0VqFHCdqpGqOCtd48ZF6Zw58ox8jlfB572Zz9ZiKssIwPR9hNOsZ2ZyHxI0SqM/Vy0wQbvIF5m+Ra4uPW88hCOUJc4xe+Y0zhrJ1umB1PjWGhflO0vmdEK3itC7jNTVTkudvVq5JC6PwIE006t7FvCjROrkaTuDJIjbli8yh04t9mW3K1asU6t2u0SSMC42IQ/nYupW/u4nLuyue26q7gKGm7rUGckbLefdk9vLCUTjsUx8xUwxzO7RqUBsLxwdgCGZsl0oLXfnS2qEuXx41BcDJovTzVZbueizxb/8LikrCkiSEGbtqaXneo5X17kRaqTZZ1cY/5a+NC7RF+//7Eu6fOUmuDFSpzW5NWAQpOu0bVEmQirbTRJiv8/kZkKRScOAPAaq/kTSd+KpsWh/0a/shZJ5dwtCsYsDwLBscSJkCO2IzNNTtDmLdpiVR6Yp6y25wTyZ/w7RPiKDtHKbaQgsEOYNJIuFAi4nzjbV2DDo/5s3RG7VhuiUHUNB5Z5ng+Lq7V57Cqxd1IpzPm3rFW7XvbM/bRN5ngHpl2zkmPmk2P4OqHrEFvtNuSSvtbJSzCeH0uqW7l+q611ur4q0tKpWwaXuU7X4N6rifwrh28ffM4TfO1f07dVitrWTkBot/be2mLn1N1BLAwQUAAIACACqa31RycxhxNcAAAC+AQAACwAAAF9yZWxzLy5yZWxznZFfSgMxEIevEua9O2uFRaRpoa0PvknxAiGZ3Q1t/pBMbT2bDx7JKziKSCsVxMeZ+c03X8jby+tscQw79USl+hQ1XDUtKIo2OR8HDXvuJzewmM82tDMsiTr6XJWsxKphZM63iNWOFExtUqYokz6VYFjKMmA2dmsGwmnbdlhOGXDOVPdOw6ZbL6+71fQO1ONzpr8cSH3vLa2T3QeKfOHOj4SQTRmINeAhFYfuq98IFxRekLKp0D/Efn85BmLjDBv8QE9yke3CnuqJm2g9SL9+Rr7d8OwX5u9QSwMEFAACAAgAqmt9UU27gToyAQAAEwQAABMAAABbQ29udGVudF9UeXBlc10ueG1stZNNTsMwEIWvYnlbJW5ZIISadgFsoQsuYJxJaxH/yDMp7dlYcCSuwCRps0ClLaJsIjnz3vueLfvz/WM637harCGhDb6Qk3wsBXgTSuuXhWyoym7kfDZ93kZAwVKPhVwRxVul0KzAacxDBM+TKiSniZdpqaI2r3oJ6mo8vlYmeAJPGbUZcja9h0o3NYmHDf/usQlqlOKuF7asQuoYa2s08VytffmNku0IOTs7Da5sxBELpFAHEd3oR8Le+MQnkWwJYqETPWrHMvUWUqnKYBrH1vx4zoGmoaqsgcHfpsUUDCDyEbs6HyZOWz86WcQ37gUSWy/fZIg+3QJpWwNevkKfewYfiNjxHw12yUc7sH2RQkS+2wl+32F/eVt3xvQIiew52yZ+cdB/J3/eehczMFX3xGdfUEsDBBQAAgAIAKprfVHM7n/M4gAAALECAAAcAAAAd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsc62SS24CMQyGrxJ538lMF1VVEdiw6aaLwgXS4Hmok4diT1XOxoIjcQVMQTwkhLqYpf84nz852W22k9mv79UPZupiMFAVJSgMLq660BgYuH56hdl08om9Zemgtkuk5EogAy1zetOaXIveUhETBjmpY/aWpcyNTtZ92wb1c1m+6HzNgFumel8ZkGDB6x4rUMt1wv8MiHXdOZxHN3gMfGeOpgORhGhzg2zgWBfCAaXvS3wMflSFMPgvzLLQi8U5eiiyQGbpoXEXcoJereSUPHRZyshxX4YPxIvFX3kMq7OJvvl40z1QSwECFAAUAAIACACqa31Rt1rDPBEBAADlAQAAEQAAAAAAAAAAAAAAAAAAAAAAZG9jUHJvcHMvY29yZS54bWxQSwECFAAUAAIACACqa31Rm9wSQhICAAAwBQAAEQAAAAAAAAAAAAAAAABAAQAAd29yZC9kb2N1bWVudC54bWxQSwECFAAUAAIACACqa31RVsu7UN8CAACXCgAADwAAAAAAAAAAAAAAAACBAwAAd29yZC9zdHlsZXMueG1sUEsBAhQAFAACAAgAqmt9UQgE5gtzAAAAfwAAABIAAAAAAAAAAAAAAAAAjQYAAHdvcmQvbnVtYmVyaW5nLnhtbFBLAQIUABQAAgAIAKprfVG8fuY2VQEAAJQCAAARAAAAAAAAAAAAAAAAADAHAAB3b3JkL3NldHRpbmdzLnhtbFBLAQIUABQAAgAIAKprfVFtUt6/nwUAAP0bAAAVAAAAAAAAAAAAAAAAALQIAAB3b3JkL3RoZW1lL3RoZW1lMS54bWxQSwECFAAUAAIACACqa31RycxhxNcAAAC+AQAACwAAAAAAAAAAAAAAAACGDgAAX3JlbHMvLnJlbHNQSwECFAAUAAIACACqa31RTbuBOjIBAAATBAAAEwAAAAAAAAAAAAAAAACGDwAAW0NvbnRlbnRfVHlwZXNdLnhtbFBLAQIUABQAAgAIAKprfVHM7n/M4gAAALECAAAcAAAAAAAAAAAAAAAAAOkQAAB3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzUEsFBgAAAAAJAAkAQQIAAAUSAAAAAA==</Comment>
              <Height>368.73961250369985</Height>
              <Width>829.82943214598617</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="3325">Read IR HR</Name>
          <Parent z:Ref="2648" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>2</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="3326">Read_MODBUS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="3327" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="3328" z:Size="1">
        <d2p1:anyType z:Id="3329" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="3330" z:Size="63">
            <FBDConnector z:Id="3331">
              <EndFBDPort z:Id="3332" i:type="InputFBDPort">
                <Alias z:Id="3333">DO.02: DOUT_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1447</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3334" z:Size="2">
                  <FBDPortExtSettings z:Id="3335">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3336">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3337" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="3338" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                  <d2p1:anyType z:Id="3339" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">4000</d2p1:anyType>
                </Value>
                <VariableName z:Ref="51" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3340" i:type="OutputFBDPort">
                <Alias z:Id="3341">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1434</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3342" z:Size="2">
                  <FBDPortExtSettings z:Id="3343">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3344">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3337" i:nil="true" />
                <VariableName z:Id="3345">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3346">
              <EndFBDPort z:Id="3347" i:type="InputFBDPort">
                <Alias z:Id="3348">X[t)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1250</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3349" z:Size="1">
                  <FBDPortExtSettings z:Id="3350">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3351" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3352" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">49.77448</d2p1:anyType>
                </Value>
                <VariableName z:Id="3353">Feedback</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3354" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1247</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3355" z:Size="1">
                  <FBDPortExtSettings z:Id="3356">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3351" i:nil="true" />
                <VariableName z:Id="3357">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3358">
              <EndFBDPort z:Id="3359" i:type="InputFBDPort">
                <Alias z:Id="3360">Вход 1619</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1251</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3361" z:Size="1">
                  <FBDPortExtSettings z:Id="3362">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3363" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3364" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="3365">KP</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3366" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1279</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3367" z:Size="1">
                  <FBDPortExtSettings z:Id="3368">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3363" i:nil="true" />
                <VariableName z:Id="3369">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3370">
              <EndFBDPort z:Id="3371" i:type="InputFBDPort">
                <Alias z:Id="3372">Вход 1623</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1253</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3373" z:Size="1">
                  <FBDPortExtSettings z:Id="3374">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3375" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3376" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.2</d2p1:anyType>
                </Value>
                <VariableName z:Id="3377">KD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3378" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1289</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3379" z:Size="1">
                  <FBDPortExtSettings z:Id="3380">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3375" i:nil="true" />
                <VariableName z:Id="3381">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3382">
              <EndFBDPort z:Id="3383" i:type="InputFBDPort">
                <Alias z:Id="3384">Вход 1621</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1252</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3385" z:Size="1">
                  <FBDPortExtSettings z:Id="3386">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3387" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3388" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.02</d2p1:anyType>
                </Value>
                <VariableName z:Id="3389">KI</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3390" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1286</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3391" z:Size="1">
                  <FBDPortExtSettings z:Id="3392">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3387" i:nil="true" />
                <VariableName z:Ref="3381" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3393">
              <EndFBDPort z:Id="3394" i:type="InputFBDPort">
                <Alias z:Id="3395">Вход 1629</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1262</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3396" z:Size="1">
                  <FBDPortExtSettings z:Id="3397">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3398" i:type="d2p1:ArrayOfanyType" z:Size="17">
                  <d2p1:anyType z:Id="3399" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.5</d2p1:anyType>
                  <d2p1:anyType z:Id="3400" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.497772366</d2p1:anyType>
                  <d2p1:anyType z:Id="3401" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                  <d2p1:anyType z:Id="3402" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3403" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                  <d2p1:anyType z:Id="3404" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1</d2p1:anyType>
                  <d2p1:anyType z:Id="3405" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.02</d2p1:anyType>
                  <d2p1:anyType z:Id="3406" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.2</d2p1:anyType>
                  <d2p1:anyType z:Id="3407" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.08253746</d2p1:anyType>
                  <d2p1:anyType z:Id="3408" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.002276212</d2p1:anyType>
                  <d2p1:anyType z:Id="3409" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.08022073</d2p1:anyType>
                  <d2p1:anyType z:Id="3410" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3411" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3412" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3413" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3414" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3415" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="3416">BUFFER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3417" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>17</ArrayItemsCount>
                <Id>1301</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3418" z:Size="17">
                  <FBDPortExtSettings z:Id="3419">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3420">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3421">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3422">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3423">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3424">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3425">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3426">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3427">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3428">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3429">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3430">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3431">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3432">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3433">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3434">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3435">
                    <Index>16</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3398" i:nil="true" />
                <VariableName z:Id="3436">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3437">
              <EndFBDPort z:Id="3438" i:type="InputFBDPort">
                <Alias z:Id="3439">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1261</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3440" z:Size="1">
                  <FBDPortExtSettings z:Id="3441">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3442" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3443" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">10</d2p1:anyType>
                </Value>
                <VariableName z:Id="3444">TestCMD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3445" i:type="OutputFBDPort">
                <Alias z:Id="3446">Test config</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1297</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3447" z:Size="1">
                  <FBDPortExtSettings z:Id="3448">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3442" i:nil="true" />
                <VariableName z:Id="3449">Testconfig</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3450">
              <EndFBDPort z:Id="3451" i:type="InputFBDPort">
                <Alias z:Id="3452">Test RUN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1259</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3453" z:Size="1">
                  <FBDPortExtSettings z:Id="3454">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3455" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3456" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3457">Test</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3458" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1305</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3459" z:Size="1">
                  <FBDPortExtSettings z:Id="3460">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3455" i:nil="true" />
                <VariableName z:Id="3461">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3462">
              <EndFBDPort z:Id="3463" i:type="InputFBDPort">
                <Alias z:Id="3464">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1484</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3465" z:Size="1">
                  <FBDPortExtSettings z:Id="3466">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3467" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3468" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3469">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3470" i:type="OutputFBDPort">
                <Alias z:Id="3471"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1522</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3472" z:Size="1">
                  <FBDPortExtSettings z:Id="3473">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3474" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3475" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3476">out_1522</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3477">
              <EndFBDPort z:Id="3478" i:type="InputFBDPort">
                <Alias z:Id="3479">K IN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1485</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3480" z:Size="1">
                  <FBDPortExtSettings z:Id="3481">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3482" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3483" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">80</d2p1:anyType>
                </Value>
                <VariableName z:Id="3484">KIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3485" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1530</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3486" z:Size="1">
                  <FBDPortExtSettings z:Id="3487">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3482" i:nil="true" />
                <VariableName z:Id="3488">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3489">
              <EndFBDPort z:Id="3490" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1532</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3491" z:Size="1">
                  <FBDPortExtSettings z:Id="3492">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3493">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3470" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3494">
              <EndFBDPort z:Id="3495" i:type="InputFBDPort">
                <Alias z:Id="3496">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1528</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3497" z:Size="1">
                  <FBDPortExtSettings z:Id="3498">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3499" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3500" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3501">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3502" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1533</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3503" z:Size="1">
                  <FBDPortExtSettings z:Id="3504">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3499" i:nil="true" />
                <VariableName z:Id="3505">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3506">
              <EndFBDPort z:Id="3507" i:type="InputFBDPort">
                <Alias z:Id="3508">PERIOD(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1430</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3509" z:Size="1">
                  <FBDPortExtSettings z:Id="3510">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3511" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3512" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">10000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3513">PERIOD</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3470" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3514">
              <EndFBDPort z:Id="3515" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1538</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3516" z:Size="1">
                  <FBDPortExtSettings z:Id="3517">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3518">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3470" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3519">
              <EndFBDPort z:Id="3520" i:type="InputFBDPort">
                <Alias z:Id="3521">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1541</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3522" z:Size="1">
                  <FBDPortExtSettings z:Id="3523">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3524" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3525" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">8000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3526">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3527" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1539</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3528" z:Size="1">
                  <FBDPortExtSettings z:Id="3529">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3524" i:nil="true" />
                <VariableName z:Id="3530">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3531">
              <EndFBDPort z:Id="3532" i:type="InputFBDPort">
                <Alias z:Id="3533">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1429</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3534" z:Size="1">
                  <FBDPortExtSettings z:Id="3535">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3536" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3537" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">4000</d2p1:anyType>
                </Value>
                <VariableName z:Id="3538">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3539" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1543</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3540" z:Size="1">
                  <FBDPortExtSettings z:Id="3541">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3536" i:nil="true" />
                <VariableName z:Id="3542">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3543">
              <EndFBDPort z:Id="3544" i:type="InputFBDPort">
                <Alias z:Id="3545">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1221</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3546" z:Size="1">
                  <FBDPortExtSettings z:Id="3547">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3548" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3549" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1197.18958</d2p1:anyType>
                </Value>
                <VariableName z:Id="3550">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3551" i:type="OutputFBDPort">
                <Alias z:Id="3552">AI.01: AIN_1_WaterT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1423</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3553" z:Size="1">
                  <FBDPortExtSettings z:Id="3554">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3548" i:nil="true" />
                <VariableName z:Ref="7" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3555">
              <EndFBDPort z:Id="3556" i:type="InputFBDPort">
                <Alias z:Id="3557">DO.01: DOUT_1_WaterPWM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1453</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3558" z:Size="2">
                  <FBDPortExtSettings z:Id="3559">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3560">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3561" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="3562" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">8000</d2p1:anyType>
                  <d2p1:anyType z:Id="3563" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">2372</d2p1:anyType>
                </Value>
                <VariableName z:Ref="49" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3564" i:type="OutputFBDPort">
                <Alias z:Id="3565">Выход 1827</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1488</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3566" z:Size="2">
                  <FBDPortExtSettings z:Id="3567">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3568">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3561" i:nil="true" />
                <VariableName z:Id="3569">PWM</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3570">
              <EndFBDPort z:Id="3571" i:type="InputFBDPort">
                <Alias z:Id="3572">SP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1249</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3573" z:Size="1">
                  <FBDPortExtSettings z:Id="3574">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3575" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3576" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="3577">Reference</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3578" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1693</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3579" z:Size="1">
                  <FBDPortExtSettings z:Id="3580">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3575" i:nil="true" />
                <VariableName z:Id="3581">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3582">
              <EndFBDPort z:Id="3583" i:type="InputFBDPort">
                <Alias z:Id="3584">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1692</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3585" z:Size="2">
                  <FBDPortExtSettings z:Id="3586">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3587">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3588" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3589" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">25</d2p1:anyType>
                </Value>
                <VariableName z:Id="3590">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3591" i:type="OutputFBDPort">
                <Alias z:Id="3592"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1695</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3593" z:Size="1">
                  <FBDPortExtSettings z:Id="3594">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3595" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3596" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">25</d2p1:anyType>
                </Value>
                <VariableName z:Id="3597">out_1695</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3598">
              <EndFBDPort z:Id="3599" i:type="InputFBDPort">
                <Alias z:Id="3600">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1699</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3601" z:Size="1">
                  <FBDPortExtSettings z:Id="3602">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value i:nil="true" />
                <VariableName z:Id="3603">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3591" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3604">
              <EndFBDPort z:Id="3605" i:type="InputFBDPort">
                <Alias z:Id="3606">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1705</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3607" z:Size="1">
                  <FBDPortExtSettings z:Id="3608">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3609" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3610" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">24.7744789</d2p1:anyType>
                </Value>
                <VariableName z:Id="3611">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3612" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1700</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3613" z:Size="1">
                  <FBDPortExtSettings z:Id="3614">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3609" i:nil="true" />
                <VariableName z:Id="3615">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3616">
              <EndFBDPort z:Id="3617" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1702</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3618" z:Size="1">
                  <FBDPortExtSettings z:Id="3619">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3620" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3621" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">24.7747574</d2p1:anyType>
                </Value>
                <VariableName z:Id="3622">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3623" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1710</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3624" z:Size="1">
                  <FBDPortExtSettings z:Id="3625">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3620" i:nil="true" />
                <VariableName z:Id="3626">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3627">
              <EndFBDPort z:Id="3628" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1714</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3629" z:Size="1">
                  <FBDPortExtSettings z:Id="3630">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3575" i:nil="true" />
                <VariableName z:Id="3631">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3578" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3632">
              <EndFBDPort z:Ref="3583" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3633" i:type="OutputFBDPort">
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1719</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3634" z:Size="1">
                  <FBDPortExtSettings z:Id="3635">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3588" i:nil="true" />
                <VariableName z:Id="3636">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3637">
              <EndFBDPort z:Id="3638" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1685</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3639" z:Size="1">
                  <FBDPortExtSettings z:Id="3640">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3641" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3642" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">1.65074921</d2p1:anyType>
                </Value>
                <VariableName z:Ref="3622" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3643" i:type="OutputFBDPort">
                <Alias z:Id="3644">Выход 1257</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1268</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3645" z:Size="1">
                  <FBDPortExtSettings z:Id="3646">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3641" i:nil="true" />
                <VariableName z:Id="3647">Y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3648">
              <EndFBDPort z:Id="3649" i:type="InputFBDPort">
                <Alias z:Id="3650">DO.03: DOUT_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1910</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3651" z:Size="2">
                  <FBDPortExtSettings z:Id="3652">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3653">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3654" i:type="d2p1:ArrayOfanyType" z:Size="2">
                  <d2p1:anyType z:Id="3655" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">50</d2p1:anyType>
                  <d2p1:anyType z:Id="3656" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">25</d2p1:anyType>
                </Value>
                <VariableName z:Ref="54" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3657" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>1908</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3658" z:Size="2">
                  <FBDPortExtSettings z:Id="3659">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3660">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3654" i:nil="true" />
                <VariableName z:Id="3661">mass</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3662">
              <EndFBDPort z:Id="3663" i:type="InputFBDPort">
                <Alias z:Id="3664">MIN</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1255</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3665" z:Size="1">
                  <FBDPortExtSettings z:Id="3666">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3667" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3668" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="3669">PID_Min</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3670" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2081</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3671" z:Size="1">
                  <FBDPortExtSettings z:Id="3672">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3667" i:nil="true" />
                <VariableName z:Id="3673">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3674">
              <EndFBDPort z:Id="3675" i:type="InputFBDPort">
                <Alias z:Id="3676">MAX</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1254</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3677" z:Size="1">
                  <FBDPortExtSettings z:Id="3678">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3679" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3680" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                </Value>
                <VariableName z:Id="3681">PID_Max</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3682" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2078</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3683" z:Size="1">
                  <FBDPortExtSettings z:Id="3684">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3679" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3685">
              <EndFBDPort z:Id="3686" i:type="InputFBDPort">
                <Alias z:Id="3687">K filter</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1222</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3688" z:Size="1">
                  <FBDPortExtSettings z:Id="3689">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3690" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3691" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0.001</d2p1:anyType>
                </Value>
                <VariableName z:Id="3692">k</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3693" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2106</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3694" z:Size="1">
                  <FBDPortExtSettings z:Id="3695">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3690" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3696">
              <EndFBDPort z:Id="3697" i:type="InputFBDPort">
                <Alias z:Id="3698">DifErrReset</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1263</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3699" z:Size="1">
                  <FBDPortExtSettings z:Id="3700">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3701" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3702" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3703">DER</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3704" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2312</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3705" z:Size="1">
                  <FBDPortExtSettings z:Id="3706">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3701" i:nil="true" />
                <VariableName z:Id="3707">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3708">
              <EndFBDPort z:Id="3709" i:type="InputFBDPort">
                <Alias z:Id="3710">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3711" z:Size="1">
                  <FBDPortExtSettings z:Id="3712">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3351" i:nil="true" />
                <VariableName z:Id="3713">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3354" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3714">
              <EndFBDPort z:Id="3715" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1246</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3716" z:Size="1">
                  <FBDPortExtSettings z:Id="3717">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3718" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3719" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">49.773922</d2p1:anyType>
                </Value>
                <VariableName z:Id="3720">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3721" i:type="OutputFBDPort">
                <Alias z:Id="3722">T (°C)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1224</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3723" z:Size="1">
                  <FBDPortExtSettings z:Id="3724">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3718" i:nil="true" />
                <VariableName z:Id="3725">t</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3726">
              <EndFBDPort z:Id="3727" i:type="InputFBDPort">
                <Alias z:Id="3728">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2604</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3729" z:Size="4">
                  <FBDPortExtSettings z:Id="3730">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3731">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3732">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3733">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3734" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType z:Id="3735" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="3736" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3737" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="3738" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="3739">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3740" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2620</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3741" z:Size="4">
                  <FBDPortExtSettings z:Id="3742">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3743">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3744">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3745">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3734" i:nil="true" />
                <VariableName z:Id="3746">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3747">
              <EndFBDPort z:Id="3748" i:type="InputFBDPort">
                <Alias z:Id="3749">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2603</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3750" z:Size="4">
                  <FBDPortExtSettings z:Id="3751">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3752">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3753">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3754">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3755" i:type="d2p1:ArrayOfanyType" z:Size="4">
                  <d2p1:anyType z:Id="3756" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">-100</d2p1:anyType>
                  <d2p1:anyType z:Id="3757" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">0</d2p1:anyType>
                  <d2p1:anyType z:Id="3758" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                  <d2p1:anyType z:Id="3759" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">200</d2p1:anyType>
                </Value>
                <VariableName z:Id="3760">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3761" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>4</ArrayItemsCount>
                <Id>2617</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3762" z:Size="4">
                  <FBDPortExtSettings z:Id="3763">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3764">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3765">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3766">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3755" i:nil="true" />
                <VariableName z:Ref="3746" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3767">
              <EndFBDPort z:Id="3768" i:type="InputFBDPort">
                <Alias z:Id="3769">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2622</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3770" z:Size="2">
                  <FBDPortExtSettings z:Id="3771">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3772">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3641" i:nil="true" />
                <VariableName z:Id="3773">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3643" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="3774">
              <EndFBDPort z:Ref="3768" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3775" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2478</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3776" z:Size="1">
                  <FBDPortExtSettings z:Id="3777">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3778" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3779" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">28</d2p1:anyType>
                </Value>
                <VariableName z:Id="3780">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3781">
              <EndFBDPort z:Id="3782" i:type="InputFBDPort">
                <Alias z:Id="3783">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2602</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3784" z:Size="1">
                  <FBDPortExtSettings z:Id="3785">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3786" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3787" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">29.65075</d2p1:anyType>
                </Value>
                <VariableName z:Id="3788">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3789" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2623</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3790" z:Size="1">
                  <FBDPortExtSettings z:Id="3791">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3786" i:nil="true" />
                <VariableName z:Id="3792">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3793">
              <EndFBDPort z:Id="3794" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2626</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3795" z:Size="1">
                  <FBDPortExtSettings z:Id="3796">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3797" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3798" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">29.65075</d2p1:anyType>
                </Value>
                <VariableName z:Id="3799">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3800" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2605</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3801" z:Size="1">
                  <FBDPortExtSettings z:Id="3802">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3797" i:nil="true" />
                <VariableName z:Id="3803">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3804">
              <EndFBDPort z:Id="3805" i:type="InputFBDPort">
                <Alias z:Id="3806">Вход 2817</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2631</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3807" z:Size="1">
                  <FBDPortExtSettings z:Id="3808">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3809" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3810" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="3811">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3812" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2635</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3813" z:Size="1">
                  <FBDPortExtSettings z:Id="3814">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3809" i:nil="true" />
                <VariableName z:Ref="3746" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3815">
              <EndFBDPort z:Id="3816" i:type="InputFBDPort">
                <Alias z:Id="3817">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2630</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3818" z:Size="2">
                  <FBDPortExtSettings z:Id="3819">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3820">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3821" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3822" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">29.65075</d2p1:anyType>
                </Value>
                <VariableName z:Id="3823">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3824" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2627</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3825" z:Size="1">
                  <FBDPortExtSettings z:Id="3826">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3821" i:nil="true" />
                <VariableName z:Ref="3746" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3827">
              <EndFBDPort z:Ref="3816" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3828" i:type="OutputFBDPort">
                <Alias z:Id="3829"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2637</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3830" z:Size="1">
                  <FBDPortExtSettings z:Id="3831">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3832" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3833" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="3834">out_2637</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3835">
              <EndFBDPort z:Id="3836" i:type="InputFBDPort">
                <Alias z:Id="3837">DUTY(ms)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1483</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3838" z:Size="1">
                  <FBDPortExtSettings z:Id="3839">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3840" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3841" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">29.65075</d2p1:anyType>
                </Value>
                <VariableName z:Id="3842">DUTY</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3843" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2632</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3844" z:Size="1">
                  <FBDPortExtSettings z:Id="3845">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3840" i:nil="true" />
                <VariableName z:Id="3846">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3847">
              <EndFBDPort z:Id="3848" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2477</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3849" z:Size="1">
                  <FBDPortExtSettings z:Id="3850">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3851" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3852" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">28</d2p1:anyType>
                </Value>
                <VariableName z:Id="3853">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3854" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2642</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3855" z:Size="1">
                  <FBDPortExtSettings z:Id="3856">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3851" i:nil="true" />
                <VariableName z:Id="3857">OUTY</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3858">
              <EndFBDPort z:Id="3859" i:type="InputFBDPort">
                <Alias z:Id="3860">Вход 3571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2639</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3861" z:Size="1">
                  <FBDPortExtSettings z:Id="3862">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3863" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3864" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="3865">INX</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3866" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1715</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3867" z:Size="1">
                  <FBDPortExtSettings z:Id="3868">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3863" i:nil="true" />
                <VariableName z:Id="3869">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3870">
              <EndFBDPort z:Id="3871" i:type="InputFBDPort">
                <Alias z:Id="3872">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>5</ArrayItemsCount>
                <Id>2662</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3873" z:Size="5">
                  <FBDPortExtSettings z:Id="3874">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3875">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3876">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3877">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3878">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3879" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3880" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">13.2167578</d2p1:anyType>
                </Value>
                <VariableName z:Id="3881">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3882" i:type="OutputFBDPort">
                <Alias z:Ref="3829" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2666</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3883" z:Size="1">
                  <FBDPortExtSettings z:Id="3884">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3885" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3886" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">450</d2p1:anyType>
                </Value>
                <VariableName z:Id="3887">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3888">
              <EndFBDPort z:Ref="3871" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3889" i:type="OutputFBDPort">
                <Alias z:Id="3890"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2668</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3891" z:Size="1">
                  <FBDPortExtSettings z:Id="3892">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3893" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3894" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">350</d2p1:anyType>
                </Value>
                <VariableName z:Id="3895">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3896">
              <EndFBDPort z:Ref="3871" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3897" i:type="OutputFBDPort">
                <Alias z:Id="3898"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2674</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3899" z:Size="1">
                  <FBDPortExtSettings z:Id="3900">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3901" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3902" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="3903">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3904">
              <EndFBDPort z:Ref="3871" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3905" i:type="OutputFBDPort">
                <Alias z:Id="3906"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2676</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3907" z:Size="1">
                  <FBDPortExtSettings z:Id="3908">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3909" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3910" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="3911">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3912">
              <EndFBDPort z:Ref="3871" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3913" i:type="OutputFBDPort">
                <Alias z:Id="3914"> </Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2678</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3915" z:Size="1">
                  <FBDPortExtSettings z:Id="3916">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="3917" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3918" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:double">50</d2p1:anyType>
                </Value>
                <VariableName z:Id="3919">out_2666</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3920">
              <EndFBDPort z:Id="3921" i:type="InputFBDPort">
                <Alias z:Id="3922">Вход 2817</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2663</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3923" z:Size="1">
                  <FBDPortExtSettings z:Id="3924">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="3925" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3926" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="3927">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3928" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2739</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3929" z:Size="1">
                  <FBDPortExtSettings z:Id="3930">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="3925" i:nil="true" />
                <VariableName z:Id="3931">yByte</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3932">
              <EndFBDPort z:Id="3933" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3934" z:Size="1">
                  <FBDPortExtSettings z:Id="3935">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="3936" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3937" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="3938">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3939" i:type="OutputFBDPort">
                <Alias z:Id="3940">CV</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2698</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3941" z:Size="1">
                  <FBDPortExtSettings z:Id="3942">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="3936" i:nil="true" />
                <VariableName z:Id="3943">CV</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3944">
              <EndFBDPort z:Id="3945" i:type="InputFBDPort">
                <Alias z:Id="3946">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>2787</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3947" z:Size="2">
                  <FBDPortExtSettings z:Id="3948">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="3949">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3950" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3951" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3952">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3953" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2767</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3954" z:Size="1">
                  <FBDPortExtSettings z:Id="3955">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3950" i:nil="true" />
                <VariableName z:Id="3956">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3957">
              <EndFBDPort z:Id="3958" i:type="InputFBDPort">
                <Alias z:Id="3959">CU</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2694</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3960" z:Size="1">
                  <FBDPortExtSettings z:Id="3961">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3962" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3963" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3964">CU</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3965" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2788</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3966" z:Size="1">
                  <FBDPortExtSettings z:Id="3967">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3962" i:nil="true" />
                <VariableName z:Id="3968">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3969">
              <EndFBDPort z:Id="3970" i:type="InputFBDPort">
                <Alias z:Id="3971">RESET</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2696</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3972" z:Size="1">
                  <FBDPortExtSettings z:Id="3973">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3974" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3975" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3976">Reset</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3977" i:type="OutputFBDPort">
                <Alias z:Id="3978">Выход 1571</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2697</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3979" z:Size="1">
                  <FBDPortExtSettings z:Id="3980">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3974" i:nil="true" />
                <VariableName z:Id="3981">Q</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3982">
              <EndFBDPort z:Id="3983" i:type="InputFBDPort">
                <Alias z:Id="3984">Reset</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2782</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3985" z:Size="1">
                  <FBDPortExtSettings z:Id="3986">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="3987" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="3988" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="3989">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="3990" i:type="OutputFBDPort">
                <Alias z:Id="3991">Done</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2784</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="3992" z:Size="1">
                  <FBDPortExtSettings z:Id="3993">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="3987" i:nil="true" />
                <VariableName z:Id="3994">_d</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="3995">
              <EndFBDPort z:Id="3996" i:type="InputFBDPort">
                <Alias z:Id="3997">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2765</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="3998" z:Size="1">
                  <FBDPortExtSettings z:Id="3999">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="4000" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4001" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="4002">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4003" i:type="OutputFBDPort">
                <Alias z:Id="4004">MM</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2758</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4005" z:Size="1">
                  <FBDPortExtSettings z:Id="4006">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="4000" i:nil="true" />
                <VariableName z:Id="4007">mins</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4008">
              <EndFBDPort z:Ref="3945" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4009" i:type="OutputFBDPort">
                <Alias z:Ref="3829" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2790</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4010" z:Size="1">
                  <FBDPortExtSettings z:Id="4011">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="4012" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4013" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="4014">out_2790</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4015">
              <EndFBDPort z:Id="4016" i:type="InputFBDPort">
                <Alias z:Id="4017">Вход 3570</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2640</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4018" z:Size="7">
                  <FBDPortExtSettings z:Id="4019">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4020">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4021">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4022">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4023">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4024">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4025">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4026" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="4027" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">25</d2p1:anyType>
                  <d2p1:anyType z:Id="4028" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">30</d2p1:anyType>
                  <d2p1:anyType z:Id="4029" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                  <d2p1:anyType z:Id="4030" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">50</d2p1:anyType>
                  <d2p1:anyType z:Id="4031" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">60</d2p1:anyType>
                  <d2p1:anyType z:Id="4032" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">70</d2p1:anyType>
                  <d2p1:anyType z:Id="4033" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">100</d2p1:anyType>
                </Value>
                <VariableName z:Id="4034">X</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4035" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2647</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4036" z:Size="7">
                  <FBDPortExtSettings z:Id="4037">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4038">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4039">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4040">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4041">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4042">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4043">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4026" i:nil="true" />
                <VariableName z:Ref="3746" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4044">
              <EndFBDPort z:Id="4045" i:type="InputFBDPort">
                <Alias z:Id="4046">Вход 3572</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2641</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4047" z:Size="7">
                  <FBDPortExtSettings z:Id="4048">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4049">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4050">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4051">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4052">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4053">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4054">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4055" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="4056" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">10</d2p1:anyType>
                  <d2p1:anyType z:Id="4057" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">15</d2p1:anyType>
                  <d2p1:anyType z:Id="4058" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">18</d2p1:anyType>
                  <d2p1:anyType z:Id="4059" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">28</d2p1:anyType>
                  <d2p1:anyType z:Id="4060" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">35</d2p1:anyType>
                  <d2p1:anyType z:Id="4061" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">53</d2p1:anyType>
                  <d2p1:anyType z:Id="4062" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">75</d2p1:anyType>
                </Value>
                <VariableName z:Id="4063">Y</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4064" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>2650</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4065" z:Size="7">
                  <FBDPortExtSettings z:Id="4066">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4067">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4068">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4069">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4070">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4071">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="4072">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4055" i:nil="true" />
                <VariableName z:Ref="3746" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="4073">
              <EndFBDPort z:Id="4074" i:type="InputFBDPort">
                <Alias z:Id="4075">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2800</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4076" z:Size="1">
                  <FBDPortExtSettings z:Id="4077">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3548" i:nil="true" />
                <VariableName z:Id="4078">valueIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3551" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4079">
              <EndFBDPort z:Id="4080" i:type="InputFBDPort">
                <Alias z:Id="4081">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2810</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4082" z:Size="1">
                  <FBDPortExtSettings z:Id="4083">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="3548" i:nil="true" />
                <VariableName z:Id="4084">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="3551" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="4085">
              <EndFBDPort z:Id="4086" i:type="InputFBDPort">
                <Alias z:Id="4087">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1717</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="4088" z:Size="1">
                  <FBDPortExtSettings z:Id="4089">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="4090" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="4091" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="4092">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="4093" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3270</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="4094" z:Size="1">
                  <FBDPortExtSettings z:Id="4095">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="4090" i:nil="true" />
                <VariableName z:Id="4096">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="4097" z:Size="68">
            <FBDItem z:Id="4098" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4099">Планировщик базовый</Description>
              <HelpID>380</HelpID>
              <Id>2651</Id>
              <InputPortsCollection z:Id="4100" z:Size="7">
                <FBDPort z:Id="4101" i:type="InputFBDPort">
                  <Alias z:Id="4102">Вход 7275</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2652</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4103" z:Size="1">
                    <FBDPortExtSettings z:Id="4104">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4105">Enable</VariableName>
                </FBDPort>
                <FBDPort z:Id="4106" i:type="InputFBDPort">
                  <Alias z:Id="4107">DD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2653</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4108" z:Size="1">
                    <FBDPortExtSettings z:Id="4109">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4110">DD</VariableName>
                </FBDPort>
                <FBDPort z:Id="4111" i:type="InputFBDPort">
                  <Alias z:Id="4112">MM</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2654</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4113" z:Size="1">
                    <FBDPortExtSettings z:Id="4114">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4115">MM</VariableName>
                </FBDPort>
                <FBDPort z:Id="4116" i:type="InputFBDPort">
                  <Alias z:Id="4117">DW</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2655</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4118" z:Size="1">
                    <FBDPortExtSettings z:Id="4119">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4120">WD</VariableName>
                </FBDPort>
                <FBDPort z:Id="4121" i:type="InputFBDPort">
                  <Alias z:Id="4122">hh</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2656</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4123" z:Size="1">
                    <FBDPortExtSettings z:Id="4124">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4125">H</VariableName>
                </FBDPort>
                <FBDPort z:Id="4126" i:type="InputFBDPort">
                  <Alias z:Id="4127">mm</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2657</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4128" z:Size="1">
                    <FBDPortExtSettings z:Id="4129">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4130">M</VariableName>
                </FBDPort>
                <FBDPort z:Id="4131" i:type="InputFBDPort">
                  <Alias z:Id="4132">ss</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2658</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4133" z:Size="1">
                    <FBDPortExtSettings z:Id="4134">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4135">S</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4136" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5444.8514415094469</d8p1:_x>
                <d8p1:_y>3514.1621018807978</d8p1:_y>
              </Location>
              <Name z:Id="4137">SCHEDULER</Name>
              <OutputPortsCollection z:Id="4138" z:Size="2">
                <FBDPort z:Id="4139" i:type="OutputFBDPort">
                  <Alias z:Id="4140">Выход 7283</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2659</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4141" z:Size="1">
                    <FBDPortExtSettings z:Id="4142">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4143" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4144" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4145">Status</VariableName>
                </FBDPort>
                <FBDPort z:Id="4146" i:type="OutputFBDPort">
                  <Alias z:Id="4147">Выход 7284</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2660</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4148" z:Size="1">
                    <FBDPortExtSettings z:Id="4149">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4150" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4151" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4152">Error</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4153">YART</Prefix>
              <SecondName z:Ref="4137" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>b2e3dc54-ccde-4742-842d-2ef2db49f5ac</SpecificationId>
              <Code z:Id="4154">Status = false;


if(DD &lt; 1 || (DD &gt; 31 &amp;&amp; DD != 255) || MM &lt; 1 || (MM &gt; 12 &amp;&amp; MM != 255) || WD &lt; 1 || (WD &gt; 7 &amp;&amp; WD !=255) || H &lt; 0 || (H &gt; 23 &amp;&amp; H != 255) || M &lt; 0 || (M &gt; 59 &amp;&amp; M != 255) || S &lt; 0 || (S &gt; 59 &amp;&amp; S != 255)){


	Error = true;


}else{


	Error = false;


	if(Enable){


		Status = true;


		new yMM = YARTMerc230ShortRToInt(88);


		new yDD = YARTMerc230ShortLToInt(88);


		new yWD = YARTMerc230ShortRToInt(90);


		new yH  = YARTMerc230ShortLToInt(86);


		new yM  = YARTMerc230ShortRToInt(86);


		new yS  = YARTMerc230ShortLToInt(84);


		if((MM != 255 &amp;&amp; MM != yMM) || (DD != 255 &amp;&amp; DD != yDD) || (WD != 255 &amp;&amp; WD != yWD) || 


			(H != 255 &amp;&amp; H != yH) || (M != 255 &amp;&amp; M != yM) || (S != 255 &amp;&amp; S != yS)) Status = false;


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="4155" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1694</Id>
              <InputPortsCollection z:Id="4156" z:Size="0" />
              <InternalPortsCollection z:Id="4157" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3950</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4158" z:Size="1">
                <FBDPort z:Ref="3591" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4159">_</Prefix>
              <SecondName z:Id="4160">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3595" i:nil="true" />
              <OutputFBDPort z:Ref="3591" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4161" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2104</Id>
              <InputPortsCollection z:Id="4162" z:Size="1">
                <FBDPort z:Id="4163" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2105</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4164" z:Size="1">
                    <FBDPortExtSettings z:Id="4165">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4166">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4167" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3590</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="4168">Tag</Name>
              <OutputPortsCollection z:Id="4169" z:Size="1">
                <FBDPort z:Ref="3693" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4170">_</Prefix>
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="375" i:nil="true" />
              <InputFBDPort z:Ref="4163" i:nil="true" />
              <OutputFBDPort z:Ref="3693" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4171" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1422</Id>
              <InputPortsCollection z:Id="4172" z:Size="0" />
              <InternalPortsCollection z:Id="4173" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3550</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Id="4174">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="4175" z:Size="1">
                <FBDPort z:Ref="3551" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4176">_</Prefix>
              <SecondName z:Id="4177">_00_A1_AI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4178">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4179" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4180">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1220</Id>
              <InputPortsCollection z:Id="4181" z:Size="3">
                <FBDPort z:Ref="3544" i:nil="true" />
                <FBDPort z:Ref="3686" i:nil="true" />
                <FBDPort z:Id="4182" i:type="InputFBDPort">
                  <Alias z:Id="4183">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1223</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4184" z:Size="1">
                    <FBDPortExtSettings z:Id="4185">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4186">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4187" z:Size="1">
                <FBDPort z:Id="4188" i:type="InternalFBDPort">
                  <Alias z:Id="4189">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1228</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4190" z:Size="10">
                    <FBDPortExtSettings z:Id="4191">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4192">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4193">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4194">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4195">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4196">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4197">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4198">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4199">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4200">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4201">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="4202">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="4203" z:Size="4">
                <FBDPort z:Ref="3721" i:nil="true" />
                <FBDPort z:Id="4204" i:type="OutputFBDPort">
                  <Alias z:Id="4205">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1225</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4206" z:Size="1">
                    <FBDPortExtSettings z:Id="4207">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4208" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4209" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4210">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="4211" i:type="OutputFBDPort">
                  <Alias z:Id="4212">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1226</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4213" z:Size="1">
                    <FBDPortExtSettings z:Id="4214">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4215" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4216" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4217">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4218" i:type="OutputFBDPort">
                  <Alias z:Id="4219">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1227</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4220" z:Size="1">
                    <FBDPortExtSettings z:Id="4221">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4222" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4223" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4224">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4225">YART</Prefix>
              <SecondName z:Id="4226">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Id="4227">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 0;





YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="4228" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1245</Id>
              <InputPortsCollection z:Id="4229" z:Size="1">
                <FBDPort z:Ref="3715" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4230" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="4231">Tag</Name>
              <OutputPortsCollection z:Id="4232" z:Size="1">
                <FBDPort z:Ref="3354" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4233">_</Prefix>
              <SecondName z:Ref="4231" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="242" i:nil="true" />
              <InputFBDPort z:Ref="3715" i:nil="true" />
              <OutputFBDPort z:Ref="3354" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4234" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4235">Разность A и B</Description>
              <HelpID>44</HelpID>
              <Id>1697</Id>
              <InputPortsCollection z:Id="4236" z:Size="2">
                <FBDPort z:Ref="3709" i:nil="true" />
                <FBDPort z:Ref="3599" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4237" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>3500</d8p1:_y>
              </Location>
              <Name z:Id="4238">SUB</Name>
              <OutputPortsCollection z:Id="4239" z:Size="1">
                <FBDPort z:Ref="3612" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4240">YART</Prefix>
              <SecondName z:Ref="4238" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>68db83f5-d55f-435e-9a28-1607ee207726</SpecificationId>
              <Code z:Id="4241">//#SUB (разность Float)


#inline y = a - b;</Code>
            </FBDItem>
            <FBDItem z:Id="4242" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4243">Поиск значения по линейной функции с ограничением минимального и максимального значений</Description>
              <HelpID>114</HelpID>
              <Id>1704</Id>
              <InputPortsCollection z:Id="4244" z:Size="5">
                <FBDPort z:Ref="3605" i:nil="true" />
                <FBDPort z:Id="4245" i:type="InputFBDPort">
                  <Alias z:Id="4246">Xmin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1706</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4247" z:Size="1">
                    <FBDPortExtSettings z:Id="4248">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4249" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4250" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4251">Xmin</VariableName>
                </FBDPort>
                <FBDPort z:Id="4252" i:type="InputFBDPort">
                  <Alias z:Id="4253">Ymin</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1707</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4254" z:Size="1">
                    <FBDPortExtSettings z:Id="4255">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4256" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4257" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4258">Ymin</VariableName>
                </FBDPort>
                <FBDPort z:Id="4259" i:type="InputFBDPort">
                  <Alias z:Id="4260">Xmax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1708</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4261" z:Size="1">
                    <FBDPortExtSettings z:Id="4262">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4263" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4264" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4265">Xmax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4266" i:type="InputFBDPort">
                  <Alias z:Id="4267">Ymax</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1709</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4268" z:Size="1">
                    <FBDPortExtSettings z:Id="4269">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4270" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4271" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">200</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4272">Ymax</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4273" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>3460</d8p1:_y>
              </Location>
              <Name z:Id="4274">PHIS.LIM</Name>
              <OutputPortsCollection z:Id="4275" z:Size="1">
                <FBDPort z:Ref="3623" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4240" i:nil="true" />
              <SecondName z:Id="4276">myFizValiml</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>fe2f4ea4-aeb0-4475-979d-b0c351f312ba</SpecificationId>
              <Code z:Id="4277">//#PHIS . LIM (Преобразование в физическую величину с ограничением выхода)


//Преобразование физ. величины с ограничением


if(x &gt; Xmin &amp;&amp; x &lt; Xmax) y = Ymin + (x - Xmin)*((Ymax - Ymin)/(Xmax - Xmin));


else if(x &lt;= Xmin) y = Ymin;


else if(x &gt;= Xmax) y = Ymax;</Code>
            </FBDItem>
            <FBDItem z:Id="4278" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1701</Id>
              <InputPortsCollection z:Id="4279" z:Size="1">
                <FBDPort z:Ref="3617" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4280" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4400</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name z:Id="4281">Tag</Name>
              <OutputPortsCollection z:Id="4282" z:Size="1">
                <FBDPort z:Id="4283" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1703</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4284" z:Size="1">
                    <FBDPortExtSettings z:Id="4285">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4286" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4287" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">24.7747574</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4288">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4159" i:nil="true" />
              <SecondName z:Ref="4281" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="238" i:nil="true" />
              <InputFBDPort z:Ref="3617" i:nil="true" />
              <OutputFBDPort z:Ref="4283" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4289" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4290">Автоматическое изменение значения по периоду и шагу</Description>
              <HelpID>450</HelpID>
              <Id>2775</Id>
              <InputPortsCollection z:Id="4291" z:Size="5">
                <FBDPort z:Id="4292" i:type="InputFBDPort">
                  <Alias z:Id="4293">First</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2778</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4294" z:Size="1">
                    <FBDPortExtSettings z:Id="4295">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4296" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4297" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4298">f</VariableName>
                </FBDPort>
                <FBDPort z:Id="4299" i:type="InputFBDPort">
                  <Alias z:Id="4300">Last</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2779</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4301" z:Size="1">
                    <FBDPortExtSettings z:Id="4302">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4303" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4304" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">50</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4305">l</VariableName>
                </FBDPort>
                <FBDPort z:Id="4306" i:type="InputFBDPort">
                  <Alias z:Id="4307">Step</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2780</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4308" z:Size="1">
                    <FBDPortExtSettings z:Id="4309">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4310" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4311" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4312">s</VariableName>
                </FBDPort>
                <FBDPort z:Id="4313" i:type="InputFBDPort">
                  <Alias z:Id="4314">Period (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2781</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4315" z:Size="1">
                    <FBDPortExtSettings z:Id="4316">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4317" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4318" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">10000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4319">p</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3983" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4320" z:Size="2">
                <FBDPort z:Id="4321" i:type="InternalFBDPort">
                  <Alias z:Id="4322">Внутренняя 45979</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2776</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4323" z:Size="2">
                    <FBDPortExtSettings z:Id="4324">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4325">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4326">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="4327" i:type="InternalFBDPort">
                  <Alias z:Id="4328">Внутренняя 46348</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2777</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4329" z:Size="1">
                    <FBDPortExtSettings z:Id="4330">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4331">init</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3010</d8p1:_x>
                <d8p1:_y>3540</d8p1:_y>
              </Location>
              <Name z:Id="4332">COUNTER B</Name>
              <OutputPortsCollection z:Id="4333" z:Size="3">
                <FBDPort z:Id="4334" i:type="OutputFBDPort">
                  <Alias z:Id="4335">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2783</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4336" z:Size="1">
                    <FBDPortExtSettings z:Id="4337">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4338" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4339" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4340">_e</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3990" i:nil="true" />
                <FBDPort z:Id="4341" i:type="OutputFBDPort">
                  <Alias z:Id="4342">Current</Alias>
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2785</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4343" z:Size="1">
                    <FBDPortExtSettings z:Id="4344">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4345" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4346" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">40</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4347">_c</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4348">counterExt_B</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>aa09f2f2-514a-44c3-856d-aa26d8d6c439</SpecificationId>
              <Code z:Id="4349">if(!init){


	r = true;


	init = true;


}





if((f &gt; l &amp;&amp; s &gt; 0) || (f &lt; l &amp;&amp; s &lt; 0)) s = -s;





if(s == 0 || p == 0){


	_e = true;


	r = true;


}





if(r){


	t[0] = 0;


	t[1] = 0;


	_c = f;


	_d = false;


}





if(!_e &amp;&amp; !_d){


	YARTAddScanTask(t[0], t[1]);


	if(t[0] &gt;= p){


		new k = t[0] / p;


		t[0] -= p * k;


		_c += s * k;


	}


	if((l &gt;= f &amp;&amp; _c &gt;= l) || (l &lt; f &amp;&amp; _c &lt;= l)){


		_c = l;


		_d = true;


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="4350" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2789</Id>
              <InputPortsCollection z:Id="4351" z:Size="0" />
              <InternalPortsCollection z:Id="4352" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3270</d8p1:_x>
                <d8p1:_y>3550</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4353" z:Size="1">
                <FBDPort z:Ref="4009" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4354">_</Prefix>
              <SecondName z:Id="4355">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="4012" i:nil="true" />
              <OutputFBDPort z:Ref="4009" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4356" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4357">Считывание системного времени</Description>
              <HelpID>122</HelpID>
              <Id>2754</Id>
              <InputPortsCollection z:Id="4358" z:Size="0" />
              <InternalPortsCollection z:Id="4359" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3140</d8p1:_x>
                <d8p1:_y>3380</d8p1:_y>
              </Location>
              <Name z:Id="4360">GET TIME</Name>
              <OutputPortsCollection z:Id="4361" z:Size="5">
                <FBDPort z:Id="4362" i:type="OutputFBDPort">
                  <Alias z:Id="4363">TIME</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2755</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4364" z:Size="1">
                    <FBDPortExtSettings z:Id="4365">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="4366" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4367" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:dateTime">0001-01-01T18:01:27</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4368">time</VariableName>
                </FBDPort>
                <FBDPort z:Id="4369" i:type="OutputFBDPort">
                  <Alias z:Id="4370">SFRACT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2756</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4371" z:Size="1">
                    <FBDPortExtSettings z:Id="4372">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4373" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4374" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">92</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4375">sfract</VariableName>
                </FBDPort>
                <FBDPort z:Id="4376" i:type="OutputFBDPort">
                  <Alias z:Id="4377">SS</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2757</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4378" z:Size="1">
                    <FBDPortExtSettings z:Id="4379">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4380" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4381" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">27</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4382">sec</VariableName>
                </FBDPort>
                <FBDPort z:Ref="4003" i:nil="true" />
                <FBDPort z:Id="4383" i:type="OutputFBDPort">
                  <Alias z:Id="4384">HH</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2759</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4385" z:Size="1">
                    <FBDPortExtSettings z:Id="4386">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4387" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4388" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">18</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4389">hrs</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4390">myGetTime</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>91dda9a2-5588-4f94-a53e-c414a211e208</SpecificationId>
              <Code z:Id="4391">//#GET TIME (Читать время)


new ltime = GetTime(SYSTEM_TIME);


sfract = (10 * (FSeconds(ltime) &gt;&gt; 4)) + (FSeconds(ltime) &amp; 0x0f);


sec = 	(10 * (Seconds(ltime) &gt;&gt; 4)) + (Seconds(ltime) &amp; 0x0f);


mins =	(10 * (Minutes(ltime) &gt;&gt; 4)) + (Minutes(ltime) &amp; 0x0f);


hrs = 	(10 * (Hours(ltime) &gt;&gt; 4)) + (Hours(ltime) &amp; 0x0f);





time = ltime;</Code>
            </FBDItem>
            <FBDItem z:Id="4392" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4393">Сравнение двух значений</Description>
              <HelpID>297</HelpID>
              <Id>2764</Id>
              <InputPortsCollection z:Id="4394" z:Size="2">
                <FBDPort z:Ref="3996" i:nil="true" />
                <FBDPort z:Id="4395" i:type="InputFBDPort">
                  <Alias z:Id="4396">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2766</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4397" z:Size="1">
                    <FBDPortExtSettings z:Id="4398">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4399" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4400" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4401">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4402" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3280</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name z:Id="4403">A = B</Name>
              <OutputPortsCollection z:Id="4404" z:Size="1">
                <FBDPort z:Ref="3953" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4405">aRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>54c7975f-0f11-42b6-beac-8b54f2c6b9a1</SpecificationId>
              <Code z:Id="4406">//#A = B (Равно byte)


#inline y = (a == b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="4407" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4408">Вычисление логического ИЛИ</Description>
              <HelpID>5</HelpID>
              <Id>2786</Id>
              <InputPortsCollection z:Id="4409" z:Size="1">
                <FBDPort z:Ref="3945" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4410" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3412.8726189002145</d8p1:_x>
                <d8p1:_y>3476.0841341658038</d8p1:_y>
              </Location>
              <Name z:Id="4411">OR</Name>
              <OutputPortsCollection z:Id="4412" z:Size="1">
                <FBDPort z:Ref="3965" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4413">or</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>847d4d91-e424-48a2-a070-61748e5d053a</SpecificationId>
              <Code z:Id="4414">//#OR ( или )


for(new i = 0; i&lt;sizeof_x; i++) 	y = y|x[i];</Code>
            </FBDItem>
            <FBDItem z:Id="4415" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4416">Подсчет количества переходов CU из false в true. При достижении значения PV выход Q устанавливается в true. При включении Reset счетчик CV обнуляется</Description>
              <HelpID>15</HelpID>
              <Id>2692</Id>
              <InputPortsCollection z:Id="4417" z:Size="3">
                <FBDPort z:Ref="3958" i:nil="true" />
                <FBDPort z:Id="4418" i:type="InputFBDPort">
                  <Alias z:Id="4419">Вход 1570</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2695</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4420" z:Size="1">
                    <FBDPortExtSettings z:Id="4421">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="4422" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4423" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4424">PV</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3970" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4425" z:Size="1">
                <FBDPort z:Id="4426" i:type="InternalFBDPort">
                  <Alias z:Id="4427">Отладка 2689</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2693</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4428" z:Size="1">
                    <FBDPortExtSettings z:Id="4429">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4430">lastIn</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3490</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name z:Id="4431">CTU</Name>
              <OutputPortsCollection z:Id="4432" z:Size="2">
                <FBDPort z:Ref="3977" i:nil="true" />
                <FBDPort z:Ref="3939" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4433">CTU</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>56d44bca-6ca4-425b-bab2-36a857a3f483</SpecificationId>
              <Code z:Id="4434">//CTU  (Счетчик импульсов по переднему фронту)


if(CU &amp;&amp; !lastIn) CV++;


if(Reset) CV = 0;


if(CV &gt;= PV) Q = true;


lastIn = CU;</Code>
            </FBDItem>
            <FBDItem z:Id="4435" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4436">Преобразование Int в Byte</Description>
              <HelpID>107</HelpID>
              <Id>2737</Id>
              <InputPortsCollection z:Id="4437" z:Size="1">
                <FBDPort z:Ref="3933" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4438" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3631.8209332614306</d8p1:_x>
                <d8p1:_y>3550.5092528814744</d8p1:_y>
              </Location>
              <Name z:Id="4439">I&gt;B</Name>
              <OutputPortsCollection z:Id="4440" z:Size="1">
                <FBDPort z:Ref="3928" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4441">IntByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e04c2635-a2c6-4e4a-bf64-ef55567929f6</SpecificationId>
              <Code z:Id="4442">//#I &gt; B (Int в Byte)


yByte = a;


if( a &gt; 255 )yByte = 255;


if( a &lt; 0 ) yByte = 0;</Code>
            </FBDItem>
            <FBDItem z:Id="4443" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2677</Id>
              <InputPortsCollection z:Id="4444" z:Size="0" />
              <InternalPortsCollection z:Id="4445" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3500</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4446" z:Size="1">
                <FBDPort z:Ref="3913" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4447">_</Prefix>
              <SecondName z:Id="4448">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3917" i:nil="true" />
              <OutputFBDPort z:Ref="3913" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4449" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2675</Id>
              <InputPortsCollection z:Id="4450" z:Size="0" />
              <InternalPortsCollection z:Id="4451" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3480</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4452" z:Size="1">
                <FBDPort z:Ref="3905" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4453">_</Prefix>
              <SecondName z:Id="4454">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3909" i:nil="true" />
              <OutputFBDPort z:Ref="3905" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4455" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2673</Id>
              <InputPortsCollection z:Id="4456" z:Size="0" />
              <InternalPortsCollection z:Id="4457" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3460</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4458" z:Size="1">
                <FBDPort z:Ref="3897" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4459">_</Prefix>
              <SecondName z:Id="4460">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3901" i:nil="true" />
              <OutputFBDPort z:Ref="3897" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4461" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2667</Id>
              <InputPortsCollection z:Id="4462" z:Size="0" />
              <InternalPortsCollection z:Id="4463" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3440</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4464" z:Size="1">
                <FBDPort z:Ref="3889" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4465">_</Prefix>
              <SecondName z:Id="4466">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3893" i:nil="true" />
              <OutputFBDPort z:Ref="3889" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4467" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2665</Id>
              <InputPortsCollection z:Id="4468" z:Size="0" />
              <InternalPortsCollection z:Id="4469" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3540</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4470" z:Size="1">
                <FBDPort z:Ref="3882" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Id="4471">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3885" i:nil="true" />
              <OutputFBDPort z:Ref="3882" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4472" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4473">Чтение значения элемента массива</Description>
              <HelpID>148</HelpID>
              <Id>2661</Id>
              <InputPortsCollection z:Id="4474" z:Size="2">
                <FBDPort z:Ref="3871" i:nil="true" />
                <FBDPort z:Ref="3921" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4475" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3400</d8p1:_y>
              </Location>
              <Name z:Id="4476">SWITCH FLOAT</Name>
              <OutputPortsCollection z:Id="4477" z:Size="1">
                <FBDPort z:Id="4478" i:type="OutputFBDPort">
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2664</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4479" z:Size="1">
                    <FBDPortExtSettings z:Id="4480">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4481" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4482" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">350</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4483">OUTSW</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4484">YART</Prefix>
              <SecondName z:Id="4485">SWITCHFLOAT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6ac531a6-d4cf-42c0-b2fb-54b61314db2b</SpecificationId>
              <Code z:Id="4486">//#SWITCH FLOAT (Переключатель Float   величин)


//Переключатель Float


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="4487" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4488">Экспоненциальное сглаживание</Description>
              <HelpID>118</HelpID>
              <Id>2798</Id>
              <InputPortsCollection z:Id="4489" z:Size="2">
                <FBDPort z:Ref="4074" i:nil="true" />
                <FBDPort z:Id="4490" i:type="InputFBDPort">
                  <Alias z:Id="4491">K</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2801</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4492" z:Size="1">
                    <FBDPortExtSettings z:Id="4493">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4494" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4495" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4496">inGain</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4497" z:Size="1">
                <FBDPort z:Id="4498" i:type="InternalFBDPort">
                  <Alias z:Id="4499">Внутренняя 33031</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2799</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4500" z:Size="1">
                    <FBDPortExtSettings z:Id="4501">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4502">init</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3780</d8p1:_y>
              </Location>
              <Name z:Id="4503">EXP FILTER</Name>
              <OutputPortsCollection z:Id="4504" z:Size="1">
                <FBDPort z:Id="4505" i:type="OutputFBDPort">
                  <AllowSaveInCycle>true</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2802</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4506" z:Size="1">
                    <FBDPortExtSettings z:Id="4507">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4508" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4509" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1195.32458</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4510">y</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4511">YART</Prefix>
              <SecondName z:Id="4512">expFilter</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>c0f209cb-bc81-4bd5-9567-53461322338d</SpecificationId>
              <Code z:Id="4513">//fix string - don`t remove this string!!!!!!!!!!


//YARTF_ExpFilter(valueIN, inGain, y, init, Last);


//#EXP FILTER (Экспоненциальное сглаживание)





if(init){


	y = inGain * (valueIN - y) + y;


}else{


	y = valueIN;


	init = true;


}</Code>
            </FBDItem>
            <FBDItem z:Id="4514" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4515">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>862</HelpID>
              <Id>2808</Id>
              <InputPortsCollection z:Id="4516" z:Size="3">
                <FBDPort z:Ref="4080" i:nil="true" />
                <FBDPort z:Id="4517" i:type="InputFBDPort">
                  <Alias z:Id="4518">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2811</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4519" z:Size="1">
                    <FBDPortExtSettings z:Id="4520">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4521" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4522" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4523">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="4524" i:type="InputFBDPort">
                  <Alias z:Id="4525">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2812</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4526" z:Size="1">
                    <FBDPortExtSettings z:Id="4527">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4528">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4529" z:Size="1">
                <FBDPort z:Id="4530" i:type="InternalFBDPort">
                  <Alias z:Id="4531">Внутренняя 54731</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>2809</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4532" z:Size="10">
                    <FBDPortExtSettings z:Id="4533">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4534">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4535">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4536">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4537">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4538">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4539">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4540">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4541">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4542">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4543">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="4544">PT 1000 (385)</Name>
              <OutputPortsCollection z:Id="4545" z:Size="4">
                <FBDPort z:Id="4546" i:type="OutputFBDPort">
                  <Alias z:Id="4547">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2813</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4548" z:Size="1">
                    <FBDPortExtSettings z:Id="4549">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4550" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4551" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">50.34685</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4552">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="4553" i:type="OutputFBDPort">
                  <Alias z:Id="4554">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2814</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4555" z:Size="1">
                    <FBDPortExtSettings z:Id="4556">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4557" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4558" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4559">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="4560" i:type="OutputFBDPort">
                  <Alias z:Id="4561">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2815</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4562" z:Size="1">
                    <FBDPortExtSettings z:Id="4563">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4564" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4565" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4566">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="4567" i:type="OutputFBDPort">
                  <Alias z:Id="4568">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2816</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4569" z:Size="1">
                    <FBDPortExtSettings z:Id="4570">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4571" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4572" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4573">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4511" i:nil="true" />
              <SecondName z:Id="4574">PT1000_385</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>287faa38-da5e-478a-9de8-0469f4d3ce63</SpecificationId>
              <Code z:Id="4575">// ГОСТ 6651-2009





// TABLE_NUM:


// 0 - pt391


// 1 - pt385


// 2 - ni617


// 3 - cu428





const TABLE_NUM = 1;








YARTF_PTNICU(TABLE_NUM, r, k, te, t, err, _emax, _emin,  x[0], x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8], x[9]);


//x[0] - init


//x[1] - lv


//x[2] - timin


//x[3] - tfmin


//x[4] - timax


//x[5] - tfmax


//x[6] - lrmin


//x[7] - lrmax


//x[8] - lemin


//x[9] - lemax</Code>
            </FBDItem>
            <FBDItem z:Id="4576" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2636</Id>
              <InputPortsCollection z:Id="4577" z:Size="0" />
              <InternalPortsCollection z:Id="4578" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4901.442295468305</d8p1:_x>
                <d8p1:_y>3700.9068481285485</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4579" z:Size="1">
                <FBDPort z:Ref="3828" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Id="4580">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3832" i:nil="true" />
              <OutputFBDPort z:Ref="3828" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4581" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2633</Id>
              <InputPortsCollection z:Id="4582" z:Size="1">
                <FBDPort z:Id="4583" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2634</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4584" z:Size="1">
                    <FBDPortExtSettings z:Id="4585">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3799" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4586" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4830</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Id="4587">Tag</Name>
              <OutputPortsCollection z:Id="4588" z:Size="1">
                <FBDPort z:Ref="3812" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Ref="4587" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="399" i:nil="true" />
              <InputFBDPort z:Ref="4583" i:nil="true" />
              <OutputFBDPort z:Ref="3812" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4589" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2648</Id>
              <InputPortsCollection z:Id="4590" z:Size="1">
                <FBDPort z:Id="4591" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>7</ArrayItemsCount>
                  <Id>2649</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4592" z:Size="7">
                    <FBDPortExtSettings z:Id="4593">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4594">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4595">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4596">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4597">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4598">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4599">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3799" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4600" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="4587" i:nil="true" />
              <OutputPortsCollection z:Id="4601" z:Size="1">
                <FBDPort z:Ref="4064" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Ref="4587" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="421" i:nil="true" />
              <InputFBDPort z:Ref="4591" i:nil="true" />
              <OutputFBDPort z:Ref="4064" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4602" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2645</Id>
              <InputPortsCollection z:Id="4603" z:Size="1">
                <FBDPort z:Id="4604" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>7</ArrayItemsCount>
                  <Id>2646</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4605" z:Size="7">
                    <FBDPortExtSettings z:Id="4606">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4607">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4608">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4609">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4610">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4611">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4612">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3799" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4613" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4190</d8p1:_x>
                <d8p1:_y>3600</d8p1:_y>
              </Location>
              <Name z:Ref="4587" i:nil="true" />
              <OutputPortsCollection z:Id="4614" z:Size="1">
                <FBDPort z:Ref="4035" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Ref="4587" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="411" i:nil="true" />
              <InputFBDPort z:Ref="4604" i:nil="true" />
              <OutputFBDPort z:Ref="4035" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4615" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3268</Id>
              <InputPortsCollection z:Id="4616" z:Size="1">
                <FBDPort z:Id="4617" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3269</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4618" z:Size="1">
                    <FBDPortExtSettings z:Id="4619">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4620">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4621" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4622">Tag</Name>
              <OutputPortsCollection z:Id="4623" z:Size="1">
                <FBDPort z:Ref="4093" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4624">_</Prefix>
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="574" i:nil="true" />
              <InputFBDPort z:Ref="4617" i:nil="true" />
              <OutputFBDPort z:Ref="4093" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4625" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4626">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1716</Id>
              <InputPortsCollection z:Id="4627" z:Size="2">
                <FBDPort z:Ref="4086" i:nil="true" />
                <FBDPort z:Id="4628" i:type="InputFBDPort">
                  <Alias z:Id="4629">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1718</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4630" z:Size="1">
                    <FBDPortExtSettings z:Id="4631">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4632" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4633" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">10</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4634">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4635" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4020</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4636">DIV</Name>
              <OutputPortsCollection z:Id="4637" z:Size="1">
                <FBDPort z:Ref="3633" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4638">YART</Prefix>
              <SecondName z:Ref="4636" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="3175" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4639" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4640">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>1691</Id>
              <InputPortsCollection z:Id="4641" z:Size="1">
                <FBDPort z:Ref="3583" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4642" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4150</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4643">ADD</Name>
              <OutputPortsCollection z:Id="4644" z:Size="1">
                <FBDPort z:Ref="3578" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4240" i:nil="true" />
              <SecondName z:Ref="4643" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Id="4645">//# ADD (сумма Float)  


for(new i = 0; i&lt;sizeof_x; i++)


{


		y = y + x[i];


}</Code>
            </FBDItem>
            <FBDItem z:Id="4646" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1713</Id>
              <InputPortsCollection z:Id="4647" z:Size="1">
                <FBDPort z:Ref="3628" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4648" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4390</d8p1:_x>
                <d8p1:_y>3420</d8p1:_y>
              </Location>
              <Name z:Id="4649">Tag</Name>
              <OutputPortsCollection z:Id="4650" z:Size="1">
                <FBDPort z:Ref="3866" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4651">_</Prefix>
              <SecondName z:Ref="4649" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="304" i:nil="true" />
              <InputFBDPort z:Ref="3628" i:nil="true" />
              <OutputFBDPort z:Ref="3866" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4652" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4653">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>2638</Id>
              <InputPortsCollection z:Id="4654" z:Size="3">
                <FBDPort z:Ref="3859" i:nil="true" />
                <FBDPort z:Ref="4016" i:nil="true" />
                <FBDPort z:Ref="4045" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4655" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4370</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Id="4656">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="4657" z:Size="1">
                <FBDPort z:Ref="3854" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4658">YART</Prefix>
              <SecondName z:Id="4659">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Id="4660">//#PIECEWISE LINEAR (Кусочно-линейное преобразование Float)


if(sizeof_X != sizeof_Y) return;


for(new i = 0; i &lt; sizeof_X - 1; i++){


	if(X[i] &lt;= INX &amp;&amp; INX &lt;= X[i+1]){


		OUTY = Y[i] + (INX - X[i])*((Y[i+1] - Y[i])/(X[i+1] - X[i]));


		return; 	


	}


}</Code>
            </FBDItem>
            <FBDItem z:Id="4661" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2476</Id>
              <InputPortsCollection z:Id="4662" z:Size="1">
                <FBDPort z:Ref="3848" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4663" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4450</d8p1:_x>
                <d8p1:_y>3530</d8p1:_y>
              </Location>
              <Name z:Id="4664">Tag</Name>
              <OutputPortsCollection z:Id="4665" z:Size="1">
                <FBDPort z:Ref="3775" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4666">_</Prefix>
              <SecondName z:Ref="4664" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="395" i:nil="true" />
              <InputFBDPort z:Ref="3848" i:nil="true" />
              <OutputFBDPort z:Ref="3775" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4667" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2310</Id>
              <InputPortsCollection z:Id="4668" z:Size="1">
                <FBDPort z:Id="4669" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2311</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4670" z:Size="1">
                    <FBDPortExtSettings z:Id="4671">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4672">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4673" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4050</d8p1:_x>
                <d8p1:_y>3960</d8p1:_y>
              </Location>
              <Name z:Id="4674">Tag</Name>
              <OutputPortsCollection z:Id="4675" z:Size="1">
                <FBDPort z:Ref="3704" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4676">_</Prefix>
              <SecondName z:Ref="4674" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="391" i:nil="true" />
              <InputFBDPort z:Ref="4669" i:nil="true" />
              <OutputFBDPort z:Ref="3704" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4677" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2079</Id>
              <InputPortsCollection z:Id="4678" z:Size="1">
                <FBDPort z:Id="4679" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2080</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4680" z:Size="1">
                    <FBDPortExtSettings z:Id="4681">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4682" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4683" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4684" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="4685" z:Size="1">
                <FBDPort z:Ref="3670" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="371" i:nil="true" />
              <InputFBDPort z:Ref="4679" i:nil="true" />
              <OutputFBDPort z:Ref="3670" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4686" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2076</Id>
              <InputPortsCollection z:Id="4687" z:Size="1">
                <FBDPort z:Id="4688" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2077</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4689" z:Size="1">
                    <FBDPortExtSettings z:Id="4690">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4691" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4692" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4693" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="4694" z:Size="1">
                <FBDPort z:Ref="3682" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="367" i:nil="true" />
              <InputFBDPort z:Ref="4688" i:nil="true" />
              <OutputFBDPort z:Ref="3682" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4695" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1303</Id>
              <InputPortsCollection z:Id="4696" z:Size="1">
                <FBDPort z:Id="4697" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1304</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4698" z:Size="1">
                    <FBDPortExtSettings z:Id="4699">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4700">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4701" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3990</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Id="4702">Tag</Name>
              <OutputPortsCollection z:Id="4703" z:Size="1">
                <FBDPort z:Ref="3458" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4704">_</Prefix>
              <SecondName z:Ref="4702" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="282" i:nil="true" />
              <InputFBDPort z:Ref="4697" i:nil="true" />
              <OutputFBDPort z:Ref="3458" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4705" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1299</Id>
              <InputPortsCollection z:Id="4706" z:Size="1">
                <FBDPort z:Id="4707" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>17</ArrayItemsCount>
                  <Id>1300</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4708" z:Size="17">
                    <FBDPortExtSettings z:Id="4709">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4710">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4711">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4712">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4713">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4714">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4715">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4716">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4717">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4718">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4719">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4720">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4721">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4722">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4723">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4724">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4725">
                      <Index>16</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4726">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4727" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Id="4728">Tag</Name>
              <OutputPortsCollection z:Id="4729" z:Size="1">
                <FBDPort z:Ref="3417" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4730">_</Prefix>
              <SecondName z:Ref="4728" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="262" i:nil="true" />
              <InputFBDPort z:Ref="4707" i:nil="true" />
              <OutputFBDPort z:Ref="3417" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4731" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>877</HelpID>
              <Id>1294</Id>
              <InputPortsCollection z:Id="4732" z:Size="2">
                <FBDPort z:Id="4733" i:type="InputFBDPort">
                  <Alias z:Id="4734">Hysteresis</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1295</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4735" z:Size="1">
                    <FBDPortExtSettings z:Id="4736">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4737" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4738" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4739">Hysteresis</VariableName>
                </FBDPort>
                <FBDPort z:Id="4740" i:type="InputFBDPort">
                  <Alias z:Id="4741">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1296</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4742" z:Size="1">
                    <FBDPortExtSettings z:Id="4743">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4744" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4745" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4746">Error</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4747" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="4748">Test config</Name>
              <OutputPortsCollection z:Id="4749" z:Size="1">
                <FBDPort z:Ref="3445" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4750">YART</Prefix>
              <SecondName z:Id="4751">Test_config</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>2bebd07f-c4fe-4658-8c7d-514556245970</SpecificationId>
              <Code z:Id="4752">//Задание конфигурации автонастройки


Testconfig = Hysteresis + Error * 4;</Code>
            </FBDItem>
            <FBDItem z:Id="4753" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1287</Id>
              <InputPortsCollection z:Id="4754" z:Size="1">
                <FBDPort z:Id="4755" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1288</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4756" z:Size="1">
                    <FBDPortExtSettings z:Id="4757">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4758">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4759" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="4760">Tag</Name>
              <OutputPortsCollection z:Id="4761" z:Size="1">
                <FBDPort z:Ref="3378" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4762">_</Prefix>
              <SecondName z:Ref="4760" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="258" i:nil="true" />
              <InputFBDPort z:Ref="4755" i:nil="true" />
              <OutputFBDPort z:Ref="3378" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4763" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1284</Id>
              <InputPortsCollection z:Id="4764" z:Size="1">
                <FBDPort z:Id="4765" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1285</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4766" z:Size="1">
                    <FBDPortExtSettings z:Id="4767">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4758" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4768" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Ref="4760" i:nil="true" />
              <OutputPortsCollection z:Id="4769" z:Size="1">
                <FBDPort z:Ref="3390" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4762" i:nil="true" />
              <SecondName z:Ref="4760" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="254" i:nil="true" />
              <InputFBDPort z:Ref="4765" i:nil="true" />
              <OutputFBDPort z:Ref="3390" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4770" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1277</Id>
              <InputPortsCollection z:Id="4771" z:Size="1">
                <FBDPort z:Id="4772" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1278</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4773" z:Size="1">
                    <FBDPortExtSettings z:Id="4774">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4775">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4776" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4010</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="4777">Tag</Name>
              <OutputPortsCollection z:Id="4778" z:Size="1">
                <FBDPort z:Ref="3366" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4779">_</Prefix>
              <SecondName z:Ref="4777" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="250" i:nil="true" />
              <InputFBDPort z:Ref="4772" i:nil="true" />
              <OutputFBDPort z:Ref="3366" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4780" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4781">Встроенный ПИД регулятор с возможностью автоматической настройки</Description>
              <HelpID>782</HelpID>
              <Id>1248</Id>
              <InputPortsCollection z:Id="4782" z:Size="15">
                <FBDPort z:Ref="3571" i:nil="true" />
                <FBDPort z:Ref="3347" i:nil="true" />
                <FBDPort z:Ref="3359" i:nil="true" />
                <FBDPort z:Ref="3383" i:nil="true" />
                <FBDPort z:Ref="3371" i:nil="true" />
                <FBDPort z:Ref="3675" i:nil="true" />
                <FBDPort z:Ref="3663" i:nil="true" />
                <FBDPort z:Id="4783" i:type="InputFBDPort">
                  <Alias z:Id="4784">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1256</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4785" z:Size="1">
                    <FBDPortExtSettings z:Id="4786">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4787" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4788" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.01</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4789">Kinput</VariableName>
                </FBDPort>
                <FBDPort z:Id="4790" i:type="InputFBDPort">
                  <Alias z:Id="4791">K OUT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1257</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4792" z:Size="1">
                    <FBDPortExtSettings z:Id="4793">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4794" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4795" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">20</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4796">Koutput</VariableName>
                </FBDPort>
                <FBDPort z:Id="4797" i:type="InputFBDPort">
                  <Alias z:Id="4798">PERIOD(s)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1258</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4799" z:Size="1">
                    <FBDPortExtSettings z:Id="4800">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4801" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4802" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4803">T</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3451" i:nil="true" />
                <FBDPort z:Id="4804" i:type="InputFBDPort">
                  <Alias z:Id="4805">n Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1260</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4806" z:Size="1">
                    <FBDPortExtSettings z:Id="4807">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4808" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4809" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4810">NP_Test</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3438" i:nil="true" />
                <FBDPort z:Ref="3394" i:nil="true" />
                <FBDPort z:Ref="3697" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4811" z:Size="1">
                <FBDPort z:Id="4812" i:type="InternalFBDPort">
                  <Alias z:Id="4813">Внутренняя 56499</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>1270</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="4814" z:Size="4">
                    <FBDPortExtSettings z:Id="4815">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4816">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4817">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4818">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4819">a</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4250</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="4820">AUTO PID</Name>
              <OutputPortsCollection z:Id="4821" z:Size="6">
                <FBDPort z:Id="4822" i:type="OutputFBDPort">
                  <Alias z:Id="4823">K IN * SP</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1264</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4824" z:Size="1">
                    <FBDPortExtSettings z:Id="4825">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4826" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4827" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0.5</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4828">refPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="4829" i:type="OutputFBDPort">
                  <Alias z:Id="4830">K OUT * X</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1265</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4831" z:Size="1">
                    <FBDPortExtSettings z:Id="4832">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4833" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4834" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0.4977861</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4835">fbPID</VariableName>
                </FBDPort>
                <FBDPort z:Id="4836" i:type="OutputFBDPort">
                  <Alias z:Id="4837">Test</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1266</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4838" z:Size="1">
                    <FBDPortExtSettings z:Id="4839">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="4840" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4841" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4842">n_Test</VariableName>
                </FBDPort>
                <FBDPort z:Id="4843" i:type="OutputFBDPort">
                  <Alias z:Id="4844">Y1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1267</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4845" z:Size="1">
                    <FBDPortExtSettings z:Id="4846">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4847" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4848" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">0.08253746</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4849">outPID</VariableName>
                </FBDPort>
                <FBDPort z:Ref="3643" i:nil="true" />
                <FBDPort z:Id="4850" i:type="OutputFBDPort">
                  <Alias z:Id="4851">Выход 35511</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1269</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="4852" z:Size="1">
                    <FBDPortExtSettings z:Id="4853">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4854" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4855" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4856">BUFF_ERR</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4857">YART</Prefix>
              <SecondName z:Id="4858">sPID_en_eno_new</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>0167f5df-d619-42ef-b191-4e954aaaff22</SpecificationId>
              <Code z:Id="4859">/*


*	a[0] - counrer


*	a[1] - ti


*	a[2] - tf


*	a[3] - init


*/





if (!a[3]){


	a[0] = NP_Test;


	a[3] = true;


}





if(DER){


	set_float(BUFFER[0] + 40, 0.0);


	return;


}





if(BUFFER[1] &lt; 17 || BUFFER[0] &lt; 1024 || BUFFER[0] &gt; 33791) {


	__eno = false;


	BUFF_ERR = true;


	return;


}





new Float:t;


new ready;


new cmd = get_coil(Test[0]);


new mode = get_coil(Test[0]);


//Переносим коэффициенты из FRAM в буфер  


if (!mode){


	new Float:valF = get_float(KP[0]);


	set_float(BUFFER[0] + 20, valF);





	valF = get_float(KI[0]);


	set_float(BUFFER[0] + 24, valF);





	valF = get_float(KD[0]);


	set_float(BUFFER[0] + 28, valF);


} else n_Test = NP_Test - a[0] + 1;





if (T != 0.0) {


	// Adjust Reference


	t = Reference * Kinput;


	set_float(BUFFER[0], t);


	refPID = t;





	// Adjust Feedback


	t = Feedback * Kinput;


	set_float(BUFFER[0] + 4, t);


	fbPID = t;





	if (a[1] &gt;= floatround(T * 1000, floatround_round))//Был if clock


	{


		a[1] = 0;


		a[2] = 0;


		// Max, Min, T	


		set_float(BUFFER[0] + 8,  PID_Max);


		set_float(BUFFER[0] + 12, PID_Min);


		set_float(BUFFER[0] + 16, T);





		cmd &amp;= 0x01;


		cmd |= (TestCMD &lt;&lt; 1);


		ready = smart_pid(BUFFER[0], cmd, BUFFER[0]+20);





		if (!mode) a[0] = NP_Test;


			else {


				if (a[0] != 0) {


					if (ready) a[0]--;


					if (a[0] == 0){//если тест закончился копируем из  буфера в FRAM


						    set_coil(Test[0], 0);


						


							new Float:valF = get_float(BUFFER[0]+20);


							set_float(KP[0],valF);





							valF = get_float(BUFFER[0]+24);


							set_float(KI[0],valF);





							valF = get_float(BUFFER[0]+28);


							set_float(KD[0],valF);		


									}


								}	 





				}


		}





outPID = get_float(BUFFER[0]+20+3*4);


Y = outPID * Koutput;


YARTAddScanTask(a[1], a[2]);


}</Code>
            </FBDItem>
            <FBDItem z:Id="4860" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4861">Сложение всех элементов</Description>
              <HelpID>43</HelpID>
              <Id>2621</Id>
              <InputPortsCollection z:Id="4862" z:Size="1">
                <FBDPort z:Ref="3768" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4863" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4501</d8p1:_x>
                <d8p1:_y>3687</d8p1:_y>
              </Location>
              <Name z:Id="4864">ADD</Name>
              <OutputPortsCollection z:Id="4865" z:Size="1">
                <FBDPort z:Ref="3789" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Ref="4864" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35f0e638-dcd1-4e88-8368-e3b36d7eaf74</SpecificationId>
              <Code z:Ref="4645" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4866" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2618</Id>
              <InputPortsCollection z:Id="4867" z:Size="1">
                <FBDPort z:Id="4868" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>2619</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4869" z:Size="4">
                    <FBDPortExtSettings z:Id="4870">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4871">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4872">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4873">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3799" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4874" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="4587" i:nil="true" />
              <OutputPortsCollection z:Id="4875" z:Size="1">
                <FBDPort z:Ref="3740" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Ref="4587" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="297" i:nil="true" />
              <InputFBDPort z:Ref="4868" i:nil="true" />
              <OutputFBDPort z:Ref="3740" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4876" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2615</Id>
              <InputPortsCollection z:Id="4877" z:Size="1">
                <FBDPort z:Id="4878" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>4</ArrayItemsCount>
                  <Id>2616</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4879" z:Size="4">
                    <FBDPortExtSettings z:Id="4880">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4881">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4882">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="4883">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="3799" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4884" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4600</d8p1:_x>
                <d8p1:_y>3610</d8p1:_y>
              </Location>
              <Name z:Ref="4587" i:nil="true" />
              <OutputPortsCollection z:Id="4885" z:Size="1">
                <FBDPort z:Ref="3761" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Ref="4587" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="290" i:nil="true" />
              <InputFBDPort z:Ref="4878" i:nil="true" />
              <OutputFBDPort z:Ref="3761" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4886" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4887">Поиск значения по линейной функции соответствующего участка (линейная аппроксимация)</Description>
              <HelpID>221</HelpID>
              <Id>2601</Id>
              <InputPortsCollection z:Id="4888" z:Size="3">
                <FBDPort z:Ref="3782" i:nil="true" />
                <FBDPort z:Ref="3748" i:nil="true" />
                <FBDPort z:Ref="3727" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4889" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4780</d8p1:_x>
                <d8p1:_y>3580</d8p1:_y>
              </Location>
              <Name z:Id="4890">PIECEWISE LINEAR</Name>
              <OutputPortsCollection z:Id="4891" z:Size="1">
                <FBDPort z:Ref="3800" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4892">piecewiselinear</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e9e450d1-12f7-43ef-b55b-65c3388db4d1</SpecificationId>
              <Code z:Ref="4660" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4893" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2625</Id>
              <InputPortsCollection z:Id="4894" z:Size="1">
                <FBDPort z:Ref="3794" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4895" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4930</d8p1:_x>
                <d8p1:_y>3590</d8p1:_y>
              </Location>
              <Name z:Ref="4587" i:nil="true" />
              <OutputPortsCollection z:Id="4896" z:Size="1">
                <FBDPort z:Ref="3824" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Ref="4587" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="407" i:nil="true" />
              <InputFBDPort z:Ref="3794" i:nil="true" />
              <OutputFBDPort z:Ref="3824" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4897" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4898">Чтение значения элемента массива</Description>
              <HelpID>148</HelpID>
              <Id>2629</Id>
              <InputPortsCollection z:Id="4899" z:Size="2">
                <FBDPort z:Ref="3816" i:nil="true" />
                <FBDPort z:Ref="3805" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4900" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5040</d8p1:_x>
                <d8p1:_y>3660</d8p1:_y>
              </Location>
              <Name z:Id="4901">SWITCH FLOAT</Name>
              <OutputPortsCollection z:Id="4902" z:Size="1">
                <FBDPort z:Ref="3843" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4153" i:nil="true" />
              <SecondName z:Id="4903">SWITCHFLOAT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6ac531a6-d4cf-42c0-b2fb-54b61314db2b</SpecificationId>
              <Code z:Ref="4486" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4904" i:type="ConstFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1521</Id>
              <InputPortsCollection z:Id="4905" z:Size="0" />
              <InternalPortsCollection z:Id="4906" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4420</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="4907" z:Size="1">
                <FBDPort z:Ref="3470" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4908">_</Prefix>
              <SecondName z:Id="4909">newfun_1096232204</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>fd396c99-656e-4178-a488-d92b97602aed</SpecificationId>
              <ConstValue z:Ref="3474" i:nil="true" />
              <OutputFBDPort z:Ref="3470" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4910" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4911">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1531</Id>
              <InputPortsCollection z:Id="4912" z:Size="1">
                <FBDPort z:Ref="3490" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4913" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4570</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="4914">I&gt;F</Name>
              <OutputPortsCollection z:Id="4915" z:Size="1">
                <FBDPort z:Ref="3502" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4916">YART</Prefix>
              <SecondName z:Id="4917">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2546" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4918" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4919">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1527</Id>
              <InputPortsCollection z:Id="4920" z:Size="2">
                <FBDPort z:Ref="3495" i:nil="true" />
                <FBDPort z:Id="4921" i:type="InputFBDPort">
                  <Alias z:Id="4922">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1529</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4923" z:Size="1">
                    <FBDPortExtSettings z:Id="4924">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4925" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4926" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">100</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4927">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4928" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4700</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Id="4929">DIV</Name>
              <OutputPortsCollection z:Id="4930" z:Size="1">
                <FBDPort z:Ref="3485" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4916" i:nil="true" />
              <SecondName z:Ref="4929" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="3175" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4931" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4932">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1482</Id>
              <InputPortsCollection z:Id="4933" z:Size="5">
                <FBDPort z:Ref="3836" i:nil="true" />
                <FBDPort z:Ref="3463" i:nil="true" />
                <FBDPort z:Ref="3478" i:nil="true" />
                <FBDPort z:Id="4934" i:type="InputFBDPort">
                  <Alias z:Id="4935">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1486</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4936" z:Size="1">
                    <FBDPortExtSettings z:Id="4937">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4938" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4939" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4940">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="4941" i:type="InputFBDPort">
                  <Alias z:Id="4942">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1487</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4943" z:Size="1">
                    <FBDPortExtSettings z:Id="4944">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="4945" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4946" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">false</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4947">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4948" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4880</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="4949">2 PWM</Name>
              <OutputPortsCollection z:Id="4950" z:Size="1">
                <FBDPort z:Ref="3564" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4916" i:nil="true" />
              <SecondName z:Id="4951">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Id="4952">//2 PWM


PWM[0] = PERIOD;





if(STOP) return; 


if(ONCOM){


		PWM[1] = PERIOD;


		return;


		}





if(DUTY &gt;=0) PWM[1] =  floatround((DUTY*KIN), floatround_round);</Code>
            </FBDItem>
            <FBDItem z:Id="4953" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1452</Id>
              <InputPortsCollection z:Id="4954" z:Size="1">
                <FBDPort z:Ref="3556" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4955" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="4956">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="4957" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4908" i:nil="true" />
              <SecondName z:Id="4958">_00_A1_DO_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="4959">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="4960" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4961">Преобразование Int в Float</Description>
              <HelpID>109</HelpID>
              <Id>1537</Id>
              <InputPortsCollection z:Id="4962" z:Size="1">
                <FBDPort z:Ref="3515" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4963" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4580</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="4964">I&gt;F</Name>
              <OutputPortsCollection z:Id="4965" z:Size="1">
                <FBDPort z:Ref="3527" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4966">YART</Prefix>
              <SecondName z:Id="4967">IntFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1a240e88-cfd8-4634-b30f-1618093ace9f</SpecificationId>
              <Code z:Ref="2546" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4968" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <Description z:Id="4969">Частное А и В</Description>
              <HelpID>45</HelpID>
              <Id>1540</Id>
              <InputPortsCollection z:Id="4970" z:Size="2">
                <FBDPort z:Ref="3520" i:nil="true" />
                <FBDPort z:Id="4971" i:type="InputFBDPort">
                  <Alias z:Id="4972">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1542</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4973" z:Size="1">
                    <FBDPortExtSettings z:Id="4974">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4975" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4976" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">2</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4977">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="4978" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Id="4979">DIV</Name>
              <OutputPortsCollection z:Id="4980" z:Size="1">
                <FBDPort z:Ref="3539" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="4981">YART</Prefix>
              <SecondName z:Ref="4979" i:nil="true" />
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>35d4cb1e-2d96-4131-85c7-7559a813ec0b</SpecificationId>
              <Code z:Ref="3175" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="4982" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="4983">Управление двухпозиционным ШИМ выходом</Description>
              <HelpID>787</HelpID>
              <Id>1428</Id>
              <InputPortsCollection z:Id="4984" z:Size="5">
                <FBDPort z:Ref="3532" i:nil="true" />
                <FBDPort z:Ref="3507" i:nil="true" />
                <FBDPort z:Id="4985" i:type="InputFBDPort">
                  <Alias z:Id="4986">K IN</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1431</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4987" z:Size="1">
                    <FBDPortExtSettings z:Id="4988">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="4989" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="4990" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="4991">KIN</VariableName>
                </FBDPort>
                <FBDPort z:Id="4992" i:type="InputFBDPort">
                  <Alias z:Id="4993">Вход 1832</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1432</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4994" z:Size="1">
                    <FBDPortExtSettings z:Id="4995">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="4996">STOP</VariableName>
                </FBDPort>
                <FBDPort z:Id="4997" i:type="InputFBDPort">
                  <Alias z:Id="4998">PWM 100%</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1433</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="4999" z:Size="1">
                    <FBDPortExtSettings z:Id="5000">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5001">ONCOM</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5002" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4710</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="5003">2 PWM</Name>
              <OutputPortsCollection z:Id="5004" z:Size="1">
                <FBDPort z:Ref="3340" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5005">YART</Prefix>
              <SecondName z:Id="5006">PWM_2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3741c367-aa00-415d-b5d3-f7b6bee71c9b</SpecificationId>
              <Code z:Ref="4952" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5007" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1446</Id>
              <InputPortsCollection z:Id="5008" z:Size="1">
                <FBDPort z:Ref="3332" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5009" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Ref="4956" i:nil="true" />
              <OutputPortsCollection z:Id="5010" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4908" i:nil="true" />
              <SecondName z:Id="5011">_00_A1_DO_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5012">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5013" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1684</Id>
              <InputPortsCollection z:Id="5014" z:Size="1">
                <FBDPort z:Ref="3638" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5015" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="4281" i:nil="true" />
              <OutputPortsCollection z:Id="5016" z:Size="1">
                <FBDPort z:Id="5017" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1686</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5018" z:Size="1">
                    <FBDPortExtSettings z:Id="5019">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5020" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5021" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">1.65074921</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4288" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4159" i:nil="true" />
              <SecondName z:Ref="4281" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="403" i:nil="true" />
              <InputFBDPort z:Ref="3638" i:nil="true" />
              <OutputFBDPort z:Ref="5017" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5022" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5023">Упаковка значения периода и скважности в массив совместимый с дискретным выходом который сконфигурирован как аппаратный ШИМ</Description>
              <HelpID>100</HelpID>
              <Id>1905</Id>
              <InputPortsCollection z:Id="5024" z:Size="2">
                <FBDPort z:Id="5025" i:type="InputFBDPort">
                  <Alias z:Id="5026">PERIOD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1906</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5027" z:Size="1">
                    <FBDPortExtSettings z:Id="5028">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5029" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5030" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">50</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5031">period</VariableName>
                </FBDPort>
                <FBDPort z:Id="5032" i:type="InputFBDPort">
                  <Alias z:Id="5033">DUTY</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1907</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5034" z:Size="1">
                    <FBDPortExtSettings z:Id="5035">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5036" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5037" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">25</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5038">duty</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5039" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="5040">PWM</Name>
              <OutputPortsCollection z:Id="5041" z:Size="1">
                <FBDPort z:Ref="3657" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5042">YART</Prefix>
              <SecondName z:Id="5043">PWM2</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>8e60f8dc-c7f7-47af-a5f1-f4dbc3563a8f</SpecificationId>
              <Code z:Id="5044">//#2 PWM (Двухпозиционный ШИМ)  


//Упаковка шим в массив для выхода YART 


mass[0] = period;


mass[1] = duty;</Code>
            </FBDItem>
            <FBDItem z:Id="5045" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1909</Id>
              <InputPortsCollection z:Id="5046" z:Size="1">
                <FBDPort z:Ref="3649" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5047" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4960</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="5048">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5049" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="5050">_</Prefix>
              <SecondName z:Id="5051">_00_A1_DO_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5052">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5053" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1497</Id>
              <InputPortsCollection z:Id="5054" z:Size="0" />
              <InternalPortsCollection z:Id="5055" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3253.7555666924063</d8p1:_x>
                <d8p1:_y>4020</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5056" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4908" i:nil="true" />
              <SecondName z:Id="5057">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT5S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName z:Id="5058">Otoplenok_test_PID_Feed_Forward_17.11.2020_ChartData.xlsx</FileName>
              <Height>552.59740003179741</Height>
              <Series z:Id="5059" z:Size="4">
                <TagChartSeriesVisualItem z:Id="5060">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5061">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5062">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1244</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="5063">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5064">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>139</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5065">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1680</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="5066">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5067">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>128</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5068">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>1712</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
                <TagChartSeriesVisualItem z:Id="5069">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5070">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>255</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>0</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5071">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>2624</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-12-11T17:57:15.4200911+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-12-11T17:47:15.4200911+03:00</VisualXRangeMin>
              <Width>1281.7019934575014</Width>
            </FBDItem>
            <FBDItem z:Id="5072" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1696</Id>
              <InputPortsCollection z:Id="5073" z:Size="0" />
              <InternalPortsCollection z:Id="5074" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3847</d8p1:_x>
                <d8p1:_y>3390</d8p1:_y>
              </Location>
              <Name z:Id="5075">comment</Name>
              <OutputPortsCollection z:Id="5076" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4159" i:nil="true" />
              <SecondName z:Id="5077">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5078">UEsDBBQAAgAIAPWLi1FjLISvEgEAAOUBAAARAAAAZG9jUHJvcHMvY29yZS54bWxtkU1OwzAQha8SeZ/YThoEVuIuQKxAQqISiJ3lTFOL+Ee225SzseBIXIEkpVEqdTl+3xvPm/n9/qnWR90lB/BBWVMjmhGUgJG2Uaat0T5u01u05pV0TFoPL9468FFBSAabCayRNdrF6BjGbu+7zPoWNxJDBxpMDJhmFKOZjeB1uGqYlAWpVfxycBU9izN9DGoG+77P+mJCc0Iofn9+epU70CJVJkRhJJxd0s2mMBEhG7KZQdxar0UMUxMn5KdoYWx2gzVE0Ygo8LiK1M27QLxqJJMeRLSeF7TCi7L6j316gCYZxmWncGflrbh/2DwinpOcpOQupasNLVlRslX5Mfa68E+38HBQ48H48NeynKrLQ/E/UEsDBBQAAgAIAPWLi1E8G684zgEAAOwDAAARAAAAd29yZC9kb2N1bWVudC54bWylk19q3DAQxq9i9L4rO0nbYNYbSgKlD4XQ0APIsmyLWn+Qxna2T2l6gJ6hNwhtA4U05ArySXKFSE7sDQ2UlrxI+jQzP30jpNurm9XBqWiijhnLlcxQsoxRxCRVBZdVhlooF/voYL3q00LRVjAJkc+XNu0zVAPoFGNLayaIXSrNpI+VyggCXpoK98oU2ijKrPU40eCdOH6JBeESTRhtn4AEp0ZZVcKSKoFVWXLKRpQvT+I/oCc10WyiCfovrgQxH1u98HBNgOe84bAZnc2mkti3bmT6AFnMjkJReu8oDT6miu5v+Z1otu0me8/r98iQ3k9bYPU83hujWr2lPb3A/6IdEtkRiyJB07eVVIbkDctQ6BqFN5SrYhNmHQYzDsfj1BBZRX3akSZDpl28/4C8ynnBH0lGLLy2nMxbeL3CMwHW7pv76b67X+5HNJy7S/fb3bjL4cxdDOfDl+Es8tGr4Ws0fB6j115ehHq4p4zj6MsyCg/MjWaTK8lO4ZhUbDzWZ1Ynn3zI/4Ik9k8n+KsztLu3+yIs/ffxbcdz7jti/G7DSgj5IcPwqp4FKD0tcwWgxKRqRgpmMvQq3g+yVAoeyaqFUcbTVUzO8XTTePtt13dQSwMEFAACAAgA9YuLUVbLu1DfAgAAlwoAAA8AAAB3b3JkL3N0eWxlcy54bWzdVsFu3CAQ/RWLe2PvKqqiVZwo2SpKpTRdNVHu2GCbLgYEOE76az30k/oLHTBsdu1tUqnbS33x8IA3w7xh7J/ff5yeP7U8eaTaMClyNDvKUEJFKQkTdY46W707Qednp/3C2GdOTQKrhVn0OWqsVYs0NWVDW2yOpKIC5iqpW2xhqOu0l5ooLUtqDJC1PJ1n2fu0xUwgR0hk+YFWuOPWuKFe6TAMI/+6ksKapF9gUzKWoyXmrNAMAdJcCLONpG59AROPmOcoCwAbAyVWZowZq9majlEhV1rKagw/YsFMM6GVXOoI4s7KSP0tgvN5gLqICCloXNaQiJacYu0O6CkjWb+oGN+lBs3sBWe1iDsLbChnG06ORe2sNGQzHedYjUfutaZU3dInOz6gw2+AfJI8hWt6qSleX1IQf5LFnhHZL0FFLXmcm8VTd0ppqA7He9u1BRThRJo9iZlkIvJcAHT9rBoqpjwKl1CEALsMfek4fcmsQ0Cf48wNCn8KvxGqrrJUB3uYcC4C1/aaMTzUniA+Wm3sjXfh13Na2WBqVjd2u4aEhcx3mN9tot05RMHIpJ6/lhFxxCgIroLg2xKnkyvnrzRst88KolNY41pj1bjQ/NRHkqOVj5QMu5x0/mrgdiP0rbvxPBbDSg+GHow0ME29lQ24KyF1O96Wb3kL4SerGGziOkQUmbbsmhFCxd8FMXXr9EuGEo1awGUjnzd3b5kdOIb5JAaobKqhVtdowzzpPBk8V1fjRuPaL6do1Ax+E4/FhVu7Fcv9n5VAcj/s9L5twYfwwFhSzj/hYSQVbOpD/Q8OyROOHQsqeJieZSf7FhTSWtm+wuBv1CsU6W5A6XagOtauLd/SbE+Oplnx6UjuWKvgNdtfNvfZnnxdwncTWuFLvnZEdN+UHB17A9pEbCumwdBow6DSEEeww2ck889uog/Ou9Hn4MxR2IMTM/iLIPT631E/HJ46nZTJ/3DJomXOfgFQSwMEFAACAAgA9YuLUQgE5gtzAAAAfwAAABIAAAB3b3JkL251bWJlcmluZy54bWwNi0EOwiAQAL9CuFvQgzGktG9Bum1JuruEpeLfPPgkvyDHmcn8Pt9xfuOhXlAkMXl9HaxWQJGXRJvXZ10vDz1PY3N04hNKt6oPJK55vdeanTESd8AgA2eg3lYuGGrHspnGZcmFI4j0Ew9zs/ZuMCTSykx/UEsDBBQAAgAIAPWLi1G8fuY2VQEAAJQCAAARAAAAd29yZC9zZXR0aW5ncy54bWxlkk1ugzAQha8Sed8QyE8rFBK1q2yiLugFBnsAK8a2bBPK2brokXqFGohFm+xmvvdmxjPyz9f3/vjZiMUVjeVKZiRersgCJVWMyyojrSufXsjxsO9Si855ZhfeL23aZaR2TqdRZGmNDdil0ii9VirTgPOpqaJOGaaNomitL21ElKxWu6gBLsnQknGrBfRvQC+VUa1keQ0aF116BZER/5BodGEJrXAfUORO6aA+J0GH1qlTr2uU4PwO9+V4Rfkq2TtjJwTm97w3UNVocHOUT4t6m4QGMzJRXnDBXX9WDImXWsMfDtBwapRVpVv6kkiVJac4noCEkXEyzoz+DRUmHxrgGbSe5hZVnBHBq9rFQ6nzGQNzGZOiSm5aMmrJpI0JUIpycN+CmSWB/fGtA1vPbBPYZmbbwLYz2wW2G1jdazSCy4s/SQgHXiohVIfsNOsPKBwkfK/DL1BLAwQUAAIACAD1i4tRbVLev58FAAD9GwAAFQAAAHdvcmQvdGhlbWUvdGhlbWUxLnhtbO1ZT2/bNhT/KoTurSxbcp2gbhE7drs1aYPE69AjLdMSa0oUSDqpb0N7HDBgWDfsMmC3HYZtAVpgh2XYh8nWYeuAfIVRtCxRNtUkTVZsWHywRer33u/94Xsi5ZOffrl5+0lEwD5iHNO4bTnXaxZAsU9HOA7a1lSMr7Ws27duwnURoggBCY75OmxboRDJum1zX05Dfp0mKJb3xpRFUMghC+wRgwdSSUTseq3WtCOIYwvEMEJt68F4jH0EBqlKK1feI/IrFjyd8Anb8xWjLqGwo4mT/vAZ7xIG9iFpW5JnRA8G6ImwAIFcyBttq6Y+FrBv3bRzKSIqhDXBvvosBDOJ0aSuBFkwzCWdvrt2Y7NgqM8ZVoG9Xq/bcwqNCgF9X3rrrIDdfsvp5Fo11PxyVXu35tXcJQGNobEisNbpdLy1skCjEHBXBFq1prtRLwu4hYC36kNno9ttlgW8QqC5ItC/sdZ0lwQUKiQ4nqzA08wWKcoxY0ruGvEtiW/la6GA2dpKmyuIRdW6i+BjyvoSoLIMBY6BmCVoDH2J68JoyDBUDHAdQe1WNufz1bmUDnCf4US0rfcTKAukwJwcfXdy9AKcHB0eP315/PTH42fPjp/+YJK8C+NAl3z9zad/ffUR+PPF16+ff14hwHWB377/+NefP6tACh356ovD318evvrykz++fW7CbzA41PEDHCEO7qMDsEuj1D8DBRqyc4oMQohLIjCUUBOyJ8IS8v4MEiOwg8oxfMhkWzAi70wfl+zdC9lUYBPyXhiVkNuUkg5lZp/uKTrNp2kcVPCzqQ7chXDfSN9dynJvmsiVjY1KuyEqmbpDZOJhgGIkQHqPThAyyT3CuBTfbewzyulYgEcYdCA2B2aAh8IsdRdHMkEzo40y66UIbT8EHUqMBJtovwyVFQKJUSkipWjegVMBI7PVMCI6dAuK0Gjo3oz5pcBzIZMeIEJBb4Q4Nwo9YLOSyfegbFHmFbBNZlEZygSeGKFbkFIdukkn3RBGidluHIc6+D0+kSsWgh0qzHbQcs2kY5kQGFdn/iFG4pzF/gEOQvNiSe9MmbFGEC3X6IyMIYoXD4BSK49w/Ka+TrBs7Fd9famvb8iHnbGelrt5JfA/2sM34TTeQWmdXLXwqxZ+1cLfUOH/ROMuerWt79aVnqhy6z7GhOyJGUFbXHV5Ll0c9eWkGiih/KiQhPJywVcCBgyqa8Co+BCLcC+EieRxFEXAM90BBwnl8ohiVSpXJ14svVZzXn5MlXAotuloPt8onV9zRWoUcJ2qkao4K13jxkXpnDnyjHyOV8HnvZnP1mIqywjA9H2E06xnZnIfEjRKoz9XLTBBu8gXmb5Fri49bzyEI5QlzjF75jTOGsnW6YHU+NYaF+U7S+Z0QreK0LuM1NVOS529WrkkLo/AgTTTq3sW8KNE6uRpO4MkiNuWLzKHTi32ZbcrVqxTq3a7RJIwLjYhD+di6lb+7icu7K57bqruAoabutQZyRst592T28sJROOxTHzFTDHM7tGpQGwvHB2AIZmyXSgtd+dLaoS5fHjUFwMmi9PNVlu56LPFv/wuKSsKSJIQZu2pped6jlfXuRFqpNlnVxj/lr40LtEX7//sS7p85Sa4MVKnNbk1YBCk67RtUSZCKttNEmK/z+RmQpFJw4A8Bqr+RNJ34qmxaH/Rr+yFknl3C0KxiwPAsGxxImQI7YjM01O0OYt2mJVHpinrLbnBPJn/DtE+IoO0cptpCCwQ5g0ki4UCLifONtXYMOj/mzdEbtWG6JQdQ0HlnmeD4urtXnsKrF3UinM+besVbte9sz9tE3meAemXbOSY+aTY/g6oesQW+025JK+1slLMJ4fS6pbuX6rrXW6virS0qlbBpe5Ttfg3quJ/CuHbx98zhN87V/Tt1WK2tZOQGi39t7aYufU3UEsDBBQAAgAIAPWLi1GXPrWT1wAAAL4BAAALAAAAX3JlbHMvLnJlbHOdkV9KAzEQh68S8t6dVWwVadqXReibFC8wJLO7weYPybTVs/nQI/UKjiLSSgXxcWZ+880Xcnw7zJcvYaN2VKpP0eirptWKok3Ox8HoLfeTO71czNe0QZZEHX2uSlZiNXpkzvcA1Y4UsDYpU5RJn0pAlrIMkNE+40Bw3bYzKKcMfc5UK2f0etZ1t9OHG1F4es30lwOp772lLtltoMgX7vxICBnLQGw07FNx4L76jXC1ggtSNhX6h9jvL4dAjA4Z4QM9yUW2C3uqJ26i9Sj9+hn5doOzX1i8A1BLAwQUAAIACAD1i4tRTbuBOjIBAAATBAAAEwAAAFtDb250ZW50X1R5cGVzXS54bWy1k01OwzAQha9ieVslblkghJp2AWyhCy5gnElrEf/IMynt2VhwJK7AJGmzQKUtomwiOfPe+54t+/P9YzrfuFqsIaENvpCTfCwFeBNK65eFbKjKbuR8Nn3eRkDBUo+FXBHFW6XQrMBpzEMEz5MqJKeJl2mpojavegnqajy+ViZ4Ak8ZtRlyNr2HSjc1iYcN/+6xCWqU4q4XtqxC6hhrazTxXK19+Y2S7Qg5OzsNrmzEEQukUAcR3ehHwt74xCeRbAlioRM9ascy9RZSqcpgGsfW/HjOgaahqqyBwd+mxRQMIPIRuzofJk5bPzpZxDfuBRJbL99kiD7dAmlbA16+Qp97Bh+I2PEfDXbJRzuwfZFCRL7bCX7fYX95W3fG9AiJ7DnbJn5x0H8nf956FzMwVffEZ19QSwMEFAACAAgA9YuLUczuf8ziAAAAsQIAABwAAAB3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzrZJLbgIxDIavEnnfyUwXVVUR2LDppovCBdLgeaiTh2JPVc7GgiNxBUxBPCSEupil/zifPznZbbaT2a/v1Q9m6mIwUBUlKAwurrrQGBi4fnqF2XTyib1l6aC2S6TkSiADLXN605pci95SERMGOalj9palzI1O1n3bBvVzWb7ofM2AW6Z6XxmQYMHrHitQy3XC/wyIdd05nEc3eAx8Z46mA5GEaHODbOBYF8IBpe9LfAx+VIUw+C/MstCLxTl6KLJAZumhcRdygl6t5JQ8dFnKyHFfhg/Ei8VfeQyrs4m++XjTPVBLAQIUABQAAgAIAPWLi1FjLISvEgEAAOUBAAARAAAAAAAAAAAAAAAAAAAAAABkb2NQcm9wcy9jb3JlLnhtbFBLAQIUABQAAgAIAPWLi1E8G684zgEAAOwDAAARAAAAAAAAAAAAAAAAAEEBAAB3b3JkL2RvY3VtZW50LnhtbFBLAQIUABQAAgAIAPWLi1FWy7tQ3wIAAJcKAAAPAAAAAAAAAAAAAAAAAD4DAAB3b3JkL3N0eWxlcy54bWxQSwECFAAUAAIACAD1i4tRCATmC3MAAAB/AAAAEgAAAAAAAAAAAAAAAABKBgAAd29yZC9udW1iZXJpbmcueG1sUEsBAhQAFAACAAgA9YuLUbx+5jZVAQAAlAIAABEAAAAAAAAAAAAAAAAA7QYAAHdvcmQvc2V0dGluZ3MueG1sUEsBAhQAFAACAAgA9YuLUW1S3r+fBQAA/RsAABUAAAAAAAAAAAAAAAAAcQgAAHdvcmQvdGhlbWUvdGhlbWUxLnhtbFBLAQIUABQAAgAIAPWLi1GXPrWT1wAAAL4BAAALAAAAAAAAAAAAAAAAAEMOAABfcmVscy8ucmVsc1BLAQIUABQAAgAIAPWLi1FNu4E6MgEAABMEAAATAAAAAAAAAAAAAAAAAEMPAABbQ29udGVudF9UeXBlc10ueG1sUEsBAhQAFAACAAgA9YuLUczuf8ziAAAAsQIAABwAAAAAAAAAAAAAAAAAphAAAHdvcmQvX3JlbHMvZG9jdW1lbnQueG1sLnJlbHNQSwUGAAAAAAkACQBBAgAAwhEAAAAA</Comment>
              <Height>288.82794090937523</Height>
              <Width>739.55937564483975</Width>
            </FBDItem>
            <FBDItem z:Id="5079" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1711</Id>
              <InputPortsCollection z:Id="5080" z:Size="0" />
              <InternalPortsCollection z:Id="5081" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4550</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Ref="5075" i:nil="true" />
              <OutputPortsCollection z:Id="5082" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4159" i:nil="true" />
              <SecondName z:Id="5083">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5084">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</Comment>
              <Height>323.20423176420718</Height>
              <Width>616.24959060752462</Width>
            </FBDItem>
            <FBDItem z:Id="5085" i:type="SpinEditVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2558</Id>
              <InputPortsCollection z:Id="5086" z:Size="0" />
              <InternalPortsCollection z:Id="5087" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4590</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5088" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4666" i:nil="true" />
              <SecondName z:Id="5089">newfun_2779205890</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>c9cd1998-9f6a-4831-b031-f3754cb1f6ab</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT1S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="5090">
                <ArrayIndex>0</ArrayIndex>
                <TagId>1244</TagId>
              </Tag>
              <Format z:Id="5091">0.##</Format>
            </FBDItem>
            <FBDItem z:Id="5092" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2628</Id>
              <InputPortsCollection z:Id="5093" z:Size="0" />
              <InternalPortsCollection z:Id="5094" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3320</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Id="5095">comment</Name>
              <OutputPortsCollection z:Id="5096" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Id="5097">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5098">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</Comment>
              <Height>288.72573402440639</Height>
              <Width>223.24848872253051</Width>
            </FBDItem>
            <FBDItem z:Id="5099" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2791</Id>
              <InputPortsCollection z:Id="5100" z:Size="0" />
              <InternalPortsCollection z:Id="5101" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>2947.1831809657679</d8p1:_x>
                <d8p1:_y>3343.8353557969358</d8p1:_y>
              </Location>
              <Name z:Ref="5095" i:nil="true" />
              <OutputPortsCollection z:Id="5102" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4354" i:nil="true" />
              <SecondName z:Id="5103">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="5104">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</Comment>
              <Height>312.04824842255675</Height>
              <Width>827.67395391243235</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="5105">PID_control</Name>
          <Parent z:Ref="3327" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>3</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5106">PID</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5107" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5108" z:Size="1">
        <d2p1:anyType z:Id="5109" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5110" z:Size="3">
            <FBDConnector z:Id="5111">
              <EndFBDPort z:Id="5112" i:type="InputFBDPort">
                <Alias z:Id="5113">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1206</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5114" z:Size="1">
                  <FBDPortExtSettings z:Id="5115">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5116" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5117">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5118" i:type="OutputFBDPort">
                <Alias z:Id="5119">AI.02: AIN_2_RoomT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1425</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5120" z:Size="1">
                  <FBDPortExtSettings z:Id="5121">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5116" i:nil="true" />
                <VariableName z:Ref="10" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5122">
              <EndFBDPort z:Id="5123" i:type="InputFBDPort">
                <Alias z:Id="5124">K filter</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1207</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5125" z:Size="1">
                  <FBDPortExtSettings z:Id="5126">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5127" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5128">k</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5129" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2109</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5130" z:Size="1">
                  <FBDPortExtSettings z:Id="5131">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5127" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5132">
              <EndFBDPort z:Id="5133" i:type="InputFBDPort">
                <Alias z:Id="5134">R (Ohm)</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2315</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5135" z:Size="1">
                  <FBDPortExtSettings z:Id="5136">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5137" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5138">r</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5139" i:type="OutputFBDPort">
                <Alias z:Id="5140">AI.03: AIN_3_FLOOD</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2248</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5141" z:Size="1">
                  <FBDPortExtSettings z:Id="5142">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5137" i:nil="true" />
                <VariableName z:Ref="13" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5143" z:Size="7">
            <FBDItem z:Id="5144" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2107</Id>
              <InputPortsCollection z:Id="5145" z:Size="1">
                <FBDPort z:Id="5146" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2108</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5147" z:Size="1">
                    <FBDPortExtSettings z:Id="5148">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5149" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3560</d8p1:_x>
                <d8p1:_y>3670</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="5150" z:Size="1">
                <FBDPort z:Ref="5129" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="375" i:nil="true" />
              <InputFBDPort z:Ref="5146" i:nil="true" />
              <OutputFBDPort z:Ref="5129" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5151" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1424</Id>
              <InputPortsCollection z:Id="5152" z:Size="0" />
              <InternalPortsCollection z:Id="5153" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>3630</d8p1:_y>
              </Location>
              <Name z:Ref="4174" i:nil="true" />
              <OutputPortsCollection z:Id="5154" z:Size="1">
                <FBDPort z:Ref="5118" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4176" i:nil="true" />
              <SecondName z:Id="5155">_00_A1_AI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5156">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5157" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5158">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>864</HelpID>
              <Id>1205</Id>
              <InputPortsCollection z:Id="5159" z:Size="3">
                <FBDPort z:Ref="5112" i:nil="true" />
                <FBDPort z:Ref="5123" i:nil="true" />
                <FBDPort z:Id="5160" i:type="InputFBDPort">
                  <Alias z:Id="5161">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1208</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5162" z:Size="1">
                    <FBDPortExtSettings z:Id="5163">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5164">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5165" z:Size="1">
                <FBDPort z:Id="5166" i:type="InternalFBDPort">
                  <Alias z:Id="5167">Внутренняя 54734</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>1213</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5168" z:Size="10">
                    <FBDPortExtSettings z:Id="5169">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5170">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5171">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5172">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5173">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5174">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5175">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5176">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5177">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5178">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5179">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3810</d8p1:_x>
                <d8p1:_y>3600</d8p1:_y>
              </Location>
              <Name z:Id="5180">PT 1000 (391)</Name>
              <OutputPortsCollection z:Id="5181" z:Size="4">
                <FBDPort z:Id="5182" i:type="OutputFBDPort">
                  <Alias z:Id="5183">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1209</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5184" z:Size="1">
                    <FBDPortExtSettings z:Id="5185">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5186" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5187">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="5188" i:type="OutputFBDPort">
                  <Alias z:Id="5189">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1210</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5190" z:Size="1">
                    <FBDPortExtSettings z:Id="5191">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5192" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5193">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5194" i:type="OutputFBDPort">
                  <Alias z:Id="5195">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1211</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5196" z:Size="1">
                    <FBDPortExtSettings z:Id="5197">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5198" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5199">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="5200" i:type="OutputFBDPort">
                  <Alias z:Id="5201">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1212</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5202" z:Size="1">
                    <FBDPortExtSettings z:Id="5203">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5204" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5205">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5206">YART</Prefix>
              <SecondName z:Id="5207">PT1000_391</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d8b67f64-06c2-46b9-85f5-60658c14d9a2</SpecificationId>
              <Code z:Ref="4227" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5208" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2247</Id>
              <InputPortsCollection z:Id="5209" z:Size="0" />
              <InternalPortsCollection z:Id="5210" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3541</d8p1:_x>
                <d8p1:_y>3846</d8p1:_y>
              </Location>
              <Name z:Id="5211">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5212" z:Size="1">
                <FBDPort z:Ref="5139" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5213">_</Prefix>
              <SecondName z:Id="5214">_00_A1_AI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5215">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5216" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5217">Преобразование значения сопротивления в температуру
От -200 до +850 градусов</Description>
              <HelpID>862</HelpID>
              <Id>2313</Id>
              <InputPortsCollection z:Id="5218" z:Size="3">
                <FBDPort z:Ref="5133" i:nil="true" />
                <FBDPort z:Id="5219" i:type="InputFBDPort">
                  <Alias z:Id="5220">K filter</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2316</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5221" z:Size="1">
                    <FBDPortExtSettings z:Id="5222">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5223" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5224" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:double">0.0001</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5225">k</VariableName>
                </FBDPort>
                <FBDPort z:Id="5226" i:type="InputFBDPort">
                  <Alias z:Id="5227">t ERR (ms)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2317</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5228" z:Size="1">
                    <FBDPortExtSettings z:Id="5229">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5230">te</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5231" z:Size="1">
                <FBDPort z:Id="5232" i:type="InternalFBDPort">
                  <Alias z:Id="5233">Внутренняя 54731</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>10</ArrayItemsCount>
                  <Id>2314</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5234" z:Size="10">
                    <FBDPortExtSettings z:Id="5235">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5236">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5237">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5238">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5239">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5240">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5241">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5242">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5243">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5244">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5245">x</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3740</d8p1:_y>
              </Location>
              <Name z:Id="5246">PT 1000 (385)</Name>
              <OutputPortsCollection z:Id="5247" z:Size="4">
                <FBDPort z:Id="5248" i:type="OutputFBDPort">
                  <Alias z:Id="5249">T (°C)</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2318</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5250" z:Size="1">
                    <FBDPortExtSettings z:Id="5251">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5252" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5253">t</VariableName>
                </FBDPort>
                <FBDPort z:Id="5254" i:type="OutputFBDPort">
                  <Alias z:Id="5255">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2319</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5256" z:Size="1">
                    <FBDPortExtSettings z:Id="5257">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5258" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5259">err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5260" i:type="OutputFBDPort">
                  <Alias z:Id="5261">Open</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2320</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5262" z:Size="1">
                    <FBDPortExtSettings z:Id="5263">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5264" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5265">_emax</VariableName>
                </FBDPort>
                <FBDPort z:Id="5266" i:type="OutputFBDPort">
                  <Alias z:Id="5267">Short</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2321</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5268" z:Size="1">
                    <FBDPortExtSettings z:Id="5269">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5270" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5271">_emin</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5272">YART</Prefix>
              <SecondName z:Id="5273">PT1000_385</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>287faa38-da5e-478a-9de8-0469f4d3ce63</SpecificationId>
              <Code z:Ref="4575" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5274" i:type="ChartVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2253</Id>
              <InputPortsCollection z:Id="5275" z:Size="0" />
              <InternalPortsCollection z:Id="5276" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3469</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5277" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5213" i:nil="true" />
              <SecondName z:Id="5278">newfun_820137150</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>8ab809a2-465a-45fe-8f44-fcb54ab879e2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <FileName i:nil="true" />
              <Height>300</Height>
              <Series z:Id="5279" z:Size="1">
                <TagChartSeriesVisualItem z:Id="5280">
                  <Color xmlns:d10p1="http://schemas.datacontract.org/2004/07/System" z:Id="5281">
                    <d10p1:m_Item1>255</d10p1:m_Item1>
                    <d10p1:m_Item2>0</d10p1:m_Item2>
                    <d10p1:m_Item3>0</d10p1:m_Item3>
                    <d10p1:m_Item4>255</d10p1:m_Item4>
                  </Color>
                  <Program z:Ref="1" i:nil="true" />
                  <Tag z:Id="5282">
                    <ArrayIndex>0</ArrayIndex>
                    <TagId>2249</TagId>
                  </Tag>
                </TagChartSeriesVisualItem>
              </Series>
              <VisualXRangeMax>2020-11-13T16:10:36.446792+03:00</VisualXRangeMax>
              <VisualXRangeMin>2020-11-13T15:50:36.446792+03:00</VisualXRangeMin>
              <Width>1480</Width>
            </FBDItem>
            <FBDItem z:Id="5283" i:type="MeterVisualItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2255</Id>
              <InputPortsCollection z:Id="5284" z:Size="0" />
              <InternalPortsCollection z:Id="5285" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4240</d8p1:_x>
                <d8p1:_y>3650</d8p1:_y>
              </Location>
              <Name i:nil="true" />
              <OutputPortsCollection z:Id="5286" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="5213" i:nil="true" />
              <SecondName z:Id="5287">newfun_1350831332</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>30564771-8fd2-4b47-8909-ef003bfbeed2</SpecificationId>
              <AllowMaxSpeedRead>false</AllowMaxSpeedRead>
              <CycleTime>PT10S</CycleTime>
              <IsActive>true</IsActive>
              <Program z:Ref="1" i:nil="true" />
              <Tag z:Id="5288">
                <ArrayIndex>0</ArrayIndex>
                <TagId>2249</TagId>
              </Tag>
              <Dimension z:Ref="67" i:nil="true" />
              <EndValueScale>90</EndValueScale>
              <FormatLabel z:Id="5289">{0:f0}</FormatLabel>
              <MajorIntervalCount>20</MajorIntervalCount>
              <StartValueScale>0</StartValueScale>
            </FBDItem>
          </FBDItems>
          <Name z:Id="5290">Room_Control</Name>
          <Parent z:Ref="5107" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>4</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5291">ROOM</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5292" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5293" z:Size="1">
        <d2p1:anyType z:Id="5294" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5295" z:Size="3">
            <FBDConnector z:Id="5296">
              <EndFBDPort z:Id="5297" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1973</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5298" z:Size="1">
                  <FBDPortExtSettings z:Id="5299">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5300" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2106" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5301" i:type="OutputFBDPort">
                <Alias z:Id="5302">E1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1962</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5303" z:Size="1">
                  <FBDPortExtSettings z:Id="5304">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5300" i:nil="true" />
                <VariableName z:Id="5305">_e1</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5306">
              <EndFBDPort z:Id="5307" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1976</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5308" z:Size="1">
                  <FBDPortExtSettings z:Id="5309">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5310" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2106" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5311" i:type="OutputFBDPort">
                <Alias z:Id="5312">E2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1963</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5313" z:Size="1">
                  <FBDPortExtSettings z:Id="5314">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5310" i:nil="true" />
                <VariableName z:Id="5315">_e2</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5316">
              <EndFBDPort z:Id="5317" i:type="InputFBDPort">
                <Alias z:Id="5318">Port Par</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1951</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5319" z:Size="1">
                  <FBDPortExtSettings z:Id="5320">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="5321" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5322">pp_</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5323" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1980</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5324" z:Size="1">
                  <FBDPortExtSettings z:Id="5325">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="5321" i:nil="true" />
                <VariableName z:Ref="2122" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5326" z:Size="4">
            <FBDItem z:Id="5327" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1978</Id>
              <InputPortsCollection z:Id="5328" z:Size="1">
                <FBDPort z:Id="5329" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1979</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5330" z:Size="1">
                    <FBDPortExtSettings z:Id="5331">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2106" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5332" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3450</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Ref="2179" i:nil="true" />
              <OutputPortsCollection z:Id="5333" z:Size="1">
                <FBDPort z:Ref="5323" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2181" i:nil="true" />
              <SecondName z:Ref="2179" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="71" i:nil="true" />
              <CustomTag z:Ref="358" i:nil="true" />
              <InputFBDPort z:Ref="5329" i:nil="true" />
              <OutputFBDPort z:Ref="5323" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5334" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5335">Опрос счетчика Меркурий 203</Description>
              <HelpID>707</HelpID>
              <Id>1927</Id>
              <InputPortsCollection z:Id="5336" z:Size="4">
                <FBDPort z:Id="5337" i:type="InputFBDPort">
                  <Alias z:Id="5338">Enable</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1950</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5339" z:Size="1">
                    <FBDPortExtSettings z:Id="5340">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5341" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5342" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5343">e_</VariableName>
                </FBDPort>
                <FBDPort z:Ref="5317" i:nil="true" />
                <FBDPort z:Id="5344" i:type="InputFBDPort">
                  <Alias z:Id="5345">ADDR</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1952</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5346" z:Size="1">
                    <FBDPortExtSettings z:Id="5347">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5348" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5349" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">42687530</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5350">da_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5351" i:type="InputFBDPort">
                  <Alias z:Id="5352">Timeout</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1953</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5353" z:Size="1">
                    <FBDPortExtSettings z:Id="5354">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5355" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5356" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">3000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5357">t_</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5358" z:Size="22">
                <FBDPort z:Id="5359" i:type="InternalFBDPort">
                  <Alias z:Id="5360">Внутренняя 10753</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1928</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5361" z:Size="1">
                    <FBDPortExtSettings z:Id="5362">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5363">_init_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5364" i:type="InternalFBDPort">
                  <Alias z:Id="5365">Внутренняя 10759</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1929</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5366" z:Size="1">
                    <FBDPortExtSettings z:Id="5367">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5368">_blockId_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5369" i:type="InternalFBDPort">
                  <Alias z:Id="5370">Внутренняя 10760</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1930</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5371" z:Size="1">
                    <FBDPortExtSettings z:Id="5372">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5373">_stage_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5374" i:type="InternalFBDPort">
                  <Alias z:Id="5375">Внутренняя 13906</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1931</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5376" z:Size="1">
                    <FBDPortExtSettings z:Id="5377">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5378">_timer_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5379" i:type="InternalFBDPort">
                  <Alias z:Id="5380">Внутренняя 14582</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1932</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5381" z:Size="1">
                    <FBDPortExtSettings z:Id="5382">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5383">_timerNA_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5384" i:type="InternalFBDPort">
                  <Alias z:Id="5385">Внутренняя 13878</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1933</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5386" z:Size="1">
                    <FBDPortExtSettings z:Id="5387">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5388">_na_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5389" i:type="InternalFBDPort">
                  <Alias z:Id="5390">Внутренняя 16763</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1934</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5391" z:Size="1">
                    <FBDPortExtSettings z:Id="5392">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5393">_err_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5394" i:type="InternalFBDPort">
                  <Alias z:Id="5395">Внутренняя 16765</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1935</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5396" z:Size="1">
                    <FBDPortExtSettings z:Id="5397">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5398">_msgLen_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5399" i:type="InternalFBDPort">
                  <Alias z:Id="5400">Внутренняя 16767</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1936</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5401" z:Size="1">
                    <FBDPortExtSettings z:Id="5402">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5403">_txloop_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5404" i:type="InternalFBDPort">
                  <Alias z:Id="5405">Внутренняя 17727</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1937</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5406" z:Size="1">
                    <FBDPortExtSettings z:Id="5407">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5408">_lastBi_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5409" i:type="InternalFBDPort">
                  <Alias z:Id="5410">Внутренняя 17965</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1938</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5411" z:Size="1">
                    <FBDPortExtSettings z:Id="5412">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5413">_le_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5414" i:type="InternalFBDPort">
                  <Alias z:Id="5415">Внутренняя 17966</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1939</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5416" z:Size="1">
                    <FBDPortExtSettings z:Id="5417">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5418">_lda_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5419" i:type="InternalFBDPort">
                  <Alias z:Id="5420">Внутренняя 19074</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1940</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5421" z:Size="1">
                    <FBDPortExtSettings z:Id="5422">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5423">_mid_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5424" i:type="InternalFBDPort">
                  <Alias z:Id="5425">Внутренняя 21339</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1941</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5426" z:Size="1">
                    <FBDPortExtSettings z:Id="5427">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5428">_date_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5429" i:type="InternalFBDPort">
                  <Alias z:Id="5430">Внутренняя 21340</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1942</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5431" z:Size="1">
                    <FBDPortExtSettings z:Id="5432">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5433">_time_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5434" i:type="InternalFBDPort">
                  <Alias z:Id="5435">Внутренняя 20951</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1943</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5436" z:Size="1">
                    <FBDPortExtSettings z:Id="5437">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5438">_u_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5439" i:type="InternalFBDPort">
                  <Alias z:Id="5440">Внутренняя 23664</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1944</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5441" z:Size="1">
                    <FBDPortExtSettings z:Id="5442">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5443">_i_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5444" i:type="InternalFBDPort">
                  <Alias z:Id="5445">Внутренняя 23666</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1945</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5446" z:Size="1">
                    <FBDPortExtSettings z:Id="5447">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5448">_p_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5449" i:type="InternalFBDPort">
                  <Alias z:Id="5450">Внутренняя 23676</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1946</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5451" z:Size="1">
                    <FBDPortExtSettings z:Id="5452">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5453">_e1_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5454" i:type="InternalFBDPort">
                  <Alias z:Id="5455">Внутренняя 23678</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1947</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5456" z:Size="1">
                    <FBDPortExtSettings z:Id="5457">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5458">_e2_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5459" i:type="InternalFBDPort">
                  <Alias z:Id="5460">Внутренняя 23680</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1948</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5461" z:Size="1">
                    <FBDPortExtSettings z:Id="5462">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5463">_e3_</VariableName>
                </FBDPort>
                <FBDPort z:Id="5464" i:type="InternalFBDPort">
                  <Alias z:Id="5465">Внутренняя 23682</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1949</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5466" z:Size="1">
                    <FBDPortExtSettings z:Id="5467">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5468">_e4_</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670.5</d8p1:_x>
                <d8p1:_y>3918.5</d8p1:_y>
              </Location>
              <Name z:Id="5469">Merc203</Name>
              <OutputPortsCollection z:Id="5470" z:Size="12">
                <FBDPort z:Id="5471" i:type="OutputFBDPort">
                  <Alias z:Id="5472">Done</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1954</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5473" z:Size="1">
                    <FBDPortExtSettings z:Id="5474">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5475" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5476">_d</VariableName>
                </FBDPort>
                <FBDPort z:Id="5477" i:type="OutputFBDPort">
                  <Alias z:Id="5478">NA</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1955</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5479" z:Size="1">
                    <FBDPortExtSettings z:Id="5480">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5481" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5482">_na</VariableName>
                </FBDPort>
                <FBDPort z:Id="5483" i:type="OutputFBDPort">
                  <Alias z:Id="5484">Error</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1956</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5485" z:Size="1">
                    <FBDPortExtSettings z:Id="5486">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="5487" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5488">_err</VariableName>
                </FBDPort>
                <FBDPort z:Id="5489" i:type="OutputFBDPort">
                  <Alias z:Id="5490">Date</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1957</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5491" z:Size="1">
                    <FBDPortExtSettings z:Id="5492">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value z:Id="5493" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5494">_date</VariableName>
                </FBDPort>
                <FBDPort z:Id="5495" i:type="OutputFBDPort">
                  <Alias z:Id="5496">Time</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1958</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5497" z:Size="1">
                    <FBDPortExtSettings z:Id="5498">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="5499" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5500">_time</VariableName>
                </FBDPort>
                <FBDPort z:Id="5501" i:type="OutputFBDPort">
                  <Alias z:Id="5502">U</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1959</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5503" z:Size="1">
                    <FBDPortExtSettings z:Id="5504">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5505" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5506">_u</VariableName>
                </FBDPort>
                <FBDPort z:Id="5507" i:type="OutputFBDPort">
                  <Alias z:Id="5508">I</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1960</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5509" z:Size="1">
                    <FBDPortExtSettings z:Id="5510">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5511" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5512">_i</VariableName>
                </FBDPort>
                <FBDPort z:Id="5513" i:type="OutputFBDPort">
                  <Alias z:Id="5514">P</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1961</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5515" z:Size="1">
                    <FBDPortExtSettings z:Id="5516">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5517" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5518">_p</VariableName>
                </FBDPort>
                <FBDPort z:Ref="5301" i:nil="true" />
                <FBDPort z:Ref="5311" i:nil="true" />
                <FBDPort z:Id="5519" i:type="OutputFBDPort">
                  <Alias z:Id="5520">E3</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1964</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5521" z:Size="1">
                    <FBDPortExtSettings z:Id="5522">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5523" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5524">_e3</VariableName>
                </FBDPort>
                <FBDPort z:Id="5525" i:type="OutputFBDPort">
                  <Alias z:Id="5526">E4</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1965</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5527" z:Size="1">
                    <FBDPortExtSettings z:Id="5528">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5529" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5530">_e4</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5531">YART</Prefix>
              <SecondName z:Id="5532">M203</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>632cf310-223b-4d34-8229-04a971866e4e</SpecificationId>
              <Code z:Id="5533">// Константы


const BL_MIN				= 28;


const TIMEOUT_CYCLE			= 200;


const TX_LOOP_COUNT_MAX		= 3;





const ST_PORT_OPEN			= 0;


const ST_CLEAN				= 1;


const ST_MSG_OUT_CREATE		= 2;


const ST_MSG_OUT_SEND		= 3;


const ST_MSG_IN_RECEIVE		= 4;


const ST_MSG_IN_PROCESS		= 5;


const ST_CYCLE_ABORT		= 253;


const ST_CYCLE_FINISHED		= 254;


const ST_NEXT_BLOCK			= 255;





const MSG_GET_DATETIME		= 0;


const MSG_GET_UIP			= 1;


const MSG_GET_E				= 2;


const MSG_COUNT				= 3;





new PortId, Flags, Baudrate, crc, BA, BL, check, offset, dt[7];





if(t_ &lt;= 0) t_ = TIMEOUT_CYCLE * 2;


if(t_ &lt; TIMEOUT_CYCLE) t_ = TIMEOUT_CYCLE;





// Проверка входящих параметров


YARTReadComSets(pp_, PortId, Flags, Baudrate);





// Первичная инициализация


if(!_init_){


	_blockId_ = getCountPortId(PortId);


	setCountPortId(PortId, _blockId_ + 1);


	togleUpdate(PortId);


	_stage_ = ST_PORT_OPEN;


	_init_ = true;


}





// Ссылки


BA = getPortBufferOffset(PortId);


if(BA &lt; 0) {_err_ = true; _na_ = true; e_ = false;}


BL = getPortBufferSize(PortId);


if(BL &lt; BL_MIN) {_err_ = true; _na_ = true; e_ = false;}





if(e_) if(!_le_) if(_stage_ &gt; ST_CLEAN) _stage_ = ST_CLEAN;


_le_ = e_;





check = false;


if(_lda_ != da_) {check = true; _lda_ = da_;}


if(check){


	_mid_ = 0;


	_u_ = 0.0;


	_i_ = 0.0;


	_p_ = 0.0;


	_e1_ = 0.0;


	_e2_ = 0.0;


	_e3_ = 0.0;


	_e4_ = 0.0;


	_date_ = 0;


	_time_ = 0;


	if(_stage_ &gt; ST_CLEAN) _stage_ = ST_CLEAN;


}





// Отображение значений


_na = _na_;


_err = _err_;


_u = _u_;


_i = _i_;


_p = _p_;


_e1 = _e1_;


_e2 = _e2_;


_e3 = _e3_;


_e4 = _e4_;


_date = _date_;


_time = _time_;








// Переход в другой блок при отмене выполнения текущего


if(!e_) _stage_ = ST_NEXT_BLOCK;





// Пропуск не активного блока


if(getCurrentPortId(PortId) != _blockId_){


	if(!togleIsActive(PortId)){ NextPortId(PortId); togleUpdate(PortId); }


	return;


}else{


	togleUpdate(PortId);


	_timer_ += GetScanDt;


	_timerNA_ += GetScanDt;





	// Остановка по таймауту


	if(_timerNA_ &gt; t_) {_mid_ = 0; _stage_ = ST_NEXT_BLOCK; _na_ = true;}


	else if(check) _stage_ = ST_PORT_OPEN;


	else if(_stage_ &lt; ST_CYCLE_ABORT) if(_timer_ &gt; TIMEOUT_CYCLE) _stage_ = ST_CYCLE_ABORT;


}





// Открытие порта


if(_stage_ == ST_PORT_OPEN){


	port_open(PortId, Baudrate, Flags);


	stop_port_receive(PortId);


	_stage_ = ST_CLEAN;


}





if(_stage_ == ST_CLEAN){


	stop_port_receive(PortId);


	_timer_ = 0;





	// Очистка буфера


	for(new i = BA; i &lt; BA + BL; i++) set_byte(i, 0);





	_txloop_ = TX_LOOP_COUNT_MAX;


	_stage_ = ST_MSG_OUT_CREATE;


}





// Подготовка сообщения


if(_stage_ == ST_MSG_OUT_CREATE){


	offset = BA;


	set_int(offset, YARTRotateInt(da_));


	offset += 4;


	switch(_mid_){


		case MSG_GET_DATETIME:	set_byte(offset++, 0x21);


		case MSG_GET_UIP:		set_byte(offset++, 0x63);


		case MSG_GET_E:			set_byte(offset++, 0x27);


	}


	





	crc = YARTCrc16_modbus_lnk(BA, offset - BA);


	set_byte(offset++, crc &amp; 0xFF);


	set_byte(offset++, (crc &gt;&gt; 8) &amp; 0xFF);


	_msgLen_ = offset - BA;


	_stage_ = ST_MSG_OUT_SEND;


}





// Отправка сообщения


if(_stage_ == ST_MSG_OUT_SEND){


	if(port_transmit_status(PortId) == 0 || --_txloop_ == 0){


		stop_port_receive(PortId);


		port_receive(PortId, BA + _msgLen_, BL - _msgLen_);


		port_send(PortId, BA, _msgLen_);


		_stage_ = ST_MSG_IN_RECEIVE;


	}


}





// Ожидание окончания получения ответа


if(_stage_ == ST_MSG_IN_RECEIVE){


	_lastBi_ = 0;


	for(new i = BA + BL - 1; i &gt;= BA + _msgLen_ + 2; i--) if(get_byte(i) &gt; 0) {_lastBi_ = i - BA; break;}


	if(_lastBi_ &gt; _msgLen_ + 2){


		crc = YARTCrc16_modbus_lnk(BA + _msgLen_, _lastBi_ - _msgLen_ - 1);


		if(get_byte(BA + _lastBi_ - 1) == (crc &amp; 0xFF))


		if(get_byte(BA + _lastBi_) == ((crc &gt;&gt; 8) &amp; 0xFF)) _stage_ = ST_MSG_IN_PROCESS;


	}


}





// Обработка ответа


if(_stage_ == ST_MSG_IN_PROCESS){


	_na_ = false;


	offset = BA + _msgLen_ + 5;


	switch(_mid_){


		case MSG_GET_DATETIME:{


			for(new i = 0; i &lt; 7; i++) dt[i] = YARTHex2Int(get_byte(offset++));


			_date_ = Date(TOBCD(dt[6]),TOBCD(dt[5]),TOBCD(dt[4]),TOBCD(dt[0]));


			_time_ = Time(TOBCD(dt[1]),TOBCD(dt[2]),TOBCD(dt[3]));


		}


		case MSG_GET_UIP:{


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_u_ = check / 10.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_i_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_p_ = check / 1000.0;


		}


		case MSG_GET_E:{


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e1_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e2_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e3_ = check / 100.0;


			check = 0;


			check += YARTHex2Int(get_byte(offset++)) * 1000000;


			check += YARTHex2Int(get_byte(offset++)) * 10000;


			check += YARTHex2Int(get_byte(offset++)) * 100;


			check += YARTHex2Int(get_byte(offset++));


			_e4_ = check / 100.0;


		}


	}


	_stage_ = ST_CYCLE_FINISHED;


}





// Прерывание работы цикла


if(_stage_ == ST_CYCLE_ABORT){


	stop_port_receive(PortId);


	if(t_ - _timerNA_ &gt; TIMEOUT_CYCLE){


		_timer_ = 0;


		_stage_ = ST_CLEAN;


	}


}





// Завершение работы цикла


if(_stage_ == ST_CYCLE_FINISHED){


	stop_port_receive(PortId);


	_mid_++;


	if(_mid_ == MSG_COUNT){


		_mid_ = 0;


		_d = true;


		_stage_ = ST_NEXT_BLOCK;


	}else{


		_stage_ = ST_CLEAN;


	}


}





// Завершение работы блока


if(_stage_ == ST_NEXT_BLOCK){


	stop_port_receive(PortId);


	port_close(PortId);


	NextPortId(PortId);


	_timerNA_ = 0;


	_timer_ = 0;


	_stage_ = ST_PORT_OPEN;


}</Code>
            </FBDItem>
            <FBDItem z:Id="5534" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1972</Id>
              <InputPortsCollection z:Id="5535" z:Size="1">
                <FBDPort z:Ref="5297" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5536" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>4030</d8p1:_y>
              </Location>
              <Name z:Ref="2179" i:nil="true" />
              <OutputPortsCollection z:Id="5537" z:Size="1">
                <FBDPort z:Id="5538" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1974</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5539" z:Size="1">
                    <FBDPortExtSettings z:Id="5540">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5541" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2122" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2181" i:nil="true" />
              <SecondName z:Ref="2179" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="86" i:nil="true" />
              <InputFBDPort z:Ref="5297" i:nil="true" />
              <OutputFBDPort z:Ref="5538" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5542" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1975</Id>
              <InputPortsCollection z:Id="5543" z:Size="1">
                <FBDPort z:Ref="5307" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5544" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3860</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Ref="2179" i:nil="true" />
              <OutputPortsCollection z:Id="5545" z:Size="1">
                <FBDPort z:Id="5546" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1977</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5547" z:Size="1">
                    <FBDPortExtSettings z:Id="5548">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5549" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2122" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2181" i:nil="true" />
              <SecondName z:Ref="2179" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="362" i:nil="true" />
              <InputFBDPort z:Ref="5307" i:nil="true" />
              <OutputFBDPort z:Ref="5546" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="5550">Meter_Mecury203</Name>
          <Parent z:Ref="5292" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>6</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5551">METERS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5552" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5553" z:Size="1">
        <d2p1:anyType z:Id="5554" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5555" z:Size="13">
            <FBDConnector z:Id="5556">
              <EndFBDPort z:Id="5557" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1749</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5558" z:Size="1">
                  <FBDPortExtSettings z:Id="5559">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="5560" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="2380" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5561" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1738</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5562" z:Size="1">
                  <FBDPortExtSettings z:Id="5563">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="5560" i:nil="true" />
                <VariableName z:Id="5564">rez</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5565">
              <EndFBDPort z:Id="5566" i:type="InputFBDPort">
                <Alias z:Id="5567">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1990</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5568" z:Size="1">
                  <FBDPortExtSettings z:Id="5569">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5570" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5571">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5572" i:type="OutputFBDPort">
                <Alias z:Id="5573">DI.02: DIN_2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1742</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5574" z:Size="1">
                  <FBDPortExtSettings z:Id="5575">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5570" i:nil="true" />
                <VariableName z:Ref="32" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5576">
              <EndFBDPort z:Id="5577" i:type="InputFBDPort">
                <Alias z:Id="5578">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1996</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5579" z:Size="1">
                  <FBDPortExtSettings z:Id="5580">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5581" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5582">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5583" i:type="OutputFBDPort">
                <Alias z:Id="5584">DI.03: DIN_3</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1744</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5585" z:Size="1">
                  <FBDPortExtSettings z:Id="5586">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5581" i:nil="true" />
                <VariableName z:Ref="34" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5587">
              <EndFBDPort z:Id="5588" i:type="InputFBDPort">
                <Alias z:Id="5589">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2002</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5590" z:Size="1">
                  <FBDPortExtSettings z:Id="5591">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5592" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5593">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5594" i:type="OutputFBDPort">
                <Alias z:Id="5595">DI.04: DIN_4</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1746</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5596" z:Size="1">
                  <FBDPortExtSettings z:Id="5597">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5592" i:nil="true" />
                <VariableName z:Ref="36" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5598">
              <EndFBDPort z:Id="5599" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>1737</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5600" z:Size="8">
                  <FBDPortExtSettings z:Id="5601">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5602">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5603">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5604">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5605">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5606">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5607">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="5608">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5609" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5610">mas</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5611" i:type="OutputFBDPort">
                <Alias z:Id="5612">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1992</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5613" z:Size="1">
                  <FBDPortExtSettings z:Id="5614">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5609" i:nil="true" />
                <VariableName z:Id="5615">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5616">
              <EndFBDPort z:Ref="5599" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5617" i:type="OutputFBDPort">
                <Alias z:Id="5618">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1998</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5619" z:Size="1">
                  <FBDPortExtSettings z:Id="5620">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5621" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5622">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5623">
              <EndFBDPort z:Ref="5599" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5624" i:type="OutputFBDPort">
                <Alias z:Id="5625">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2004</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5626" z:Size="1">
                  <FBDPortExtSettings z:Id="5627">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5628" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5629">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5630">
              <EndFBDPort z:Id="5631" i:type="InputFBDPort">
                <Alias z:Id="5632">Вход 4974</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2020</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5633" z:Size="1">
                  <FBDPortExtSettings z:Id="5634">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5635" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5636">IN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5637" i:type="OutputFBDPort">
                <Alias z:Id="5638">DI.06: DIN_6</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2014</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5639" z:Size="1">
                  <FBDPortExtSettings z:Id="5640">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="5635" i:nil="true" />
                <VariableName z:Ref="42" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5641">
              <EndFBDPort z:Ref="5599" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5642" i:type="OutputFBDPort">
                <Alias z:Id="5643">Выход 4976</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2022</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5644" z:Size="1">
                  <FBDPortExtSettings z:Id="5645">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5646" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5647">OUT</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5648">
              <EndFBDPort z:Ref="5599" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5649" i:type="OutputFBDPort">
                <Alias z:Id="5650">DI.07: DIN_7</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2016</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5651" z:Size="1">
                  <FBDPortExtSettings z:Id="5652">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5653" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="44" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5654">
              <EndFBDPort z:Ref="5599" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5655" i:type="OutputFBDPort">
                <Alias z:Id="5656">DI.08: DIN_8</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2018</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5657" z:Size="1">
                  <FBDPortExtSettings z:Id="5658">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5659" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="46" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5660">
              <EndFBDPort z:Id="5661" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2128</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5662" z:Size="1">
                  <FBDPortExtSettings z:Id="5663">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5664" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="4166" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5665" i:type="OutputFBDPort">
                <Alias z:Id="5666">AI.03: AIN_3_FLOOD</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5667" z:Size="1">
                  <FBDPortExtSettings z:Id="5668">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5664" i:nil="true" />
                <VariableName z:Ref="13" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5669">
              <EndFBDPort z:Ref="5599" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5670" i:type="OutputFBDPort">
                <Alias z:Id="5671">DI.01: DIN_1_POWER</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2008</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5672" z:Size="1">
                  <FBDPortExtSettings z:Id="5673">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="5674" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Ref="30" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="5675" z:Size="15">
            <FBDItem z:Id="5676" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2013</Id>
              <InputPortsCollection z:Id="5677" z:Size="0" />
              <InternalPortsCollection z:Id="5678" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="5679">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5680" z:Size="1">
                <FBDPort z:Ref="5637" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Id="5681">_00_A1_DI_06</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5682">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5683" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5684">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>2019</Id>
              <InputPortsCollection z:Id="5685" z:Size="2">
                <FBDPort z:Ref="5631" i:nil="true" />
                <FBDPort z:Id="5686" i:type="InputFBDPort">
                  <Alias z:Id="5687">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2021</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5688" z:Size="1">
                    <FBDPortExtSettings z:Id="5689">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5690" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5691" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5692">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5693" z:Size="1">
                <FBDPort z:Id="5694" i:type="InternalFBDPort">
                  <Alias z:Id="5695">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2024</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5696" z:Size="2">
                    <FBDPortExtSettings z:Id="5697">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5698">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5699">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="5700">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5701" z:Size="2">
                <FBDPort z:Ref="5642" i:nil="true" />
                <FBDPort z:Id="5702" i:type="OutputFBDPort">
                  <Alias z:Id="5703">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2023</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5704" z:Size="1">
                    <FBDPortExtSettings z:Id="5705">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5706" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5707">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5708">YART</Prefix>
              <SecondName z:Id="5709">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Id="5710">if(IN != OUT){


	YARTAddScanTask(t[0], t[1]);


	if (t[0] &gt;= TF){


		OUT = IN;


		t[0] = 0; 


		t[1] = 0;


	} 


}else{


	t[0] = 0; 


	t[1] = 0;


}





T = t[0];</Code>
            </FBDItem>
            <FBDItem z:Id="5711" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2017</Id>
              <InputPortsCollection z:Id="5712" z:Size="0" />
              <InternalPortsCollection z:Id="5713" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="5679" i:nil="true" />
              <OutputPortsCollection z:Id="5714" z:Size="1">
                <FBDPort z:Ref="5655" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Id="5715">_00_A1_DI_08</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5716">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5717" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2015</Id>
              <InputPortsCollection z:Id="5718" z:Size="0" />
              <InternalPortsCollection z:Id="5719" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3670</d8p1:_x>
                <d8p1:_y>3880</d8p1:_y>
              </Location>
              <Name z:Ref="5679" i:nil="true" />
              <OutputPortsCollection z:Id="5720" z:Size="1">
                <FBDPort z:Ref="5649" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Id="5721">_00_A1_DI_07</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5722">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5723" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2007</Id>
              <InputPortsCollection z:Id="5724" z:Size="0" />
              <InternalPortsCollection z:Id="5725" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3450</d8p1:_x>
                <d8p1:_y>3620</d8p1:_y>
              </Location>
              <Name z:Ref="5679" i:nil="true" />
              <OutputPortsCollection z:Id="5726" z:Size="1">
                <FBDPort z:Ref="5670" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Id="5727">_00_A1_DI_01</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5728">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5729" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1745</Id>
              <InputPortsCollection z:Id="5730" z:Size="0" />
              <InternalPortsCollection z:Id="5731" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="5732">A1 YART 1.8</Name>
              <OutputPortsCollection z:Id="5733" z:Size="1">
                <FBDPort z:Ref="5594" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2397" i:nil="true" />
              <SecondName z:Id="5734">_00_A1_DI_04</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5735">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5736" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5737">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>2001</Id>
              <InputPortsCollection z:Id="5738" z:Size="2">
                <FBDPort z:Ref="5588" i:nil="true" />
                <FBDPort z:Id="5739" i:type="InputFBDPort">
                  <Alias z:Id="5740">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2003</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5741" z:Size="1">
                    <FBDPortExtSettings z:Id="5742">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5743" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5744" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5745">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5746" z:Size="1">
                <FBDPort z:Id="5747" i:type="InternalFBDPort">
                  <Alias z:Id="5748">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2006</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5749" z:Size="2">
                    <FBDPortExtSettings z:Id="5750">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5751">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5752">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3790</d8p1:_y>
              </Location>
              <Name z:Id="5753">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5754" z:Size="2">
                <FBDPort z:Ref="5624" i:nil="true" />
                <FBDPort z:Id="5755" i:type="OutputFBDPort">
                  <Alias z:Id="5756">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2005</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5757" z:Size="1">
                    <FBDPortExtSettings z:Id="5758">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5759" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5760">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5761">YART</Prefix>
              <SecondName z:Id="5762">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="5710" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5763" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1743</Id>
              <InputPortsCollection z:Id="5764" z:Size="0" />
              <InternalPortsCollection z:Id="5765" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Ref="5732" i:nil="true" />
              <OutputPortsCollection z:Id="5766" z:Size="1">
                <FBDPort z:Ref="5583" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2397" i:nil="true" />
              <SecondName z:Id="5767">_00_A1_DI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5768">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5769" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5770">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1995</Id>
              <InputPortsCollection z:Id="5771" z:Size="2">
                <FBDPort z:Ref="5577" i:nil="true" />
                <FBDPort z:Id="5772" i:type="InputFBDPort">
                  <Alias z:Id="5773">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1997</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5774" z:Size="1">
                    <FBDPortExtSettings z:Id="5775">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5776" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5777" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5778">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5779" z:Size="1">
                <FBDPort z:Id="5780" i:type="InternalFBDPort">
                  <Alias z:Id="5781">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>2000</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5782" z:Size="2">
                    <FBDPortExtSettings z:Id="5783">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5784">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5785">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3750</d8p1:_y>
              </Location>
              <Name z:Id="5786">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5787" z:Size="2">
                <FBDPort z:Ref="5617" i:nil="true" />
                <FBDPort z:Id="5788" i:type="OutputFBDPort">
                  <Alias z:Id="5789">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1999</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5790" z:Size="1">
                    <FBDPortExtSettings z:Id="5791">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5792" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5793">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5794">YART</Prefix>
              <SecondName z:Id="5795">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="5710" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5796" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1741</Id>
              <InputPortsCollection z:Id="5797" z:Size="0" />
              <InternalPortsCollection z:Id="5798" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Ref="5732" i:nil="true" />
              <OutputPortsCollection z:Id="5799" z:Size="1">
                <FBDPort z:Ref="5572" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2397" i:nil="true" />
              <SecondName z:Id="5800">_00_A1_DI_02</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5801">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5802" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5803">Фильтрация случайных срабатываний цифрового сигнала</Description>
              <HelpID>119</HelpID>
              <Id>1989</Id>
              <InputPortsCollection z:Id="5804" z:Size="2">
                <FBDPort z:Ref="5566" i:nil="true" />
                <FBDPort z:Id="5805" i:type="InputFBDPort">
                  <Alias z:Id="5806">Вход 4975</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1991</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="5807" z:Size="1">
                    <FBDPortExtSettings z:Id="5808">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5809" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="5810" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">5000</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="5811">TF</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5812" z:Size="1">
                <FBDPort z:Id="5813" i:type="InternalFBDPort">
                  <Alias z:Id="5814">Внутренняя 5712</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>2</ArrayItemsCount>
                  <Id>1994</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="5815" z:Size="2">
                    <FBDPortExtSettings z:Id="5816">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="5817">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="5818">t</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3660</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Id="5819">ALARM FILTER</Name>
              <OutputPortsCollection z:Id="5820" z:Size="2">
                <FBDPort z:Ref="5611" i:nil="true" />
                <FBDPort z:Id="5821" i:type="OutputFBDPort">
                  <Alias z:Id="5822">Выход 4977</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1993</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5823" z:Size="1">
                    <FBDPortExtSettings z:Id="5824">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="5825" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="5826">T</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5827">YART</Prefix>
              <SecondName z:Id="5828">ALARMFILTER</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb2d6bf2-2a90-48e4-9814-4c3afb2571ee</SpecificationId>
              <Code z:Ref="5710" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5829" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="5830">Упаковка массива Bool</Description>
              <HelpID>23</HelpID>
              <Id>1736</Id>
              <InputPortsCollection z:Id="5831" z:Size="1">
                <FBDPort z:Ref="5599" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5832" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3680</d8p1:_y>
              </Location>
              <Name z:Id="5833">CODER</Name>
              <OutputPortsCollection z:Id="5834" z:Size="1">
                <FBDPort z:Ref="5561" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="5835">YART</Prefix>
              <SecondName z:Id="5836">coderByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>bb08a743-74ef-4983-849b-30926f9e4cce</SpecificationId>
              <Code z:Id="5837">//#CODER (Шифратор для Byte)


//Шифратор Byte


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (mas[i]) rez = rez |k;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="5838" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1748</Id>
              <InputPortsCollection z:Id="5839" z:Size="1">
                <FBDPort z:Ref="5557" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5840" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4080</d8p1:_x>
                <d8p1:_y>3720</d8p1:_y>
              </Location>
              <Name z:Ref="2382" i:nil="true" />
              <OutputPortsCollection z:Id="5841" z:Size="1">
                <FBDPort z:Id="5842" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1750</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5843" z:Size="1">
                    <FBDPortExtSettings z:Id="5844">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="5845" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="2396" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="2397" i:nil="true" />
              <SecondName z:Ref="2382" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="342" i:nil="true" />
              <InputFBDPort z:Ref="5557" i:nil="true" />
              <OutputFBDPort z:Ref="5842" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="5846" i:type="IoFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2124</Id>
              <InputPortsCollection z:Id="5847" z:Size="0" />
              <InternalPortsCollection z:Id="5848" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3488</d8p1:_x>
                <d8p1:_y>3998</d8p1:_y>
              </Location>
              <Name z:Ref="5679" i:nil="true" />
              <OutputPortsCollection z:Id="5849" z:Size="1">
                <FBDPort z:Ref="5665" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Id="5850">_00_A1_AI_03</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>be162041-1f90-4bcf-8715-8c926a7207c8</SpecificationId>
              <Code z:Id="5851">//Добавьте свой код</Code>
              <DeviceType>52737</DeviceType>
              <ExtModDevAdd>-1</ExtModDevAdd>
            </FBDItem>
            <FBDItem z:Id="5852" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2127</Id>
              <InputPortsCollection z:Id="5853" z:Size="1">
                <FBDPort z:Ref="5661" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="5854" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3710</d8p1:_x>
                <d8p1:_y>4000</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="5855" z:Size="1">
                <FBDPort z:Id="5856" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="5857" z:Size="1">
                    <FBDPortExtSettings z:Id="5858">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="5859" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="3673" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="379" i:nil="true" />
              <InputFBDPort z:Ref="5661" i:nil="true" />
              <OutputFBDPort z:Ref="5856" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
          </FBDItems>
          <Name z:Id="5860">Alarm-1</Name>
          <Parent z:Ref="5552" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>7</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="5861">ALARMS</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="5862" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="5863" z:Size="1">
        <d2p1:anyType z:Id="5864" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="5865" z:Size="25">
            <FBDConnector z:Id="5866">
              <EndFBDPort z:Id="5867" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1767</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5868" z:Size="1">
                  <FBDPortExtSettings z:Id="5869">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5870" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5871">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5872" i:type="OutputFBDPort">
                <Alias z:Id="5873">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1762</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5874" z:Size="1">
                  <FBDPortExtSettings z:Id="5875">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5870" i:nil="true" />
                <VariableName z:Id="5876">IPa</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5877">
              <EndFBDPort z:Id="5878" i:type="InputFBDPort">
                <Alias z:Id="5879">Period</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1770</Id>
                <IsArray>false</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5880" z:Size="1">
                  <FBDPortExtSettings z:Id="5881">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5882" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5883">p</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5884" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1776</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5885" z:Size="1">
                  <FBDPortExtSettings z:Id="5886">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5882" i:nil="true" />
                <VariableName z:Id="5887">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5888">
              <EndFBDPort z:Id="5889" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1871</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5890" z:Size="1">
                  <FBDPortExtSettings z:Id="5891">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5892" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5893">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5894" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1851</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5895" z:Size="1">
                  <FBDPortExtSettings z:Id="5896">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5892" i:nil="true" />
                <VariableName z:Ref="5887" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5897">
              <EndFBDPort z:Id="5898" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1875</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5899" z:Size="1">
                  <FBDPortExtSettings z:Id="5900">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5901" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5902">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5903" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1854</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5904" z:Size="1">
                  <FBDPortExtSettings z:Id="5905">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5901" i:nil="true" />
                <VariableName z:Ref="5887" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5906">
              <EndFBDPort z:Id="5907" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1882</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5908" z:Size="1">
                  <FBDPortExtSettings z:Id="5909">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5910" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5911">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5912" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1857</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5913" z:Size="1">
                  <FBDPortExtSettings z:Id="5914">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5910" i:nil="true" />
                <VariableName z:Ref="5887" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5915">
              <EndFBDPort z:Id="5916" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1886</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5917" z:Size="1">
                  <FBDPortExtSettings z:Id="5918">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5919" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5920">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5921" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1860</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5922" z:Size="1">
                  <FBDPortExtSettings z:Id="5923">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5919" i:nil="true" />
                <VariableName z:Ref="5887" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5924">
              <EndFBDPort z:Id="5925" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1902</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5926" z:Size="1">
                  <FBDPortExtSettings z:Id="5927">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="5928" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5929">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5930" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1863</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5931" z:Size="1">
                  <FBDPortExtSettings z:Id="5932">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="5928" i:nil="true" />
                <VariableName z:Ref="5887" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5933">
              <EndFBDPort z:Id="5934" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1982</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5935" z:Size="1">
                  <FBDPortExtSettings z:Id="5936">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5937" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5938">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5939" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>1987</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5940" z:Size="1">
                  <FBDPortExtSettings z:Id="5941">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5937" i:nil="true" />
                <VariableName z:Id="5942">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5943">
              <EndFBDPort z:Id="5944" i:type="InputFBDPort">
                <Alias z:Id="5945">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2028</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5946" z:Size="1">
                  <FBDPortExtSettings z:Id="5947">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5948" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5949">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5950" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2033</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5951" z:Size="1">
                  <FBDPortExtSettings z:Id="5952">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5948" i:nil="true" />
                <VariableName z:Id="5953">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5954">
              <EndFBDPort z:Id="5955" i:type="InputFBDPort">
                <Alias z:Id="5956">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2040</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5957" z:Size="1">
                  <FBDPortExtSettings z:Id="5958">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5959" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5960">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5961" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2045</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5962" z:Size="1">
                  <FBDPortExtSettings z:Id="5963">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5959" i:nil="true" />
                <VariableName z:Id="5964">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5965">
              <EndFBDPort z:Id="5966" i:type="InputFBDPort">
                <Alias z:Id="5967">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2039</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5968" z:Size="1">
                  <FBDPortExtSettings z:Id="5969">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5970" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5971">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5972" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2048</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5973" z:Size="1">
                  <FBDPortExtSettings z:Id="5974">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5970" i:nil="true" />
                <VariableName z:Id="5975">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5976">
              <EndFBDPort z:Id="5977" i:type="InputFBDPort">
                <Alias z:Id="5978">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2027</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5979" z:Size="1">
                  <FBDPortExtSettings z:Id="5980">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="5981" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5982">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5983" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2051</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5984" z:Size="1">
                  <FBDPortExtSettings z:Id="5985">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="5981" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5986">
              <EndFBDPort z:Id="5987" i:type="InputFBDPort">
                <Alias z:Id="5988">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2054</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="5989" z:Size="1">
                  <FBDPortExtSettings z:Id="5990">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="5991" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="5992">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="5993" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2059</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="5994" z:Size="1">
                  <FBDPortExtSettings z:Id="5995">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="5991" i:nil="true" />
                <VariableName z:Id="5996">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="5997">
              <EndFBDPort z:Id="5998" i:type="InputFBDPort">
                <Alias z:Id="5999">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2053</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6000" z:Size="1">
                  <FBDPortExtSettings z:Id="6001">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6002" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6003">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6004" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2062</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6005" z:Size="1">
                  <FBDPortExtSettings z:Id="6006">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6002" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6007">
              <EndFBDPort z:Id="6008" i:type="InputFBDPort">
                <Alias z:Id="6009">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2065</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6010" z:Size="1">
                  <FBDPortExtSettings z:Id="6011">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6012" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6013">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6014" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2070</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6015" z:Size="1">
                  <FBDPortExtSettings z:Id="6016">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6012" i:nil="true" />
                <VariableName z:Id="6017">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6018">
              <EndFBDPort z:Id="6019" i:type="InputFBDPort">
                <Alias z:Id="6020">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2084</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6021" z:Size="1">
                  <FBDPortExtSettings z:Id="6022">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6023" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6024">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6025" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2089</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6026" z:Size="1">
                  <FBDPortExtSettings z:Id="6027">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6023" i:nil="true" />
                <VariableName z:Id="6028">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6029">
              <EndFBDPort z:Id="6030" i:type="InputFBDPort">
                <Alias z:Id="6031">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2064</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6032" z:Size="1">
                  <FBDPortExtSettings z:Id="6033">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6034" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6035">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6036" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2092</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6037" z:Size="1">
                  <FBDPortExtSettings z:Id="6038">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6034" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6039">
              <EndFBDPort z:Id="6040" i:type="InputFBDPort">
                <Alias z:Id="6041">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2083</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6042" z:Size="1">
                  <FBDPortExtSettings z:Id="6043">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6044" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6045">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6046" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2095</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6047" z:Size="1">
                  <FBDPortExtSettings z:Id="6048">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6044" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6049">
              <EndFBDPort z:Id="6050" i:type="InputFBDPort">
                <Alias z:Id="6051">Var</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6052" z:Size="1">
                  <FBDPortExtSettings z:Id="6053">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6054" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6055">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6056" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2120</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6057" z:Size="1">
                  <FBDPortExtSettings z:Id="6058">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6054" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6059">
              <EndFBDPort z:Id="6060" i:type="InputFBDPort">
                <Alias z:Id="6061">IP</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2112</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6062" z:Size="1">
                  <FBDPortExtSettings z:Id="6063">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6064" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6065">ip</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6066" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2117</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6067" z:Size="1">
                  <FBDPortExtSettings z:Id="6068">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6064" i:nil="true" />
                <VariableName z:Id="6069">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6070">
              <EndFBDPort z:Id="6071" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2131</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6072" z:Size="1">
                  <FBDPortExtSettings z:Id="6073">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6074" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6075">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6076" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2136</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6077" z:Size="1">
                  <FBDPortExtSettings z:Id="6078">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6074" i:nil="true" />
                <VariableName z:Ref="3673" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6079">
              <EndFBDPort z:Id="6080" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2875</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6081" z:Size="1">
                  <FBDPortExtSettings z:Id="6082">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6083" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6084">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6085" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2873</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6086" z:Size="1">
                  <FBDPortExtSettings z:Id="6087">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6083" i:nil="true" />
                <VariableName z:Id="6088">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6089">
              <EndFBDPort z:Id="6090" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2879</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6091" z:Size="1">
                  <FBDPortExtSettings z:Id="6092">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="6093" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6094">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6095" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2884</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6096" z:Size="1">
                  <FBDPortExtSettings z:Id="6097">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="6093" i:nil="true" />
                <VariableName z:Ref="3047" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6098">
              <EndFBDPort z:Id="6099" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2886</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6100" z:Size="1">
                  <FBDPortExtSettings z:Id="6101">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6102" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6103">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6104" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2895</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6105" z:Size="1">
                  <FBDPortExtSettings z:Id="6106">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6102" i:nil="true" />
                <VariableName z:Ref="3047" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6107">
              <EndFBDPort z:Id="6108" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2890</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>true</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6109" z:Size="1">
                  <FBDPortExtSettings z:Id="6110">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="6111" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType i:nil="true" />
                </Value>
                <VariableName z:Id="6112">V</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6113" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2898</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6114" z:Size="1">
                  <FBDPortExtSettings z:Id="6115">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="6111" i:nil="true" />
                <VariableName z:Ref="3047" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="6116" z:Size="46">
            <FBDItem z:Id="6117" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6118">Упаковка IP-адреса в Int</Description>
              <HelpID>492</HelpID>
              <Id>1757</Id>
              <InputPortsCollection z:Id="6119" z:Size="4">
                <FBDPort z:Id="6120" i:type="InputFBDPort">
                  <Alias z:Id="6121">IP1</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1758</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6122" z:Size="1">
                    <FBDPortExtSettings z:Id="6123">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6124" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6125" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">192</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6126">IPa1</VariableName>
                </FBDPort>
                <FBDPort z:Id="6127" i:type="InputFBDPort">
                  <Alias z:Id="6128">IP2</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1759</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6129" z:Size="1">
                    <FBDPortExtSettings z:Id="6130">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6131" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6132" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">168</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6133">IPa2</VariableName>
                </FBDPort>
                <FBDPort z:Id="6134" i:type="InputFBDPort">
                  <Alias z:Id="6135">IP3</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1760</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6136" z:Size="1">
                    <FBDPortExtSettings z:Id="6137">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6138" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6139" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6140">IPa3</VariableName>
                </FBDPort>
                <FBDPort z:Id="6141" i:type="InputFBDPort">
                  <Alias z:Id="6142">IP4</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1761</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6143" z:Size="1">
                    <FBDPortExtSettings z:Id="6144">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="6145" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6146" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">253</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6147">IPa4</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6148" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>4080</d8p1:_y>
              </Location>
              <Name z:Id="6149">IP CODER</Name>
              <OutputPortsCollection z:Id="6150" z:Size="1">
                <FBDPort z:Ref="5872" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6151">YART</Prefix>
              <SecondName z:Id="6152">IP_Mux</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>3d25eb4f-de3f-4a3e-90b4-fac9892a907c</SpecificationId>
              <Code z:Id="6153">IPa = (IPa4 &lt;&lt; 24) | (IPa3 &lt;&lt; 16) | (IPa2 &lt;&lt; 8) | IPa1;</Code>
            </FBDItem>
            <FBDItem z:Id="6154" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1766</Id>
              <InputPortsCollection z:Id="6155" z:Size="1">
                <FBDPort z:Ref="5867" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6156" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4990</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Id="6157">Tag</Name>
              <OutputPortsCollection z:Id="6158" z:Size="1">
                <FBDPort z:Id="6159" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1768</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6160" z:Size="1">
                    <FBDPortExtSettings z:Id="6161">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6162" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Ref="5887" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6163">_</Prefix>
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="5867" i:nil="true" />
              <OutputFBDPort z:Ref="6159" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6164" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1774</Id>
              <InputPortsCollection z:Id="6165" z:Size="1">
                <FBDPort z:Id="6166" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1775</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6167" z:Size="1">
                    <FBDPortExtSettings z:Id="6168">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5871" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6169" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4730</d8p1:_x>
                <d8p1:_y>4200</d8p1:_y>
              </Location>
              <Name z:Ref="6157" i:nil="true" />
              <OutputPortsCollection z:Id="6170" z:Size="1">
                <FBDPort z:Ref="5884" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6163" i:nil="true" />
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="350" i:nil="true" />
              <InputFBDPort z:Ref="6166" i:nil="true" />
              <OutputFBDPort z:Ref="5884" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6171" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6172">Отправка подготовленных переменных с указанной частотой</Description>
              <HelpID>499</HelpID>
              <Id>1769</Id>
              <InputPortsCollection z:Id="6173" z:Size="1">
                <FBDPort z:Ref="5878" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6174" z:Size="2">
                <FBDPort z:Id="6175" i:type="InternalFBDPort">
                  <Alias z:Id="6176">Внутренняя 1148</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1772</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6177" z:Size="1">
                    <FBDPortExtSettings z:Id="6178">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6179">ti</VariableName>
                </FBDPort>
                <FBDPort z:Id="6180" i:type="InternalFBDPort">
                  <Alias z:Id="6181">Внутренняя 53412</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1773</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Debug</PortDirection>
                  <Settings z:Id="6182" z:Size="1">
                    <FBDPortExtSettings z:Id="6183">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6184">tf</VariableName>
                </FBDPort>
              </InternalPortsCollection>
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4910</d8p1:_x>
                <d8p1:_y>4180</d8p1:_y>
              </Location>
              <Name z:Id="6185">YL SEND PERIODIC</Name>
              <OutputPortsCollection z:Id="6186" z:Size="1">
                <FBDPort z:Id="6187" i:type="OutputFBDPort">
                  <Alias z:Id="6188">Sending</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1771</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6189" z:Size="1">
                    <FBDPortExtSettings z:Id="6190">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="6191" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6192">sending</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6193">YART</Prefix>
              <SecondName z:Id="6194">Force_YL_Send_P</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>1b1a03f4-cda4-4a77-8f8b-e842803f276a</SpecificationId>
              <Code z:Id="6195">// Period &gt;= 100 ms


if(p &lt; 100) p = 100;


YARTAddScanTask(ti, tf);


if(ti &gt;= p){


	ti -= p;


	sending = true;


	set_short(420, 1);


}else set_short(420, 0);


//sent = get_int(422); // sent bytes --


//sstate = get_int(426); // 0 - ОК --</Code>
            </FBDItem>
            <FBDItem z:Id="6196" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1849</Id>
              <InputPortsCollection z:Id="6197" z:Size="1">
                <FBDPort z:Id="6198" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1850</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6199" z:Size="1">
                    <FBDPortExtSettings z:Id="6200">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5871" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6201" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="6157" i:nil="true" />
              <OutputPortsCollection z:Id="6202" z:Size="1">
                <FBDPort z:Ref="5894" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6163" i:nil="true" />
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="238" i:nil="true" />
              <InputFBDPort z:Ref="6198" i:nil="true" />
              <OutputFBDPort z:Ref="5894" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6203" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6204">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1870</Id>
              <InputPortsCollection z:Id="6205" z:Size="1">
                <FBDPort z:Ref="5889" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6206" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4300</d8p1:_y>
              </Location>
              <Name z:Id="6207">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6208" z:Size="2">
                <FBDPort z:Id="6209" i:type="OutputFBDPort">
                  <Alias z:Id="6210">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1872</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6211" z:Size="1">
                    <FBDPortExtSettings z:Id="6212">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6213" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6214">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6215" i:type="OutputFBDPort">
                  <Alias z:Id="6216">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1873</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6217" z:Size="1">
                    <FBDPortExtSettings z:Id="6218">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6219" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6220">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6221">YART</Prefix>
              <SecondName z:Id="6222">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Id="6223">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);</Code>
            </FBDItem>
            <FBDItem z:Id="6224" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2090</Id>
              <InputPortsCollection z:Id="6225" z:Size="1">
                <FBDPort z:Id="6226" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2091</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6227" z:Size="1">
                    <FBDPortExtSettings z:Id="6228">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6229" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="6230" z:Size="1">
                <FBDPort z:Ref="6036" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="367" i:nil="true" />
              <InputFBDPort z:Ref="6226" i:nil="true" />
              <OutputFBDPort z:Ref="6036" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6231" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2068</Id>
              <InputPortsCollection z:Id="6232" z:Size="1">
                <FBDPort z:Id="6233" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2069</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6234" z:Size="1">
                    <FBDPortExtSettings z:Id="6235">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6236">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6237" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4340</d8p1:_y>
              </Location>
              <Name z:Id="6238">Tag</Name>
              <OutputPortsCollection z:Id="6239" z:Size="1">
                <FBDPort z:Ref="6014" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6240">_</Prefix>
              <SecondName z:Ref="6238" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6233" i:nil="true" />
              <OutputFBDPort z:Ref="6014" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6241" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6242">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2063</Id>
              <InputPortsCollection z:Id="6243" z:Size="3">
                <FBDPort z:Ref="6030" i:nil="true" />
                <FBDPort z:Ref="6008" i:nil="true" />
                <FBDPort z:Id="6244" i:type="InputFBDPort">
                  <Alias z:Id="6245">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2066</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6246" z:Size="1">
                    <FBDPortExtSettings z:Id="6247">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6248" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6249" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">364</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6250">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6251" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4300</d8p1:_y>
              </Location>
              <Name z:Id="6252">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6253" z:Size="1">
                <FBDPort z:Id="6254" i:type="OutputFBDPort">
                  <Alias z:Id="6255">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2067</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6256" z:Size="1">
                    <FBDPortExtSettings z:Id="6257">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6258" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6259">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6260">YART</Prefix>
              <SecondName z:Id="6261">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6262">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6263" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2046</Id>
              <InputPortsCollection z:Id="6264" z:Size="1">
                <FBDPort z:Id="6265" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2047</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6266" z:Size="1">
                    <FBDPortExtSettings z:Id="6267">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6268">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6269" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4320</d8p1:_y>
              </Location>
              <Name z:Id="6270">Tag</Name>
              <OutputPortsCollection z:Id="6271" z:Size="1">
                <FBDPort z:Ref="5972" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6272">_</Prefix>
              <SecondName z:Ref="6270" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="250" i:nil="true" />
              <InputFBDPort z:Ref="6265" i:nil="true" />
              <OutputFBDPort z:Ref="5972" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6273" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2043</Id>
              <InputPortsCollection z:Id="6274" z:Size="1">
                <FBDPort z:Id="6275" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2044</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6276" z:Size="1">
                    <FBDPortExtSettings z:Id="6277">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6278">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6279" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="6280">Tag</Name>
              <OutputPortsCollection z:Id="6281" z:Size="1">
                <FBDPort z:Ref="5961" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6282">_</Prefix>
              <SecondName z:Ref="6280" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6275" i:nil="true" />
              <OutputFBDPort z:Ref="5961" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6283" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6284">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2038</Id>
              <InputPortsCollection z:Id="6285" z:Size="3">
                <FBDPort z:Ref="5966" i:nil="true" />
                <FBDPort z:Ref="5955" i:nil="true" />
                <FBDPort z:Id="6286" i:type="InputFBDPort">
                  <Alias z:Id="6287">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2041</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6288" z:Size="1">
                    <FBDPortExtSettings z:Id="6289">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6290" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6291" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">362</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6292">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6293" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4310</d8p1:_y>
              </Location>
              <Name z:Id="6294">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6295" z:Size="1">
                <FBDPort z:Id="6296" i:type="OutputFBDPort">
                  <Alias z:Id="6297">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2042</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6298" z:Size="1">
                    <FBDPortExtSettings z:Id="6299">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6300" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6301">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6302">YART</Prefix>
              <SecondName z:Id="6303">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6304">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6305" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1852</Id>
              <InputPortsCollection z:Id="6306" z:Size="1">
                <FBDPort z:Id="6307" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1853</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6308" z:Size="1">
                    <FBDPortExtSettings z:Id="6309">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5871" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6310" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Ref="6157" i:nil="true" />
              <OutputPortsCollection z:Id="6311" z:Size="1">
                <FBDPort z:Ref="5903" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6163" i:nil="true" />
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="242" i:nil="true" />
              <InputFBDPort z:Ref="6307" i:nil="true" />
              <OutputFBDPort z:Ref="5903" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6312" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6313">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1874</Id>
              <InputPortsCollection z:Id="6314" z:Size="1">
                <FBDPort z:Ref="5898" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6315" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Id="6316">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6317" z:Size="2">
                <FBDPort z:Id="6318" i:type="OutputFBDPort">
                  <Alias z:Id="6319">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1876</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6320" z:Size="1">
                    <FBDPortExtSettings z:Id="6321">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6322" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6323">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6324" i:type="OutputFBDPort">
                  <Alias z:Id="6325">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1877</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6326" z:Size="1">
                    <FBDPortExtSettings z:Id="6327">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6328" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6329">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6330">YART</Prefix>
              <SecondName z:Id="6331">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6332" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2093</Id>
              <InputPortsCollection z:Id="6333" z:Size="1">
                <FBDPort z:Id="6334" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2094</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6335" z:Size="1">
                    <FBDPortExtSettings z:Id="6336">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6337" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="6338" z:Size="1">
                <FBDPort z:Ref="6046" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="371" i:nil="true" />
              <InputFBDPort z:Ref="6334" i:nil="true" />
              <OutputFBDPort z:Ref="6046" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6339" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2087</Id>
              <InputPortsCollection z:Id="6340" z:Size="1">
                <FBDPort z:Id="6341" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2088</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6342" z:Size="1">
                    <FBDPortExtSettings z:Id="6343">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6344">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6345" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4430</d8p1:_y>
              </Location>
              <Name z:Id="6346">Tag</Name>
              <OutputPortsCollection z:Id="6347" z:Size="1">
                <FBDPort z:Ref="6025" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6348">_</Prefix>
              <SecondName z:Ref="6346" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6341" i:nil="true" />
              <OutputFBDPort z:Ref="6025" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6349" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6350">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2082</Id>
              <InputPortsCollection z:Id="6351" z:Size="3">
                <FBDPort z:Ref="6040" i:nil="true" />
                <FBDPort z:Ref="6019" i:nil="true" />
                <FBDPort z:Id="6352" i:type="InputFBDPort">
                  <Alias z:Id="6353">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2085</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6354" z:Size="1">
                    <FBDPortExtSettings z:Id="6355">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6356" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6357" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">402</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6358">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6359" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="6360">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6361" z:Size="1">
                <FBDPort z:Id="6362" i:type="OutputFBDPort">
                  <Alias z:Id="6363">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2086</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6364" z:Size="1">
                    <FBDPortExtSettings z:Id="6365">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6366" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6367">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6368">YART</Prefix>
              <SecondName z:Id="6369">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6370">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6371" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1855</Id>
              <InputPortsCollection z:Id="6372" z:Size="1">
                <FBDPort z:Id="6373" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1856</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6374" z:Size="1">
                    <FBDPortExtSettings z:Id="6375">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5871" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6376" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Ref="6157" i:nil="true" />
              <OutputPortsCollection z:Id="6377" z:Size="1">
                <FBDPort z:Ref="5912" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6163" i:nil="true" />
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="246" i:nil="true" />
              <InputFBDPort z:Ref="6373" i:nil="true" />
              <OutputFBDPort z:Ref="5912" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6378" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6379">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1881</Id>
              <InputPortsCollection z:Id="6380" z:Size="1">
                <FBDPort z:Ref="5907" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6381" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="6382">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6383" z:Size="2">
                <FBDPort z:Id="6384" i:type="OutputFBDPort">
                  <Alias z:Id="6385">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1883</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6386" z:Size="1">
                    <FBDPortExtSettings z:Id="6387">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6388" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6389">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6390" i:type="OutputFBDPort">
                  <Alias z:Id="6391">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1884</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6392" z:Size="1">
                    <FBDPortExtSettings z:Id="6393">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6394" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6395">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6396">YART</Prefix>
              <SecondName z:Id="6397">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6398" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2049</Id>
              <InputPortsCollection z:Id="6399" z:Size="1">
                <FBDPort z:Id="6400" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2050</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6401" z:Size="1">
                    <FBDPortExtSettings z:Id="6402">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6403" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4410</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="6404" z:Size="1">
                <FBDPort z:Ref="5983" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="254" i:nil="true" />
              <InputFBDPort z:Ref="6400" i:nil="true" />
              <OutputFBDPort z:Ref="5983" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6405" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2031</Id>
              <InputPortsCollection z:Id="6406" z:Size="1">
                <FBDPort z:Id="6407" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2032</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6408" z:Size="1">
                    <FBDPortExtSettings z:Id="6409">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6410">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6411" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Id="6412">Tag</Name>
              <OutputPortsCollection z:Id="6413" z:Size="1">
                <FBDPort z:Ref="5950" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6414">_</Prefix>
              <SecondName z:Ref="6412" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6407" i:nil="true" />
              <OutputFBDPort z:Ref="5950" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6415" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6416">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2026</Id>
              <InputPortsCollection z:Id="6417" z:Size="3">
                <FBDPort z:Ref="5977" i:nil="true" />
                <FBDPort z:Ref="5944" i:nil="true" />
                <FBDPort z:Id="6418" i:type="InputFBDPort">
                  <Alias z:Id="6419">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2029</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6420" z:Size="1">
                    <FBDPortExtSettings z:Id="6421">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6422" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6423" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">361</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6424">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6425" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="6426">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6427" z:Size="1">
                <FBDPort z:Id="6428" i:type="OutputFBDPort">
                  <Alias z:Id="6429">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2030</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6430" z:Size="1">
                    <FBDPortExtSettings z:Id="6431">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6432" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6433">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6434">YART</Prefix>
              <SecondName z:Id="6435">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6436">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6437" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1858</Id>
              <InputPortsCollection z:Id="6438" z:Size="1">
                <FBDPort z:Id="6439" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1859</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6440" z:Size="1">
                    <FBDPortExtSettings z:Id="6441">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5871" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6442" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Ref="6157" i:nil="true" />
              <OutputPortsCollection z:Id="6443" z:Size="1">
                <FBDPort z:Ref="5921" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6163" i:nil="true" />
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="403" i:nil="true" />
              <InputFBDPort z:Ref="6439" i:nil="true" />
              <OutputFBDPort z:Ref="5921" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6444" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6445">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1885</Id>
              <InputPortsCollection z:Id="6446" z:Size="1">
                <FBDPort z:Ref="5916" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6447" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4450</d8p1:_y>
              </Location>
              <Name z:Id="6448">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6449" z:Size="2">
                <FBDPort z:Id="6450" i:type="OutputFBDPort">
                  <Alias z:Id="6451">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1887</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6452" z:Size="1">
                    <FBDPortExtSettings z:Id="6453">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6454" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6455">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6456" i:type="OutputFBDPort">
                  <Alias z:Id="6457">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1888</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6458" z:Size="1">
                    <FBDPortExtSettings z:Id="6459">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6460" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6461">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6462">YART</Prefix>
              <SecondName z:Id="6463">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6464" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2060</Id>
              <InputPortsCollection z:Id="6465" z:Size="1">
                <FBDPort z:Id="6466" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2061</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6467" z:Size="1">
                    <FBDPortExtSettings z:Id="6468">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6469" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="6470" z:Size="1">
                <FBDPort z:Ref="6004" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="258" i:nil="true" />
              <InputFBDPort z:Ref="6466" i:nil="true" />
              <OutputFBDPort z:Ref="6004" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6471" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2057</Id>
              <InputPortsCollection z:Id="6472" z:Size="1">
                <FBDPort z:Id="6473" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2058</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6474" z:Size="1">
                    <FBDPortExtSettings z:Id="6475">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6476">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6477" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5060</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="6478">Tag</Name>
              <OutputPortsCollection z:Id="6479" z:Size="1">
                <FBDPort z:Ref="5993" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6480">_</Prefix>
              <SecondName z:Ref="6478" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6473" i:nil="true" />
              <OutputFBDPort z:Ref="5993" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6481" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6482">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2052</Id>
              <InputPortsCollection z:Id="6483" z:Size="3">
                <FBDPort z:Ref="5998" i:nil="true" />
                <FBDPort z:Ref="5987" i:nil="true" />
                <FBDPort z:Id="6484" i:type="InputFBDPort">
                  <Alias z:Id="6485">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2055</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6486" z:Size="1">
                    <FBDPortExtSettings z:Id="6487">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6488" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6489" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">363</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6490">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6491" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5240</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Id="6492">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6493" z:Size="1">
                <FBDPort z:Id="6494" i:type="OutputFBDPort">
                  <Alias z:Id="6495">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2056</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6496" z:Size="1">
                    <FBDPortExtSettings z:Id="6497">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6498" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6499">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6500">YART</Prefix>
              <SecondName z:Id="6501">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6502">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6503" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1861</Id>
              <InputPortsCollection z:Id="6504" z:Size="1">
                <FBDPort z:Id="6505" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1862</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6506" z:Size="1">
                    <FBDPortExtSettings z:Id="6507">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="5871" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6508" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4490</d8p1:_y>
              </Location>
              <Name z:Ref="6157" i:nil="true" />
              <OutputPortsCollection z:Id="6509" z:Size="1">
                <FBDPort z:Ref="5930" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="6163" i:nil="true" />
              <SecondName z:Ref="6157" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="342" i:nil="true" />
              <InputFBDPort z:Ref="6505" i:nil="true" />
              <OutputFBDPort z:Ref="5930" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6510" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6511">Подготовки переменной к отправке</Description>
              <HelpID>644</HelpID>
              <Id>1901</Id>
              <InputPortsCollection z:Id="6512" z:Size="1">
                <FBDPort z:Ref="5925" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6513" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Id="6514">YL BYTE</Name>
              <OutputPortsCollection z:Id="6515" z:Size="2">
                <FBDPort z:Id="6516" i:type="OutputFBDPort">
                  <Alias z:Id="6517">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1903</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6518" z:Size="1">
                    <FBDPortExtSettings z:Id="6519">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6520" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6521">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6522" i:type="OutputFBDPort">
                  <Alias z:Id="6523">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1904</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6524" z:Size="1">
                    <FBDPortExtSettings z:Id="6525">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6526" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6527">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6528">YART</Prefix>
              <SecondName z:Id="6529">YLPB</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>50b2378b-da55-4e21-a1dd-5d9f1c2dcf85</SpecificationId>
              <Code z:Id="6530">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);//*sysState 0 - ОК 1 - тэг не найден 2 - тип тега не поддерживается 3 - пакет переполнен</Code>
            </FBDItem>
            <FBDItem z:Id="6531" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2118</Id>
              <InputPortsCollection z:Id="6532" z:Size="1">
                <FBDPort z:Id="6533" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2119</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6534" z:Size="1">
                    <FBDPortExtSettings z:Id="6535">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6536" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="6537" z:Size="1">
                <FBDPort z:Ref="6056" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="375" i:nil="true" />
              <InputFBDPort z:Ref="6533" i:nil="true" />
              <OutputFBDPort z:Ref="6056" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6538" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2115</Id>
              <InputPortsCollection z:Id="6539" z:Size="1">
                <FBDPort z:Id="6540" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2116</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6541" z:Size="1">
                    <FBDPortExtSettings z:Id="6542">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6543">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6544" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5380</d8p1:_x>
                <d8p1:_y>4530</d8p1:_y>
              </Location>
              <Name z:Id="6545">Tag</Name>
              <OutputPortsCollection z:Id="6546" z:Size="1">
                <FBDPort z:Ref="6066" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6547">_</Prefix>
              <SecondName z:Ref="6545" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="81" i:nil="true" />
              <CustomTag z:Ref="346" i:nil="true" />
              <InputFBDPort z:Ref="6540" i:nil="true" />
              <OutputFBDPort z:Ref="6066" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6548" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6549">Получение значения переменной с другого контроллера</Description>
              <HelpID>654</HelpID>
              <Id>2110</Id>
              <InputPortsCollection z:Id="6550" z:Size="3">
                <FBDPort z:Ref="6050" i:nil="true" />
                <FBDPort z:Ref="6060" i:nil="true" />
                <FBDPort z:Id="6551" i:type="InputFBDPort">
                  <Alias z:Id="6552">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2113</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6553" z:Size="1">
                    <FBDPortExtSettings z:Id="6554">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6555" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="6556" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">365</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="6557">tid</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6558" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5550</d8p1:_x>
                <d8p1:_y>4500</d8p1:_y>
              </Location>
              <Name z:Id="6559">YL RECEIVE F</Name>
              <OutputPortsCollection z:Id="6560" z:Size="1">
                <FBDPort z:Id="6561" i:type="OutputFBDPort">
                  <Alias z:Id="6562">Duration</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2114</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6563" z:Size="1">
                    <FBDPortExtSettings z:Id="6564">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6565" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6566">dur</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6567">YART</Prefix>
              <SecondName z:Id="6568">YLReceive_Float_3</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>49d74fcb-8c43-4199-ae37-90c3470beef9</SpecificationId>
              <Code z:Id="6569">dur = ylnk_subscribe(_fx_YL_RecId++, ip, tid, get_var_id(V[0]));</Code>
            </FBDItem>
            <FBDItem z:Id="6570" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2134</Id>
              <InputPortsCollection z:Id="6571" z:Size="1">
                <FBDPort z:Id="6572" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2135</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6573" z:Size="1">
                    <FBDPortExtSettings z:Id="6574">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4166" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6575" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4540</d8p1:_y>
              </Location>
              <Name z:Ref="4168" i:nil="true" />
              <OutputPortsCollection z:Id="6576" z:Size="1">
                <FBDPort z:Ref="6076" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4170" i:nil="true" />
              <SecondName z:Ref="4168" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="75" i:nil="true" />
              <CustomTag z:Ref="379" i:nil="true" />
              <InputFBDPort z:Ref="6572" i:nil="true" />
              <OutputFBDPort z:Ref="6076" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6577" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6578">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2130</Id>
              <InputPortsCollection z:Id="6579" z:Size="1">
                <FBDPort z:Ref="6071" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6580" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4840</d8p1:_x>
                <d8p1:_y>4540</d8p1:_y>
              </Location>
              <Name z:Id="6581">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6582" z:Size="2">
                <FBDPort z:Id="6583" i:type="OutputFBDPort">
                  <Alias z:Id="6584">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2132</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6585" z:Size="1">
                    <FBDPortExtSettings z:Id="6586">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6587" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6588">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6589" i:type="OutputFBDPort">
                  <Alias z:Id="6590">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2133</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6591" z:Size="1">
                    <FBDPortExtSettings z:Id="6592">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6593" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6594">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6595">YART</Prefix>
              <SecondName z:Id="6596">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6597" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>1985</Id>
              <InputPortsCollection z:Id="6598" z:Size="1">
                <FBDPort z:Id="6599" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1986</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6600" z:Size="1">
                    <FBDPortExtSettings z:Id="6601">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6602">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6603" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4680</d8p1:_x>
                <d8p1:_y>4590</d8p1:_y>
              </Location>
              <Name z:Id="6604">Tag</Name>
              <OutputPortsCollection z:Id="6605" z:Size="1">
                <FBDPort z:Ref="5939" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6606">_</Prefix>
              <SecondName z:Ref="6604" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="86" i:nil="true" />
              <InputFBDPort z:Ref="6599" i:nil="true" />
              <OutputFBDPort z:Ref="5939" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6607" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6608">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>1981</Id>
              <InputPortsCollection z:Id="6609" z:Size="1">
                <FBDPort z:Ref="5934" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6610" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4590</d8p1:_y>
              </Location>
              <Name z:Id="6611">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6612" z:Size="2">
                <FBDPort z:Id="6613" i:type="OutputFBDPort">
                  <Alias z:Id="6614">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1983</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6615" z:Size="1">
                    <FBDPortExtSettings z:Id="6616">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6617" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6618">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6619" i:type="OutputFBDPort">
                  <Alias z:Id="6620">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>1984</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6621" z:Size="1">
                    <FBDPortExtSettings z:Id="6622">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6623" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6624">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6625">YART</Prefix>
              <SecondName z:Id="6626">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6627" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2871</Id>
              <InputPortsCollection z:Id="6628" z:Size="1">
                <FBDPort z:Id="6629" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2872</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6630" z:Size="1">
                    <FBDPortExtSettings z:Id="6631">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="6632">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6633" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4640</d8p1:_y>
              </Location>
              <Name z:Id="6634">Tag</Name>
              <OutputPortsCollection z:Id="6635" z:Size="1">
                <FBDPort z:Ref="6085" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6636">_</Prefix>
              <SecondName z:Ref="6634" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="362" i:nil="true" />
              <InputFBDPort z:Ref="6629" i:nil="true" />
              <OutputFBDPort z:Ref="6085" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6637" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6638">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2874</Id>
              <InputPortsCollection z:Id="6639" z:Size="1">
                <FBDPort z:Ref="6080" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6640" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4850</d8p1:_x>
                <d8p1:_y>4640</d8p1:_y>
              </Location>
              <Name z:Id="6641">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6642" z:Size="2">
                <FBDPort z:Id="6643" i:type="OutputFBDPort">
                  <Alias z:Id="6644">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2876</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6645" z:Size="1">
                    <FBDPortExtSettings z:Id="6646">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6647" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6648">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6649" i:type="OutputFBDPort">
                  <Alias z:Id="6650">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2877</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6651" z:Size="1">
                    <FBDPortExtSettings z:Id="6652">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6653" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6654">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6655">YART</Prefix>
              <SecondName z:Id="6656">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6657" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2882</Id>
              <InputPortsCollection z:Id="6658" z:Size="1">
                <FBDPort z:Id="6659" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2883</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6660" z:Size="1">
                    <FBDPortExtSettings z:Id="6661">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2816" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6662" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4630</d8p1:_x>
                <d8p1:_y>4690</d8p1:_y>
              </Location>
              <Name z:Ref="3041" i:nil="true" />
              <OutputPortsCollection z:Id="6663" z:Size="1">
                <FBDPort z:Ref="6095" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3048" i:nil="true" />
              <SecondName z:Ref="3041" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="77" i:nil="true" />
              <CustomTag z:Ref="436" i:nil="true" />
              <InputFBDPort z:Ref="6659" i:nil="true" />
              <OutputFBDPort z:Ref="6095" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6664" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6665">Подготовки переменной к отправке</Description>
              <HelpID>646</HelpID>
              <Id>2878</Id>
              <InputPortsCollection z:Id="6666" z:Size="1">
                <FBDPort z:Ref="6090" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6667" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4700</d8p1:_y>
              </Location>
              <Name z:Id="6668">YL INT</Name>
              <OutputPortsCollection z:Id="6669" z:Size="2">
                <FBDPort z:Id="6670" i:type="OutputFBDPort">
                  <Alias z:Id="6671">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2880</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6672" z:Size="1">
                    <FBDPortExtSettings z:Id="6673">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6674" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6675">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6676" i:type="OutputFBDPort">
                  <Alias z:Id="6677">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2881</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6678" z:Size="1">
                    <FBDPortExtSettings z:Id="6679">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6680" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6681">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3022" i:nil="true" />
              <SecondName z:Id="6682">YLPI</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6241e6fe-1d07-4558-a335-b3285b9cb47e</SpecificationId>
              <Code z:Id="6683">tid = get_var_id(V[0]);


s = app_tagto_yl(tid);</Code>
            </FBDItem>
            <FBDItem z:Id="6684" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2893</Id>
              <InputPortsCollection z:Id="6685" z:Size="1">
                <FBDPort z:Id="6686" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2894</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6687" z:Size="1">
                    <FBDPortExtSettings z:Id="6688">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2816" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6689" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4750</d8p1:_y>
              </Location>
              <Name z:Ref="3041" i:nil="true" />
              <OutputPortsCollection z:Id="6690" z:Size="1">
                <FBDPort z:Ref="6104" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3048" i:nil="true" />
              <SecondName z:Ref="3041" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="403" i:nil="true" />
              <InputFBDPort z:Ref="6686" i:nil="true" />
              <OutputFBDPort z:Ref="6104" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6691" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6692">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2885</Id>
              <InputPortsCollection z:Id="6693" z:Size="1">
                <FBDPort z:Ref="6099" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6694" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4750</d8p1:_y>
              </Location>
              <Name z:Id="6695">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6696" z:Size="2">
                <FBDPort z:Id="6697" i:type="OutputFBDPort">
                  <Alias z:Id="6698">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2887</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6699" z:Size="1">
                    <FBDPortExtSettings z:Id="6700">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6701" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6702">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6703" i:type="OutputFBDPort">
                  <Alias z:Id="6704">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2888</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6705" z:Size="1">
                    <FBDPortExtSettings z:Id="6706">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6707" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6708">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6709">YART</Prefix>
              <SecondName z:Id="6710">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6711" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2896</Id>
              <InputPortsCollection z:Id="6712" z:Size="1">
                <FBDPort z:Id="6713" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2897</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="6714" z:Size="1">
                    <FBDPortExtSettings z:Id="6715">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="2816" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6716" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4690</d8p1:_x>
                <d8p1:_y>4800</d8p1:_y>
              </Location>
              <Name z:Ref="3041" i:nil="true" />
              <OutputPortsCollection z:Id="6717" z:Size="1">
                <FBDPort z:Ref="6113" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="3048" i:nil="true" />
              <SecondName z:Ref="3041" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="407" i:nil="true" />
              <InputFBDPort z:Ref="6713" i:nil="true" />
              <OutputFBDPort z:Ref="6113" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6718" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="6719">Подготовки переменной к отправке</Description>
              <HelpID>497</HelpID>
              <Id>2889</Id>
              <InputPortsCollection z:Id="6720" z:Size="1">
                <FBDPort z:Ref="6108" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="6721" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4860</d8p1:_x>
                <d8p1:_y>4800</d8p1:_y>
              </Location>
              <Name z:Id="6722">YL FLOAT</Name>
              <OutputPortsCollection z:Id="6723" z:Size="2">
                <FBDPort z:Id="6724" i:type="OutputFBDPort">
                  <Alias z:Id="6725">TagID</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2891</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6726" z:Size="1">
                    <FBDPortExtSettings z:Id="6727">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Int</Type>
                  <Value z:Id="6728" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6729">tid</VariableName>
                </FBDPort>
                <FBDPort z:Id="6730" i:type="OutputFBDPort">
                  <Alias z:Id="6731">Status</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2892</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="6732" z:Size="1">
                    <FBDPortExtSettings z:Id="6733">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="6734" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType i:nil="true" />
                  </Value>
                  <VariableName z:Id="6735">s</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="6736">YART</Prefix>
              <SecondName z:Id="6737">YLPF</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ecd6a75c-f197-4cd2-bb95-26ed1de3807f</SpecificationId>
              <Code z:Ref="6223" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="6738" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2025</Id>
              <InputPortsCollection z:Id="6739" z:Size="0" />
              <InternalPortsCollection z:Id="6740" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4593</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="6741">comment</Name>
              <OutputPortsCollection z:Id="6742" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="6743">_</Prefix>
              <SecondName z:Id="6744">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="6745">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</Comment>
              <Height>610</Height>
              <Width>425</Width>
            </FBDItem>
            <FBDItem z:Id="6746" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2037</Id>
              <InputPortsCollection z:Id="6747" z:Size="0" />
              <InternalPortsCollection z:Id="6748" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5040</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="6749">comment</Name>
              <OutputPortsCollection z:Id="6750" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Id="6751">_</Prefix>
              <SecondName z:Id="6752">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="6753">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</Comment>
              <Height>345</Height>
              <Width>621</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="6754">YartLink</Name>
          <Parent z:Ref="5862" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>8</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="6755">YartLink</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
    <d2p1:anyType z:Id="6756" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="6757" z:Size="1">
        <d2p1:anyType z:Id="6758" i:type="ProgramPartWorksurface">
          <AllowManualSequenceChange>false</AllowManualSequenceChange>
          <FBDConnectorsCollection z:Id="6759" z:Size="91">
            <FBDConnector z:Id="6760">
              <EndFBDPort z:Id="6761" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>2977</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6762" z:Size="16">
                  <FBDPortExtSettings z:Id="6763">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6764">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6765">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6766">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6767">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6768">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6769">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6770">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6771">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6772">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6773">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6774">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6775">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6776">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6777">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6778">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6779" i:type="d2p1:ArrayOfanyType" z:Size="16">
                  <d2p1:anyType z:Id="6780" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6781" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">240</d2p1:anyType>
                  <d2p1:anyType z:Id="6782" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6783" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">180</d2p1:anyType>
                  <d2p1:anyType z:Id="6784" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6785" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6786" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6787" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6788" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                  <d2p1:anyType z:Id="6789" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6790" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                  <d2p1:anyType z:Id="6791" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6792" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                  <d2p1:anyType z:Id="6793" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                  <d2p1:anyType z:Id="6794" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                  <d2p1:anyType z:Id="6795" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="6796">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6797" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>2975</Id>
                <IsArray>true</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6798" z:Size="16">
                  <FBDPortExtSettings z:Id="6799">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6800">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6801">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6802">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6803">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6804">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6805">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6806">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6807">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6808">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6809">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6810">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6811">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6812">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6813">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6814">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="6779" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6815">
              <EndFBDPort z:Id="6816" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2981</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6817" z:Size="1">
                  <FBDPortExtSettings z:Id="6818">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6819" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="6820" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6821" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>16</ArrayItemsCount>
                <Id>2978</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6822" z:Size="16">
                  <FBDPortExtSettings z:Id="6823">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6824">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6825">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6826">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6827">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6828">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6829">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6830">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6831">
                    <Index>8</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6832">
                    <Index>9</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6833">
                    <Index>10</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6834">
                    <Index>11</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6835">
                    <Index>12</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6836">
                    <Index>13</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6837">
                    <Index>14</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6838">
                    <Index>15</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6839" i:type="d2p1:ArrayOfanyType" z:Size="16">
                  <d2p1:anyType z:Ref="6820" i:nil="true" />
                  <d2p1:anyType z:Id="6840" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">240</d2p1:anyType>
                  <d2p1:anyType z:Id="6841" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6842" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">180</d2p1:anyType>
                  <d2p1:anyType z:Id="6843" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6844" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6845" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6846" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6847" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                  <d2p1:anyType z:Id="6848" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6849" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                  <d2p1:anyType z:Id="6850" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                  <d2p1:anyType z:Id="6851" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                  <d2p1:anyType z:Id="6852" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                  <d2p1:anyType z:Id="6853" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                  <d2p1:anyType z:Id="6854" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="6855">ByteOut</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6856">
              <EndFBDPort z:Id="6857" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3005</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6858" z:Size="1">
                  <FBDPortExtSettings z:Id="6859">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6860" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6846" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>7</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6861">
              <EndFBDPort z:Id="6862" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3008</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6863" z:Size="1">
                  <FBDPortExtSettings z:Id="6864">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6865" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6847" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>8</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6866">
              <EndFBDPort z:Id="6867" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3011</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6868" z:Size="1">
                  <FBDPortExtSettings z:Id="6869">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6870" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6848" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>9</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6871">
              <EndFBDPort z:Id="6872" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3014</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6873" z:Size="1">
                  <FBDPortExtSettings z:Id="6874">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6875" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6849" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>10</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6876">
              <EndFBDPort z:Id="6877" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3017</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6878" z:Size="1">
                  <FBDPortExtSettings z:Id="6879">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6880" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6850" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>11</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6881">
              <EndFBDPort z:Id="6882" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3020</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6883" z:Size="1">
                  <FBDPortExtSettings z:Id="6884">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6885" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6851" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>12</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6886">
              <EndFBDPort z:Id="6887" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3023</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6888" z:Size="1">
                  <FBDPortExtSettings z:Id="6889">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6890" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6852" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>13</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6891">
              <EndFBDPort z:Id="6892" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3026</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6893" z:Size="1">
                  <FBDPortExtSettings z:Id="6894">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6895" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6853" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>14</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6896">
              <EndFBDPort z:Id="6897" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3029</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6898" z:Size="1">
                  <FBDPortExtSettings z:Id="6899">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6900" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6854" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>15</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6901">
              <EndFBDPort z:Id="6902" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3039</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6903" z:Size="1">
                  <FBDPortExtSettings z:Id="6904">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6905" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="6906" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">5</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6907" i:type="OutputFBDPort">
                <Alias z:Id="6908">WDAY</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3036</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6909" z:Size="1">
                  <FBDPortExtSettings z:Id="6910">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="6905" i:nil="true" />
                <VariableName z:Id="6911">WDay1</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6912">
              <EndFBDPort z:Id="6913" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3091</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6914" z:Size="1">
                  <FBDPortExtSettings z:Id="6915">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6916" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="6917" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="6918">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6919" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3024</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6920" z:Size="1">
                  <FBDPortExtSettings z:Id="6921">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="6916" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6922">
              <EndFBDPort z:Id="6923" i:type="InputFBDPort">
                <Alias z:Id="6924">BOOL</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>3094</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6925" z:Size="8">
                  <FBDPortExtSettings z:Id="6926">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6927">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6928">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6929">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6930">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6931">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6932">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6933">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6934" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="6935" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="6936">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6937" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>3092</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6938" z:Size="7">
                  <FBDPortExtSettings z:Id="6939">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6940">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6941">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6942">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6943">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6944">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6945">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6946" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="6947" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="6948" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="6949" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="6950" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="6951" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                  <d2p1:anyType z:Id="6952" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Ref="6935" i:nil="true" />
                </Value>
                <VariableName z:Id="6953">mas</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6954">
              <EndFBDPort z:Ref="6923" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="6937" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6955">
              <EndFBDPort z:Ref="6923" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="6937" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6956">
              <EndFBDPort z:Ref="6923" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="6937" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6957">
              <EndFBDPort z:Ref="6923" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="6937" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6958">
              <EndFBDPort z:Ref="6923" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>5</IndexStartFBDPort>
              <StartFBDPort z:Ref="6937" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6959">
              <EndFBDPort z:Ref="6923" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="6937" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="6960">
              <EndFBDPort z:Id="6961" i:type="InputFBDPort">
                <Alias z:Id="6962">Вход 2967</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3095</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6963" z:Size="1">
                  <FBDPortExtSettings z:Id="6964">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="6965" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="6966" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">5</d2p1:anyType>
                </Value>
                <VariableName z:Id="6967">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6968" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3099</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6969" z:Size="1">
                  <FBDPortExtSettings z:Id="6970">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="6965" i:nil="true" />
                <VariableName z:Id="6971">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="6972">
              <EndFBDPort z:Id="6973" i:type="InputFBDPort">
                <Alias z:Id="6974">BOOL</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>3104</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="6975" z:Size="8">
                  <FBDPortExtSettings z:Id="6976">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6977">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6978">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6979">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6980">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6981">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6982">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6983">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6984" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="6985" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="6986">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="6987" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>3102</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="6988" z:Size="7">
                  <FBDPortExtSettings z:Id="6989">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6990">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6991">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6992">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6993">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6994">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="6995">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="6996" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="6997" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="6998" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="6999" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="7000" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="7001" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                  <d2p1:anyType z:Id="7002" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Ref="6985" i:nil="true" />
                </Value>
                <VariableName z:Id="7003">mas</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7004">
              <EndFBDPort z:Ref="6973" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="6987" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7005">
              <EndFBDPort z:Ref="6973" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="6987" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7006">
              <EndFBDPort z:Ref="6973" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="6987" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7007">
              <EndFBDPort z:Ref="6973" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="6987" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7008">
              <EndFBDPort z:Ref="6973" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>5</IndexStartFBDPort>
              <StartFBDPort z:Ref="6987" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7009">
              <EndFBDPort z:Ref="6973" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="6987" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7010">
              <EndFBDPort z:Id="7011" i:type="InputFBDPort">
                <Alias z:Id="7012">Вход 2967</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3105</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7013" z:Size="1">
                  <FBDPortExtSettings z:Id="7014">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7015" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7016" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">5</d2p1:anyType>
                </Value>
                <VariableName z:Id="7017">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7018" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3109</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7019" z:Size="1">
                  <FBDPortExtSettings z:Id="7020">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7015" i:nil="true" />
                <VariableName z:Id="7021">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7022">
              <EndFBDPort z:Id="7023" i:type="InputFBDPort">
                <Alias z:Id="7024">BOOL</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>8</ArrayItemsCount>
                <Id>3114</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7025" z:Size="8">
                  <FBDPortExtSettings z:Id="7026">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7027">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7028">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7029">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7030">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7031">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7032">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7033">
                    <Index>7</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7034" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7035" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                </Value>
                <VariableName z:Id="7036">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7037" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>7</ArrayItemsCount>
                <Id>3112</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7038" z:Size="7">
                  <FBDPortExtSettings z:Id="7039">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7040">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7041">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7042">
                    <Index>3</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7043">
                    <Index>4</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7044">
                    <Index>5</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7045">
                    <Index>6</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7046" i:type="d2p1:ArrayOfanyType" z:Size="7">
                  <d2p1:anyType z:Id="7047" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="7048" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="7049" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="7050" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Id="7051" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                  <d2p1:anyType z:Id="7052" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">false</d2p1:anyType>
                  <d2p1:anyType z:Ref="7035" i:nil="true" />
                </Value>
                <VariableName z:Id="7053">mas</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7054">
              <EndFBDPort z:Ref="7023" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="7037" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7055">
              <EndFBDPort z:Ref="7023" i:nil="true" />
              <IndexEndFBDPort>3</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="7037" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7056">
              <EndFBDPort z:Ref="7023" i:nil="true" />
              <IndexEndFBDPort>4</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="7037" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7057">
              <EndFBDPort z:Ref="7023" i:nil="true" />
              <IndexEndFBDPort>5</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="7037" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7058">
              <EndFBDPort z:Ref="7023" i:nil="true" />
              <IndexEndFBDPort>6</IndexEndFBDPort>
              <IndexStartFBDPort>5</IndexStartFBDPort>
              <StartFBDPort z:Ref="7037" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7059">
              <EndFBDPort z:Ref="7023" i:nil="true" />
              <IndexEndFBDPort>7</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="7037" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7060">
              <EndFBDPort z:Id="7061" i:type="InputFBDPort">
                <Alias z:Id="7062">Вход 2967</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3115</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7063" z:Size="1">
                  <FBDPortExtSettings z:Id="7064">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7065" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7066" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">5</d2p1:anyType>
                </Value>
                <VariableName z:Id="7067">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7068" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3119</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7069" z:Size="1">
                  <FBDPortExtSettings z:Id="7070">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7065" i:nil="true" />
                <VariableName z:Id="7071">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7072">
              <EndFBDPort z:Id="7073" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3111</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7074" z:Size="1">
                  <FBDPortExtSettings z:Id="7075">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7076" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7077" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="7078">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7079" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3030</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7080" z:Size="1">
                  <FBDPortExtSettings z:Id="7081">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7076" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7082">
              <EndFBDPort z:Id="7083" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3101</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7084" z:Size="1">
                  <FBDPortExtSettings z:Id="7085">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7086" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7087" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="7088">ByteIn</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7089" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3027</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7090" z:Size="1">
                  <FBDPortExtSettings z:Id="7091">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7086" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7092">
              <EndFBDPort z:Id="7093" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3128</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7094" z:Size="1">
                  <FBDPortExtSettings z:Id="7095">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7096" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7097" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">18</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7098" i:type="OutputFBDPort">
                <Alias z:Id="7099">HH</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3125</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7100" z:Size="1">
                  <FBDPortExtSettings z:Id="7101">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7096" i:nil="true" />
                <VariableName z:Id="7102">hrs</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7103">
              <EndFBDPort z:Id="7104" i:type="InputFBDPort">
                <Alias z:Id="7105">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3134</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7106" z:Size="1">
                  <FBDPortExtSettings z:Id="7107">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7108" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7109" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">18</d2p1:anyType>
                </Value>
                <VariableName z:Id="7110">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7111" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3132</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7112" z:Size="1">
                  <FBDPortExtSettings z:Id="7113">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7108" i:nil="true" />
                <VariableName z:Id="7114">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7115">
              <EndFBDPort z:Id="7116" i:type="InputFBDPort">
                <Alias z:Id="7117">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3138</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7118" z:Size="1">
                  <FBDPortExtSettings z:Id="7119">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7108" i:nil="true" />
                <VariableName z:Id="7120">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="7111" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7121">
              <EndFBDPort z:Id="7122" i:type="InputFBDPort">
                <Alias z:Id="7123">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3135</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7124" z:Size="1">
                  <FBDPortExtSettings z:Id="7125">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7126" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7127" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="7128">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7129" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3143</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7130" z:Size="1">
                  <FBDPortExtSettings z:Id="7131">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7126" i:nil="true" />
                <VariableName z:Id="7132">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7133">
              <EndFBDPort z:Id="7134" i:type="InputFBDPort">
                <Alias z:Id="7135">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3139</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7136" z:Size="1">
                  <FBDPortExtSettings z:Id="7137">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7138" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7139" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                </Value>
                <VariableName z:Id="7140">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7141" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3149</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7142" z:Size="1">
                  <FBDPortExtSettings z:Id="7143">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7138" i:nil="true" />
                <VariableName z:Id="7144">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7145">
              <EndFBDPort z:Id="7146" i:type="InputFBDPort">
                <Alias z:Id="7147">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3154</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7148" z:Size="1">
                  <FBDPortExtSettings z:Id="7149">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7150" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7151" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">18</d2p1:anyType>
                </Value>
                <VariableName z:Id="7152">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7153" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3152</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7154" z:Size="1">
                  <FBDPortExtSettings z:Id="7155">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7150" i:nil="true" />
                <VariableName z:Id="7156">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7157">
              <EndFBDPort z:Id="7158" i:type="InputFBDPort">
                <Alias z:Id="7159">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3158</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7160" z:Size="1">
                  <FBDPortExtSettings z:Id="7161">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7150" i:nil="true" />
                <VariableName z:Id="7162">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="7153" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7163">
              <EndFBDPort z:Id="7164" i:type="InputFBDPort">
                <Alias z:Id="7165">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3155</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7166" z:Size="1">
                  <FBDPortExtSettings z:Id="7167">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7168" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7169" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="7170">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7171" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3163</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7172" z:Size="1">
                  <FBDPortExtSettings z:Id="7173">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7168" i:nil="true" />
                <VariableName z:Id="7174">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7175">
              <EndFBDPort z:Id="7176" i:type="InputFBDPort">
                <Alias z:Id="7177">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3159</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7178" z:Size="1">
                  <FBDPortExtSettings z:Id="7179">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7180" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7181" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                </Value>
                <VariableName z:Id="7182">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7183" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3166</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7184" z:Size="1">
                  <FBDPortExtSettings z:Id="7185">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7180" i:nil="true" />
                <VariableName z:Id="7186">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7187">
              <EndFBDPort z:Id="7188" i:type="InputFBDPort">
                <Alias z:Id="7189">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3171</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7190" z:Size="1">
                  <FBDPortExtSettings z:Id="7191">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7192" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7193" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">18</d2p1:anyType>
                </Value>
                <VariableName z:Id="7194">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7195" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3169</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7196" z:Size="1">
                  <FBDPortExtSettings z:Id="7197">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7192" i:nil="true" />
                <VariableName z:Id="7198">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7199">
              <EndFBDPort z:Id="7200" i:type="InputFBDPort">
                <Alias z:Id="7201">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3175</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7202" z:Size="1">
                  <FBDPortExtSettings z:Id="7203">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7192" i:nil="true" />
                <VariableName z:Id="7204">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Ref="7195" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7205">
              <EndFBDPort z:Id="7206" i:type="InputFBDPort">
                <Alias z:Id="7207">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3172</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7208" z:Size="1">
                  <FBDPortExtSettings z:Id="7209">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7210" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7211" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="7212">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7213" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3180</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7214" z:Size="1">
                  <FBDPortExtSettings z:Id="7215">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7210" i:nil="true" />
                <VariableName z:Id="7216">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7217">
              <EndFBDPort z:Id="7218" i:type="InputFBDPort">
                <Alias z:Id="7219">B</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3176</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7220" z:Size="1">
                  <FBDPortExtSettings z:Id="7221">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7222" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7223" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">24</d2p1:anyType>
                </Value>
                <VariableName z:Id="7224">b</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7225" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3183</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7226" z:Size="1">
                  <FBDPortExtSettings z:Id="7227">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7222" i:nil="true" />
                <VariableName z:Id="7228">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7229">
              <EndFBDPort z:Id="7230" i:type="InputFBDPort">
                <Alias z:Id="7231">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3188</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7232" z:Size="3">
                  <FBDPortExtSettings z:Id="7233">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7234">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7235">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7236" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7237" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7238">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7239" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3136</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7240" z:Size="1">
                  <FBDPortExtSettings z:Id="7241">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7236" i:nil="true" />
                <VariableName z:Id="7242">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7243">
              <EndFBDPort z:Ref="7230" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7244" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3140</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7245" z:Size="1">
                  <FBDPortExtSettings z:Id="7246">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7247" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7248" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7249">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7250">
              <EndFBDPort z:Id="7251" i:type="InputFBDPort">
                <Alias z:Id="7252">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3194</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7253" z:Size="3">
                  <FBDPortExtSettings z:Id="7254">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7255">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7256">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7257" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7258" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7259">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7260" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3156</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7261" z:Size="1">
                  <FBDPortExtSettings z:Id="7262">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7257" i:nil="true" />
                <VariableName z:Id="7263">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7264">
              <EndFBDPort z:Ref="7251" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7265" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3160</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7266" z:Size="1">
                  <FBDPortExtSettings z:Id="7267">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7268" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7269" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7270">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7271">
              <EndFBDPort z:Id="7272" i:type="InputFBDPort">
                <Alias z:Id="7273">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3200</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7274" z:Size="3">
                  <FBDPortExtSettings z:Id="7275">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7276">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7277">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7278" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7279" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7280">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7281" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3173</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7282" z:Size="1">
                  <FBDPortExtSettings z:Id="7283">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7278" i:nil="true" />
                <VariableName z:Id="7284">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7285">
              <EndFBDPort z:Ref="7272" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7286" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3177</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7287" z:Size="1">
                  <FBDPortExtSettings z:Id="7288">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7289" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7290" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7291">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7292">
              <EndFBDPort z:Id="7293" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3197</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7294" z:Size="1">
                  <FBDPortExtSettings z:Id="7295">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7296" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7297" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7298">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7299" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3106</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7300" z:Size="1">
                  <FBDPortExtSettings z:Id="7301">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7296" i:nil="true" />
                <VariableName z:Id="7302">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7303">
              <EndFBDPort z:Id="7304" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3203</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7305" z:Size="1">
                  <FBDPortExtSettings z:Id="7306">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7307" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7308" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7309">val_in</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7310" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3116</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7311" z:Size="1">
                  <FBDPortExtSettings z:Id="7312">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7307" i:nil="true" />
                <VariableName z:Id="7313">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7314">
              <EndFBDPort z:Ref="7230" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7315" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3207</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7316" z:Size="1">
                  <FBDPortExtSettings z:Id="7317">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7318" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7319" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7320">
              <EndFBDPort z:Ref="7251" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7321" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3210</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7322" z:Size="1">
                  <FBDPortExtSettings z:Id="7323">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7324" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7325" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7326">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7327">
              <EndFBDPort z:Ref="7272" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7328" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3213</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7329" z:Size="1">
                  <FBDPortExtSettings z:Id="7330">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7331" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7332" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7333">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7334">
              <EndFBDPort z:Id="7335" i:type="InputFBDPort">
                <Alias z:Id="7336">X</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>3</ArrayItemsCount>
                <Id>3215</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>16</MaxArrayItemsCount>
                <MinArrayItemsCount>2</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7337" z:Size="3">
                  <FBDPortExtSettings z:Id="7338">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7339">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7340">
                    <Index>2</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7341" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7342" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7343">x</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7344" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3189</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7345" z:Size="1">
                  <FBDPortExtSettings z:Id="7346">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7341" i:nil="true" />
                <VariableName z:Id="7347">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7348">
              <EndFBDPort z:Ref="7335" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7349" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3195</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7350" z:Size="1">
                  <FBDPortExtSettings z:Id="7351">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7352" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7353" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7354">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7355">
              <EndFBDPort z:Ref="7335" i:nil="true" />
              <IndexEndFBDPort>2</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7356" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3201</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7357" z:Size="1">
                  <FBDPortExtSettings z:Id="7358">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7359" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7360" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7361">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7362">
              <EndFBDPort z:Id="7363" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3228</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7364" z:Size="1">
                  <FBDPortExtSettings z:Id="7365">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7366" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7367" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Id="7368">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7369" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3216</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7370" z:Size="1">
                  <FBDPortExtSettings z:Id="7371">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7366" i:nil="true" />
                <VariableName z:Id="7372">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7373">
              <EndFBDPort z:Id="7374" i:type="InputFBDPort">
                <Alias z:Id="7375">Вход 2803</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3236</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7376" z:Size="1">
                  <FBDPortExtSettings z:Id="7377">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7378" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7379" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="7380">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7381" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3229</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7382" z:Size="1">
                  <FBDPortExtSettings z:Id="7383">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7378" i:nil="true" />
                <VariableName z:Id="7384">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7385">
              <EndFBDPort z:Id="7386" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3232</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7387" z:Size="1">
                  <FBDPortExtSettings z:Id="7388">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7389" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7390" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">240</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7391" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3237</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7392" z:Size="1">
                  <FBDPortExtSettings z:Id="7393">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7389" i:nil="true" />
                <VariableName z:Id="7394">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7395">
              <EndFBDPort z:Id="7396" i:type="InputFBDPort">
                <Alias z:Id="7397">SHORT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3235</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7398" z:Size="2">
                  <FBDPortExtSettings z:Id="7399">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7400">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7401" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7402" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">240</d2p1:anyType>
                </Value>
                <VariableName z:Id="7403">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7404" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3226</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7405" z:Size="1">
                  <FBDPortExtSettings z:Id="7406">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7407" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7408" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">180</d2p1:anyType>
                </Value>
                <VariableName z:Id="7409">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7410">
              <EndFBDPort z:Ref="7396" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7411" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3223</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7412" z:Size="1">
                  <FBDPortExtSettings z:Id="7413">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7401" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7414">
              <EndFBDPort z:Id="7415" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3242</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7416" z:Size="2">
                  <FBDPortExtSettings z:Id="7417">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7418">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7419" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6841" i:nil="true" />
                </Value>
                <VariableName z:Id="7420">bb</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>1</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7421">
              <EndFBDPort z:Ref="7415" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>2</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7422">
              <EndFBDPort z:Id="7423" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2996</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7424" z:Size="1">
                  <FBDPortExtSettings z:Id="7425">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7426" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7427" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">240</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7428" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3243</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7429" z:Size="1">
                  <FBDPortExtSettings z:Id="7430">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7426" i:nil="true" />
                <VariableName z:Id="7431">s</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7432">
              <EndFBDPort z:Id="7433" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3245</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7434" z:Size="2">
                  <FBDPortExtSettings z:Id="7435">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7436">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7437" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6843" i:nil="true" />
                </Value>
                <VariableName z:Id="7438">bb</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>3</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7439">
              <EndFBDPort z:Ref="7433" i:nil="true" />
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>4</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7440">
              <EndFBDPort z:Id="7441" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>2999</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7442" z:Size="1">
                  <FBDPortExtSettings z:Id="7443">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7444" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7445" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">180</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7446" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3246</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7447" z:Size="1">
                  <FBDPortExtSettings z:Id="7448">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7444" i:nil="true" />
                <VariableName z:Id="7449">s</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7450">
              <EndFBDPort z:Id="7451" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3248</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7452" z:Size="1">
                  <FBDPortExtSettings z:Id="7453">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7454" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Ref="6845" i:nil="true" />
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>6</IndexStartFBDPort>
              <StartFBDPort z:Ref="6821" i:nil="true" />
            </FBDConnector>
            <FBDConnector z:Id="7455">
              <EndFBDPort z:Id="7456" i:type="InputFBDPort">
                <Alias z:Id="7457">FLOAT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3258</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7458" z:Size="1">
                  <FBDPortExtSettings z:Id="7459">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="7460" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7461" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="7462">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7463" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3256</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7464" z:Size="1">
                  <FBDPortExtSettings z:Id="7465">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="7460" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7466">
              <EndFBDPort z:Id="7467" i:type="InputFBDPort">
                <Alias z:Id="7468">Вход 2803</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>false</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3252</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7469" z:Size="1">
                  <FBDPortExtSettings z:Id="7470">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7471" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7472" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">0</d2p1:anyType>
                </Value>
                <VariableName z:Id="7473">SEL</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7474" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3263</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7475" z:Size="1">
                  <FBDPortExtSettings z:Id="7476">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7471" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7477">
              <EndFBDPort z:Id="7478" i:type="InputFBDPort">
                <Alias z:Id="7479">SHORT</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>2</ArrayItemsCount>
                <Id>3251</Id>
                <IsArray>true</IsArray>
                <IsExpanded>true</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7480" z:Size="2">
                  <FBDPortExtSettings z:Id="7481">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                  <FBDPortExtSettings z:Id="7482">
                    <Index>1</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7483" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7484" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">240</d2p1:anyType>
                </Value>
                <VariableName z:Id="7485">MASSIN</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>1</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7486" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3233</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7487" z:Size="1">
                  <FBDPortExtSettings z:Id="7488">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7483" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7489">
              <EndFBDPort z:Ref="7478" i:nil="true" />
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7490" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3260</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7491" z:Size="1">
                  <FBDPortExtSettings z:Id="7492">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7493" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7494" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="7495">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7496">
              <EndFBDPort z:Id="7497" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3265</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7498" z:Size="1">
                  <FBDPortExtSettings z:Id="7499">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Id="7500" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7501" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:short">250</d2p1:anyType>
                </Value>
                <VariableName z:Id="7502">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7503" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3253</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7504" z:Size="1">
                  <FBDPortExtSettings z:Id="7505">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Short</Type>
                <Value z:Ref="7500" i:nil="true" />
                <VariableName z:Id="7506">OUTSW</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7507">
              <EndFBDPort z:Id="7508" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3272</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7509" z:Size="1">
                  <FBDPortExtSettings z:Id="7510">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Id="7511" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7512" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:float">250</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7513" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3266</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7514" z:Size="1">
                  <FBDPortExtSettings z:Id="7515">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Float</Type>
                <Value z:Ref="7511" i:nil="true" />
                <VariableName z:Id="7516">yFloat</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7517">
              <EndFBDPort z:Id="7518" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3278</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7519" z:Size="1">
                  <FBDPortExtSettings z:Id="7520">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7521" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7522" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="7523">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7524" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3276</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7525" z:Size="1">
                  <FBDPortExtSettings z:Id="7526">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7521" i:nil="true" />
                <VariableName z:Id="7527">val_out</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7528">
              <EndFBDPort z:Id="7529" i:type="InputFBDPort">
                <Alias z:Id="7530">E1</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3281</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7531" z:Size="1">
                  <FBDPortExtSettings z:Id="7532">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="7533" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7534" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">16</d2p1:anyType>
                </Value>
                <VariableName z:Id="7535">e1</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7536" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3279</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7537" z:Size="1">
                  <FBDPortExtSettings z:Id="7538">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="7533" i:nil="true" />
                <VariableName z:Id="7539">yInt</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7540">
              <EndFBDPort z:Id="7541" i:type="InputFBDPort">
                <Alias z:Id="7542">E2</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3282</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7543" z:Size="1">
                  <FBDPortExtSettings z:Id="7544">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="7545" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7546" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">4</d2p1:anyType>
                </Value>
                <VariableName z:Id="7547">e2</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7548" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3291</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7549" z:Size="1">
                  <FBDPortExtSettings z:Id="7550">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="7545" i:nil="true" />
                <VariableName z:Id="7551">yInt</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7552">
              <EndFBDPort z:Id="7553" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3293</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7554" z:Size="1">
                  <FBDPortExtSettings z:Id="7555">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Id="7556" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7557" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:int">1</d2p1:anyType>
                </Value>
                <VariableName z:Id="7558">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7559" i:type="OutputFBDPort">
                <Alias z:Id="7560">Y</Alias>
                <AllowSaveInCycle>true</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3284</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7561" z:Size="1">
                  <FBDPortExtSettings z:Id="7562">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Int</Type>
                <Value z:Ref="7556" i:nil="true" />
                <VariableName z:Id="7563">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7564">
              <EndFBDPort z:Id="7565" i:type="InputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3290</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7566" z:Size="1">
                  <FBDPortExtSettings z:Id="7567">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7568" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7569" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">4</d2p1:anyType>
                </Value>
                <VariableName z:Id="7570">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7571" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3298</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7572" z:Size="1">
                  <FBDPortExtSettings z:Id="7573">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7568" i:nil="true" />
                <VariableName z:Id="7574">y</VariableName>
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7575">
              <EndFBDPort z:Id="7576" i:type="InputFBDPort">
                <Alias z:Id="7577">A</Alias>
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3296</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7578" z:Size="1">
                  <FBDPortExtSettings z:Id="7579">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Id="7580" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7581" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:unsignedByte">5</d2p1:anyType>
                </Value>
                <VariableName z:Id="7582">a</VariableName>
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7583" i:type="OutputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3288</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7584" z:Size="1">
                  <FBDPortExtSettings z:Id="7585">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Byte</Type>
                <Value z:Ref="7580" i:nil="true" />
                <VariableName z:Ref="4096" i:nil="true" />
              </StartFBDPort>
            </FBDConnector>
            <FBDConnector z:Id="7586">
              <EndFBDPort z:Id="7587" i:type="InputFBDPort">
                <Alias z:Ref="67" i:nil="true" />
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3191</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>In</PortDirection>
                <Settings z:Id="7588" z:Size="1">
                  <FBDPortExtSettings z:Id="7589">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Id="7590" i:type="d2p1:ArrayOfanyType" z:Size="1">
                  <d2p1:anyType z:Id="7591" xmlns:d10p1="http://www.w3.org/2001/XMLSchema" i:type="d10p1:boolean">true</d2p1:anyType>
                </Value>
                <VariableName z:Ref="4620" i:nil="true" />
              </EndFBDPort>
              <IndexEndFBDPort>0</IndexEndFBDPort>
              <IndexStartFBDPort>0</IndexStartFBDPort>
              <StartFBDPort z:Id="7592" i:type="OutputFBDPort">
                <AllowSaveInCycle>false</AllowSaveInCycle>
                <AllowUseAlias>true</AllowUseAlias>
                <ArrayItemsCount>1</ArrayItemsCount>
                <Id>3294</Id>
                <IsArray>false</IsArray>
                <IsExpanded>false</IsExpanded>
                <IsReference>false</IsReference>
                <MaxArrayItemsCount>1</MaxArrayItemsCount>
                <MinArrayItemsCount>1</MinArrayItemsCount>
                <PortDirection>Out</PortDirection>
                <Settings z:Id="7593" z:Size="1">
                  <FBDPortExtSettings z:Id="7594">
                    <Index>0</Index>
                    <IsNegative>false</IsNegative>
                  </FBDPortExtSettings>
                </Settings>
                <ShowConstantPanel>false</ShowConstantPanel>
                <Type>Bool</Type>
                <Value z:Ref="7590" i:nil="true" />
                <VariableName z:Id="7595">yBool</VariableName>
              </StartFBDPort>
            </FBDConnector>
          </FBDConnectorsCollection>
          <FBDItems z:Id="7596" z:Size="74">
            <FBDItem z:Id="7597" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2973</Id>
              <InputPortsCollection z:Id="7598" z:Size="1">
                <FBDPort z:Id="7599" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>16</ArrayItemsCount>
                  <Id>2974</Id>
                  <IsArray>true</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7600" z:Size="16">
                    <FBDPortExtSettings z:Id="7601">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7602">
                      <Index>1</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7603">
                      <Index>2</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7604">
                      <Index>3</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7605">
                      <Index>4</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7606">
                      <Index>5</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7607">
                      <Index>6</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7608">
                      <Index>7</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7609">
                      <Index>8</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7610">
                      <Index>9</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7611">
                      <Index>10</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7612">
                      <Index>11</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7613">
                      <Index>12</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7614">
                      <Index>13</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7615">
                      <Index>14</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                    <FBDPortExtSettings z:Id="7616">
                      <Index>15</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4620" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7617" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3460</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7618" z:Size="1">
                <FBDPort z:Ref="6797" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="471" i:nil="true" />
              <InputFBDPort z:Ref="7599" i:nil="true" />
              <OutputFBDPort z:Ref="6797" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7619" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7620">Упаковка/Распаковка массива</Description>
              <HelpID>92</HelpID>
              <Id>2976</Id>
              <InputPortsCollection z:Id="7621" z:Size="1">
                <FBDPort z:Ref="6761" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7622" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3640</d8p1:_x>
                <d8p1:_y>3780</d8p1:_y>
              </Location>
              <Name z:Id="7623">ARRAY</Name>
              <OutputPortsCollection z:Id="7624" z:Size="1">
                <FBDPort z:Ref="6821" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7625">YART</Prefix>
              <SecondName z:Id="7626">ByteMass</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>487e1ff3-87f3-4b13-b3dd-4a1be44bd7b7</SpecificationId>
              <Code z:Ref="2636" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7627" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2980</Id>
              <InputPortsCollection z:Id="7628" z:Size="1">
                <FBDPort z:Ref="6816" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7629" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3930</d8p1:_x>
                <d8p1:_y>3710</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7630" z:Size="1">
                <FBDPort z:Id="7631" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2982</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7632" z:Size="1">
                    <FBDPortExtSettings z:Id="7633">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7634" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7635" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="491" i:nil="true" />
              <InputFBDPort z:Ref="6816" i:nil="true" />
              <OutputFBDPort z:Ref="7631" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7636" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7637">Массив Byte[] в Short</Description>
              <HelpID>804</HelpID>
              <Id>3241</Id>
              <InputPortsCollection z:Id="7638" z:Size="1">
                <FBDPort z:Ref="7415" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7639" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3870</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="7640">BB&gt;S</Name>
              <OutputPortsCollection z:Id="7641" z:Size="1">
                <FBDPort z:Ref="7428" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7642">bb2s</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6e39a5c9-f4e9-4b97-8d5a-1c309420e3c9</SpecificationId>
              <Code z:Id="7643">if(sizeof_bb == 2) s = (bb[1] &lt;&lt; 8) | bb[0];</Code>
            </FBDItem>
            <FBDItem z:Id="7644" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2995</Id>
              <InputPortsCollection z:Id="7645" z:Size="1">
                <FBDPort z:Ref="7423" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7646" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7647" z:Size="1">
                <FBDPort z:Id="7648" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>2997</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7649" z:Size="1">
                    <FBDPortExtSettings z:Id="7650">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7651" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7652" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">240</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="496" i:nil="true" />
              <InputFBDPort z:Ref="7423" i:nil="true" />
              <OutputFBDPort z:Ref="7648" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7653" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7654">Массив Byte[] в Short</Description>
              <HelpID>804</HelpID>
              <Id>3244</Id>
              <InputPortsCollection z:Id="7655" z:Size="1">
                <FBDPort z:Ref="7433" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7656" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3920</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Id="7657">BB&gt;S</Name>
              <OutputPortsCollection z:Id="7658" z:Size="1">
                <FBDPort z:Ref="7446" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7659">YART</Prefix>
              <SecondName z:Id="7660">bb2s</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>6e39a5c9-f4e9-4b97-8d5a-1c309420e3c9</SpecificationId>
              <Code z:Id="7661">if(sizeof_bb == 2) s = (bb[1] &lt;&lt; 8) | bb[0];</Code>
            </FBDItem>
            <FBDItem z:Id="7662" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>2998</Id>
              <InputPortsCollection z:Id="7663" z:Size="1">
                <FBDPort z:Ref="7441" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7664" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4040</d8p1:_x>
                <d8p1:_y>3810</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7665" z:Size="1">
                <FBDPort z:Id="7666" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3000</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7667" z:Size="1">
                    <FBDPortExtSettings z:Id="7668">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value z:Id="7669" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7670" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:short">180</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="501" i:nil="true" />
              <InputFBDPort z:Ref="7441" i:nil="true" />
              <OutputFBDPort z:Ref="7666" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7671" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3247</Id>
              <InputPortsCollection z:Id="7672" z:Size="1">
                <FBDPort z:Ref="7451" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7673" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3780</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7674" z:Size="1">
                <FBDPort z:Id="7675" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3249</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7676" z:Size="1">
                    <FBDPortExtSettings z:Id="7677">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7678" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7679" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="506" i:nil="true" />
              <InputFBDPort z:Ref="7451" i:nil="true" />
              <OutputFBDPort z:Ref="7675" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7680" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3004</Id>
              <InputPortsCollection z:Id="7681" z:Size="1">
                <FBDPort z:Ref="6857" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7682" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3960</d8p1:_x>
                <d8p1:_y>3870</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7683" z:Size="1">
                <FBDPort z:Id="7684" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3006</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7685" z:Size="1">
                    <FBDPortExtSettings z:Id="7686">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7687" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7688" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="510" i:nil="true" />
              <InputFBDPort z:Ref="6857" i:nil="true" />
              <OutputFBDPort z:Ref="7684" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7689" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3007</Id>
              <InputPortsCollection z:Id="7690" z:Size="1">
                <FBDPort z:Ref="6862" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7691" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3900</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7692" z:Size="1">
                <FBDPort z:Id="7693" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3009</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7694" z:Size="1">
                    <FBDPortExtSettings z:Id="7695">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7696" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7697" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">24</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="514" i:nil="true" />
              <InputFBDPort z:Ref="6862" i:nil="true" />
              <OutputFBDPort z:Ref="7693" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7698" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3010</Id>
              <InputPortsCollection z:Id="7699" z:Size="1">
                <FBDPort z:Ref="6867" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7700" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3900</d8p1:_x>
                <d8p1:_y>3920</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7701" z:Size="1">
                <FBDPort z:Id="7702" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3012</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7703" z:Size="1">
                    <FBDPortExtSettings z:Id="7704">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7705" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7706" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="518" i:nil="true" />
              <InputFBDPort z:Ref="6867" i:nil="true" />
              <OutputFBDPort z:Ref="7702" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7707" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3013</Id>
              <InputPortsCollection z:Id="7708" z:Size="1">
                <FBDPort z:Ref="6872" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7709" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7710" z:Size="1">
                <FBDPort z:Id="7711" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3015</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7712" z:Size="1">
                    <FBDPortExtSettings z:Id="7713">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7714" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7715" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">24</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="522" i:nil="true" />
              <InputFBDPort z:Ref="6872" i:nil="true" />
              <OutputFBDPort z:Ref="7711" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7716" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3016</Id>
              <InputPortsCollection z:Id="7717" z:Size="1">
                <FBDPort z:Ref="6877" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7718" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3880</d8p1:_x>
                <d8p1:_y>3970</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7719" z:Size="1">
                <FBDPort z:Id="7720" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3018</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7721" z:Size="1">
                    <FBDPortExtSettings z:Id="7722">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7723" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7724" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="526" i:nil="true" />
              <InputFBDPort z:Ref="6877" i:nil="true" />
              <OutputFBDPort z:Ref="7720" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7725" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3019</Id>
              <InputPortsCollection z:Id="7726" z:Size="1">
                <FBDPort z:Ref="6882" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7727" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3940</d8p1:_x>
                <d8p1:_y>3990</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7728" z:Size="1">
                <FBDPort z:Id="7729" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3021</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="7730" z:Size="1">
                    <FBDPortExtSettings z:Id="7731">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7732" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7733" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">24</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="530" i:nil="true" />
              <InputFBDPort z:Ref="6882" i:nil="true" />
              <OutputFBDPort z:Ref="7729" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7734" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3261</Id>
              <InputPortsCollection z:Id="7735" z:Size="1">
                <FBDPort z:Id="7736" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3262</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7737" z:Size="1">
                    <FBDPortExtSettings z:Id="7738">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4620" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7739" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4920</d8p1:_x>
                <d8p1:_y>4050</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7740" z:Size="1">
                <FBDPort z:Ref="7474" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="491" i:nil="true" />
              <InputFBDPort z:Ref="7736" i:nil="true" />
              <OutputFBDPort z:Ref="7474" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7741" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3254</Id>
              <InputPortsCollection z:Id="7742" z:Size="1">
                <FBDPort z:Id="7743" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3255</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7744" z:Size="1">
                    <FBDPortExtSettings z:Id="7745">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4620" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7746" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4890</d8p1:_x>
                <d8p1:_y>3940</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7747" z:Size="1">
                <FBDPort z:Ref="7463" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="246" i:nil="true" />
              <InputFBDPort z:Ref="7743" i:nil="true" />
              <OutputFBDPort z:Ref="7463" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7748" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7749">Преобразование Float в Short</Description>
              <HelpID>111</HelpID>
              <Id>3257</Id>
              <InputPortsCollection z:Id="7750" z:Size="2">
                <FBDPort z:Ref="7456" i:nil="true" />
                <FBDPort z:Id="7751" i:type="InputFBDPort">
                  <Alias z:Id="7752">METHOD</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3259</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7753" z:Size="1">
                    <FBDPortExtSettings z:Id="7754">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="7755" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="7756" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:int">0</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="7757">type</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7758" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4930</d8p1:_x>
                <d8p1:_y>3990</d8p1:_y>
              </Location>
              <Name z:Id="7759">F&gt;S</Name>
              <OutputPortsCollection z:Id="7760" z:Size="1">
                <FBDPort z:Ref="7490" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7761">FloatShort</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>e14cbd51-2dfe-4ed3-9210-3d315c6ddbec</SpecificationId>
              <Code z:Id="7762">//#F &gt; S (Float в Short)


if(a &lt; 32767)


	if ( a &gt; -32767)


		switch(type){


			case 0:{//если дробная часть меньше 5, аргумент округляется в меньшую сторону.


		 		y = floatround(a, floatround_round);		


	 		}


			case 1:{//отбрасывается дробная часть аргумента


				y = floatround(a, floatround_floor);


			}


			case 2:{//если дробная часть больше 1, аргумент округляется в большую сторону


				y = floatround(a, floatround_ceil);


			}	


			case 3:{// //отбрасывается дробная часть аргумента


		 		y = floatround(a, floatround_tozero);


			}	


			default:{//округляет как case 0


				y = floatround(a, floatround_round);


			}


		}


	else y = -32767;


else y = 32767;</Code>
            </FBDItem>
            <FBDItem z:Id="7763" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3211</Id>
              <InputPortsCollection z:Id="7764" z:Size="1">
                <FBDPort z:Id="7765" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3212</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7766" z:Size="1">
                    <FBDPortExtSettings z:Id="7767">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7768">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7769" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4630</d8p1:_x>
                <d8p1:_y>4160</d8p1:_y>
              </Location>
              <Name z:Id="7770">Tag</Name>
              <OutputPortsCollection z:Id="7771" z:Size="1">
                <FBDPort z:Ref="7328" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7772">_</Prefix>
              <SecondName z:Ref="7770" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="7765" i:nil="true" />
              <OutputFBDPort z:Ref="7328" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7773" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3181</Id>
              <InputPortsCollection z:Id="7774" z:Size="1">
                <FBDPort z:Id="7775" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3182</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7776" z:Size="1">
                    <FBDPortExtSettings z:Id="7777">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7778">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7779" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>4130</d8p1:_y>
              </Location>
              <Name z:Id="7780">Tag</Name>
              <OutputPortsCollection z:Id="7781" z:Size="1">
                <FBDPort z:Ref="7225" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7782">_</Prefix>
              <SecondName z:Ref="7780" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="530" i:nil="true" />
              <InputFBDPort z:Ref="7775" i:nil="true" />
              <OutputFBDPort z:Ref="7225" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7783" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3167</Id>
              <InputPortsCollection z:Id="7784" z:Size="1">
                <FBDPort z:Id="7785" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3168</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7786" z:Size="1">
                    <FBDPortExtSettings z:Id="7787">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7788">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7789" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>4060</d8p1:_y>
              </Location>
              <Name z:Id="7790">Tag</Name>
              <OutputPortsCollection z:Id="7791" z:Size="1">
                <FBDPort z:Ref="7195" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7792">_</Prefix>
              <SecondName z:Ref="7790" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="7785" i:nil="true" />
              <OutputFBDPort z:Ref="7195" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7793" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7794">Сравнение двух значений</Description>
              <HelpID>294</HelpID>
              <Id>3174</Id>
              <InputPortsCollection z:Id="7795" z:Size="2">
                <FBDPort z:Ref="7200" i:nil="true" />
                <FBDPort z:Ref="7218" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7796" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4530</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="7797">A &lt; B</Name>
              <OutputPortsCollection z:Id="7798" z:Size="1">
                <FBDPort z:Ref="7286" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7799">YART</Prefix>
              <SecondName z:Id="7800">aMbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f8932b54-bd6c-4833-8ed0-812fbfee0ffa</SpecificationId>
              <Code z:Id="7801">//#A &lt; B (Меньше byte) 


#inline y = (a &lt; b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="7802" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3178</Id>
              <InputPortsCollection z:Id="7803" z:Size="1">
                <FBDPort z:Id="7804" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3179</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7805" z:Size="1">
                    <FBDPortExtSettings z:Id="7806">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7807">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7808" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4310</d8p1:_x>
                <d8p1:_y>4100</d8p1:_y>
              </Location>
              <Name z:Id="7809">Tag</Name>
              <OutputPortsCollection z:Id="7810" z:Size="1">
                <FBDPort z:Ref="7213" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7811">_</Prefix>
              <SecondName z:Ref="7809" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="526" i:nil="true" />
              <InputFBDPort z:Ref="7804" i:nil="true" />
              <OutputFBDPort z:Ref="7213" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7812" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7813">Сравнение двух значений</Description>
              <HelpID>295</HelpID>
              <Id>3170</Id>
              <InputPortsCollection z:Id="7814" z:Size="2">
                <FBDPort z:Ref="7188" i:nil="true" />
                <FBDPort z:Ref="7206" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7815" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4520</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="7816">A &gt;= B</Name>
              <OutputPortsCollection z:Id="7817" z:Size="1">
                <FBDPort z:Ref="7281" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7799" i:nil="true" />
              <SecondName z:Id="7818">aBRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f13172eb-63f6-46d4-87f4-a96f56e2a39a</SpecificationId>
              <Code z:Id="7819">//#A &gt;= B (Больше или равно byte) 


#inline y = (a &gt;= b) ? true : false;</Code>
            </FBDItem>
            <FBDItem z:Id="7820" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7821">Вычисление логического И</Description>
              <HelpID>6</HelpID>
              <Id>3199</Id>
              <InputPortsCollection z:Id="7822" z:Size="1">
                <FBDPort z:Ref="7272" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7823" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>4070</d8p1:_y>
              </Location>
              <Name z:Id="7824">AND</Name>
              <OutputPortsCollection z:Id="7825" z:Size="1">
                <FBDPort z:Ref="7356" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7826">YART</Prefix>
              <SecondName z:Id="7827">and</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a5899894-bce9-41f4-9f39-c425039f966b</SpecificationId>
              <Code z:Id="7828">//#AND ( и )


y = true;


for(new i = 0; i&lt;sizeof_x; i++)	y = y&amp;x[i];</Code>
            </FBDItem>
            <FBDItem z:Id="7829" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3208</Id>
              <InputPortsCollection z:Id="7830" z:Size="1">
                <FBDPort z:Id="7831" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3209</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7832" z:Size="1">
                    <FBDPortExtSettings z:Id="7833">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7834">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7835" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4620</d8p1:_x>
                <d8p1:_y>4000</d8p1:_y>
              </Location>
              <Name z:Id="7836">Tag</Name>
              <OutputPortsCollection z:Id="7837" z:Size="1">
                <FBDPort z:Ref="7321" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7838">_</Prefix>
              <SecondName z:Ref="7836" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="7831" i:nil="true" />
              <OutputFBDPort z:Ref="7321" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7839" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3164</Id>
              <InputPortsCollection z:Id="7840" z:Size="1">
                <FBDPort z:Id="7841" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3165</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7842" z:Size="1">
                    <FBDPortExtSettings z:Id="7843">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7844">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7845" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name z:Id="7846">Tag</Name>
              <OutputPortsCollection z:Id="7847" z:Size="1">
                <FBDPort z:Ref="7183" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7848">_</Prefix>
              <SecondName z:Ref="7846" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="522" i:nil="true" />
              <InputFBDPort z:Ref="7841" i:nil="true" />
              <OutputFBDPort z:Ref="7183" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7849" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3150</Id>
              <InputPortsCollection z:Id="7850" z:Size="1">
                <FBDPort z:Id="7851" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3151</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7852" z:Size="1">
                    <FBDPortExtSettings z:Id="7853">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7854">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7855" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4290</d8p1:_x>
                <d8p1:_y>3910</d8p1:_y>
              </Location>
              <Name z:Id="7856">Tag</Name>
              <OutputPortsCollection z:Id="7857" z:Size="1">
                <FBDPort z:Ref="7153" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7858">_</Prefix>
              <SecondName z:Ref="7856" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="7851" i:nil="true" />
              <OutputFBDPort z:Ref="7153" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7859" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7860">Сравнение двух значений</Description>
              <HelpID>294</HelpID>
              <Id>3157</Id>
              <InputPortsCollection z:Id="7861" z:Size="2">
                <FBDPort z:Ref="7158" i:nil="true" />
                <FBDPort z:Ref="7176" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7862" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4520</d8p1:_x>
                <d8p1:_y>3970</d8p1:_y>
              </Location>
              <Name z:Id="7863">A &lt; B</Name>
              <OutputPortsCollection z:Id="7864" z:Size="1">
                <FBDPort z:Ref="7265" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7865">YART</Prefix>
              <SecondName z:Id="7866">aMbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f8932b54-bd6c-4833-8ed0-812fbfee0ffa</SpecificationId>
              <Code z:Ref="7801" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7867" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3161</Id>
              <InputPortsCollection z:Id="7868" z:Size="1">
                <FBDPort z:Id="7869" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3162</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7870" z:Size="1">
                    <FBDPortExtSettings z:Id="7871">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7872">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7873" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3950</d8p1:_y>
              </Location>
              <Name z:Id="7874">Tag</Name>
              <OutputPortsCollection z:Id="7875" z:Size="1">
                <FBDPort z:Ref="7171" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7876">_</Prefix>
              <SecondName z:Ref="7874" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="518" i:nil="true" />
              <InputFBDPort z:Ref="7869" i:nil="true" />
              <OutputFBDPort z:Ref="7171" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7877" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7878">Сравнение двух значений</Description>
              <HelpID>295</HelpID>
              <Id>3153</Id>
              <InputPortsCollection z:Id="7879" z:Size="2">
                <FBDPort z:Ref="7146" i:nil="true" />
                <FBDPort z:Ref="7164" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7880" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4510</d8p1:_x>
                <d8p1:_y>3890</d8p1:_y>
              </Location>
              <Name z:Id="7881">A &gt;= B</Name>
              <OutputPortsCollection z:Id="7882" z:Size="1">
                <FBDPort z:Ref="7260" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7865" i:nil="true" />
              <SecondName z:Id="7883">aBRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f13172eb-63f6-46d4-87f4-a96f56e2a39a</SpecificationId>
              <Code z:Ref="7819" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7884" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7885">Вычисление логического И</Description>
              <HelpID>6</HelpID>
              <Id>3193</Id>
              <InputPortsCollection z:Id="7886" z:Size="1">
                <FBDPort z:Ref="7251" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7887" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4750</d8p1:_x>
                <d8p1:_y>3930</d8p1:_y>
              </Location>
              <Name z:Id="7888">AND</Name>
              <OutputPortsCollection z:Id="7889" z:Size="1">
                <FBDPort z:Ref="7349" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7890">YART</Prefix>
              <SecondName z:Id="7891">and</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a5899894-bce9-41f4-9f39-c425039f966b</SpecificationId>
              <Code z:Ref="7828" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7892" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3205</Id>
              <InputPortsCollection z:Id="7893" z:Size="1">
                <FBDPort z:Id="7894" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3206</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7895" z:Size="1">
                    <FBDPortExtSettings z:Id="7896">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4620" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7897" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4620</d8p1:_x>
                <d8p1:_y>3860</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7898" z:Size="1">
                <FBDPort z:Ref="7315" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="7894" i:nil="true" />
              <OutputFBDPort z:Ref="7315" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7899" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3147</Id>
              <InputPortsCollection z:Id="7900" z:Size="1">
                <FBDPort z:Id="7901" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3148</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7902" z:Size="1">
                    <FBDPortExtSettings z:Id="7903">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7904">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7905" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3830</d8p1:_y>
              </Location>
              <Name z:Id="7906">Tag</Name>
              <OutputPortsCollection z:Id="7907" z:Size="1">
                <FBDPort z:Ref="7141" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7908">_</Prefix>
              <SecondName z:Ref="7906" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="514" i:nil="true" />
              <InputFBDPort z:Ref="7901" i:nil="true" />
              <OutputFBDPort z:Ref="7141" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7909" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3130</Id>
              <InputPortsCollection z:Id="7910" z:Size="1">
                <FBDPort z:Id="7911" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3131</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7912" z:Size="1">
                    <FBDPortExtSettings z:Id="7913">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7914">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7915" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4290</d8p1:_x>
                <d8p1:_y>3760</d8p1:_y>
              </Location>
              <Name z:Id="7916">Tag</Name>
              <OutputPortsCollection z:Id="7917" z:Size="1">
                <FBDPort z:Ref="7111" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7918">_</Prefix>
              <SecondName z:Ref="7916" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="7911" i:nil="true" />
              <OutputFBDPort z:Ref="7111" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7919" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7920">Сравнение двух значений</Description>
              <HelpID>294</HelpID>
              <Id>3137</Id>
              <InputPortsCollection z:Id="7921" z:Size="2">
                <FBDPort z:Ref="7116" i:nil="true" />
                <FBDPort z:Ref="7134" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7922" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4520</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Id="7923">A &lt; B</Name>
              <OutputPortsCollection z:Id="7924" z:Size="1">
                <FBDPort z:Ref="7244" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7925">aMbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f8932b54-bd6c-4833-8ed0-812fbfee0ffa</SpecificationId>
              <Code z:Ref="7801" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7926" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3141</Id>
              <InputPortsCollection z:Id="7927" z:Size="1">
                <FBDPort z:Id="7928" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3142</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7929" z:Size="1">
                    <FBDPortExtSettings z:Id="7930">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7931">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7932" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4300</d8p1:_x>
                <d8p1:_y>3800</d8p1:_y>
              </Location>
              <Name z:Id="7933">Tag</Name>
              <OutputPortsCollection z:Id="7934" z:Size="1">
                <FBDPort z:Ref="7129" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7935">_</Prefix>
              <SecondName z:Ref="7933" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="510" i:nil="true" />
              <InputFBDPort z:Ref="7928" i:nil="true" />
              <OutputFBDPort z:Ref="7129" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7936" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7937">Сравнение двух значений</Description>
              <HelpID>295</HelpID>
              <Id>3133</Id>
              <InputPortsCollection z:Id="7938" z:Size="2">
                <FBDPort z:Ref="7104" i:nil="true" />
                <FBDPort z:Ref="7122" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7939" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4510</d8p1:_x>
                <d8p1:_y>3740</d8p1:_y>
              </Location>
              <Name z:Id="7940">A &gt;= B</Name>
              <OutputPortsCollection z:Id="7941" z:Size="1">
                <FBDPort z:Ref="7239" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7942">aBRbbyte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f13172eb-63f6-46d4-87f4-a96f56e2a39a</SpecificationId>
              <Code z:Ref="7819" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7943" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7944">Вычисление логического И</Description>
              <HelpID>6</HelpID>
              <Id>3187</Id>
              <InputPortsCollection z:Id="7945" z:Size="1">
                <FBDPort z:Ref="7230" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7946" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4740</d8p1:_x>
                <d8p1:_y>3770</d8p1:_y>
              </Location>
              <Name z:Id="7947">AND</Name>
              <OutputPortsCollection z:Id="7948" z:Size="1">
                <FBDPort z:Ref="7344" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7949">and</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>a5899894-bce9-41f4-9f39-c425039f966b</SpecificationId>
              <Code z:Ref="7828" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7950" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7951">Вычисление логического ИЛИ</Description>
              <HelpID>5</HelpID>
              <Id>3214</Id>
              <InputPortsCollection z:Id="7952" z:Size="1">
                <FBDPort z:Ref="7335" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7953" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4884.0926481533061</d8p1:_x>
                <d8p1:_y>3791.5725633641478</d8p1:_y>
              </Location>
              <Name z:Id="7954">OR</Name>
              <OutputPortsCollection z:Id="7955" z:Size="1">
                <FBDPort z:Ref="7369" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7956">or</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>847d4d91-e424-48a2-a070-61748e5d053a</SpecificationId>
              <Code z:Ref="4414" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7957" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7958">Преобразование Bool в Byte</Description>
              <HelpID>831</HelpID>
              <Id>3227</Id>
              <InputPortsCollection z:Id="7959" z:Size="1">
                <FBDPort z:Ref="7363" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7960" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4998.2578901951656</d8p1:_x>
                <d8p1:_y>3869.5390701244419</d8p1:_y>
              </Location>
              <Name z:Id="7961">b&gt;B</Name>
              <OutputPortsCollection z:Id="7962" z:Size="1">
                <FBDPort z:Ref="7381" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7963">BoolByte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>d2363784-5f99-402e-b235-0cc3ec6ab4e5</SpecificationId>
              <Code z:Id="7964">//#b &gt; B (Bool в Byte) 


y = (a)? 1:0;</Code>
            </FBDItem>
            <FBDItem z:Id="7965" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3224</Id>
              <InputPortsCollection z:Id="7966" z:Size="1">
                <FBDPort z:Id="7967" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3225</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7968" z:Size="1">
                    <FBDPortExtSettings z:Id="7969">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="7970">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7971" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>3690</d8p1:_y>
              </Location>
              <Name z:Id="7972">Tag</Name>
              <OutputPortsCollection z:Id="7973" z:Size="1">
                <FBDPort z:Ref="7404" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="7974">_</Prefix>
              <SecondName z:Ref="7972" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="501" i:nil="true" />
              <InputFBDPort z:Ref="7967" i:nil="true" />
              <OutputFBDPort z:Ref="7404" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7975" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3221</Id>
              <InputPortsCollection z:Id="7976" z:Size="1">
                <FBDPort z:Id="7977" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3222</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="7978" z:Size="1">
                    <FBDPortExtSettings z:Id="7979">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Short</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4620" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7980" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4820</d8p1:_x>
                <d8p1:_y>3730</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7981" z:Size="1">
                <FBDPort z:Ref="7411" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="496" i:nil="true" />
              <InputFBDPort z:Ref="7977" i:nil="true" />
              <OutputFBDPort z:Ref="7411" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7982" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7983">Чтение значения элемента массива</Description>
              <HelpID>146</HelpID>
              <Id>3234</Id>
              <InputPortsCollection z:Id="7984" z:Size="2">
                <FBDPort z:Ref="7396" i:nil="true" />
                <FBDPort z:Ref="7374" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7985" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5018.3785814224275</d8p1:_x>
                <d8p1:_y>3709.9005531704811</d8p1:_y>
              </Location>
              <Name z:Id="7986">SWITCH SHORT</Name>
              <OutputPortsCollection z:Id="7987" z:Size="1">
                <FBDPort z:Ref="7391" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="7988">SWITCSHORT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>18d7c7b6-fd9d-46fc-a8ba-6383ada18c0d</SpecificationId>
              <Code z:Id="7989">//#SWITCH SHORT (Переключатель Short   величин)


//Переключатель SHORT


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="7990" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3231</Id>
              <InputPortsCollection z:Id="7991" z:Size="1">
                <FBDPort z:Ref="7386" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7992" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5080</d8p1:_x>
                <d8p1:_y>3820</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="7993" z:Size="1">
                <FBDPort z:Ref="7486" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="570" i:nil="true" />
              <InputFBDPort z:Ref="7386" i:nil="true" />
              <OutputFBDPort z:Ref="7486" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="7994" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="7995">Чтение значения элемента массива</Description>
              <HelpID>146</HelpID>
              <Id>3250</Id>
              <InputPortsCollection z:Id="7996" z:Size="2">
                <FBDPort z:Ref="7478" i:nil="true" />
                <FBDPort z:Ref="7467" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="7997" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5130</d8p1:_x>
                <d8p1:_y>3980</d8p1:_y>
              </Location>
              <Name z:Id="7998">SWITCH SHORT</Name>
              <OutputPortsCollection z:Id="7999" z:Size="1">
                <FBDPort z:Ref="7503" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8000">YART</Prefix>
              <SecondName z:Id="8001">SWITCSHORT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>18d7c7b6-fd9d-46fc-a8ba-6383ada18c0d</SpecificationId>
              <Code z:Ref="7989" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8002" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8003">Преобразование Short в Float</Description>
              <HelpID>106</HelpID>
              <Id>3264</Id>
              <InputPortsCollection z:Id="8004" z:Size="1">
                <FBDPort z:Ref="7497" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8005" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5140</d8p1:_x>
                <d8p1:_y>4120</d8p1:_y>
              </Location>
              <Name z:Id="8006">S&gt;F</Name>
              <OutputPortsCollection z:Id="8007" z:Size="1">
                <FBDPort z:Ref="7513" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8008">ShortFloat</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>06e48c4e-f372-4aee-84a8-6b45e846a795</SpecificationId>
              <Code z:Ref="3161" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8009" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3271</Id>
              <InputPortsCollection z:Id="8010" z:Size="1">
                <FBDPort z:Ref="7508" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8011" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>5100</d8p1:_x>
                <d8p1:_y>4190</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8012" z:Size="1">
                <FBDPort z:Id="8013" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3273</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8014" z:Size="1">
                    <FBDPortExtSettings z:Id="8015">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Float</Type>
                  <Value z:Id="8016" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8017" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:float">250</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="73" i:nil="true" />
              <CustomTag z:Ref="574" i:nil="true" />
              <InputFBDPort z:Ref="7508" i:nil="true" />
              <OutputFBDPort z:Ref="8013" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8018" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8019">Считывание системной даты</Description>
              <HelpID>123</HelpID>
              <Id>3031</Id>
              <InputPortsCollection z:Id="8020" z:Size="0" />
              <InternalPortsCollection z:Id="8021" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3520</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Id="8022">GET DATE</Name>
              <OutputPortsCollection z:Id="8023" z:Size="5">
                <FBDPort z:Id="8024" i:type="OutputFBDPort">
                  <Alias z:Id="8025">DATE</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3032</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8026" z:Size="1">
                    <FBDPortExtSettings z:Id="8027">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Date</Type>
                  <Value z:Id="8028" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8029" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:dateTime">2020-12-11T00:00:00</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8030">Date1</VariableName>
                </FBDPort>
                <FBDPort z:Id="8031" i:type="OutputFBDPort">
                  <Alias z:Id="8032">DAY</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3033</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8033" z:Size="1">
                    <FBDPortExtSettings z:Id="8034">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8035" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8036" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">11</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8037">Day1</VariableName>
                </FBDPort>
                <FBDPort z:Id="8038" i:type="OutputFBDPort">
                  <Alias z:Id="8039">MONTH</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3034</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8040" z:Size="1">
                    <FBDPortExtSettings z:Id="8041">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8042" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8043" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">12</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8044">Month1</VariableName>
                </FBDPort>
                <FBDPort z:Id="8045" i:type="OutputFBDPort">
                  <Alias z:Id="8046">YEAR</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3035</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8047" z:Size="1">
                    <FBDPortExtSettings z:Id="8048">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8049" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8050" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">20</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8051">Year1</VariableName>
                </FBDPort>
                <FBDPort z:Ref="6907" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8052">myGetDate</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ab0a3859-5baf-46fc-b941-74a27be1ca94</SpecificationId>
              <Code z:Id="8053">//#GET DATE (Читать дату)


new ldata = GetDate(SYSTEM_DATE);


Date1  =ldata;


Day1 = (10 * (Day(ldata ) &gt;&gt; 4)) + (Day(ldata ) &amp; 0x0f);


Month1 =(10 * (Month(ldata ) &gt;&gt; 4)) + (Month(ldata ) &amp; 0x0f);


Year1 =(10 * (Year(ldata ) &gt;&gt; 4)) + (Year(ldata ) &amp; 0x0f);


WDay1 =(10 * (WDay(ldata ) &gt;&gt; 4)) + (WDay(ldata ) &amp; 0x0f);</Code>
            </FBDItem>
            <FBDItem z:Id="8054" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3038</Id>
              <InputPortsCollection z:Id="8055" z:Size="1">
                <FBDPort z:Ref="6902" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8056" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3580</d8p1:_x>
                <d8p1:_y>4200</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8057" z:Size="1">
                <FBDPort z:Id="8058" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3040</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8059" z:Size="1">
                    <FBDPortExtSettings z:Id="8060">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8061" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8062" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">5</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="6902" i:nil="true" />
              <OutputFBDPort z:Ref="8058" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8063" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3097</Id>
              <InputPortsCollection z:Id="8064" z:Size="1">
                <FBDPort z:Id="8065" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3098</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8066" z:Size="1">
                    <FBDPortExtSettings z:Id="8067">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8068">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8069" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4160</d8p1:_y>
              </Location>
              <Name z:Id="8070">Tag</Name>
              <OutputPortsCollection z:Id="8071" z:Size="1">
                <FBDPort z:Ref="6968" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8072">_</Prefix>
              <SecondName z:Ref="8070" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8065" i:nil="true" />
              <OutputFBDPort z:Ref="6968" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8073" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3022</Id>
              <InputPortsCollection z:Id="8074" z:Size="1">
                <FBDPort z:Ref="6887" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8075" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3830</d8p1:_x>
                <d8p1:_y>4020</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8076" z:Size="1">
                <FBDPort z:Ref="6919" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="534" i:nil="true" />
              <InputFBDPort z:Ref="6887" i:nil="true" />
              <OutputFBDPort z:Ref="6919" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8077" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8078">Распаковка массива Bool</Description>
              <HelpID>24</HelpID>
              <Id>3090</Id>
              <InputPortsCollection z:Id="8079" z:Size="1">
                <FBDPort z:Ref="6913" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8080" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4040</d8p1:_y>
              </Location>
              <Name z:Id="8081">DECODER</Name>
              <OutputPortsCollection z:Id="8082" z:Size="1">
                <FBDPort z:Ref="6937" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8083">DECODERBYTE</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>16762dd4-09af-4c5b-bf4a-d01b9d78165b</SpecificationId>
              <Code z:Id="8084">//#DECODER  (Дешифпатор для Byte)


//Дешифратор Byte


new k = 1;


for(new i = 0; i &lt; sizeof_mas; i++){


	if (ByteIn &amp; k) mas[i] = true;


	k = k &lt;&lt; 1;


}</Code>
            </FBDItem>
            <FBDItem z:Id="8085" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8086">Чтение значения элемента массива</Description>
              <HelpID>144</HelpID>
              <Id>3093</Id>
              <InputPortsCollection z:Id="8087" z:Size="2">
                <FBDPort z:Ref="6923" i:nil="true" />
                <FBDPort z:Ref="6961" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8088" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>4010</d8p1:_y>
              </Location>
              <Name z:Id="8089">SWITCH BOOL</Name>
              <OutputPortsCollection z:Id="8090" z:Size="1">
                <FBDPort z:Id="8091" i:type="OutputFBDPort">
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3096</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8092" z:Size="1">
                    <FBDPortExtSettings z:Id="8093">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8094" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8095" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8096">OUTSW</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8097">SWITCHBIT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f9b2271a-72b8-444e-95cf-6d3148b3a5ac</SpecificationId>
              <Code z:Id="8098">//#SWITCH BOOL (Переключатель Bool величин)


//Переключатель BOOL


if(SEL &lt; sizeof_MASSIN) OUTSW = MASSIN[SEL];</Code>
            </FBDItem>
            <FBDItem z:Id="8099" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8100">Считывание системного времени</Description>
              <HelpID>122</HelpID>
              <Id>3120</Id>
              <InputPortsCollection z:Id="8101" z:Size="0" />
              <InternalPortsCollection z:Id="8102" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3530</d8p1:_x>
                <d8p1:_y>4260</d8p1:_y>
              </Location>
              <Name z:Id="8103">GET TIME</Name>
              <OutputPortsCollection z:Id="8104" z:Size="5">
                <FBDPort z:Id="8105" i:type="OutputFBDPort">
                  <Alias z:Id="8106">TIME</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3121</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8107" z:Size="1">
                    <FBDPortExtSettings z:Id="8108">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Time</Type>
                  <Value z:Id="8109" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8110" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:dateTime">0001-01-01T18:01:27</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8111">time</VariableName>
                </FBDPort>
                <FBDPort z:Id="8112" i:type="OutputFBDPort">
                  <Alias z:Id="8113">SFRACT</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3122</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8114" z:Size="1">
                    <FBDPortExtSettings z:Id="8115">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8116" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8117" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">31</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8118">sfract</VariableName>
                </FBDPort>
                <FBDPort z:Id="8119" i:type="OutputFBDPort">
                  <Alias z:Id="8120">SS</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3123</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8121" z:Size="1">
                    <FBDPortExtSettings z:Id="8122">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8123" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8124" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">27</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8125">sec</VariableName>
                </FBDPort>
                <FBDPort z:Id="8126" i:type="OutputFBDPort">
                  <Alias z:Id="8127">MM</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3124</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8128" z:Size="1">
                    <FBDPortExtSettings z:Id="8129">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8130" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8131" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8132">mins</VariableName>
                </FBDPort>
                <FBDPort z:Ref="7098" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8133">myGetTime</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>91dda9a2-5588-4f94-a53e-c414a211e208</SpecificationId>
              <Code z:Ref="4391" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8134" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3127</Id>
              <InputPortsCollection z:Id="8135" z:Size="1">
                <FBDPort z:Ref="7093" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8136" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3600</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8137" z:Size="1">
                <FBDPort z:Id="8138" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3129</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8139" z:Size="1">
                    <FBDPortExtSettings z:Id="8140">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8141" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8142" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:unsignedByte">18</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="554" i:nil="true" />
              <InputFBDPort z:Ref="7093" i:nil="true" />
              <OutputFBDPort z:Ref="8138" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8143" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3286</Id>
              <InputPortsCollection z:Id="8144" z:Size="1">
                <FBDPort z:Id="8145" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3287</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8146" z:Size="1">
                    <FBDPortExtSettings z:Id="8147">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Ref="4620" i:nil="true" />
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8148" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4280</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8149" z:Size="1">
                <FBDPort z:Ref="7583" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8145" i:nil="true" />
              <OutputFBDPort z:Ref="7583" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8150" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8151">Разность A и B</Description>
              <HelpID>532</HelpID>
              <Id>3295</Id>
              <InputPortsCollection z:Id="8152" z:Size="2">
                <FBDPort z:Ref="7576" i:nil="true" />
                <FBDPort z:Id="8153" i:type="InputFBDPort">
                  <Alias z:Id="8154">B</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3297</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8155" z:Size="1">
                    <FBDPortExtSettings z:Id="8156">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value z:Id="8157" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8158" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:decimal">1</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8159">b</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8160" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4450</d8p1:_x>
                <d8p1:_y>4280</d8p1:_y>
              </Location>
              <Name z:Id="8161">SUB</Name>
              <OutputPortsCollection z:Id="8162" z:Size="1">
                <FBDPort z:Ref="7571" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8163">sub_byte</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>edc0104b-758d-4948-8e7e-347d4b43e183</SpecificationId>
              <Code z:Id="8164">#inline y = a - b;</Code>
            </FBDItem>
            <FBDItem z:Id="8165" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8166">Преобразование Byte в Int</Description>
              <HelpID>102</HelpID>
              <Id>3289</Id>
              <InputPortsCollection z:Id="8167" z:Size="1">
                <FBDPort z:Ref="7565" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8168" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4550</d8p1:_x>
                <d8p1:_y>4290</d8p1:_y>
              </Location>
              <Name z:Id="8169">B&gt;I</Name>
              <OutputPortsCollection z:Id="8170" z:Size="1">
                <FBDPort z:Ref="7548" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8171">YART</Prefix>
              <SecondName z:Id="8172">ByteInt</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>eb892a3f-f2fe-4659-8f62-dbdda5e14c69</SpecificationId>
              <Code z:Id="8173">//#B &gt; I  (Byte в Int)


#inline yInt = a;</Code>
            </FBDItem>
            <FBDItem z:Id="8174" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3274</Id>
              <InputPortsCollection z:Id="8175" z:Size="1">
                <FBDPort z:Id="8176" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3275</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8177" z:Size="1">
                    <FBDPortExtSettings z:Id="8178">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8179">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8180" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4420</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="8181">Tag</Name>
              <OutputPortsCollection z:Id="8182" z:Size="1">
                <FBDPort z:Ref="7524" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8183">_</Prefix>
              <SecondName z:Ref="8181" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="534" i:nil="true" />
              <InputFBDPort z:Ref="8176" i:nil="true" />
              <OutputFBDPort z:Ref="7524" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8184" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8185">Преобразование Byte в Int</Description>
              <HelpID>102</HelpID>
              <Id>3277</Id>
              <InputPortsCollection z:Id="8186" z:Size="1">
                <FBDPort z:Ref="7518" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8187" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4576.473549199065</d8p1:_x>
                <d8p1:_y>4246.3920580879776</d8p1:_y>
              </Location>
              <Name z:Id="8188">B&gt;I</Name>
              <OutputPortsCollection z:Id="8189" z:Size="1">
                <FBDPort z:Ref="7536" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8190">ByteInt</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>eb892a3f-f2fe-4659-8f62-dbdda5e14c69</SpecificationId>
              <Code z:Ref="8173" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8191" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8192">Сдвиг вправо логический</Description>
              <HelpID>20</HelpID>
              <Id>3280</Id>
              <InputPortsCollection z:Id="8193" z:Size="3">
                <FBDPort z:Ref="7529" i:nil="true" />
                <FBDPort z:Ref="7541" i:nil="true" />
                <FBDPort z:Id="8194" i:type="InputFBDPort">
                  <Alias z:Id="8195">Вход 1406</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3283</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8196" z:Size="1">
                    <FBDPortExtSettings z:Id="8197">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>true</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8198" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8199" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8200">EN</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8201" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4670</d8p1:_x>
                <d8p1:_y>4240</d8p1:_y>
              </Location>
              <Name z:Id="8202">&gt;&gt;&gt;</Name>
              <OutputPortsCollection z:Id="8203" z:Size="2">
                <FBDPort z:Ref="7559" i:nil="true" />
                <FBDPort z:Id="8204" i:type="OutputFBDPort">
                  <Alias z:Id="8205">Выход 1407</Alias>
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>false</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3285</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8206" z:Size="1">
                    <FBDPortExtSettings z:Id="8207">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8208" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8209" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8210">ENO</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8211">ShiftLL</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>9fd7fd14-4cfa-4ddf-9d0d-41bb852d26d8</SpecificationId>
              <Code z:Id="8212">//# &gt;&gt;&gt; (Логический сдвиг вправо e1 на  e2 бит без сохранения знака)


//Логический сдвиг вправо e1 на  e2 бит без сохранения знака


if(EN){


	y = e1 &gt;&gt;&gt; e2;


	ENO = true;


}</Code>
            </FBDItem>
            <FBDItem z:Id="8213" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8214">Преобразование Int в Bool</Description>
              <HelpID>836</HelpID>
              <Id>3292</Id>
              <InputPortsCollection z:Id="8215" z:Size="1">
                <FBDPort z:Ref="7553" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8216" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4789.0438039680193</d8p1:_x>
                <d8p1:_y>4250.5806345366273</d8p1:_y>
              </Location>
              <Name z:Id="8217">I&gt;b</Name>
              <OutputPortsCollection z:Id="8218" z:Size="1">
                <FBDPort z:Ref="7592" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="7625" i:nil="true" />
              <SecondName z:Id="8219">IntBool</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>ce936f5c-9ba0-412c-912b-74d627a22d1e</SpecificationId>
              <Code z:Id="8220">//#I &gt; b (Int в Bool)


yBool = (a==0)? false:true;</Code>
            </FBDItem>
            <FBDItem z:Id="8221" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3190</Id>
              <InputPortsCollection z:Id="8222" z:Size="1">
                <FBDPort z:Ref="7587" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8223" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4760</d8p1:_x>
                <d8p1:_y>4350</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8224" z:Size="1">
                <FBDPort z:Id="8225" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3192</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8226" z:Size="1">
                    <FBDPortExtSettings z:Id="8227">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8228" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8229" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Ref="4096" i:nil="true" />
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="566" i:nil="true" />
              <InputFBDPort z:Ref="7587" i:nil="true" />
              <OutputFBDPort z:Ref="8225" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8230" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3107</Id>
              <InputPortsCollection z:Id="8231" z:Size="1">
                <FBDPort z:Id="8232" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3108</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8233" z:Size="1">
                    <FBDPortExtSettings z:Id="8234">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8235">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8236" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4340</d8p1:_y>
              </Location>
              <Name z:Id="8237">Tag</Name>
              <OutputPortsCollection z:Id="8238" z:Size="1">
                <FBDPort z:Ref="7018" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8239">_</Prefix>
              <SecondName z:Ref="8237" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8232" i:nil="true" />
              <OutputFBDPort z:Ref="7018" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8240" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3025</Id>
              <InputPortsCollection z:Id="8241" z:Size="1">
                <FBDPort z:Ref="6892" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8242" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3810</d8p1:_x>
                <d8p1:_y>4090</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8243" z:Size="1">
                <FBDPort z:Ref="7089" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="539" i:nil="true" />
              <InputFBDPort z:Ref="6892" i:nil="true" />
              <OutputFBDPort z:Ref="7089" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8244" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8245">Распаковка массива Bool</Description>
              <HelpID>24</HelpID>
              <Id>3100</Id>
              <InputPortsCollection z:Id="8246" z:Size="1">
                <FBDPort z:Ref="7083" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8247" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4220</d8p1:_y>
              </Location>
              <Name z:Id="8248">DECODER</Name>
              <OutputPortsCollection z:Id="8249" z:Size="1">
                <FBDPort z:Ref="6987" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8250">YART</Prefix>
              <SecondName z:Id="8251">DECODERBYTE</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>16762dd4-09af-4c5b-bf4a-d01b9d78165b</SpecificationId>
              <Code z:Ref="8084" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8252" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8253">Чтение значения элемента массива</Description>
              <HelpID>144</HelpID>
              <Id>3103</Id>
              <InputPortsCollection z:Id="8254" z:Size="2">
                <FBDPort z:Ref="6973" i:nil="true" />
                <FBDPort z:Ref="7011" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8255" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>4190</d8p1:_y>
              </Location>
              <Name z:Id="8256">SWITCH BOOL</Name>
              <OutputPortsCollection z:Id="8257" z:Size="1">
                <FBDPort z:Ref="7299" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="8250" i:nil="true" />
              <SecondName z:Id="8258">SWITCHBIT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f9b2271a-72b8-444e-95cf-6d3148b3a5ac</SpecificationId>
              <Code z:Ref="8098" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8259" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3196</Id>
              <InputPortsCollection z:Id="8260" z:Size="1">
                <FBDPort z:Ref="7293" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8261" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4230</d8p1:_x>
                <d8p1:_y>4210</d8p1:_y>
              </Location>
              <Name z:Id="8262">Tag</Name>
              <OutputPortsCollection z:Id="8263" z:Size="1">
                <FBDPort z:Id="8264" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3198</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8265" z:Size="1">
                    <FBDPortExtSettings z:Id="8266">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8267" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8268" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8269">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8270">_</Prefix>
              <SecondName z:Ref="8262" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="558" i:nil="true" />
              <InputFBDPort z:Ref="7293" i:nil="true" />
              <OutputFBDPort z:Ref="8264" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8271" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3117</Id>
              <InputPortsCollection z:Id="8272" z:Size="1">
                <FBDPort z:Id="8273" i:type="InputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3118</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>In</PortDirection>
                  <Settings z:Id="8274" z:Size="1">
                    <FBDPortExtSettings z:Id="8275">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Byte</Type>
                  <Value i:nil="true" />
                  <VariableName z:Id="8276">val_in</VariableName>
                </FBDPort>
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8277" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4520</d8p1:_y>
              </Location>
              <Name z:Id="8278">Tag</Name>
              <OutputPortsCollection z:Id="8279" z:Size="1">
                <FBDPort z:Ref="7068" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8280">_</Prefix>
              <SecondName z:Ref="8278" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="549" i:nil="true" />
              <InputFBDPort z:Ref="8273" i:nil="true" />
              <OutputFBDPort z:Ref="7068" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8281" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3028</Id>
              <InputPortsCollection z:Id="8282" z:Size="1">
                <FBDPort z:Ref="6897" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8283" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3760</d8p1:_x>
                <d8p1:_y>4270</d8p1:_y>
              </Location>
              <Name z:Ref="4622" i:nil="true" />
              <OutputPortsCollection z:Id="8284" z:Size="1">
                <FBDPort z:Ref="7079" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Ref="4622" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="544" i:nil="true" />
              <InputFBDPort z:Ref="6897" i:nil="true" />
              <OutputFBDPort z:Ref="7079" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8285" i:type="CodeFBDItem">
              <AllowSlimView>true</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8286">Распаковка массива Bool</Description>
              <HelpID>24</HelpID>
              <Id>3110</Id>
              <InputPortsCollection z:Id="8287" z:Size="1">
                <FBDPort z:Ref="7073" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8288" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>3980</d8p1:_x>
                <d8p1:_y>4400</d8p1:_y>
              </Location>
              <Name z:Id="8289">DECODER</Name>
              <OutputPortsCollection z:Id="8290" z:Size="1">
                <FBDPort z:Ref="7037" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8291">YART</Prefix>
              <SecondName z:Id="8292">DECODERBYTE</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>16762dd4-09af-4c5b-bf4a-d01b9d78165b</SpecificationId>
              <Code z:Ref="8084" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8293" i:type="CodeFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>true</AllowUseAlias>
              <Description z:Id="8294">Чтение значения элемента массива</Description>
              <HelpID>144</HelpID>
              <Id>3113</Id>
              <InputPortsCollection z:Id="8295" z:Size="2">
                <FBDPort z:Ref="7023" i:nil="true" />
                <FBDPort z:Ref="7061" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8296" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>true</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4130</d8p1:_x>
                <d8p1:_y>4370</d8p1:_y>
              </Location>
              <Name z:Id="8297">SWITCH BOOL</Name>
              <OutputPortsCollection z:Id="8298" z:Size="1">
                <FBDPort z:Ref="7310" i:nil="true" />
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Ref="8291" i:nil="true" />
              <SecondName z:Id="8299">SWITCHBIT</SecondName>
              <SharedLibID>bf0b01f4-bb95-42e2-8322-2396768befcb</SharedLibID>
              <SpecificationId>f9b2271a-72b8-444e-95cf-6d3148b3a5ac</SpecificationId>
              <Code z:Ref="8098" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8300" i:type="TagFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3202</Id>
              <InputPortsCollection z:Id="8301" z:Size="1">
                <FBDPort z:Ref="7304" i:nil="true" />
              </InputPortsCollection>
              <InternalPortsCollection z:Id="8302" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4230</d8p1:_x>
                <d8p1:_y>4390</d8p1:_y>
              </Location>
              <Name z:Id="8303">Tag</Name>
              <OutputPortsCollection z:Id="8304" z:Size="1">
                <FBDPort z:Id="8305" i:type="OutputFBDPort">
                  <Alias z:Ref="67" i:nil="true" />
                  <AllowSaveInCycle>false</AllowSaveInCycle>
                  <AllowUseAlias>true</AllowUseAlias>
                  <ArrayItemsCount>1</ArrayItemsCount>
                  <Id>3204</Id>
                  <IsArray>false</IsArray>
                  <IsExpanded>false</IsExpanded>
                  <IsReference>false</IsReference>
                  <MaxArrayItemsCount>1</MaxArrayItemsCount>
                  <MinArrayItemsCount>1</MinArrayItemsCount>
                  <PortDirection>Out</PortDirection>
                  <Settings z:Id="8306" z:Size="1">
                    <FBDPortExtSettings z:Id="8307">
                      <Index>0</Index>
                      <IsNegative>false</IsNegative>
                    </FBDPortExtSettings>
                  </Settings>
                  <ShowConstantPanel>false</ShowConstantPanel>
                  <Type>Bool</Type>
                  <Value z:Id="8308" i:type="d2p1:ArrayOfanyType" z:Size="1">
                    <d2p1:anyType z:Id="8309" xmlns:d11p1="http://www.w3.org/2001/XMLSchema" i:type="d11p1:boolean">true</d2p1:anyType>
                  </Value>
                  <VariableName z:Id="8310">val_out</VariableName>
                </FBDPort>
              </OutputPortsCollection>
              <Parent i:nil="true" />
              <Prefix z:Id="8311">_</Prefix>
              <SecondName z:Ref="8303" i:nil="true" />
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>54ad2121-2c17-449d-ae2d-3f4b826fd6c4</SpecificationId>
              <CustomList z:Ref="83" i:nil="true" />
              <CustomTag z:Ref="562" i:nil="true" />
              <InputFBDPort z:Ref="7304" i:nil="true" />
              <OutputFBDPort z:Ref="8305" i:nil="true" />
              <Program z:Ref="1" i:nil="true" />
            </FBDItem>
            <FBDItem z:Id="8312" i:type="CommentFBDItem">
              <AllowSlimView>false</AllowSlimView>
              <AllowUseAlias>false</AllowUseAlias>
              <HelpID>0</HelpID>
              <Id>3299</Id>
              <InputPortsCollection z:Id="8313" z:Size="0" />
              <InternalPortsCollection z:Id="8314" z:Size="0" />
              <IsSharedItem>false</IsSharedItem>
              <IsSharedLib>false</IsSharedLib>
              <Location xmlns:d8p1="http://schemas.datacontract.org/2004/07/System.Windows">
                <d8p1:_x>4348.739806727</d8p1:_x>
                <d8p1:_y>4210</d8p1:_y>
              </Location>
              <Name z:Id="8315">comment</Name>
              <OutputPortsCollection z:Id="8316" z:Size="0" />
              <Parent i:nil="true" />
              <Prefix z:Ref="4624" i:nil="true" />
              <SecondName z:Id="8317">newfun_1130379496</SecondName>
              <SharedLibID>00000000-0000-0000-0000-000000000000</SharedLibID>
              <SpecificationId>506b794e-0c0b-41d0-bed4-1fedb465f876</SpecificationId>
              <Comment z:Id="8318">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</Comment>
              <Height>206.02447271218807</Height>
              <Width>567.8105007527729</Width>
            </FBDItem>
          </FBDItems>
          <Name z:Id="8319">TimeTableCalc</Name>
          <Parent z:Ref="6756" i:nil="true" />
          <Program z:Ref="1" i:nil="true" />
          <SequenceExecution>10</SequenceExecution>
          <TagExecution i:nil="true" />
          <WorksurfaceExecute>On</WorksurfaceExecute>
        </d2p1:anyType>
      </ItemsCollection>
      <Name z:Id="8320">TimeTable</Name>
      <Parent z:Ref="1" i:nil="true" />
    </d2p1:anyType>
  </ProgramPartsCollection>
  <ProjectFBDLibrary xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" z:Id="8321" z:Size="1">
    <d2p1:anyType z:Id="8322" i:type="Folder">
      <IsSharedItem i:nil="true" />
      <ItemsCollection z:Id="8323" z:Size="0" />
      <Name z:Id="8324">Библиотека проекта</Name>
    </d2p1:anyType>
  </ProjectFBDLibrary>
  <RemotePublicCases z:Id="8325" z:Size="2">
    <RemotePublicCase z:Id="8326">
      <EventTagFlag z:Id="8327">
        <Address>0</Address>
        <AllowPublic>false</AllowPublic>
        <ArraySize>1</ArraySize>
        <Bit>0</Bit>
        <Comments z:Ref="67" i:nil="true" />
        <Id>-1</Id>
        <IsArray>false</IsArray>
        <IsAutoMemory>true</IsAutoMemory>
        <KeepingValue>false</KeepingValue>
        <LocalAddress>0</LocalAddress>
        <MemoryType>RamBit</MemoryType>
        <ModbusAddress>0</ModbusAddress>
        <Name z:Id="8328">Новый параметр -1</Name>
        <ParentId>0</ParentId>
        <ReadOnly>true</ReadOnly>
        <Type>Bool</Type>
        <Value z:Id="8329" xmlns:d5p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:type="d5p1:ArrayOfanyType" z:Size="1">
          <d5p1:anyType z:Id="8330" xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:boolean">false</d5p1:anyType>
        </Value>
      </EventTagFlag>
      <IsOnlyPublic>true</IsOnlyPublic>
      <PublicTags z:Id="8331" z:Size="0" />
    </RemotePublicCase>
    <RemotePublicCase z:Id="8332">
      <EventTagFlag z:Ref="308" i:nil="true" />
      <IsOnlyPublic>false</IsOnlyPublic>
      <PublicTags z:Id="8333" z:Size="11">
        <CustomTag z:Ref="238" i:nil="true" />
        <CustomTag z:Ref="242" i:nil="true" />
        <CustomTag z:Ref="246" i:nil="true" />
        <CustomTag z:Ref="342" i:nil="true" />
        <CustomTag z:Ref="86" i:nil="true" />
        <CustomTag z:Ref="362" i:nil="true" />
        <CustomTag z:Ref="436" i:nil="true" />
        <CustomTag z:Ref="441" i:nil="true" />
        <CustomTag z:Ref="452" i:nil="true" />
        <CustomTag z:Ref="457" i:nil="true" />
        <CustomTag z:Ref="471" i:nil="true" />
      </PublicTags>
    </RemotePublicCase>
  </RemotePublicCases>
  <SafeExtModuleWork>true</SafeExtModuleWork>
  <SerialInterfaces z:Id="8334">
    <SerialPorts z:Id="8335" z:Size="3">
      <SerialPort z:Id="8336">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>1</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
      <SerialPort z:Id="8337">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>2</PortID>
        <PortModeID>0</PortModeID>
      </SerialPort>
      <SerialPort z:Id="8338">
        <BufferSize>512</BufferSize>
        <IsVisible>true</IsVisible>
        <PortID>3</PortID>
        <PortModeID>2</PortModeID>
      </SerialPort>
    </SerialPorts>
  </SerialInterfaces>
  <Telemetry z:Id="8339">
    <GPRSProperty z:Id="8340">
      <GPRS_Modem_APN z:Id="8341">
        <Constant z:Id="8342">internet</Constant>
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_APN>
      <GPRS_Modem_Password z:Id="8343">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Password>
      <GPRS_Modem_Username z:Id="8344">
        <Constant i:nil="true" />
        <IsLink>false</IsLink>
        <Link i:nil="true" />
      </GPRS_Modem_Username>
    </GPRSProperty>
    <TelemetryInterface>Ethernet</TelemetryInterface>
    <TelemetryServers z:Id="8345" z:Size="1">
      <TelemetryServer z:Id="8346">
        <Password z:Id="8347">
          <Constant z:Id="8348">82435RS98</Constant>
          <IsLink>true</IsLink>
          <Link z:Ref="330" i:nil="true" />
        </Password>
        <Port z:Id="8349">
          <Constant z:Id="8350">1883</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Port>
        <TelemetryServerName z:Id="8351">Сервер телеметрии</TelemetryServerName>
        <Timeout z:Id="8352">
          <Constant z:Id="8353">3000</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Timeout>
        <URL z:Id="8354">
          <Constant z:Id="8355">192.168.1.38</Constant>
          <IsLink>true</IsLink>
          <Link z:Ref="312" i:nil="true" />
        </URL>
        <Username z:Id="8356">
          <Constant z:Id="8357">empty</Constant>
          <IsLink>false</IsLink>
          <Link i:nil="true" />
        </Username>
      </TelemetryServer>
    </TelemetryServers>
  </Telemetry>
  <Version xmlns:d2p1="http://schemas.datacontract.org/2004/07/System" z:Id="8358">
    <d2p1:_Build>-1</d2p1:_Build>
    <d2p1:_Major>2</d2p1:_Major>
    <d2p1:_Minor>0</d2p1:_Minor>
    <d2p1:_Revision>-1</d2p1:_Revision>
  </Version>
</Program></Project>
</Root>